<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b079858ce055429e370514f22fb069c6222943f9" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34311479" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt die Werte eines einzelnen Datensatzes aus einer Datenquelle mithilfe benutzerdefinierter Vorlagen an. Das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ermöglicht es Ihnen, Datensätze zu bearbeiten, zu löschen und einzufügen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Vorlagen](#templates)  
  
-   [Binden an Daten](#binding_to_data)  
  
-   [Datenvorgänge](#data_operations)  
  
-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)  
  
-   [Ereignisse](#events)  
  
-   [Barrierefreiheit](#accessibility)  
  
-   [Anwenden von CSS-Stilen](#applying_styles)  
  
-   [Deklarationssyntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird verwendet, um die Anzeige eines einzelnen Datensatzes aus einer Datenquelle. Ähnliches gilt für die <xref:System.Web.UI.WebControls.DetailsView> zu steuern, außer benutzerdefinierten Vorlagen anstelle von Zeilenfeldern angezeigt. Erstellen eigene Vorlagen, erhalten Sie mehr Flexibilität beim steuern, wie die Daten angezeigt werden. Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement unterstützt die folgenden Funktionen:  
  
-   Binden an Steuerelementen für Datenquellen, wie z. B. <xref:System.Web.UI.WebControls.SqlDataSource> und <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Integrierte Einfügefunktionen.  
  
-   Integrierte aktualisieren und Löschen von Funktionen.  
  
-   Integrierte Pagingfunktionen.  
  
-   Programmgesteuerter Zugriff auf die <xref:System.Web.UI.WebControls.FormView> -Objektmodell für dynamisch festlegen von Eigenschaften, Ereignisse zu behandeln und so weiter.  
  
-   Anpassbare Darstellung durch benutzerdefinierte Vorlagen, Designs und Stile.  
  
<a name="templates"></a>   
## <a name="templates"></a>Vorlagen  
 Für die <xref:System.Web.UI.WebControls.FormView> steuern, um Inhalt anzuzeigen, müssen Sie zum Erstellen von Vorlagen für die verschiedenen Teile des Steuerelements. Die meisten Vorlagen sind optional. Allerdings müssen Sie eine Vorlage für den Modus erstellen, in denen das Steuerelement so konfiguriert ist. Angenommen, ein <xref:System.Web.UI.WebControls.FormView> Steuerelement, das Einfügen von Datensätzen unterstützt muss eine Insert-Elementvorlage definiert haben. Die folgende Tabelle enthält die verschiedenen Vorlagen, die Sie erstellen können.  
  
|Typ "Template"|Beschreibung |  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiert den Inhalt für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus befindet. Diese Vorlage enthält normalerweise Eingabesteuerelemente und Befehlsschaltflächen, mit denen der Benutzer einen vorhandenen Datensatz bearbeiten kann.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiert den Inhalt für die leere Datenzeile angezeigt wird, wenn die <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält. Diese Vorlage enthält normalerweise Inhalte an die Benutzer darauf hinzuweisen, dass die Datenquelle keine Datensätze enthält.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definiert den Inhalt für die Fußzeile. Diese Vorlage enthält in der Regel zusätzliche Inhalte, die Sie in der Fußzeile anzeigen möchten. **Hinweis:** als Alternative können Sie hierfür in der Fußzeile anzuzeigende Text einfach angeben der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definiert den Inhalt für die Kopfzeile. Diese Vorlage enthält in der Regel zusätzliche Inhalte, die in der Kopfzeile angezeigt werden sollen. **Hinweis:** als Alternative können Sie einfach festlegbaren Text, der in der Kopfzeile angezeigt, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiert den Inhalt für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus. Diese Vorlage enthält normalerweise Inhalt, um die Werte eines vorhandenen Datensatzes anzuzeigen.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiert den Inhalt für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus. Diese Vorlage enthält normalerweise Eingabesteuerelemente und Befehlsschaltflächen, mit denen der Benutzer einen neuen Datensatz hinzufügen kann.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiert den Inhalt für die Pagerzeile angezeigt, wenn die Auslagerung-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`). Diese Vorlage enthält in der Regel Steuerelemente, mit denen der Benutzer zu einem anderen Datensatz navigieren kann. **Hinweis:** der <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über eine integrierte Pager-Zeile-Benutzeroberfläche (UI). Sie müssen eine Pagervorlage erstellen, nur, wenn Sie eine eigene benutzerdefinierte Pagerzeile erstellen möchten.|  
  
 Um den Wert eines Felds in einer Elementvorlage anzuzeigen, verwenden Sie einen Datenbindungsausdruck. Weitere Informationen zu Datenbindungsausdrücken, finden Sie unter [Datenbindungsfunktionen Ausdruckssyntax](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Eingabesteuerelemente in der Elementvorlage bearbeiten und Insert-Elementvorlage können mithilfe eines Ausdrucks für die bidirektionale Bindung an die Felder einer Datenquelle gebunden werden. Dies ermöglicht die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch Extrahieren der Werte des Eingabesteuerelement für ein Update oder insert-Vorgang. Bidirektionale Bindungsausdrücke ermöglichen außerdem Eingabesteuerelemente in einer Elementvorlage Bearbeiten automatisch auf die ursprünglichen Werte des Felds angezeigt. Weitere Informationen zu Ausdrücken bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Binden an Daten  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement an ein Datenquellen-Steuerelement gebunden werden kann (z. B. <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, oder <xref:System.Web.UI.WebControls.AccessDataSource>) oder mit einer Data Source-Sammlung, die implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> -Schnittstelle ein, z. B. <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, oder anderen Auflistungstypen. Verwenden Sie eine der folgenden Methoden zum Binden der <xref:System.Web.UI.WebControls.FormView> Steuerelement in den entsprechenden Datenquellentyp:  
  
-   Legen Sie die Bindung an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.FormView> die Steuerung an die <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuerelements. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch an das angegebene Datenquellensteuerelement gebunden und Nutzen der Datenquelle Zugriffssteuerungsfunktionen einfügen, aktualisieren, löschen und Pagingfunktionen ausführen. Dies ist die bevorzugte Methode zum Binden an Daten.  
  
-   An eine Datenquelle binden, implementiert die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Netzwerkschnittstelle, die programmgesteuert festgelegt die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.FormView> die Steuerung an die Datenquelle, und rufen Sie anschließend die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode. Bei Verwendung dieser Methode die <xref:System.Web.UI.WebControls.FormView> -Steuerelement stellt integrierte einfügen, aktualisieren, löschen und Pagingfunktionen bereit. Sie müssen diese Funktionalität bereit, mit dem entsprechenden Ereignis.  
  
 Weitere Informationen über die Datenbindung finden Sie unter [ASP.NET Data Access Content Map](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Dieses Steuerelement kann verwendet werden, Benutzereingaben angezeigt werden, die möglicherweise böswillige Clientskripts umfassen. Überprüfen Sie alle Informationen, die für ausführbare Skripts, SQL-Anweisungen oder anderen Code von einem Client gesendet wird, vor der Anzeige in der Anwendung. Wann immer möglich, es wird jedoch dringend empfohlen, dass Werte HTML-codiert werden, bevor sie dieses Steuerelement angezeigt werden. ASP.NET bietet eine Funktion für den Überprüfung eingabeanforderung zum Blockieren von Skript und HTML in Benutzereingaben. Server-Validierungssteuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Einführung in die Validierungssteuerelemente](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Datenvorgänge  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement stellt zahlreiche integrierte Funktionen, mit denen der Benutzer zu aktualisieren, löschen, einfügen und Durchblättern von Elementen im Steuerelement. Wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement an ein Datenquellen-Steuerelement gebunden ist die <xref:System.Web.UI.WebControls.FormView> Steuerelement der Datenquelle des Steuerelements Funktionen nutzen kann, und geben Sie automatische Aktualisierung, löschen, einfügen und Pagingfunktionen.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bieten Unterstützung für Update, Delete, Insert und Auslagerungsvorgänge mit anderen Typen von Datenquellen; Sie müssen jedoch einen entsprechenden Ereignishandler bereitstellen, mit der Implementierung für diese Vorgänge.  
  
 Da die <xref:System.Web.UI.WebControls.FormView> -Steuerelement verwendet Vorlagen, er bietet eine Möglichkeit zum automatischen Generieren von Befehlsschaltflächen zum Aktualisieren, löschen oder Einfügen von Vorgängen ausführen. Sie müssen diese Befehlsschaltflächen manuell in die entsprechende Vorlage einschließen. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkennt bestimmte Schaltflächen, sind ihre `CommandName` Eigenschaften, die auf bestimmte Werte festgelegt sind. Die folgende Tabelle enthält die Befehlsschaltflächen, die die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkanntes.  
  
|Schaltfläche|CommandName-Wert|Beschreibung |  
|------------|-----------------------|-----------------|  
|Abbrechen|"Cancel"|In aktualisieren oder Einfügen von Vorgängen verwendet, um den Vorgang abzubrechen und um die vom Benutzer eingegebenen Werte zu verwerfen. Die <xref:System.Web.UI.WebControls.FormView> dann wieder in den vom angegebenen Modus steuern die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft.|  
|Löschen|"Löschen"|Bei Löschen von Vorgängen verwendet, die um den angezeigten Datensatz aus der Datenquelle zu löschen. Löst das <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse.|  
|Bearbeiten|"Bearbeiten"|In Aktualisierungsvorgängen verwendet wird, versetzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Der Inhalt im angegebenen die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Insert|"Einfügen"|Bei Einfügevorgängen verwendet, die versuchen, einen neuen Datensatz in der Datenquelle mit den Werten, die vom Benutzer bereitgestellte einzufügen. Löst das <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse.|  
|Neu|"New"|In Einfügevorgängen verwendet wird, versetzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus. Der Inhalt im angegebenen die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Seite|Seite """|In Auslagerungsvorgänge verwendet, um eine Schaltfläche in der Pagerzeile darzustellen, die Paging ausführt. Legen Sie zum Angeben des Pagingvorgangs der `CommandArgument` -Eigenschaft der Schaltfläche "Weiter", "Zurück", "First", "Letzte" oder der Index der Seite für die Navigation. Löst das <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse. **Hinweis:** diese Art von Schaltfläche ist nur in der Pagervorlage in der Regel verwendet.|  
|Update|"Update"|Verwendet in Aktualisierungsvorgängen für den Versuch, den angezeigten Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten zu aktualisieren. Löst das <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse.|  
  
 Im Gegensatz zu der Schaltfläche "löschen" (die den angezeigten Datensatz sofort gelöscht), wenn die Schaltfläche Bearbeiten oder neu geklickt wird, die <xref:System.Web.UI.WebControls.FormView> genauso Steuerelement bearbeiten oder Einfügemodus. In den Bearbeitungsmodus wechseln, der Inhalt enthalten, der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für das aktuelle Datenelement angezeigt. In der Regel ist die Bearbeitungselementvorlage definiert, dass die Schaltfläche "Bearbeiten", ein Update mit einer Schaltfläche "Abbrechen ersetzt wird". Eingabesteuerelemente, die für den Datentyp des Felds geeignet sind (z. B. eine <xref:System.Web.UI.WebControls.TextBox> oder ein <xref:System.Web.UI.WebControls.CheckBox> Control) werden auch in der Regel angezeigt, mit der Wert eines Felds für den Benutzer zu ändern. Der Datensatz in der Datenquelle, auf die Schaltfläche "Aktualisieren" aktualisiert werden, während, Änderungen auf die Schaltfläche "Abbrechen abbricht".  
  
 Entsprechend den Inhalt in die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft ist für das Datenelement angezeigt, wenn das Steuerelement im Einfügemodus befindet. Die Insert-Elementvorlage wird in der Regel definiert, wird die Schaltfläche "Neu" durch ein INSERT- und eine Schaltfläche "Abbrechen" ersetzt, und die leere Eingabesteuerelemente für den Benutzer zur Eingabe der Werte für den neuen Eintrag angezeigt werden. Fügt ein Klicken auf die Schaltfläche zum Einfügen des Datensatzes in der Datenquelle während, Änderungen auf die Schaltfläche "Abbrechen abbricht".  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement stellt eine Auslagerung-Funktion, die der Benutzer navigieren zu anderen Datensätzen in der Datenquelle ermöglicht. Wenn aktiviert, wird eine Pagerzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement, das die Steuerelemente für die Seitennavigation enthält. Legen Sie zum Aktivieren von Paging der <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft `true`. Sie können die Pagerzeile anpassen, durch Festlegen der Eigenschaften der enthaltenen Objekte der <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> und <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft. Anstatt die Pagerzeile integrierte Benutzeroberfläche verwenden, können Sie Ihre eigene Benutzeroberfläche erstellen, mit der <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Eigenschaft.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche  
 Sie können die Darstellung Anpassen der <xref:System.Web.UI.WebControls.FormView> Steuerelement, indem Sie die Stileigenschaften für die verschiedenen Teile des Steuerelements festlegen. Die folgende Tabelle enthält die verschiedenen Stileigenschaften.  
  
|Style-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Die Style-Einstellungen für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus befindet.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Die Stileigenschaften für die leere Datenzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle keine Datensätze enthält.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Die stileinstellungen für die Fußzeile, der die <xref:System.Web.UI.WebControls.FormView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Die stileinstellungen für die Kopfzeile, der die <xref:System.Web.UI.WebControls.FormView> Steuerelement.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Die Style-Einstellungen für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Die stileinstellungen für die Pagerzeile angezeigt, der <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Auslagerung-Funktion aktiviert ist.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Die Style-Einstellungen für die Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus.|  
  
<a name="events"></a>   
## <a name="events"></a>Ereignisse  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bietet mehrere Ereignisse, die Sie programmieren können. Dadurch können Sie eine benutzerdefinierte Routine ausgeführt wird, sobald ein Ereignis auftritt. Die folgende Tabelle enthält die Ereignisse, die von unterstützt die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Tritt auf, wenn innerhalb eines <xref:System.Web.UI.WebControls.FormView>-Steuerelements auf eine Schaltfläche geklickt wird. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn das Steuerelement geklickt wird.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Tritt auf, nachdem alle <xref:System.Web.UI.WebControls.FormViewRow> Objekte werden erstellt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieses Ereignis wird häufig verwendet, um die Werte eines Datensatzes zu ändern, bevor er angezeigt wird.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Tritt auf, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Löschen" festgelegt) geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Tritt auf, wenn eine Schaltfläche "löschen", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz aus der Datenquelle. Dieses Ereignis wird häufig verwendet, um den Löschvorgang abzubrechen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Tritt auf, wenn eine Schaltfläche Einfügen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Einfügen" festgelegt) geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Einfügevorgangs zu überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Tritt auf, wenn eine Insert-Schaltfläche, jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um den Insert-Vorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Tritt auf, wenn eine Schaltfläche "Aktualisieren" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Update" festgelegt) geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert die Zeile. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Updatevorgangs überprüfen.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Tritt auf, wenn eine Schaltfläche "Aktualisieren", jedoch bevor geklickt wird die <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dieses Ereignis wird häufig verwendet, um den Updatevorgang "Abbrechen".|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt ein, nachdem die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Modus geändert (zu bearbeiten, einfügen oder nur-Lese-Modus). Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Modus geändert.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt ein, bevor die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Modus geändert (zu bearbeiten, einfügen oder nur-Lese-Modus). Dieses Ereignis wird häufig verwendet, um eine Änderung des Modus "Abbrechen".|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Zugriff  
 Weitere Informationen dazu, wie das Steuerelement so konfigurieren, dass er Markup generiert, das den Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) und [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Anwenden von CSS-Stilen  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement können Sie CSS-Stilregeln in Markup angeben. Wenn Sie Vorlagen verwenden, um die Darstellung Anpassen der <xref:System.Web.UI.WebControls.FormView> -Steuerelement, können Sie CSS-Formatvorlagen im Markup in den Vorlagen angeben. In diesem Fall ist keine zusätzliche äußere Tabelle erforderlich. Sie können verhindern, dass die Tabelle gerendert wird, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> Eigenschaft `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarationssyntax  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine <xref:System.Web.UI.WebControls.FormView> Steuerelement zur Anzeige der Werte aus einem <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView> Steuerelement, um vorhandene Datensätze zu bearbeiten.  
  
> [!IMPORTANT]
>  Das Steuerelement in diesem Beispiel hat ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles darstellen Sicherheitsrisiko. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Einfügen neuer Datensätze.  
  
> [!IMPORTANT]
>  Das Steuerelement in diesem Beispiel hat ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles darstellen Sicherheitsrisiko. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.FormView" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.FormView> Klasse. Dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.FormView> zu einer Seite zu steuern, erstellen Sie ein neues <xref:System.Web.UI.WebControls.FormView> Objekt, dessen Eigenschaften festlegen und fügen Sie es auf die <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> Auflistung eines Containers zu steuern, wie z. B. <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.FormView> Steuerelement zu einer Seite.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Pagingfeature aktiviert ist, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um das Pagingfeature zu aktivieren, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement verfügt über integrierte Pagingfunktionen, die einen Benutzer das Navigieren zu einem anderen Datensatz in der Datenquelle zu ermöglichen. Die Paging-Funktion kann verwendet werden, mit jedem Datenquellenobjekt, das unterstützt die <xref:System.Collections.ICollection?displayProperty=nameWithType> Schnittstelle oder eine Datenquelle, die Paging unterstützt.  
  
 Um die Paging-Funktion aktivieren zu können, legen die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft `true`. Sie können die Gesamtanzahl der Elemente in der zugrunde liegenden Datenquelle bestimmen, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft. Um den Index des angezeigten Elements zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Wenn Paging aktiviert ist, eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält die Steuerelemente für die Seitennavigation und kann am oben, unten, oder die oberen und unteren Rand des Steuerelements angezeigt werden. Die Pagerzeile hat vier integrierte Pager Modi angezeigt. In der folgenden Tabelle werden die vier Modi beschrieben:  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Ein Satz von Steuerelementen für die Paginierung Schaltflächen zurück und weiter besteht.|  
|`PagerButton.NextPreviousFirstLast`|Eine Reihe von Steuerelementen für die Paginierung bestehend aus vorherigen, als Nächstes vor- und Nachnamen Schaltflächen.|  
|`PagerButton.Numeric`|Eine aus nummerierten Linkschaltflächen für den direkten Zugriff auf Seiten bestehende Gruppe von Paginierungssteuerelementen. Dies ist der Standardmodus.|  
|`PagerButton.NumericFirstLast`|Ein Satz von Steuerelementen für die Paginierung nummerierten und vor- und Nachnamen Linkschaltflächen besteht.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird automatisch die Pagerzeile ausgeblendet, wenn die Datenquelle weniger als zwei Datensätze enthält.  
  
 Sie können die Einstellungen der Pagerzeile (z. B. die Pager-Anzeigemodus, die Anzahl der Seitenlinks, wodurch die Pager-Steuerelement-Bezeichnung angezeigt) steuern, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft. Verwenden Sie zum Steuern der Darstellung der Pagerzeile (einschließlich Hintergrundfarbe und Schriftfarbe) die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.FormView> Steuerelement auch ermöglicht es Ihnen, eine benutzerdefinierte Vorlage für die Pagerzeile definieren. Weitere Informationen zum Erstellen einer benutzerdefinierten Pagerzeilenvorlage finden Sie unter <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement bietet verschiedene Ereignisse, die Sie verwenden können, um eine benutzerdefinierte Aktion auszuführen, wenn Paging auftritt. In der folgenden Tabelle sind die verfügbaren Ereignisse an.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn eine Aufgabe auszuführen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert werden muss.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|  
  
> [!NOTE]
>  Diese Ereignisse werden nicht ausgelöst, wenn Sie ändern die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft programmgesteuert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft zum Aktivieren von Paging-Funktion in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL eines Bildes ab, das im Hintergrund eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Die URL eines Bildes, das im Hintergrund des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> Eigenschaft zum Angeben der URL zu einem Bild im Hintergrund des anzuzeigenden ein <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Wenn das angegebene Bild kleiner als die <xref:System.Web.UI.WebControls.FormView> -Steuerelement, das Bild wird gekachelt, um im Hintergrund zu füllen. Wenn das Bild größer als das Steuerelement ist, wird das Bild zugeschnitten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> Eigenschaft zum Anzeigen eines benutzerdefinierten Abbilds im Hintergrund eine <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am unteren Rand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die am unteren Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält Steuerelemente, die ermöglicht dem Benutzer das Navigieren zu anderen Datensätzen und oben, unten oder sowohl oben als und unteren Rand des Steuerelements angezeigt werden können. Verwenden der <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, das die unteren Pagerzeile in stellt der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> -Steuerelements erstellt die unteren Pagerzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die unten angezeigte Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Änderungen an der <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormViewRow> wurde Objekt, das die unteren Pagerzeile darstellt, andernfalls der <xref:System.Web.UI.WebControls.FormView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaft die Pagerzeile am unteren Rand angezeigt, den Zugriff auf eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird dann mit zusätzlichem Inhalt aktualisiert.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll, oder legt diesen Text fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Eine Zeichenfolge, die den Text darstellt, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft, um den Text in einem HTML-Beschriftungselement Rendern angeben einer <xref:System.Web.UI.WebControls.FormView> Steuerelement. Der Text, den Sie angeben, enthält Geräte mit hilfstechnologie mit einer Beschreibung der Tabelle, die verwendet werden kann, um das Steuerelement leichter zugänglich machen.  
  
 Zusätzliche Accessibility-Unterstützung für die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird bereitgestellt, indem die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Eigenschaft zum Angeben der Ausrichtung des HTML-Beschriftung-Elements in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft, um den Text anzugeben, für die gerenderte HTML Caption-Element in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale oder vertikale Position des HTML-Beschriftungselements in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt sie fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Werte. Der Standardwert ist <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> -Eigenschaft an die horizontale oder vertikale Position des HTML-Caption-Element in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.  
  
 Diese Eigenschaft wird festgelegt, mit einer von der <xref:System.Web.UI.WebControls.TableCaptionAlign> Enumerationswerte. In der folgenden Tabelle sind die möglichen Werte aufgeführt.  
  
|Wert|Beschreibung |  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Das Beschriftungselement wird am unteren Tabellenrand ausgerichtet.|  
|`TableCaptionAlign.Left`|Das Beschriftungselement wird an der linken Seite der Tabelle ausgerichtet.|  
|`TableCaptionAlign.NotSet`|Ausrichtung der Caption-Element ist nicht festgelegt.|  
|`TableCaptionAlign.Right`|Das Beschriftungselement wird an der rechten Seite der Tabelle ausgerichtet.|  
|`TableCaptionAlign.Top`|Das Beschriftungselement wird am oberen Tabellenrand ausgerichtet.|  
  
> [!NOTE]
>  Wenn diese Eigenschaft festgelegt wird, um `TableCaptionAlign.NotSet`, der Standardwert des Browsers verwendet wird.  
  
 Zusätzliche Accessibility-Unterstützung für die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird bereitgestellt, indem die <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormView.Caption%2A> Eigenschaft, um den Text in einem HTML-Beschriftungselement Rendern angeben einer <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> Eigenschaft, um anzugeben, dass die HTML-Beschriftungselement ein <xref:System.Web.UI.WebControls.FormView> Steuerelement gerendert werden soll, auf der linken Seite des Steuerelements.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem Inhalt einer Zelle und ihrem Rahmen ab oder legt diesen fest.</summary>
        <value>Der Abstand in Pixel zwischen Inhalt und Rahmen einer Zelle. Der Standardwert ist -1 und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft, um den Abstand zwischen dem Inhalt einer Zelle und dem Zellenrahmen steuern. Der angegebene Leerraum wird allen vier Seiten der Zelle hinzugefügt.  
  
 Alle Zellen in der gleichen Spalte von einem <xref:System.Web.UI.WebControls.FormView> Kontrolle haben die gleiche Breite. Der Leerraum wird auf die breiteste Zelle angewendet, und alle anderen Zellen in der Spalte auf diese Zellenbreite angepasst werden. Auf ähnliche Weise verfügen alle Zellen in der gleichen Zeile die gleiche Höhe. Der Leerraum wird angewendet, um die höchste Zelle in der Zeile, und alle anderen Zellen in der Zeile werden an diese Zellenhöhe angepasst. Größe der einzelnen Zelle können nicht angegeben werden.  
  
 Verwenden Sie zum Anpassen des Abstands zwischen den Zellen der <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn diese Eigenschaft nicht festgelegt ist, wird der Standardwert des Browsers verwendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft, um die Größe des Abstands zwischen dem Inhalt einer Zelle und dem Zellenrahmen anzugeben.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen den Zellen ab oder legt diesen fest.</summary>
        <value>Der Abstand zwischen den Zellen in Pixel. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft, um den Abstand zwischen angrenzenden Zellen im steuern die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieser Abstand wird vertikal und horizontal angewendet. Der Zellenabstand ist für das gesamte Steuerelement einheitlich. Einzelne Zellenabstand zwischen den Zeilen oder Spalten kann nicht angegeben werden.  
  
> [!NOTE]
>  Wenn Sie diese Eigenschaft auf einen Wert größer 0 festgelegt, und Sie dann legen die <xref:System.Web.UI.WebControls.FormView.GridLines%2A> Eigenschaft auf einen Wert, der die Zellenrahmen anzeigt, wird eine Lücke zwischen den Rahmenlinien angrenzender Zellen angezeigt. In diesem Fall die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft steuert die Größe des Abstands.  
  
 Verwenden Sie zum Anpassen des Abstands zwischen dem Inhalt einer Zelle und dem Zellenrahmen der <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> Eigenschaft, um die Größe des Abstands zwischen angrenzenden Zellen anzugeben.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</param>
        <summary>Schaltet das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement in den angegebenen Dateneingabemodus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> Methode, um programmgesteuert wechseln die <xref:System.Web.UI.WebControls.FormView> zwischen bearbeiten, einfügen und nur-Lese Modus. Diese Methode wird außerdem aktualisiert die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft mit dem angegebenen Zugriffsmodus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`FormView.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse werden nicht ausgelöst, wenn diese Methode aufgerufen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> -Methode zur Rückgabe der <xref:System.Web.UI.WebControls.FormView> Steuerelement in den schreibgeschützten Modus, wenn der Benutzer mit einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt, die zum Erstellen der Steuerelementhierarchie verwendet wird.</param>
        <param name="dataBinding">
          <see langword="true" /> zeigt an, dass die Steuerelementhierarchie direkt aus der Datenquelle erstellt wird; <see langword="false" /> zeigt an, dass die Steuerelementhierarchie aus dem Ansichtszustand erstellt wird.</param>
        <summary>Erstellt die Steuerelementhierarchie, mit der das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement unter Verwendung der angegebenen Datenquelle gerendert wird.</summary>
        <returns>Die Anzahl der unter Verwendung der Datenquelle erstellten Elemente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Erstellen der Steuerelementhierarchie für die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Wenn die `dataBinding` Parameter ist `true`, die Datenbindung wird durchgeführt, bevor die Steuerelementhierarchie erstellt wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der Wert der <see cref="T:System.Web.UI.DataSourceView" /> der <see cref="T:System.Web.UI.IDataSource" />, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden ist, beträgt <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene Steuerelementhierarchie zu erstellen.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein standardmäßiges Tabellenformatobjekt für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Style" />-Klasse, die das Standardtabellenformat für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement, dessen Standardwert Tabelle Style-Objekt zu erstellen. Zusätzlich zum Festlegen der Standardstil der eine <xref:System.Web.UI.WebControls.TableStyle> -Objekt, diese Methode setzt auch die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> Eigenschaft auf 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um einen eigenen Standardstil zu erstellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt mit den Argumenten, die zur Verarbeitung an die Datenquelle übergeben werden.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das die Argumente enthält, die an die Datenquelle übergeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> zu erstellende Steuerelement die <xref:System.Web.UI.DataSourceSelectArguments> Objekt, das die Argumente enthält, die Datenquelle übergeben. In dieser Implementierung der <xref:System.Web.UI.DataSourceSelectArguments> Objekt enthält die Argumente für Auslagerungsvorgänge.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um eigene Werte angeben, die an die Datenquelle übergeben werden.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der nullbasierte Index des anzuzeigenden Datenelements.</param>
        <param name="rowType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowType" />-Enumerationswerte.</param>
        <param name="rowState">Eine bitweise Kombination der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Enumerationswerte.</param>
        <summary>Erstellt ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" /> mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> zu erstellende Steuerelement ein <xref:System.Web.UI.WebControls.FormViewRow> Objekt verwendet, um eine Zeile innerhalb des Steuerelements darstellt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode zurückgeben einer <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Objekt mit benutzerdefinierten Einstellungen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Table" />, die die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Erstellen einer Tabelle, die als Container für das Steuerelement fungiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Dateneingabemodus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> -Eigenschaft können Sie bestimmen, ob die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus, einfügen oder nur-Lese-Modus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`FormView.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
 Dieser Wert wird normalerweise automatisch vom festgelegt, die <xref:System.Web.UI.WebControls.FormView> steuern, wann die Befehlsschaltfläche neu, Update-, INSERT-, DELETE- oder "Abbrechen" geklickt wird. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert Modi als Antwort auf eine Aktion, die Ereignisse in der folgenden Tabelle werden ausgelöst. Dadurch können Sie einen benutzerdefinierten Ereignishandler erstellen, der die entsprechenden Routine führt bei des Ereignisses eintreten.  
  
|event|Beschreibung |  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt auf, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert Modi, aber nach der modusänderung. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement den Modus geändert.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt auf, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ändert Modi, aber vor der modusänderung. Dieses Ereignis wird häufig verwendet, um die Änderung abzubrechen.|  
  
 **Hinweis** diese Ereignisse werden nicht ausgelöst, wenn Sie den Modus programmgesteuert mithilfe von ändern die <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> -Eigenschaft können Sie bestimmen, ob die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus, einfügen oder nur-Lese-Modus. Wenn der Benutzer versucht, navigieren Sie zu einem anderen Datensatz While der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet, wird der Pagingvorgang abgebrochen.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataBind> Methode, um Daten aus einer Datenquelle zu binden die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Methode löst alle Datenbindungsausdrücke in der aktiven Vorlage des Steuerelements.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement ab.</summary>
        <value>Ein <see cref="T:System.Object" />, das das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItem%2A> -Eigenschaft auf das Datenelement gebunden, um die <xref:System.Web.UI.WebControls.FormView> Steuerelement. Das Datenelement wird häufig verwendet, um die Feldwerte des aktuellen Datensatzes direkten Zugriff auf. Der Typ des der <xref:System.Object> zurückgegeben, die von dieser Eigenschaft variiert je nach Datenquelle. Z. B., wenn ein <xref:System.Web.UI.WebControls.SqlDataSource> gebunden ist die <xref:System.Web.UI.WebControls.FormView> -Steuerelement, ein <xref:System.Data.DataRowView> Objekt wird zurückgegeben.  
  
> [!NOTE]
>  Diese Eigenschaft steht nur nach dem Datenbindung aufgetreten ist. Bevor Daten Bindung auftritt, gibt diese Eigenschaft `null`. Diese Eigenschaft ist auch nicht anwendbar, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus und gibt `null`.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataItem%2A> Eigenschaft, um den Wert eines Felds im Datenelement zu bestimmen.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Datenelemente in der Datenquelle ab.</summary>
        <value>Die Anzahl der Datenelemente in der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> -Eigenschaft können Sie die Anzahl der Datenelemente in der Datenquelle zu bestimmen. Diese Eigenschaft enthält den gleichen Wert wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle ab.</summary>
        <value>Der Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> -Eigenschaft bestimmt den Index des Datenelements gebunden werden, um die <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle. Diese Eigenschaft enthält den gleichen Wert wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
> [!NOTE]
>  Diese Eigenschaft ist nicht anwendbar, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus. Wenn das Steuerelement im Einfügemodus, wird die <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> Eigenschaft gibt-1 zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt ab, das den Primärschlüssel des angezeigten Datensatzes darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt, das den Primärschlüssel des angezeigten Datensatzes darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch erstellt eine <xref:System.Web.UI.WebControls.DataKey> -Objekt, das die Schlüssel-/Wertpaaren, der die Felder aufgeführt, die der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Verwenden der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft, um diese <xref:System.Web.UI.WebControls.DataKey> Objekt. Diese Eigenschaft wird häufig verwendet, um die Schlüssel und die entsprechenden Werte für die Felder, die im angegebenen erhalten die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft.  
  
> [!NOTE]
>  Abzukürzen, können Sie auch die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> -Eigenschaft können Sie den Wert des ersten Schlüsselfelds bestimmen die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft, um den Wert des Schlüsselfelds zu bestimmen.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der Schlüsselfelder für die Datenquelle enthält.</summary>
        <value>Ein Array, das die Namen der Schlüsselfelder für die Datenquelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft, um eine durch Trennzeichen getrennte Liste von Feldnamen anzugeben, die den Primärschlüssel der Datenquelle darstellen. Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch erstellt eine <xref:System.Web.UI.WebControls.DataKey> -Objekt, das die Schlüssel-/Wertpaaren, der die Felder aufgeführt, die der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Die <xref:System.Web.UI.WebControls.DataKey> Objekt wird dann gespeichert, der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft.  
  
> [!NOTE]
>  Müssen die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den integrierten aktualisieren, löschen und Einfügen von Funktionen von der <xref:System.Web.UI.WebControls.FormView> Steuerelement funktioniert.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft an das Schlüsselfeld für die Datenquelle gebunden die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateneingabemodus ab, in den das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nach einem Aktualisierungs-, Einfüge- oder Abbruchvorgang zurückkehrt, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte. Der Standardwert ist <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft, um anzugeben, ob die <xref:System.Web.UI.WebControls.FormView> steuerelementrückgabe bearbeiten, einfügen oder nur-Lese-Modus nach einem Update, Insert oder ein Vorgang "Abbrechen" ausgeführt wird. Wird standardmäßig die <xref:System.Web.UI.WebControls.FormView> steuerelementrückgabe zu nur-Lese-Modus; Sie können jedoch beibehalten der <xref:System.Web.UI.WebControls.FormView> in Bearbeitung zu steuern oder durch Festlegen dieser Eigenschaft auf den entsprechenden Wert im Einfügemodus. Die folgende Tabelle enthält die Werte der anderen Modus.  
  
|Modus|Beschreibung |  
|----------|-----------------|  
|`FormViewMode.Edit`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die dem Benutzer ermöglicht, die Werte eines Datensatzes zu aktualisieren.|  
|`FormViewMode.Insert`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus, der dem Benutzer ermöglicht, einen neuen Datensatz mit der Datenquelle hinzufügen.|  
|`FormViewMode.ReadOnly`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus der normale Anzeigemodus ist.|  
  
 Diese Eigenschaft wird häufig verwendet, wenn die <xref:System.Web.UI.WebControls.FormView> Steuerelement verfügt über einen einzigen Zweck, z. B. nur zum Einfügen oder Bearbeiten von Datensätzen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft zu einer <xref:System.Web.UI.WebControls.FormView> im Bearbeitungsmodus nach einem Updatevorgang.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den aktuellen Datensatz im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> Methode, um programmgesteuert löschen Sie den aktuellen Datensatz in die <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle. Diese Methode wird häufig verwendet, wenn beim Löschen des aktuellen Datensatzes aus außerhalb von Sie müssen die <xref:System.Web.UI.WebControls.FormView> steuern, z. B. ein anderes Steuerelement auf der Seite. Aufrufen dieser Methode löst auch der <xref:System.Web.UI.WebControls.FormView.ItemDeleted> und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> Methode, um programmgesteuert löschen Sie den aktuellen Datensatz in einer <xref:System.Web.UI.WebControls.FormView> Steuerelement aus der Datenquelle.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Bearbeitungsmodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Bearbeitungsmodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (gemäß der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Datenzeile-Eigenschaft eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus befindet. Die Bearbeitungselementvorlage enthält normalerweise die Eingabesteuerelemente für den Benutzer zum Aktualisieren der Werte von einem vorhandenen Datensatz als auch Befehlsschaltflächen, den Datensatz zu aktualisieren und zu den Updatevorgang "Abbrechen".  
  
 Angeben der benutzerdefinierten Vorlage, die zuerst `<EditItemTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EditItemTemplate>` Tags. Mithilfe eines Ausdrucks für die bidirektionale Bindung zu verwenden, können Sie ein Feld eines Eingabesteuerelements zuordnen. Dies ermöglicht die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zum Anzeigen von des ursprünglichen Wert automatisch in das zugeordnete Eingabesteuerelement im Bearbeitungsmodus befindet. Wenn ein Datensatz aktualisiert wird, die <xref:System.Web.UI.WebControls.FormView> Steuerelement extrahiert automatisch den Wert des aktualisierten Felds aus den zugeordneten Eingabesteuerelements. Weitere Informationen zu Ausdrücken bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Um Befehlsschaltflächen zu erstellen, die die integrierte "Abbrechen" und die Updatevorgänge ausführen, fügen Sie eine Befehlsschaltfläche auf die Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltfläche-Befehlstyp|CommandName-Wert|  
|-------------------------|-----------------------|  
|Abbrechen|"Cancel"|  
|Update|"Update"|  
  
 Sie können die Darstellung der Elementvorlage steuern, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage für eine Datenzeile in den Bearbeitungsmodus zu definieren.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich dieses im Bearbeitungsmodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Bearbeitungsmodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> Datenzeile Eigenschaft, um die Darstellung der Daten zu steuern, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus befindet. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, die die Datenzeile zeigt den benutzerdefinierten Inhalt gemäß der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EditRowStyle-ForeColor`).  
  
-   Schachteln einer `<EditRowStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EditRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus befindet.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der leeren Datenzeile festlegen können, die angezeigt wird, wenn die an ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenquelle keine Datensätze enthält.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, mit dem die Darstellung der leeren Datenzeile festgelegt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> -Eigenschaft zur Steuerung der Darstellung von leeren Datenzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die leere Datenzeile wird angezeigt, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `EmptyDataRowStyle-ForeColor`).  
  
-   Schachteln einer `<EmptyDataRowStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `EmptyDataRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil anzugeben, für die leere Datenzeile angezeigt wird, wenn eine <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt diesen Inhalt fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die leere Datenzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft. Um eine benutzerdefinierte Vorlage für die leere Datenzeile angeben möchten, platzieren Sie zuerst `<EmptyDataTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<EmptyDataTemplate>` Tags. Um den Stil der leeren Datenzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft. Alternativ können die integrierte Benutzeroberfläche für die leere Datenzeile durch Festlegen der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage zu definieren, die leere Datenzeile angezeigt wird, wenn eine <xref:System.Web.UI.WebControls.FormView> gebunden ist mit einer Datenquelle, die keine Datensätze enthält.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt den Text fest.</summary>
        <value>Der Text, der in der leeren Datenzeile angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die leere Datenzeile wird angezeigt, einem <xref:System.Web.UI.WebControls.FormView> steuern, wenn die Datenquelle, die an das Steuerelement gebunden ist keine Datensätze enthält. Verwenden der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft an, der in der leeren Datenzeile anzuzeigende Text. Um den Stil der leeren Datenzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Eigenschaft. Alternativ können Sie eigene benutzerdefinierte Benutzeroberfläche (UI) für die leere Datenzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft an, der in der leeren Datenzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Validierungssteuerelement Ausnahmen behandelt, die während Einfüge- oder Aktualisierungsvorgängen auftreten, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, wenn in Einfüge- oder Aktualisierungsvorgängen auftretende Ausnahmen von einem Validierungssteuerelement behandelt werden; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zum gegebenen Zeitpunkt an Daten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.FormView> Klasse, um sicherzustellen, dass die <xref:System.Web.UI.WebControls.FormView> -Steuerelement an Daten bei Bedarf gebunden ist. Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Methode wird in der Regel aufgerufen, während die <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> Methode, um das Steuerelement an die Datenquelle binden, wenn das datengebundene Steuerelement noch nicht gebunden ist, erfordert jedoch die Datenbindung. Diese Version der Methode überschrieben, um zu verhindern, dass bei der Datenbindung aus, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> zur Speicherung der Feldwerte des aktuellen Datenelements.</param>
        <param name="includeKeys">
          <see langword="true" /> bei Einbeziehung von Schlüsselfeldern, andernfalls <see langword="false" />.</param>
        <summary>Ruft die Werte jedes innerhalb der Datenzeile deklarierten Felds ab und speichert sie in dem angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Abrufen der Werte jedes Felds innerhalb der Datenzeile deklariert. Da eine andere Vorlage basierend auf den aktuellen Modus in die Datenzeile angezeigt wird, ruft diese Methode nur die Feldwerte, die in der Vorlage, die den aktuellen Modus entspricht deklariert. Die folgende Tabelle zeigt die verfügbaren Modi und den entsprechenden Vorlagen.  
  
|Modus|Vorlage|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Sie können angeben, ob die extrahierten Werte mit das oder Primärschlüsselfelder enthalten die `includeKeys` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um Ihre eigene Routine zum Abrufen der Feldwerte zu erstellen.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das die Fußzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, in der Fußzeile der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die Fußzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Änderungen an der <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.FormView> Steuerelement werden alle Änderungen überschrieben.  
  
 Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft, um programmgesteuert ändern der Eigenschaften der Fußzeile während der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> -Eigenschaft zur Steuerung der Darstellung der in der Fußzeile ein <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `FooterStyle-ForeColor`).  
  
-   Schachteln einer `<FooterStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `FooterStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil für die Fußzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Footerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die Fußzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Fußzeile `<FooterTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<FooterTemplate>` Tags. Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft. Alternativ können Sie einfach anzeigen Text in der Fußzeile durch Festlegen der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft definieren Sie eine benutzerdefinierte Vorlage für die Fußzeile gerendert.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Footerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Footerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Fußzeile wird am unteren Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft an, der in der Fußzeile anzuzeigende Text. Um den Stil der Fußzeile zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Fußzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft an, der in der Fußzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Rasterlinienstil für ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.GridLines" />-Werte. Der Standardwert ist <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.GridLines%2A> Eigenschaft an, die Art der Gitternetzlinie für eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die folgende Tabelle enthält die verfügbaren Formate.  
  
|Stil|Beschreibung |  
|-----------|-----------------|  
|`GridLines.None`|Es werden keine Gitternetzlinien angezeigt.|  
|`GridLines.Horizontal`|Zeigt nur die horizontalen Gitternetzlinien.|  
|`GridLines.Vertical`|Zeigt nur die vertikalen Gitternetzlinien.|  
|`GridLines.Both`|Zeigt die horizontalen und vertikalen Rasterlinien.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.GridLines%2A> Eigenschaft, um die horizontalen und vertikalen Gitternetzlinien anzuzeigen.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das die Kopfzeile darstellt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, in die Kopfzeile der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die Kopfzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Änderungen an der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde gerenderten ist, andernfalls der <xref:System.Web.UI.WebControls.FormView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft so ändern Sie die Eigenschaften der Kopfzeile während programmgesteuert die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> -Eigenschaft zur Steuerung der Darstellung der Kopfzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `HeaderStyle-ForeColor`).  
  
-   Schachteln einer `<HeaderStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `HeaderStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft, um einen benutzerdefinierten Stil für die Kopfzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Headerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (UI) für die Kopfzeile definieren, mit der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft. Platzieren Sie zuerst zum Angeben einer benutzerdefinierten Vorlage für die Kopfzeile `<HeaderTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<HeaderTemplate>` Tags. Um den Stil der Kopfzeilen zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft. Alternativ können Sie einfach anzeigen Text in der Kopfzeile durch Festlegen der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> -Eigenschaft Vorrang.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft definieren Sie eine benutzerdefinierte Vorlage für die Kopfzeile gerendert.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Headerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Headerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Kopfzeile wird am oberen Rand angezeigt der <xref:System.Web.UI.WebControls.FormView> steuern, wann die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt wird. Verwenden der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft an, der in der Kopfzeile anzuzeigende Text. Um den Stil der Kopfzeilen zu steuern, verwenden die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Eigenschaft. Sie können auch eigene benutzerdefinierte Benutzeroberfläche (UI) für die Kopfzeile definieren, durch Festlegen der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> -Eigenschaft statt dieser Eigenschaft.  
  
> [!NOTE]
>  Wenn beide die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaften festgelegt sind, wird die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> -Eigenschaft Vorrang.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt ist, können mit einem Designer-Tool automatisch in einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft an, der in der Kopfzeile anzuzeigende Text.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale Ausrichtung eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf der Seite ab bzw. legt die Ausrichtung fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />-Werte. Der Standardwert ist <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> -Eigenschaft an die horizontale Ausrichtung des ein <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der Seite. Die folgende Tabelle enthält die verschiedenen horizontalen Ausrichtung Stile.  
  
|HorizontalAlign-Wert|Beschreibung |  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Die horizontale Ausrichtung der <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde nicht festgelegt.|  
|`HorizontalAlign.Left`|Die <xref:System.Web.UI.WebControls.FormView> ist links auf der Seite ausgerichtet.|  
|`HorizontalAlign.Center`|Die <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite zentriert.|  
|`HorizontalAlign.Right`|Die <xref:System.Web.UI.WebControls.FormView> ist rechts auf der Seite ausgerichtet.|  
|`HorizontalAlign.Justify`|Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement ist an der linken und rechten Rand der Seite ausgerichtet.|  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> Eigenschaft angeben, dass ein <xref:System.Web.UI.WebControls.FormView> Steuerelement auf der Seite zentriert werden soll.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Pagerzeile enthält.</param>
        <param name="pagedDataSource">Eine <see cref="T:System.Web.UI.WebControls.PagedDataSource" />, die die Daten für die aktuelle Seite enthält.</param>
        <summary>Erstellt die Pagerzeile für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement, um die Pagerzeile zu erstellen. Erstellt eine <xref:System.Web.UI.WebControls.TableCell> Objekt, das mit den Eigenschaften der Navigationssteuerelemente enthält die <xref:System.Web.UI.WebControls.PagedDataSource> Objekt in der `pagedDataSource` Parameter. Die Zelle wird dann hinzugefügt, auf die Zeile, die gemäß der `row` Parameter.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene Pagerzeile zu erstellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.FormViewRow" />.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Initialisieren des angegebenen <xref:System.Web.UI.WebControls.FormViewRow> Objekt. Die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt initialisiert wird, basierend auf den Zeilentyp und Zeilenstatus gemäß seiner <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> und <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> Eigenschaften bzw. Der entsprechende Inhalt wird dann hinzugefügt, um die <xref:System.Web.UI.WebControls.FormViewRow> Objekt. In der folgenden Tabelle wird beschrieben, wie jede Zeilentyps initialisiert wird.  
  
|Zeilentyp|Beschreibung |  
|--------------|-----------------|  
|Datenzeile|Den Inhalt der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, oder <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft hinzugefügt werden die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, abhängig vom Wert der <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> Eigenschaft.|  
|Leere Datenzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> -Eigenschaft Vorrang.|  
|Fußzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.FooterText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> -Eigenschaft Vorrang.|  
|Kopfzeile|Der Wert des der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Eigenschaft oder den Inhalt des der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Eigenschaft hinzugefügt wird die <xref:System.Web.UI.WebControls.FormViewRow> Objekts, je nachdem, welche Eigenschaft festgelegt wird. Wenn beide Eigenschaften festgelegt werden, die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> -Eigenschaft Vorrang.|  
  
> [!NOTE]
>  Diese Methode initialisiert die Pagerzeile nicht. Um die Pagerzeile zu erstellen, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Methode.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um eine eigene benutzerdefinierte Zeile zu erstellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Fügt den aktuellen Datensatz in der Datenquelle ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> Methode, um den aktuellen Datensatz in der Datenquelle programmgesteuert einfügen. Diese Methode wird häufig verwendet, wenn den aktuelle Datensatz von außerhalb des eingefügt werden muss die <xref:System.Web.UI.WebControls.FormView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement muss im Einfügemodus sein, wenn diese Methode aufgerufen, andernfalls wird ein <xref:System.Web.HttpException> ausgelöst wird.  
  
 Um anzugeben, ob die seitenüberprüfung vor der Insert-Vorgang ausgeführt wird, verwenden die `causesValidation` Parameter. Aufrufen dieser Methode löst auch der <xref:System.Web.UI.WebControls.FormView.ItemInserted> und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> Methode zum programmgesteuerten Einfügen von den aktuellen Datensatz in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement in der Datenquelle.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Einfügemodus befindet.  Oder:  Das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet ist, ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Einfügemodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Einfügemodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (gemäß der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Datenzeile-Eigenschaft eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus. Die Insert-Elementvorlage enthält normalerweise die Eingabesteuerelemente für den Benutzer aus, geben die Werte für den neuen Eintrag, als auch Befehlsschaltflächen den Datensatz eingefügt und den Insert-Vorgang "Abbrechen".  
  
 Angeben der benutzerdefinierten Vorlage, die zuerst `<InsertItemTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<InsertItemTemplate>` Tags. Mithilfe eines Ausdrucks für die bidirektionale Bindung zu verwenden, können Sie ein Feld eines Eingabesteuerelements zuordnen. Wenn ein Datensatz eingefügt wird, die <xref:System.Web.UI.WebControls.FormView> Steuerelement extrahiert automatisch den Wert des Felds aus der zugeordneten Eingabesteuerelements. Weitere Informationen zu Ausdrücken bidirektionale Bindung finden Sie unter [Binden an Datenbanken](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Um Befehlsschaltflächen zu erstellen, die die integrierten Abbruch- und Einfügevorgänge, fügen Sie ein Befehl Schaltflächen-Steuerelement an der Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltfläche-Befehlstyp|CommandName-Wert|  
|-------------------------|-----------------------|  
|Abbrechen|"Cancel"|  
|Insert|"Einfügen"|  
  
 Sie können die Darstellung der Elementvorlage steuern, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage für eine Datenzeile im Einfügemodus definiert.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festgelegt werden kann, wenn sich das Steuerelement im Einfügemodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Einfügemodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> Datenzeile Eigenschaft, um die Darstellung der Daten zu steuern, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus. Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus, die die Datenzeile zeigt den benutzerdefinierten Inhalt gemäß der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben.  
  
 Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `InsertRowStyle-ForeColor`).  
  
-   Schachteln einer `<InsertRowStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `InsertRowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Einfügemodus.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den zu überprüfenden Datentyp darstellt.</param>
        <summary>Bestimmt, ob der angegebene Datentyp an ein Feld im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann.</summary>
        <returns>
          <see langword="true" />, wenn der angegebene Datentyp an ein Feld im<see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement, um zu bestimmen, ob der angegebene Datentyp an ein Feld in das Steuerelement gebunden werden kann. Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement unterstützt die folgenden Datentypen:  
  
-   Alle primitiven Datentypen, z. B. <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>und so weiter.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um hinzufügen oder Einschränken der Datentypen, die in verwendet werden können ein <see cref="T:System.Web.UI.WebControls.FormView" /> Steuerelement.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn innerhalb eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf eine Schaltfläche geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in der <xref:System.Web.UI.WebControls.FormView> Steuerelement geklickt wird. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
 Schaltflächen innerhalb einer <xref:System.Web.UI.WebControls.FormView> Steuerelement kann auch einige der integrierten Funktionen des Steuerelements aufrufen. Um einen dieser Vorgänge auszuführen, legen die `CommandName` Eigenschaft einer Schaltfläche auf einen der Werte in der folgenden Tabelle.  
  
|CommandName-Wert|Beschreibung |  
|-----------------------|-----------------|  
|"Cancel"|Bricht einen bearbeiten oder Insert-Vorgang ab und gibt die <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft. Löst das <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|"Löschen"|Löscht den aktuellen Datensatz. Löst das <xref:System.Web.UI.WebControls.FormView.ItemDeleted> und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse.|  
|"Bearbeiten"|Setzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Löst das <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|"Einfügen"|Fügt den aktuellen Datensatz in der Datenquelle ein. Löst das <xref:System.Web.UI.WebControls.FormView.ItemInserted> und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse.|  
|"New"|Setzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus. Löst das <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse.|  
|Seite """|Eine Auslagerung durchgeführt. Legen Sie die `CommandArgument` -Eigenschaft der Schaltfläche auf "First", "Last", "Weiter", "Prev" oder eine Seitenzahl zur Angabe der Pagingvorgang ausführen. Löst das <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignisse.|  
|"Update"|Aktualisiert den aktuellen Datensatz in der Datenquelle. Löst das <xref:System.Web.UI.WebControls.FormView.ItemUpdated> und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse.|  
  
 Obwohl die <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis wird ausgelöst, wenn auf eine Schaltfläche in der vorherigen Tabelle aufgeführten geklickt wird, wird empfohlen, dass Sie für den Vorgang in der Tabelle aufgeführten Ereignisse zu verwenden.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> Ereignisbehandlungsmethode, dadurch können Sie zum Bestimmen der Befehlsname und Befehlsargument der Schaltfläche geklickt-Objekt übergeben wird. Name des Befehls und Befehlsargument ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> und <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Eigenschaften bzw. Sie können auch zugreifen, das Steuerelement, das das Ereignis ausgelöst, mithilfe hat der <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemCommand> -Ereignis auf eine Schaltfläche in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Klickt der Benutzer auf die Schaltfläche "hinzufügen", wird das aktuell angezeigte Element hinzugefügt, zu einem <xref:System.Web.UI.WebControls.ListBox> Steuerelement.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem alle Zeilen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement erstellt sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis wird ausgelöst, nachdem alle Zeilen, in erstellt wurden einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dies kann auftreten, wenn das Steuerelement gerendert wird oder wenn der Benutzer mit einem anderen Datensatz wechselt. Sie können dieses Ereignis verwenden, eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. hinzufügen oder ändern den Inhalt einer Zeile aus, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis tritt auf, bevor die <xref:System.Web.UI.WebControls.FormView> -Steuerelement an Daten gebunden ist. Um den Wert eines gebundenen Felds zu ändern, verwenden Sie die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> Ereignis.  
  
 Sie erreichen die Header, Footer und Pager Zeilen in der <xref:System.Web.UI.WebControls.FormView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, oder <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaften bzw. Verwenden Sie für den Zugriff auf die Datenzeile, die <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis, um den Text der Aktualisieren einer <xref:System.Web.UI.WebControls.Label> in die Pagerzeile enthaltenes Steuerelement.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings erst nachdem der Löschvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis aus, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Löschen") innerhalb des Steuerelements geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse einer Delete-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> Ereignisbehandlungsmethode, wodurch Sie zum Bestimmen der Anzahl der betroffenen Datensätze und alle Ausnahmen, die möglicherweise aufgetreten-Objekt übergeben wird. Die Anzahl der Datensätze, die durch den Löschvorgang betroffen ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignisbehandlungsmethode, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Name-Wert-Paare der Schlüsselfelder und nichtschlüsselfelder des gelöschten Datensatzes zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> Eigenschaften bzw.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis, um zu bestimmen, ob eine Ausnahme während eines Delete-Vorgangs aufgetreten sind.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings bevor der Löschvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis aus, wenn eine Schaltfläche "löschen" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Löschen") innerhalb des Steuerelements geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.FormView> Steuerelement löscht den Datensatz. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. das Überprüfen eines Datensatzes, bevor Sie Sie löschen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> Objekt übergeben wird, an die Methode für die Ereignisbehandlung, wodurch Sie den Index des gelöschten Datensatzes ermitteln und um anzugeben, dass der Delete-Vorgang abgebrochen werden soll. Um den Index eines Datensatzes zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> Eigenschaft. Um den Löschvorgang abzubrechen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch die Schlüsselfelder und nichtschlüsselfelder zugreifen, mithilfe der <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> Eigenschaften bzw.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis, um einen Löschvorgang abzubrechen.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings erst nachdem der Einfügevorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis aus, wenn eine Schaltfläche zum Einfügen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Einfügen") innerhalb des Steuerelements geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse einer Insert-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> Ereignisbehandlungsmethode, wodurch Sie zum Bestimmen der Anzahl der betroffenen Datensätze und alle Ausnahmen, die möglicherweise aufgetreten-Objekt übergeben wird. Verwenden Sie zum Bestimmen der Anzahl der Datensätze, die von der Insert-Vorgang betroffen sind der <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignisbehandlungsmethode, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Werte von den eingefügten Datensatz zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> Eigenschaft.  
  
 Wird standardmäßig die <xref:System.Web.UI.WebControls.FormView> steuerelementrückgabe für den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft nach dem Einfügevorgang. Beibehalten der <xref:System.Web.UI.WebControls.FormView> im Einfügemodus steuern, legen Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis, um zu bestimmen, ob eine Ausnahme während einer Insert-Vorgang aufgetreten ist.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings bevor der Einfügevorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis aus, wenn eine Schaltfläche zum Einfügen (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Einfügen") innerhalb des Steuerelements geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.FormView> Steuerelement einfügen des Datensatzes. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine, wie z. B. HTML-Codierung der Werte eines Datensatzes in der Datenquelle einfügt, wenn dieses Ereignis tritt auf, bevor ausführt.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> Objekt übergeben wird, an die Methode für die Ereignisbehandlung, dadurch können Sie den Wert eines Arguments optionaler Befehl gesendet, um zu bestimmen die <xref:System.Web.UI.WebControls.FormView> Steuerelement und anzugeben, dass der Insert-Vorgang abgebrochen werden soll. Der Befehlsargumentwert entspricht der `CommandArgument` Eigenschaft der Schaltfläche einfügen. Wenn die `CommandArgument` -Eigenschaft der Schaltfläche Einfügen festgelegt ist, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> Eigenschaft, um den Wert des Befehlsarguments zu bestimmen. Legen Sie zum Abbrechen des Insert-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch lesen oder ändern Sie die Feldwerte für den neuen Eintrag mit dem <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis, um eine Insert-Vorgang "Abbrechen".  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab, wenn sich das Steuerelement im schreibgeschützten Modus befindet, oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im schreibgeschützten Modus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement rendert eine andere Vorlage für die Datenzeile, die basierend auf den aktuellen Modus des Steuerelements (gemäß der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> Datenzeile-Eigenschaft eine eigene Benutzeroberfläche (UI) für die Daten zu definieren, wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus. Die Elementvorlage enthält in der Regel Steuerelemente, um die Feldwerte eines Datensatzes sowie Befehlsschaltflächen zum Bearbeiten, einfügen und Löschen eines Datensatzes.  
  
 Angeben der benutzerdefinierten Vorlage, die zuerst `<ItemTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<ItemTemplate>` Tags. Verwenden Sie einen Datenbindungsausdruck zum Anzeigen der Werte des Felds der Datenquelle an das Steuerelement gebunden. Weitere Informationen zu Datenbindungsausdrücke, finden Sie unter [Datenbindungsfunktionen Ausdruckssyntax](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Um Befehlsschaltflächen zu erstellen, die die integrierte löschen, bearbeiten und neue Datensätze Vorgänge ausführen, fügen Sie eine Befehlsschaltfläche, die Vorlage mit der `CommandName` -Eigenschaft auf einen der Werte in der folgenden Tabelle aufgeführt.  
  
|Schaltfläche-Befehlstyp|CommandName-Wert|  
|-------------------------|-----------------------|  
|Löschen|"Löschen"|  
|Bearbeiten|"Bearbeiten"|  
|Neu|"New"|  
  
 Sie können die Darstellung der Elementvorlage steuern, indem Sie mit der <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage für eine Datenzeile in nur-Lese-Modus definiert.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings erst nachdem der Aktualisierungsvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis aus, wenn eine Schaltfläche "Aktualisieren" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Update" festgelegt) innerhalb des Steuerelements geklickt wird, aber nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. Überprüfen der Ergebnisse einer Update-Vorgang aus, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> Ereignisbehandlungsmethode, wodurch Sie zum Bestimmen der Anzahl der betroffenen Datensätze und alle Ausnahmen, die möglicherweise aufgetreten-Objekt übergeben wird. Um die Anzahl der vom Aktualisierungsvorgang betroffenen Datensätze zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignisbehandlungsmethode, indem behandelt wurde die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie die Schlüsselfeldwerte für den aktualisierten Datensatz zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Eigenschaft. Die ursprünglichen und die aktualisierten nicht schlüsselbezogene Feldwerte können zugegriffen werden, mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> und <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Eigenschaften bzw.  
  
 Wird standardmäßig die <xref:System.Web.UI.WebControls.FormView> steuerelementrückgabe für den Modus gemäß der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft nach einem Updatevorgang. Beibehalten der <xref:System.Web.UI.WebControls.FormView> in den Bearbeitungsmodus zu steuern, legen Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis, um zu bestimmen, ob eine Ausnahme während eines Updatevorgangs aufgetreten sind.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings bevor der Aktualisierungsvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignis aus, wenn eine Schaltfläche "Aktualisieren" (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Update") innerhalb des Steuerelements geklickt wird, aber vor der <xref:System.Web.UI.WebControls.FormView> Steuerelement aktualisiert den Datensatz. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine, z. B. HTML ausführt-Codierung der Werte eines Datensatzes, bevor Sie es in der Datenquelle zu aktualisieren, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> Objekt übergeben wird, an die Methode für die Ereignisbehandlung, dadurch können Sie den Wert eines Arguments optionaler Befehl gesendet, um zu bestimmen die <xref:System.Web.UI.WebControls.FormView> Steuerelement und anzugeben, dass der Update-Vorgang abgebrochen werden soll. Der Befehlsargumentwert entspricht der `CommandArgument` -Eigenschaft der Schaltfläche "Aktualisieren". Wenn die `CommandArgument` -Eigenschaft der Schaltfläche "Aktualisieren" festgelegt ist, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> Eigenschaft, um den Wert des Befehlsarguments zu bestimmen. Legen Sie zum Abbrechen des Update-Vorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`. Sie können auch lesen oder ändern Sie die neuen Werte, die vom Benutzer eingegeben werden, mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> Eigenschaften. Die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Eigenschaft enthält die Schlüsselfelder, während die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> Eigenschaft enthält die nichtschlüsselfelder. Wenn Sie die ursprünglichen Schlüsselfeldwerte zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> Eigenschaft.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignis, um ein Update-Vorgang "Abbrechen".  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> Methode wird verwendet, um den Status der laden die <xref:System.Web.UI.WebControls.FormView> Steuerelementeigenschaften, die beibehalten werden, müssen auch dann, wenn die <xref:System.Web.UI.Control.EnableViewState%2A> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> Methode wird verwendet, um den zuvor gespeicherten Ansichtszustand des laden die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings erst, nachdem sich der Modus geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ModeChanged> Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.FormView> Steuerelement versucht, wechseln Sie zwischen bearbeiten, einfügen und nur-Lese-Modus, aber erst, nachdem der Modus tatsächlich ändert. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine, z. B. Synchronisierung führt der <xref:System.Web.UI.WebControls.FormView> Steuerelement mit einem anderen Steuerelement, wenn dieses Ereignis tritt auf.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ModeChanged> anzuzeigenden den aktuellen Modus in der Kopfzeile des Ereignisses ein <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings bevor sich der Modus ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.FormView> Steuerelement versucht, wechseln Sie zwischen bearbeiten, einfügen und nur-Lese-Modus, jedoch bevor der Modus tatsächlich ändert. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die führt eine benutzerdefinierte Routine, z. B. das Konfigurieren der <xref:System.Web.UI.WebControls.FormView> für einen bestimmten Modus zu steuern oder die Änderung Modus abbrechen, wenn dieses Ereignis tritt auf.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewModeEventArgs> Objekt wird an die Methode für die Ereignisbehandlung, dadurch können Sie den Modus ermitteln übergeben der <xref:System.Web.UI.WebControls.FormView> Steuerelement wechseln, um zu bestimmen, ob die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis ausgelöst wurde, weil der Benutzer einen Bearbeitungsvorgang abgebrochen oder um anzugeben, dass ein Insert-Vorgang abgebrochen werden soll. Den neuen Modus ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Eigenschaft. Sie können auch die <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Eigenschaft in einer alternativen Modus wechselt, durch Festlegen auf eine der der <xref:System.Web.UI.WebControls.FormViewMode> Enumerationswerte. Verwenden der <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> -Eigenschaft können Sie bestimmen, ob der Benutzer einen Bearbeitungsvorgang an abgebrochen. Um einen Einfügevorgang abzubrechen, legen die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis an den Pager ausblenden Datenzeile, wenn die <xref:System.Web.UI.WebControls.FormView> steuern, in den Bearbeitungsmodus wechselt.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die tabellenspezifischen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind, auf ihre Standardwerte festgelegt werden.</summary>
        <returns>Die standardmäßigen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tabelle-spezifische CSS-Stilregeln werden auf ihre Standardwerte festgelegt, mit der <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> und <xref:System.Web.UI.WebControls.Style.Font%2A> Eigenschaften.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Behandelt ein Ereignis, das in der Steuerelementhierarchie nach oben weitergegeben wird.</summary>
        <returns>
          <see langword="true" /> zeigt an, dass das Ereignis in der Steuerelementhierarchie nach oben weitergegeben werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Methode wird vom Steuerelement verwendeten, optional der Steuerelementhierarchie nach oben weitergegeben Ereignisse behandeln die <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> Methode. Sie bestimmt, ob für die Ereignisbehandlung durch Untersuchen der Eigenschaften von der <xref:System.EventArgs> Objekt in der `e` Parameter. Wenn ein Ereignis verarbeitet werden muss, führt die Methode die entsprechende Aktion aus. Andere Ereignisse werden ignoriert und der Steuerelementhierarchie nach oben übergeben. Diese Methode gibt an, ob das Ereignis durch den Rückgabewert der Steuerelementhierarchie nach oben übergeben wird.  
  
 Die <xref:System.Web.UI.WebControls.FormView> Steuerelement überschreibt die basisimplementierung dieser Methode die entsprechende Aktion ausführen, wenn eine der vom Steuerelement erkannten Schaltflächen geklickt wird. Die folgende Tabelle enthält die Befehlsschaltflächen, die die <xref:System.Web.UI.WebControls.FormView> Steuerelement erkanntes.  
  
|Schaltfläche|CommandName-Wert|Beschreibung |  
|------------|-----------------------|-----------------|  
|Abbrechen|"Cancel"|In aktualisieren oder Einfügen von Vorgängen verwendet, um den Vorgang abzubrechen und um die vom Benutzer eingegebenen Werte zu verwerfen. Die <xref:System.Web.UI.WebControls.FormView> dann wieder in den vom angegebenen Modus steuern die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Eigenschaft.|  
|Löschen|"Löschen"|Bei Löschen von Vorgängen verwendet, die um den angezeigten Datensatz aus der Datenquelle zu löschen. Löst das <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse.|  
|Bearbeiten|"Bearbeiten"|In Aktualisierungsvorgängen verwendet wird, versetzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Der Inhalt im angegebenen die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Insert|"Einfügen"|Bei Einfügevorgängen verwendet, bei dem Versuch, einen neuen Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten einfügen. Löst das <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse.|  
|Neu|"New"|In Einfügevorgängen verwendet wird, versetzt die <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus. Der Inhalt im angegebenen die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Eigenschaft wird für die Datenzeile angezeigt.|  
|Seite|Seite """|In Auslagerungsvorgänge verwendet, um eine Schaltfläche in der Pagerzeile darzustellen, die Paging ausführt. Legen Sie zum Angeben des Pagingvorgangs der `CommandArgument` -Eigenschaft der Schaltfläche "Weiter", "Zurück", "First", "Letzte" oder der Index der Seite für die Navigation. Löst das <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse. **Hinweis:** diese Art von Schaltfläche ist nur in der Pagervorlage in der Regel verwendet.|  
|Update|"Update"|Verwendet in Aktualisierungsvorgängen für den Versuch, den angezeigten Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten zu aktualisieren. Löst das <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse.|  
  
 Diese Version der Methode gibt `true` Wenn eine der folgenden Schaltflächen behandelt wird. Weitere Informationen zu Ereignis bubbling, finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.FormView" /> -Klasse, überschreiben Sie diese Methode, um eigene Ereignisse zu behandeln. Stellen Sie sicher, dass den Rückgabewert verwenden, um anzugeben, ob das Ereignis der Steuerelementhierarchie nach oben übergeben werden sollen.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.Control.Init> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemCommand> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Löschvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Einfügevorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Aktualisierungsvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ModeChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, die Modusänderung nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Methode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> Steuerelement zum Auslösen der <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis. Es wird im Allgemeinen von Entwicklern verwendet, beim Erweitern der <xref:System.Web.UI.WebControls.FormView> Klasse.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Pagingvorgang nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides">
          <para>Zum Überschreiben <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtzahl der Seiten ab, die zum Anzeigen sämtlicher Datensätze aus der Datenquelle erforderlich sind.</summary>
        <value>Die Anzahl der Elemente in der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), verwenden die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> -Eigenschaft können Sie die Gesamtzahl der Datensätze in der zugrunde liegenden Datenquelle zu bestimmen.  
  
> [!NOTE]
>  Da die <xref:System.Web.UI.WebControls.FormView> -Steuerelement zeigt nur ein Datensatz zu einem Zeitpunkt, dieser Wert entspricht der Gesamtanzahl der Seiten, die erforderlich sind, um jeden Datensatz in der Datenquelle anzuzeigen. Dieser Wert ist nicht genau erst, nachdem die Datenbindung tritt auf.  
  
 Um den Index des aktuellen Datensatzes aus der zugrunde liegenden Datenquelle zu ermitteln, verwenden die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> -Eigenschaft zum Bestimmen der Gesamtzahl der Datensätze, die im Steuerelement angezeigt.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der angezeigten Seite ab oder legt diesen fest.</summary>
        <value>Der nullbasierte Index des Datenelements aus der zugrunde liegenden Datenquelle, das in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), verwenden die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> -Eigenschaft können Sie den Index des aktuell angezeigten Datensatzes zu bestimmen. Diese Eigenschaft können auch um den angezeigten Datensatz programmgesteuert zu ändern.  
  
> [!NOTE]
>  Wenn Paging-Funktion aktiviert ist, können Sie diese Eigenschaft auch verwenden, um zu bestimmen, die Seitenzahl des Datensatzes angezeigt; Bedenken Sie jedoch, dass diese Eigenschaft nullbasiert ist.  
  
 Verwenden Sie zum Bestimmen der Gesamtzahl der Elemente in der Datenquelle die <xref:System.Web.UI.WebControls.FormView.PageCount%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> -Eigenschaft zum Bestimmen des Seitenindex des angezeigten Datensatzes.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich nach einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis aus, wenn eine Pagerschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Seite") innerhalb des Steuerelements geklickt wird, aber nachdem der <xref:System.Web.UI.WebControls.FormView> Steuerelement behandelt den Pagingvorgang. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Pagerschaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieses Ereignis wird häufig zum Synchronisieren einer <xref:System.Web.UI.WebControls.FormView> steuern, mit einer <xref:System.Web.UI.WebControls.GridView> Steuerelement oder Festlegen des Verhaltens von der <xref:System.Web.UI.WebControls.FormView> Steuerelement nach einem Pagingvorgang.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignis zurückzugebenden der <xref:System.Web.UI.WebControls.FormView> auf nur-Lese Modus aus, wenn der Benutzer mit einem anderen Datensatz wechselt.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich vor einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis aus, wenn eine Pagerschaltfläche (eine Schaltfläche mit seiner `CommandName` -Eigenschaft auf "Seite" festgelegt) innerhalb des Steuerelements geklickt wird, jedoch bevor die <xref:System.Web.UI.WebControls.FormView> Steuerelement behandelt den Pagingvorgang. Dadurch können Sie eine Ereignisbehandlungsmethode bereitstellen, die eine benutzerdefinierte Routine ausführt, z. B. den Pagingvorgang Abbrechen, wenn dieses Ereignis tritt auf.  
  
> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie programmgesteuert festlegen der <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> Eigenschaft.  
  
 Pagerschaltflächen befinden sich in der Regel in der Pagerzeile eine <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Ein <xref:System.Web.UI.WebControls.FormViewPageEventArgs> Objekt übergeben wird, an die Methode für die Ereignisbehandlung, wodurch Sie den Index der vom Benutzer ausgewählten Seite bestimmen und anzugeben, dass der Pagingvorgang abgebrochen werden soll. Um den Index des vom Benutzer ausgewählten Seite zu bestimmen, verwenden die <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> Eigenschaft. Legen Sie zum Abbrechen des Pagingvorgangs der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von der <xref:System.Web.UI.WebControls.FormViewPageEventArgs> -Objekt `true`.  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [NIB: Behandeln von Ereignissen](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignis, um eine Pagingvorgang "Abbrechen".  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.PagerSettings" />-Objekt ab, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.PagerSettings" />, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft zum Steuern von der Einstellung der Pagerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird angezeigt, wenn die Auslagerung-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), und enthält die Steuerelemente, mit denen den Benutzer zu den einzelnen Datensätzen im Steuerelement navigieren können. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.PagerSettings> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ festgelegt werden, in der Form `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.PagerSettings> Objekt (z. B. `PagerSettings-Mode`). Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerSettings.Mode`). Allgemeine Einstellungen beinhalten die Pagerzeile Anzeigemodus und benutzerdefinierten Text oder Bilder für die Steuerelemente für die Seitennavigation.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Eigenschaft, um die Eigenschaften der Pagerzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> -Eigenschaft zur Steuerung der Darstellung von die Pagerzeile in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird angezeigt, wenn die Auslagerung-Funktion aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), und enthält die Steuerelemente, mit denen den Benutzer auf den verschiedenen Seiten im Steuerelement navigieren können. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `PagerStyle-ForeColor`).  
  
-   Schachteln einer `<PagerRowStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `PagerStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft, um die stileinstellungen für die Pagerzeile anzugeben.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Pagerzeile enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Pagerzeile wird angezeigt, eine <xref:System.Web.UI.WebControls.FormView> steuern, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Eigenschaft festgelegt ist auf "true"). Die Pagerzeile enthält Steuerelemente, mit die den Benutzer auf den verschiedenen Seiten im Steuerelement navigieren können. Anstatt die integrierte Pager-Zeile-Benutzeroberfläche (UI) zu verwenden, definieren Sie Ihre eigene Benutzeroberfläche mithilfe der <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Eigenschaftensatz ist es überschreibt die Pagerzeile integrierte Benutzeroberfläche.  
  
 Um eine benutzerdefinierte Vorlage für die Pagerzeile anzugeben, platzieren Sie zuerst `<PagerTemplate>` zwischen dem Start- und Endtag des Tags der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Anschließend können Sie den Inhalt der Vorlage zwischen den öffnenden und schließenden auflisten `<PagerTemplate>` Tags. Verwenden Sie zum Steuern der Darstellung der Pagerzeile die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Eigenschaft.  
  
 Schaltflächen-Steuerelemente werden in der Regel die Pagervorlage zum Ausführen der Pagingvorgänge hinzugefügt. Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement durchführt einen Auslagerungsdatei-Vorgang, wenn sich ein Schaltflächen-Steuerelement, mit dessen `CommandName` -Eigenschaft auf "Seite" geklickt wird. Der Schaltfläche `CommandArgument` Eigenschaft bestimmt den Typ des auszuführenden Pagingvorgangs. Die folgende Tabelle enthält die Befehlsargumentwerte von unterstützt die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
|CommandArgument-Wert|Beschreibung |  
|---------------------------|-----------------|  
|"Weiter"|Wechselt zur nächsten Seite.|  
|"Prev"|Wechselt zur vorherigen Seite.|  
|"First"|Navigiert zur ersten Seite.|  
|"Letzte"|Navigiert zur letzten Seite.|  
|Ganzzahliger Wert|Navigiert zu die angegebene Seitenzahl.|  
  
   
  
## Examples  
 Im folgende Beispiel wird veranschaulicht, wie eine benutzerdefinierte Pagervorlage definiert.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt.</param>
        <summary>Bindet die angegebene Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement an die angegebene Datenquelle an das Steuerelement zu binden.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> Methode ist versiegelt, Sie sollten diese Methode überschreiben, wenn Sie zusätzlichen Aufgaben ausführen, beim Binden von Daten benötigen.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richtet die Steuerelementhierarchie für dieses <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem Sie die <xref:System.Web.UI.WebControls.FormView> in der Steuerelementhierarchie nach oben festzulegenden Steuerelements die <xref:System.Web.UI.WebControls.FormView> zu steuern, bevor das Steuerelement gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Ereignisargument, aus dem ein <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> für die ausgelösten Ereignisse erstellt wird.</param>
        <summary>Löst die entsprechenden Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es an den Server zurückgesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> Methode, wenn ein Postbackereignis, das in diesem Fall löst die entsprechenden Ereignisse für ein <xref:System.Web.UI.WebControls.FormView> Steuerelement. Dieser Aufruf erfolgt im Lebenszyklus Seite nach dem Laden und die Änderung Benachrichtigung abgeschlossen sind, aber bevor Prerendering auftritt. Diese Methode wurde implementiert, um das Erstellen einer <xref:System.Web.UI.WebControls.CommandEventArgs> Objekt für die Ereignisse, die ausgelöst werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den auf dem Client zu rendernden Ausgabestream enthält.</param>
        <summary>Zeigt das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf dem Client an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.Render%2A> Methode wird verwendet, um den Inhalt des Serversteuerelements an der mit dem angegebenen Clientbrowser gerendert <xref:System.Web.UI.HtmlTextWriter> Objekt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, um Inlinestile zu übernehmen.</summary>
        <value>
          <see langword="true" />, wenn das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Damit Inlineformatvorlagen wie z. B. auch <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> gelten für alle den HTML-Code, der für das Steuerelement gerendert wird, schließt ASP.NET das gerenderte HTML in einem `table` Element. Wenn Sie nicht die äußere möchten `table` Element gerendert werden soll, legen Sie diese Eigenschaft auf `false`. In diesem Fall, wenn Sie versuchen, Inline Stileigenschaften festzulegen, die für das gesamte Steuerelement gelten, wird eine Ausnahme ausgelöst.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> Objekt, das die Datenzeile darstellt. Die Datenzeile enthält verschiedene Inhalte basierend auf der Vorlage für den aktuellen Modus gerendert, (gemäß der <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Eigenschaft). Sie können nur den Inhalt der Vorlage für den aktuellen Modus zugreifen. Die folgende Tabelle zeigt, welche Vorlage für jeden Modus verwendet wird.  
  
|Modus|Vorlage gerendert|  
|----------|-----------------------|  
|Bearbeiten|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, die die Datenzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn die Datenzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert bearbeitet werden muss. Änderungen an der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde von datengebundenen ist, andernfalls der <xref:System.Web.UI.WebControls.FormView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft Zugriff auf die Eigenschaften der Datenzeile während der <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich das Steuerelement im schreibgeschützten Modus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im schreibgeschützten Modus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> Datenzeile Eigenschaft, um die Darstellung der Daten zu steuern, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Anzeigemodus ohne Schreibzugriff (). Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus, die die Datenzeile zeigt den benutzerdefinierten Inhalt gemäß der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> Eigenschaft. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften der Festlegen der <xref:System.Web.UI.WebControls.TableItemStyle> -Objekt wird zurückgegeben. Die Eigenschaften können deklarativ mithilfe einer der folgenden Methoden festgelegt werden:  
  
-   Platzieren Sie ein Attribut im öffnenden Tag von der <xref:System.Web.UI.WebControls.FormView> Steuerelement im Formular `Property-Subproperty`, wobei `Subproperty` ist eine Eigenschaft der <xref:System.Web.UI.WebControls.TableItemStyle> Objekt (z. B. `RowStyle-ForeColor`).  
  
-   Schachteln einer `<RowStyle>` zwischen dem Start- und Endtags des Elements der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 Die Eigenschaften können auch programmgesteuert in das Formular festgelegt werden `Property.Subproperty` (z. B. `RowStyle.ForeColor`). Allgemeine Einstellungen enthalten normalerweise eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftarteigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> -Eigenschaft an einen benutzerdefinierten Stil für eine Datenzeile, wenn eine <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im schreibgeschützten Modus.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück. Wenn dem Steuerelement kein Ansichtszustand zugeordnet ist, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird verwendet, um den Status der speichern die <xref:System.Web.UI.WebControls.FormView> Steuerelementeigenschaften, die beibehalten werden, müssen auch dann, wenn die <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> -Eigenschaftensatz auf `false`.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, zum Erweitern der <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> Methode ist eine Hilfsmethode wird aufgerufen, indem die <xref:System.Web.UI.WebControls.FormView> Steuerelement den Zustand des Steuerelements zu speichern.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Der Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft festgelegt ist, die <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch erstellt eine <xref:System.Web.UI.WebControls.DataKey> -Objekt, das die Schlüssel-/Wertpaaren, der die Felder aufgeführt, die der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> -Eigenschaft für den aktuellen Datensatz. Die <xref:System.Web.UI.WebControls.DataKey> Objekt, das die Primärschlüsselfelds für den aktuellen Datensatz darstellt und befindet sich in der <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft. Anstatt die <xref:System.Web.UI.WebControls.FormView.DataKey%2A> Eigenschaft Zugriff auf den Daten-Schlüssel-Wert können Sie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> -Eigenschaft, wie eine Verknüpfung.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Eigenschaft sind mehrere Felder aufgeführt, gibt diese Eigenschaft den Wert des ersten Feldes aufgeführt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> Eigenschaft, um den Wert des Schlüsselfelds zu bestimmen.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Der festzulegende Index.</param>
        <summary>Legt den Index der derzeit angezeigten Seite im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Ein Objekt, das den Anzeigeindex darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Gibt immer 0 zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> Methode, wenn ein Postbackereignis eintritt. Dieser Aufruf erfolgt im Lebenszyklus Seite nach dem Laden und die Änderung Benachrichtigung abgeschlossen sind, aber bevor die Seite gerendert wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält, bzw. legt das Array fest.</summary>
        <value>Ein Array, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenelementliste ab, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird, wenn die Datenquelle mehrere Listen mit Datenelementen enthält, oder legt den Namen fest.</summary>
        <value>Der Name der Datenelementliste, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt das Objekt fest.</summary>
        <value>Das Objekt, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des Datenquellensteuerelements ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt die ID fest.</summary>
        <value>Die ID des Datenquellensteuerelements, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenquellenobjekt ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</summary>
        <value>Das Datenquellenobjekt, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Das Objekt, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Der aktuelle Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Schaltflächensteuerelement, das die Seite zurück an den Server gesendet hat.</param>
        <summary>Bestimmt die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> Methode ist eine Hilfsmethode, die aufgerufen wird, indem Sie die <xref:System.Web.UI.WebControls.FormView> zu erstellende Steuerelement ein <xref:System.Web.UI.PostBackOptions> -Objekt, das Postbackereignisoptionen für das Steuerelement enthält. Die <xref:System.Web.UI.PostBackOptions> Objekt wird normalerweise verwendet, als Parameter für die <xref:System.Web.UI.Page.GetPostBackEventReference%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das im <paramref name="buttonControl" />-Parameter enthaltene Objekt hat den Wert <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />-Eigenschaft von <paramref name="buttonControl" /> ist <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Gibt immer <see langword="HtmlTextWriterTag.Table" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.FormView.TagKey%2A> Eigenschaft ermöglicht den Ausgabestream zum Schreiben des entsprechenden HTML-Markup für die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Sie können diese Eigenschaft, um anzugeben, welcher überschreiben <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wert für das abgeleitete Steuerelement verwenden.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am oberen Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />, der die obere Pagerzeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> -Eigenschaftensatz auf `true`), eine zusätzliche Zeile, die die Pagerzeile aufgerufen wird automatisch angezeigt, der <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile enthält Steuerelemente, die ermöglicht dem Benutzer das Navigieren zu anderen Datensätzen und oben, unten oder sowohl oben als und unteren Rand des Steuerelements angezeigt werden können. Verwenden der <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft den programmgesteuerten Zugriff auf die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt, das die oberste Pagerzeile in die <xref:System.Web.UI.WebControls.FormView> Steuerelement.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft ist erst verfügbar, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt, die oberste Pagerzeile in die <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis.  
  
 Diese Eigenschaft wird häufig verwendet, wenn Sie die oberste Pagerzeile, z. B. beim Hinzufügen von benutzerdefinierten Inhalten programmgesteuert zu bearbeiten müssen. Änderungen an der <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft muss ausgeführt werden, nachdem die <xref:System.Web.UI.WebControls.FormView> Steuerelement wurde an Daten gebunden ist, andernfalls der <xref:System.Web.UI.WebControls.FormView> Steuerelement werden alle Änderungen überschrieben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> -Eigenschaft auf die Pagerzeile angezeigt, die am oberen Rand einer <xref:System.Web.UI.WebControls.FormView> Steuerelement. Die Pagerzeile wird dann mit zusätzlichem Inhalt aktualisiert.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert den Anfangspunkt, an dem begonnen werden soll, Änderungen am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements zu verfolgen und zu speichern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird überschrieben, um den Ausgangspunkt, ab dem nachzuverfolgen und zu speichern von Änderungen an das Steuerelement als Teil der Ansichtszustand des Steuerelements zu kennzeichnen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert den aktuellen Datensatz in der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.FormView> -Steuerelement befindet sich im Bearbeitungsmodus wechseln, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> Methode, um den aktuellen Datensatz in der Datenquelle programmgesteuert aktualisieren. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des aktualisieren müssen die <xref:System.Web.UI.WebControls.FormView> steuern, z. B. ein anderes Steuerelement auf der Seite.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView> -Steuerelement muss in den Bearbeitungsmodus sein, wenn diese Methode aufgerufen, andernfalls wird ein <xref:System.Web.HttpException> ausgelöst wird.  
  
 Um anzugeben, ob die seitenüberprüfung vor dem Updatevorgang ausgeführt wird, verwenden die `causesValidation` Parameter. Aufrufen dieser Methode löst auch der <xref:System.Web.UI.WebControls.FormView.ItemUpdated> und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> Methode, um programmgesteuert aktualisieren Sie den aktuellen Datensatz in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement in der Datenquelle.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Bearbeitungsmodus befindet.  Oder:  Das <see cref="T:System.Web.UI.DataSourceView" />-Objekt, das dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet ist, ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Aktualisierungsvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Updatevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Reihe von Lernprogrammen bei Verwendung von modellbindung für Webformulare, finden Sie unter [wurden die Modellbindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>