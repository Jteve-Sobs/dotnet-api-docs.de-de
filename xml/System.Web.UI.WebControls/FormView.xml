<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="07d59cd2d965f996b7ff1c7532e34702d0d0b31c" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78763590" /></Metadata><TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataItemContainer, IPostBackContainer, IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt die Werte eines einzelnen Datensatzes aus einer Datenquelle mithilfe benutzerdefinierter Vorlagen an. Das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ermöglicht es Ihnen, Datensätze zu bearbeiten, zu löschen und einzufügen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Einführung](#introduction)

-   [Vorlagen](#templates)

-   [Binden an Daten](#binding_to_data)

-   [Datenvorgänge](#data_operations)

-   [Anpassen der Benutzeroberfläche](#customizing_the_user_interface)

-   [Ereignisse](#events)

-   [Barrierefreiheit](#accessibility)

-   [Anwenden von CSS-Stilen](#applying_styles)

-   [Deklarative Syntax](#declarative_syntax)

<a name="introduction"></a>
## <a name="introduction"></a>Einführung
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement wird zum Anzeigen eines einzelnen Datensatzes aus einer Datenquelle verwendet. Sie ähnelt dem <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement, mit dem Unterschied, dass es benutzerdefinierte Vorlagen anstelle von Zeilen Feldern anzeigt. Das Erstellen eigener Vorlagen bietet Ihnen mehr Flexibilität bei der Steuerung der Anzeige der Daten. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement unterstützt die folgenden Funktionen:

-   Binden an Datenquellen Steuerelemente, z. b. <xref:System.Web.UI.WebControls.SqlDataSource> und <xref:System.Web.UI.WebControls.ObjectDataSource>.

-   Integrierte Einfügefunktionen.

-   Integrierte Aktualisierungs-und Löschfunktionen.

-   Integrierte Paging-Funktionen.

-   Programm gesteuerter Zugriff auf das <xref:System.Web.UI.WebControls.FormView> Objektmodell, um Eigenschaften dynamisch festzulegen, Ereignisse zu behandeln usw.

-   Anpassbare Darstellung durch benutzerdefinierte Vorlagen, Designs und Stile.

<a name="templates"></a>
## <a name="templates"></a>Vorlagen
 Damit das <xref:System.Web.UI.WebControls.FormView> Steuerelement Inhalt anzeigen kann, müssen Sie für die verschiedenen Teile des Steuer Elements Vorlagen erstellen. Die meisten Vorlagen sind optional. Sie müssen jedoch eine Vorlage für den Modus erstellen, in dem das Steuerelement konfiguriert ist. Beispielsweise muss ein <xref:System.Web.UI.WebControls.FormView> Steuerelement, das das Einfügen von Datensätzen unterstützt, eine Vorlage zum Einfügen eines Elements definieren. In der folgenden Tabelle werden die verschiedenen Vorlagen aufgelistet, die Sie erstellen können.

|Vorlagentyp|BESCHREIBUNG|
|-------------------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Definiert den Inhalt für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet. Diese Vorlage enthält normalerweise Eingabe Steuerelemente und Befehls Schaltflächen, mit denen der Benutzer einen vorhandenen Datensatz bearbeiten kann.|
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Definiert den Inhalt für die leere Daten Zeile, die angezeigt wird, wenn das <xref:System.Web.UI.WebControls.FormView>-Steuerelement an eine Datenquelle gebunden ist, die keine Datensätze enthält. Diese Vorlage enthält normalerweise Inhalt, um den Benutzer darüber zu benachrichtigen, dass die Datenquelle keine Datensätze enthält.|
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Definiert den Inhalt für die Footerzeile. Diese Vorlage enthält normalerweise alle zusätzlichen Inhalte, die Sie in der Footerzeile anzeigen möchten. **Hinweis:**  Als Alternative können Sie einfach Text angeben, der in der Footerzeile angezeigt werden soll, indem Sie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-Eigenschaft festlegen.|
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Definiert den Inhalt für die Kopfzeile. Diese Vorlage enthält normalerweise alle zusätzlichen Inhalte, die Sie in der Kopfzeile anzeigen möchten. **Hinweis:**  Als Alternative können Sie einfach Text angeben, der in der Kopfzeile angezeigt werden soll, indem Sie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-Eigenschaft festlegen.|
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Definiert den Inhalt für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus befindet. Diese Vorlage enthält normalerweise Inhalt, um die Werte eines vorhandenen Datensatzes anzuzeigen.|
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Definiert den Inhalt für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet. Diese Vorlage enthält normalerweise Eingabe Steuerelemente und Befehls Schaltflächen, mit denen der Benutzer einen neuen Datensatz hinzufügen kann.|
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Definiert den Inhalt für die Pager-Zeile, die angezeigt wird, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`festgelegt ist). Diese Vorlage enthält normalerweise Steuerelemente, mit denen Benutzer zu einem anderen Datensatz navigieren können. **Hinweis:**  Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement verfügt über eine integrierte Pager-Zeilen Benutzeroberfläche (User Interface, UI). Sie müssen eine Pager-Vorlage nur erstellen, wenn Sie eine eigene benutzerdefinierte Pager-Zeile erstellen möchten.|

 Um den Wert eines Felds in einer Element Vorlage anzuzeigen, verwenden Sie einen Daten Bindungs Ausdruck. Weitere Informationen zu Daten Bindungs Ausdrücken finden Sie unter [Syntax des Daten Bindungs Ausdrucks](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).

 Eingabe Steuerelemente in der Vorlage Element Vorlage bearbeiten und Element einfügen können mithilfe eines bidirektionalen Bindungs Ausdrucks an die Felder einer Datenquelle gebunden werden. Dadurch kann das <xref:System.Web.UI.WebControls.FormView> Steuerelement automatisch die Werte des Eingabe Steuer Elements für einen Aktualisierungs-oder Einfügevorgang extrahieren. Bidirektionale Bindungs Ausdrücke ermöglichen auch Eingabe Steuerelementen in einer Edit-Element Vorlage, die ursprünglichen Feldwerte automatisch anzuzeigen. Weitere Informationen zu bidirektionalen Bindungs Ausdrücken finden [Sie unterbinden an Datenbanken](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100)).

<a name="binding_to_data"></a>
## <a name="binding-to-data"></a>Binden an Daten
 Das <xref:System.Web.UI.WebControls.FormView> Steuerelement kann an ein Datenquellen-Steuerelement (z. b. <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>oder <xref:System.Web.UI.WebControls.AccessDataSource>) oder an eine beliebige Datenquellen Auflistung gebunden werden, die die <xref:System.Collections.IEnumerable?displayProperty=nameWithType> Schnittstelle implementiert, z. b. <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>oder andere Auflistungs Typen. Verwenden Sie eine der folgenden Methoden, um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement an den entsprechenden Daten Quellentyp zu binden:

-   Legen Sie zum Binden an ein Datenquellen-Steuerelement die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements auf den <xref:System.Web.UI.Control.ID%2A> Wert des Datenquellen-Steuer Elements fest. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement bindet automatisch an das angegebene Datenquellen-Steuerelement und kann die Funktionen des Datenquellen-Steuer Elements nutzen, um das Einfügen, aktualisieren, löschen und Paging auszuführen. Dies ist die bevorzugte Methode, um Daten zu binden.

-   Um eine Bindung an eine Datenquelle herzustellen, die die <xref:System.Collections.IEnumerable?displayProperty=nameWithType>-Schnittstelle implementiert, legen Sie die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements Programm gesteuert auf die Datenquelle fest, und nennen Sie dann die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>-Methode Wenn diese Methode verwendet wird, bietet das <xref:System.Web.UI.WebControls.FormView>-Steuerelement keine integrierte Funktion zum Einfügen, aktualisieren, löschen und Paging. Sie müssen diese Funktion mithilfe des entsprechenden Ereignisses bereitstellen.

 Weitere Informationen zur Datenbindung finden Sie unter [ASP.NET Data Access Content Map](https://docs.microsoft.com/previous-versions/aspnet/6759sth4(v=vs.100)).

> [!NOTE]
>  Dieses Steuerelement kann zum Anzeigen von Benutzereingaben verwendet werden, die möglicherweise böswillige Client Skripts enthalten. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. Wenn möglich, wird dringend empfohlen, dass die Werte HTML-codiert werden, bevor Sie in diesem Steuerelement angezeigt werden. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Validierungsserver Steuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Einführung in die Validierungs Steuerelemente](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85)).

<a name="data_operations"></a>
## <a name="data-operations"></a>Datenvorgänge
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement stellt viele integrierte Funktionen bereit, die es dem Benutzer ermöglichen, Elemente im Steuerelement zu aktualisieren, zu löschen, einzufügen und zu durchlaufen. Wenn das <xref:System.Web.UI.WebControls.FormView>-Steuerelement an ein Datenquellen Steuerelement gebunden ist, kann das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die Funktionen des Datenquellen-Steuer Elements nutzen und automatische Aktualisierungs-, Lösch-, Einfüge-und Pagingfunktionen bereitstellen.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.FormView> Steuerelement kann Aktualisierungs-, Lösch-, Einfüge-und Pagingvorgänge mit anderen Typen von Datenquellen unterstützen. Sie müssen jedoch einen geeigneten Ereignishandler mit der-Implementierung für diese Vorgänge bereitstellen.

 Da das <xref:System.Web.UI.WebControls.FormView> Steuerelement Vorlagen verwendet, bietet es keine Möglichkeit, automatisch Befehls Schaltflächen zum Ausführen von Aktualisierungs-, Lösch-oder Einfügevorgängen zu generieren. Sie müssen diese Befehls Schaltflächen manuell in die entsprechende Vorlage einschließen. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement erkennt bestimmte Schaltflächen, deren `CommandName` Eigenschaften auf bestimmte Werte festgelegt sind. In der folgenden Tabelle werden die Befehls Schaltflächen aufgelistet, die das <xref:System.Web.UI.WebControls.FormView> Steuerelement erkennt.

|Taste|CommandName-Wert|BESCHREIBUNG|
|------------|-----------------------|-----------------|
|Abbrechen|Jederzeit|Wird beim Aktualisieren oder Einfügen von Vorgängen verwendet, um den Vorgang abzubrechen und die vom Benutzer eingegebenen Werte zu verwerfen. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement wird dann in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft angegebenen Modus zurückgegeben.|
|Löschen|"Löschen"|Wird beim Löschen von Vorgängen verwendet, um den angezeigten Datensatz aus der Datenquelle zu löschen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse aus.|
|Edit (Bearbeiten)|Bearbeiten|Wird in Aktualisierungs Vorgängen verwendet, um das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Bearbeitungsmodus zu versetzen Der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-Eigenschaft angegeben ist, wird für die Daten Zeile angezeigt.|
|Einfügen|Setze|Wird beim Einfügen von Vorgängen verwendet, um mithilfe der vom Benutzer bereitgestellten Werte einen neuen Datensatz in die Datenquelle einzufügen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse aus.|
|Neu|Neubau|Wird beim Einfügen von Vorgängen verwendet, um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus Der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft angegeben ist, wird für die Daten Zeile angezeigt.|
|Seite|S|Wird in Pagingvorgängen verwendet, um eine Schaltfläche in der Pager-Zeile darzustellen, die Paging ausführt. Um den Pagingvorgang anzugeben, legen Sie die `CommandArgument`-Eigenschaft der Schaltfläche auf "Next", "Prev", "First", "Last" oder den Index der Seite fest, zu der navigiert werden soll. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse aus. **Hinweis:**  Diese Art von Schaltfläche wird in der Regel nur in der Pager-Vorlage verwendet.|
|Aktualisieren|Alisierungs|Wird in Aktualisierungs Vorgängen verwendet, um zu versuchen, den angezeigten Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten zu aktualisieren. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse aus.|

 Anders als bei der Schaltfläche "Löschen" (wodurch der angezeigte Datensatz sofort gelöscht wird), wechselt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement in den Bearbeitungs-oder Einfügemodus. Im Bearbeitungsmodus wird der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-Eigenschaft enthalten ist, für das aktuelle Datenelement angezeigt. In der Regel wird die Vorlage Element bearbeiten so definiert, dass die Schaltfläche Bearbeiten durch ein Update und eine Schaltfläche Abbrechen ersetzt wird. Eingabe Steuerelemente, die für den Datentyp des Felds geeignet sind (z. b. ein <xref:System.Web.UI.WebControls.TextBox> oder ein <xref:System.Web.UI.WebControls.CheckBox> Steuerelement), werden in der Regel auch mit dem Wert eines Felds angezeigt, der vom Benutzer geändert werden muss. Wenn Sie auf die Schaltfläche Aktualisieren klicken, wird der Datensatz in der Datenquelle aktualisiert. Wenn Sie auf die Schaltfläche Abbrechen klicken, werden alle Änderungen

 Ebenso wird der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft enthalten ist, für das Datenelement angezeigt, wenn sich das Steuerelement im Einfügemodus befindet. Die Element Vorlage "Einfügen" wird in der Regel so definiert, dass die Schaltfläche "neu" durch eine Einfügung und eine Schaltfläche "Abbrechen" ersetzt wird. für den Benutzer werden leere Eingabe Steuerelemente angezeigt, um die Werte für den neuen Datensatz einzugeben Durch Klicken auf die Schaltfläche Einfügen wird der Datensatz in die Datenquelle eingefügt, während durch Klicken auf die Schaltfläche Abbrechen alle Änderungen abgebrochen werden.

 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement bietet ein Pagingfeature, das es dem Benutzer ermöglicht, zu anderen Datensätzen in der Datenquelle zu navigieren. Wenn diese Option aktiviert ist, wird eine Pager-Zeile im <xref:System.Web.UI.WebControls.FormView> Steuerelement angezeigt, das die Steuerelemente für die Seitennavigation enthält. Um das Paging zu aktivieren, legen Sie die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`fest. Sie können die Pager-Zeile anpassen, indem Sie die Eigenschaften der Objekte festlegen, die im <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> und in der <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>-Eigenschaft enthalten sind. Anstatt die integrierte Pager-Zeilen Schnittstelle zu verwenden, können Sie eine eigene Benutzeroberfläche erstellen, indem Sie die <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>-Eigenschaft verwenden.

<a name="customizing_the_user_interface"></a>
## <a name="customizing-the-user-interface"></a>Anpassen der Benutzeroberfläche
 Sie können die Darstellung des <xref:System.Web.UI.WebControls.FormView> Steuer Elements anpassen, indem Sie die Stileigenschaften für die verschiedenen Teile des Steuer Elements festlegen. In der folgenden Tabelle werden die verschiedenen Stileigenschaften aufgelistet.

|Style-Eigenschaft|BESCHREIBUNG|
|--------------------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Die Stileinstellungen für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet.|
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Die Stileinstellungen für die leere Daten Zeile, die im <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt wird, wenn die Datenquelle keine Datensätze enthält.|
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Die Stileinstellungen für die Fußzeile des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.|
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Die Stileinstellungen für die Kopfzeile des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.|
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Die Stileinstellungen für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet.|
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Die Stileinstellungen für die Pager-Zeile, die im <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt wird, wenn das Pagingfeature aktiviert ist.|
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Die Stileinstellungen für die Daten Zeile, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus befindet.|

<a name="events"></a>
## <a name="events"></a>Events
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement stellt mehrere Ereignisse bereit, mit denen Sie programmieren können. Dies ermöglicht es Ihnen, eine benutzerdefinierte Routine immer dann auszuführen, wenn ein Ereignis auftritt. In der folgenden Tabelle sind die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement unterstützten Ereignisse aufgeführt.

|Ereignis|BESCHREIBUNG|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Tritt auf, wenn innerhalb eines <xref:System.Web.UI.WebControls.FormView>-Steuerelements auf eine Schaltfläche geklickt wird. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn im Steuerelement auf eine Schaltfläche geklickt wird.|
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Tritt ein, nachdem alle <xref:System.Web.UI.WebControls.FormViewRow>-Objekte im <xref:System.Web.UI.WebControls.FormView> Steuerelement erstellt wurden. Dieses Ereignis wird häufig verwendet, um die Werte eines Datensatzes zu ändern, bevor er angezeigt wird.|
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Tritt auf, wenn auf eine Lösch Schaltfläche (eine Schaltfläche mit der `CommandName`-Eigenschaft auf "Delete" festgelegt ist) geklickt wird, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Datensatz aus der Datenquelle gelöscht hat. Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Löschvorgangs zu überprüfen.|
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Tritt auf, wenn auf eine Lösch Schaltfläche geklickt wird, aber bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Datensatz aus der Datenquelle löscht. Dieses Ereignis wird häufig verwendet, um den Löschvorgang abzubrechen.|
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Tritt auf, wenn auf eine einfügeschaltfläche (eine Schaltfläche mit der `CommandName`-Eigenschaft, auf die "Insert" festgelegt ist) geklickt wird, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Einfügevorgangs zu überprüfen.|
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Tritt auf, wenn auf eine Schaltfläche Einfügen geklickt wird, aber bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz einfügt. Dieses Ereignis wird häufig verwendet, um den Einfügevorgang abzubrechen.|
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Tritt auf, wenn auf eine Aktualisierungs Schaltfläche (eine Schaltfläche mit der `CommandName`-Eigenschaft, die auf "Update" festgelegt ist) geklickt wird, nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement die Zeile Dieses Ereignis wird häufig verwendet, um die Ergebnisse des Aktualisierungs Vorgangs zu überprüfen.|
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Tritt auf, wenn auf eine Aktualisierungs Schaltfläche geklickt wird, jedoch bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz aktualisiert. Dieses Ereignis wird häufig verwendet, um den Aktualisierungs Vorgang abzubrechen.|
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt auf, nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Modus geändert hat (zum Bearbeiten, einfügen oder schreibgeschützten Modus). Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn sich das <xref:System.Web.UI.WebControls.FormView> Steuerelement ändert.|
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt ein, bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Modus ändert (in den Bearbeitungs-, Einfügungs-oder schreibgeschützten Modus). Dieses Ereignis wird häufig verwendet, um eine Modusänderung abzubrechen.|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn Sie eine Aufgabe ausführen müssen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert ist.|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|

<a name="accessibility"></a>
## <a name="accessibility"></a>Barrierefreiheit
 Weitere Informationen zur Verwendung dieses Steuerelement so konfigurieren, dass sie Markup generiert, das Accessibility Standards entspricht, finden Sie unter [Barrierefreiheit in Visual Studio und ASP.NET](https://docs.microsoft.com/previous-versions/ms228004(v=vs.140)) und [ASP.NET-Steuerelemente und Barrierefreiheit](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140)).

<a name="applying_styles"></a>
## <a name="applying-css-styles"></a>Anwenden von CSS-Stilen
 Mit dem <xref:System.Web.UI.WebControls.FormView>-Steuerelement können Sie CSS-Stilregeln im Markup angeben. Wenn Sie Vorlagen verwenden, um die Darstellung des <xref:System.Web.UI.WebControls.FormView> Steuer Elements anzupassen, können Sie CSS-Stile im Markup in den Vorlagen angeben. In diesem Fall ist keine zusätzliche äußere Tabelle erforderlich. Sie können verhindern, dass die Tabelle gerendert wird, indem Sie die <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>-Eigenschaft auf `false`festlegen.

<a name="declarative_syntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:FormView
    AccessKey="string"
    AllowPaging="True|False"
    BackColor="color name|#dddddd"
    BackImageUrl="uri"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    Caption="string"
    CaptionAlign="NotSet|Top|Bottom|Left|Right"
    CellPadding="integer"
    CellSpacing="integer"
    CssClass="string"
    DataKeyNames="string"
    DataMember="string"
    DataSource="string"
    DataSourceID="string"
    DefaultMode="ReadOnly|Edit|Insert"
    EmptyDataText="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    FooterText="string"
    ForeColor="color name|#dddddd"
    GridLines="None|Horizontal|Vertical|Both"
    HeaderText="string"
    Height="size"
    HorizontalAlign="NotSet|Left|Center|Right|Justify"
    ID="string"
    OnDataBinding="DataBinding event handler"
    OnDataBound="DataBound event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnItemCommand="ItemCommand event handler"
    OnItemCreated="ItemCreated event handler"
    OnItemDeleted="ItemDeleted event handler"
    OnItemDeleting="ItemDeleting event handler"
    OnItemInserted="ItemInserted event handler"
    OnItemInserting="ItemInserting event handler"
    OnItemUpdated="ItemUpdated event handler"
    OnItemUpdating="ItemUpdating event handler"
    OnLoad="Load event handler"
    OnModeChanged="ModeChanged event handler"
    OnModeChanging="ModeChanging event handler"
    OnPageIndexChanged="PageIndexChanged event handler"
    OnPageIndexChanging="PageIndexChanging event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PageIndex="integer"
    PagerSettings-FirstPageImageUrl="uri"
    PagerSettings-FirstPageText="string"
    PagerSettings-LastPageImageUrl="uri"
    PagerSettings-LastPageText="string"
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|
        NumericFirstLast"
    PagerSettings-NextPageImageUrl="uri"
    PagerSettings-NextPageText="string"
    PagerSettings-PageButtonCount="integer"
    PagerSettings-Position="Bottom|Top|TopAndBottom"
    PagerSettings-PreviousPageImageUrl="uri"
    PagerSettings-PreviousPageText="string"
    PagerSettings-Visible="True|False"
    RenderOuterTable="True|False"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    ToolTip="string"
    Visible="True|False"
    Width="size"
>
        <EditItemTemplate>
            <!-- child controls -->
        </EditItemTemplate>
        <EditRowStyle />
        <EmptyDataRowStyle />
        <EmptyDataTemplate>
            <!-- child controls -->
        </EmptyDataTemplate>
        <FooterStyle />
        <FooterTemplate>
            <!-- child controls -->
        </FooterTemplate>
        <HeaderStyle />
        <HeaderTemplate>
            <!-- child controls -->
        </HeaderTemplate>
        <InsertItemTemplate>
            <!-- child controls -->
        </InsertItemTemplate>
        <InsertRowStyle />
        <ItemTemplate>
            <!-- child controls -->
        </ItemTemplate>
        <PagerSettings
            FirstPageImageUrl="uri"
            FirstPageText="string"
            LastPageImageUrl="uri"
            LastPageText="string"
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|
                NumericFirstLast"
            NextPageImageUrl="uri"
            NextPageText="string"
            OnPropertyChanged="PropertyChanged event handler"
            PageButtonCount="integer"
            Position="Bottom|Top|TopAndBottom"
            PreviousPageImageUrl="uri"
            PreviousPageText="string"
            Visible="True|False"
        />
        <PagerStyle />
        <PagerTemplate>
            <!-- child controls -->
        </PagerTemplate>
        <RowStyle />
</asp:FormView>
```



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement verwendet wird, um die Werte aus einem <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement anzuzeigen.

 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]

 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement verwendet wird, um vorhandene Datensätze zu bearbeiten.

> [!IMPORTANT]
>  Das-Steuerelement in diesem Beispiel verfügt über ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]

 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement zum Einfügen neuer Datensätze verwendet wird.

> [!IMPORTANT]
>  Das-Steuerelement in diesem Beispiel verfügt über ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.FormView>-Klasse zu initialisieren. Um einer Seite dynamisch ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement hinzuzufügen, erstellen Sie ein neues <xref:System.Web.UI.WebControls.FormView> Objekt, legen Sie dessen Eigenschaften fest, und fügen Sie es dann der <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>-Auflistung eines Container Steuer Elements hinzu, z. b. <xref:System.Web.UI.WebControls.PlaceHolder>.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement dynamisch zu einer Seite hinzugefügt wird.

 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Pagingfeature aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, um das Pagingfeature zu aktivieren, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement verfügt über integrierte Paging-Funktionen, die es einem Benutzer ermöglichen, zu einem anderen Datensatz in der Datenquelle zu navigieren. Das Pagingfeature kann mit allen Datenquellen Objekten verwendet werden, die die <xref:System.Collections.ICollection?displayProperty=nameWithType>-Schnittstelle oder eine Datenquelle unterstützen, die die Paginierung unterstützt.

 Um das Pagingfeature zu aktivieren, legen Sie die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`fest. Sie können die Gesamtzahl der Elemente in der zugrunde liegenden Datenquelle mithilfe der <xref:System.Web.UI.WebControls.FormView.PageCount%2A>-Eigenschaft bestimmen. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft, um den Index des derzeit angezeigten Elements zu bestimmen.

 Wenn Paging aktiviert ist, wird automatisch eine zusätzliche Zeile mit dem Namen Pager-Zeile im <xref:System.Web.UI.WebControls.FormView> Steuerelement angezeigt. Die Pager-Zeile enthält die Steuerelemente für die Seitennavigation und kann am oberen, unteren oder oberen und unteren Rand des Steuer Elements angezeigt werden. Die Pager-Zeile verfügt über vier integrierte Pager-Anzeigemodi. In der folgenden Tabelle werden die vier Modi beschrieben.

|Mode|BESCHREIBUNG|
|----------|-----------------|
|`PagerButton.NextPrevious`|Ein Satz von Paginierungs Steuerelementen, die aus den Schaltflächen zurück und weiter bestehen.|
|`PagerButton.NextPreviousFirstLast`|Ein Satz von Paginierungs Steuerelementen, die aus den Schaltflächen Previous, Next, First und Last bestehen.|
|`PagerButton.Numeric`|Eine aus nummerierten Linkschaltflächen für den direkten Zugriff auf Seiten bestehende Gruppe von Paginierungssteuerelementen. Dies ist der Standardmodus.|
|`PagerButton.NumericFirstLast`|Ein Satz von Paginierungs Steuerelementen, der aus nummerierten und ersten und letzten Link Schaltflächen besteht.|

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement blendet die Pager-Zeile automatisch aus, wenn die Datenquelle weniger als zwei Datensätze enthält.

 Sie können die Einstellungen der Pager-Zeile Steuern (z. b. den Anzeigemodus Pager, die Anzahl der Seiten Verknüpfungen, die gleichzeitig angezeigt werden sollen, und die Text Bezeichnung des Pager-Steuer Elements), indem Sie die <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>-Eigenschaft verwenden. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>-Eigenschaft, um die Darstellung der Pager-Zeile (einschließlich Hintergrundfarbe und Schriftfarbe) zu steuern. Mit dem <xref:System.Web.UI.WebControls.FormView>-Steuerelement können Sie auch eine benutzerdefinierte Vorlage für die Pager-Zeile definieren. Weitere Informationen zum Erstellen einer benutzerdefinierten Pager-Zeilen Vorlage finden Sie unter <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.

 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement stellt mehrere Ereignisse bereit, die Sie verwenden können, um eine benutzerdefinierte Aktion auszuführen, wenn das Paging erfolgt. In der folgenden Tabelle sind die verfügbaren Ereignisse aufgeführt.

|Ereignis|BESCHREIBUNG|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt hat. Dieses Ereignis wird häufig verwendet, wenn Sie eine Aufgabe ausführen müssen, nachdem der Benutzer zu einem anderen Datensatz im Steuerelement navigiert ist.|
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Tritt ein, wenn auf eine der Pagerschaltflächen geklickt wird, allerdings bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Pagingvorgang behandelt. Dieses Ereignis wird häufig verwendet, um den Pagingvorgang abzubrechen.|

> [!NOTE]
>  Diese Ereignisse werden nicht ausgelöst, wenn Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft Programm gesteuert ändern.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft verwendet wird, um das Pagingfeature in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu aktivieren.

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL eines Bildes ab, das im Hintergrund eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Die URL eines Bildes, das im Hintergrund des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>-Eigenschaft, um die URL zu einem Bild anzugeben, das im Hintergrund eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements angezeigt werden soll.

> [!NOTE]
>  Wenn das angegebene Bild kleiner als das <xref:System.Web.UI.WebControls.FormView> Steuerelement ist, wird das Bild gekachelt, um in den Hintergrund zu füllen. Wenn das Bild größer als das-Steuerelement ist, wird das Bild abgeschnitten.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>-Eigenschaft verwendet wird, um ein benutzerdefiniertes Bild im Hintergrund eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements anzuzeigen.

 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am unteren Rand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die am unteren Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`) festgelegt ist, wird automatisch eine zusätzliche Zeile mit der Bezeichnung Pager im <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt. Die Pager-Zeile enthält Steuerelemente, die es dem Benutzer ermöglichen, zu anderen Datensätzen zu navigieren, und er kann am oberen Rand, am unteren Rand oder am oberen und unteren Rand des Steuer Elements angezeigt werden. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>-Eigenschaft, um Programm gesteuert auf das <xref:System.Web.UI.WebControls.FormViewRow> Objekt zuzugreifen, das die untere Pager-Zeile im <xref:System.Web.UI.WebControls.FormView>-Steuerelement darstellt.

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>-Eigenschaft ist nur verfügbar, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die untere Pager-Zeile im <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis erstellt hat.

 Diese Eigenschaft wird häufig verwendet, wenn Sie die untere Pager-Zeile Programm gesteuert bearbeiten müssen, z. b. beim Hinzufügen von benutzerdefiniertem Inhalt. Alle Änderungen an der <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>-Eigenschaft müssen ausgeführt werden, nachdem das <xref:System.Web.UI.WebControls.FormViewRow>-Objekt erstellt wurde, das die untere Pager-Zeile darstellt. Andernfalls überschreibt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement alle Änderungen.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>-Eigenschaft verwenden, um auf die Pager-Zeile zuzugreifen, die am unteren Rand eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements angezeigt wird. Die Pager-Zeile wird dann mit zusätzlichem Inhalt aktualisiert.

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll, oder legt diesen Text fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Eine Zeichenfolge, die den Text darstellt, der in einem HTML-Beschriftungselement eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements gerendert werden soll. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.Caption%2A>-Eigenschaft, um den Text anzugeben, der in einem HTML-Beschriftungs Element in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement dargestellt werden soll Der von Ihnen angegebene Text bietet Hilfstechnologiegeräte mit einer Beschreibung der Tabelle, die verwendet werden kann, um das Steuerelement leichter zugänglich zu machen.

 Zusätzliche Barrierefreiheits Unterstützung für das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird von der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>-Eigenschaft bereitgestellt. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>-Eigenschaft, um die Ausrichtung des HTML-Beschriftungs Elements in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement anzugeben.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Caption%2A>-Eigenschaft verwendet wird, um den Text für das in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement gerenderte HTML-Beschriftungs Element anzugeben

 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale oder vertikale Position des HTML-Beschriftungselements in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt sie fest. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Werte. Der Standardwert lautet <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>-Eigenschaft, um die horizontale oder vertikale Position des HTML-Beschriftungs Elements in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement anzugeben. Diese Eigenschaft wird bereitgestellt, um Benutzern von Hilfsgeräten die Verwendung des Steuerelements zu erleichtern.

 Diese Eigenschaft wird mit einem der <xref:System.Web.UI.WebControls.TableCaptionAlign> Enumerationswerte festgelegt. In der folgenden Tabelle sind die möglichen Werte aufgeführt.

|value|BESCHREIBUNG|
|-----------|-----------------|
|`TableCaptionAlign.Bottom`|Das Beschriftungselement wird am unteren Tabellenrand ausgerichtet.|
|`TableCaptionAlign.Left`|Das Beschriftungselement wird an der linken Seite der Tabelle ausgerichtet.|
|`TableCaptionAlign.NotSet`|Die Ausrichtung des Caption-Elements ist nicht festgelegt.|
|`TableCaptionAlign.Right`|Das Beschriftungselement wird an der rechten Seite der Tabelle ausgerichtet.|
|`TableCaptionAlign.Top`|Das Beschriftungselement wird am oberen Tabellenrand ausgerichtet.|

> [!NOTE]
>  Wenn diese Eigenschaft auf `TableCaptionAlign.NotSet`festgelegt ist, wird der Standardwert des Browsers verwendet.

 Zusätzliche Barrierefreiheits Unterstützung für das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird von der <xref:System.Web.UI.WebControls.FormView.Caption%2A>-Eigenschaft bereitgestellt. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.Caption%2A>-Eigenschaft, um den Text anzugeben, der in einem HTML-Beschriftungs Element in einem <xref:System.Web.UI.WebControls.FormView> Steuerelement dargestellt werden soll



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>-Eigenschaft angegeben wird, dass das HTML-Beschriftungs Element in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement auf der linken Seite des-Steuer Elements gerendert werden soll.

 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen dem Inhalt einer Zelle und ihrem Rahmen ab oder legt diesen fest.</summary>
        <value>Der Abstand in Pixel zwischen Inhalt und Rahmen einer Zelle. Der Standardwert ist -1 und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>-Eigenschaft, um den Abstand zwischen dem Inhalt einer Zelle und dem Rahmen der Zelle zu steuern. Der angegebene Auffüll Betrag wird allen vier Seiten der Zelle hinzugefügt.

 Alle Zellen in derselben Spalte eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements haben dieselbe Breite. Der Abstand wird auf die breiteste Zelle angewendet, und alle anderen Zellen in der Spalte werden an diese Zellen Breite angepasst. Ebenso haben alle Zellen in derselben Zeile die gleiche Höhe. Der Abstand wird auf die höchste Zelle in der Zeile angewendet, und alle anderen Zellen in der Zeile werden an diese Zellhöhe angepasst. Größen der einzelnen Zelle können nicht angegeben werden.

 Um den Abstand zwischen den Zellen anzupassen, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>-Eigenschaft.

> [!NOTE]
>  Wenn diese Eigenschaft nicht festgelegt ist, wird der Standardwert des Browsers verwendet.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>-Eigenschaft verwendet wird, um den Abstand zwischen dem Inhalt einer Zelle und dem Rahmen der Zelle anzugeben.

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Abstand zwischen den Zellen ab oder legt diesen fest.</summary>
        <value>Der Abstand zwischen den Zellen in Pixel. Der Standardwert ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>-Eigenschaft, um den Abstand zwischen angrenzenden Zellen im <xref:System.Web.UI.WebControls.FormView> Steuerelement zu steuern. Dieser Abstand wird vertikal und horizontal angewendet. Der Zellen Abstand ist für das gesamte Steuerelement einheitlich. Einzelner Zellen Abstand zwischen Zeilen oder Spalten kann nicht angegeben werden.

> [!NOTE]
>  Wenn Sie diese Eigenschaft auf einen Wert größer als 0 festlegen und dann die <xref:System.Web.UI.WebControls.FormView.GridLines%2A>-Eigenschaft auf einen Wert festlegen, der den Zell Rahmen anzeigt, wird zwischen den Rändern der angrenzenden Zellen eine Lücke angezeigt. In dieser Situation steuert die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>-Eigenschaft die Größe der Lücke.

 Um den Abstand zwischen dem Inhalt einer Zelle und dem Rahmen der Zelle anzupassen, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>-Eigenschaft.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>-Eigenschaft verwendet wird, um den Abstand zwischen angrenzenden Zellen anzugeben.

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</param>
        <summary>Schaltet das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement in den angegebenen Dateneingabemodus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>-Methode, um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement zwischen dem Bearbeitungs-, Einfüge-und schreibgeschützten Modus Programm gesteuert zu wechseln. Diese Methode aktualisiert auch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft mit dem angegebenen Modus. In der folgenden Tabelle werden die verschiedenen Moduswerte aufgelistet.

|Mode|BESCHREIBUNG|
|----------|-----------------|
|`FormViewMode.Edit`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus, sodass der Benutzer die Werte eines Datensatzes aktualisieren kann.|
|`FormViewMode.Insert`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, mit dem der Benutzer der Datenquelle einen neuen Datensatz hinzufügen kann.|
|`FormView.ReadOnly`|Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement befindet sich im schreibgeschützten Modus, der der normale Anzeigemodus ist.|

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.ModeChanged>-und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse werden nicht ausgelöst, wenn diese Methode aufgerufen wird.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>-Methode verwenden, um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement immer dann an den schreibgeschützten Modus zurückzugeben, wenn der Benutzer zu einem anderen Datensatz navigiert

 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt, die zum Erstellen der Steuerelementhierarchie verwendet wird.</param>
        <param name="dataBinding"><see langword="true" /> zeigt an, dass die Steuerelementhierarchie direkt aus der Datenquelle erstellt wird; <see langword="false" /> zeigt an, dass die Steuerelementhierarchie aus dem Ansichtszustand erstellt wird.</param>
        <summary>Erstellt die Steuerelementhierarchie, mit der das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement unter Verwendung der angegebenen Datenquelle gerendert wird.</summary>
        <returns>Die Anzahl der unter Verwendung der Datenquelle erstellten Elemente.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView> Steuerelement aufgerufen wird, um die Steuerelement Hierarchie für das <xref:System.Web.UI.WebControls.FormView> Steuerelement zu erstellen Wenn der `dataBinding`-Parameter `true`ist, wird die Datenbindung vor der Erstellung der Steuerelement Hierarchie ausgeführt.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der Wert der <see cref="T:System.Web.UI.DataSourceView" /> der <see cref="T:System.Web.UI.IDataSource" />, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden ist, beträgt <see langword="null" />.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine eigene Steuerelement Hierarchie zu erstellen.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein standardmäßiges Tabellenformatobjekt für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Style" />-Klasse, die das Standardtabellenformat für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um das standardmäßige Tabellen Stil Objekt zu erstellen. Zusätzlich zum Festlegen des Standard Stils eines <xref:System.Web.UI.WebControls.TableStyle> Objekts legt diese Methode auch die <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>-Eigenschaft auf 0 fest.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um Ihr eigenes Standardformat zu erstellen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt das <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt mit den Argumenten, die zur Verarbeitung an die Datenquelle übergeben werden.</summary>
        <returns>Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />, das die Argumente enthält, die an die Datenquelle übergeben werden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView> Steuerelement aufgerufen wird, um das <xref:System.Web.UI.DataSourceSelectArguments>-Objekt zu erstellen, das die an die Datenquelle über gebenden Argumente enthält. In dieser Implementierung enthält das <xref:System.Web.UI.DataSourceSelectArguments>-Objekt die Argumente für Pagingvorgänge.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um Ihre eigenen Werte anzugeben, die an die Datenquelle übermittelt werden.</para></block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Der nullbasierte Index des anzuzeigenden Datenelements.</param>
        <param name="rowType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowType" />-Enumerationswerte.</param>
        <param name="rowState">Eine bitweise Kombination der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Enumerationswerte.</param>
        <summary>Erstellt ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</summary>
        <returns>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" /> mit dem angegebenen Elementindex, Zeilentyp und Zeilenzustand.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.CreateRow%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um ein <xref:System.Web.UI.WebControls.FormViewRow>-Objekt zu erstellen, mit dem eine Zeile im Steuerelement dargestellt wird

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um ein <see cref="T:System.Web.UI.WebControls.FormViewRow" /> Objekt mit benutzerdefinierten Einstellungen zurückzugeben.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.Table" />, die die enthaltende Tabelle für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.CreateTable%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um eine Tabelle zu erstellen, die als Container für das Steuerelement fungiert.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Dateneingabemodus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft, um zu bestimmen, ob sich das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungs-, Einfüge-oder schreibgeschützten Modus befindet. In der folgenden Tabelle werden die verschiedenen Moduswerte aufgelistet.

|Mode|BESCHREIBUNG|
|----------|-----------------|
|`FormViewMode.Edit`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus, sodass der Benutzer die Werte eines Datensatzes aktualisieren kann.|
|`FormViewMode.Insert`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, mit dem der Benutzer der Datenquelle einen neuen Datensatz hinzufügen kann.|
|`FormView.ReadOnly`|Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement befindet sich im schreibgeschützten Modus, der der normale Anzeigemodus ist.|

 Dieser Wert wird normalerweise automatisch vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement festgelegt, wenn auf die Schaltfläche neu, aktualisieren, einfügen, löschen oder Abbrechen geklickt wird. Wenn das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die Modi als Reaktion auf eine Aktion ändert, werden die Ereignisse in der folgenden Tabelle ausgelöst. Dies ermöglicht es Ihnen, einen benutzerdefinierten Ereignishandler zu erstellen, der die geeignete Routine ausführt, wenn das Ereignis eintritt.

|Ereignis|BESCHREIBUNG|
|-----------|-----------------|
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Tritt auf, wenn das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Modus ändert, aber nachdem der Modus geändert wurde. Dieses Ereignis wird häufig verwendet, um eine Aufgabe auszuführen, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Modus ändert.|
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Tritt auf, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Modus ändert, aber bevor der Modus geändert wird. Dieses Ereignis wird häufig verwendet, um die Modusänderung abzubrechen.|

 **Hinweis** Diese Ereignisse werden nicht ausgelöst, wenn Sie den Modus mithilfe der <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>-Methode Programm gesteuert ändern.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft verwendet wird, um zu bestimmen, ob sich das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungs-, Einfügungs-oder schreibgeschützten Modus befindet. Wenn der Benutzer versucht, zu einem anderen Datensatz zu navigieren, während sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement in Bearbeitung mehr befindet, wird der Pagingvorgang abgebrochen.

 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bindet die Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataBind>-Methode, um Daten aus einer Datenquelle an das <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu binden. Diese Methode löst alle Daten Bindungs Ausdrücke in der aktiven Vorlage des-Steuer Elements auf.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement ab.</summary>
        <value>Ein <see cref="T:System.Object" />, das das an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataItem%2A>-Eigenschaft, um auf das an das <xref:System.Web.UI.WebControls.FormView> Steuerelement gebundene Datenelement zuzugreifen. Das Datenelement wird häufig verwendet, um direkt auf die Feldwerte des aktuellen Datensatzes zuzugreifen. Der Typ der <xref:System.Object>, die von dieser Eigenschaft zurückgegeben wird, variiert abhängig von der Datenquelle. Wenn z. b. ein <xref:System.Web.UI.WebControls.SqlDataSource>-Steuerelement an das <xref:System.Web.UI.WebControls.FormView> Steuerelement gebunden ist, wird ein <xref:System.Data.DataRowView>-Objekt zurückgegeben.

> [!NOTE]
>  Diese Eigenschaft ist nur verfügbar, nachdem die Datenbindung stattgefunden hat. Bevor die Datenbindung erfolgt, gibt diese Eigenschaft `null`zurück. Diese Eigenschaft ist auch nicht anwendbar, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet und `null`zurückgibt.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataItem%2A>-Eigenschaft verwendet wird, um den Wert eines Felds im Datenelement zu bestimmen.

 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Datenelemente in der Datenquelle ab.</summary>
        <value>Die Anzahl der Datenelemente in der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A>-Eigenschaft, um die Anzahl der Datenelemente zu ermitteln, die in der Datenquelle enthalten sind. Diese Eigenschaft enthält denselben Wert wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A>-Eigenschaft.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle ab.</summary>
        <value>Der Index des an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundenen Datenelements aus der Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A>-Eigenschaft, um den Index des an das <xref:System.Web.UI.WebControls.FormView>-Steuerelement gebundenen Datenelements aus der Datenquelle zu ermitteln. Diese Eigenschaft enthält denselben Wert wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft.

> [!NOTE]
>  Diese Eigenschaft ist nicht anwendbar, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet. Wenn sich das Steuerelement im Einfügemodus befindet, gibt die <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A>-Eigenschaft-1 zurück.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt ab, das den Primärschlüssel des angezeigten Datensatzes darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.DataKey" />-Objekt, das den Primärschlüssel des angezeigten Datensatzes darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft festgelegt ist, erstellt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement automatisch ein <xref:System.Web.UI.WebControls.DataKey>-Objekt, das die Schlüssel-Wert-Paare der Felder enthält, die in der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft des aktuellen Datensatzes aufgeführt sind. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataKey%2A>-Eigenschaft, um dieses <xref:System.Web.UI.WebControls.DataKey> Objekt zu erhalten. Diese Eigenschaft wird häufig zum Abrufen der Schlüssel und der entsprechenden Werte für die Felder verwendet, die in der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft angegeben sind.

> [!NOTE]
>  Als Verknüpfung können Sie auch die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>-Eigenschaft verwenden, um den Wert des ersten Schlüssel Felds zu ermitteln, das in der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft aufgeführt ist.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKey%2A>-Eigenschaft verwendet wird, um den Wert des Schlüssel Felds zu bestimmen.

 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der Schlüsselfelder für die Datenquelle enthält.</summary>
        <value>Ein Array, das die Namen der Schlüsselfelder für die Datenquelle enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft, um eine durch Trennzeichen getrennte Liste von Feldnamen anzugeben, die den Primärschlüssel der Datenquelle darstellen. Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft festgelegt ist, erstellt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement automatisch ein <xref:System.Web.UI.WebControls.DataKey>-Objekt, das die Schlüssel-Wert-Paare der Felder enthält, die in der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft des aktuellen Datensatzes aufgeführt sind. Das <xref:System.Web.UI.WebControls.DataKey>-Objekt wird dann in der <xref:System.Web.UI.WebControls.FormView.DataKey%2A>-Eigenschaft gespeichert.

> [!NOTE]
>  Sie müssen die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft für die integrierten Aktualisierungs-, Lösch-und Einfügefunktionen des <xref:System.Web.UI.WebControls.FormView> Steuer Elements festlegen, damit es funktioniert.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft verwendet wird, um das Schlüsselfeld für die Datenquelle anzugeben, die an das <xref:System.Web.UI.WebControls.FormView>-Steuerelement gebunden ist.

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Dateneingabemodus ab, in den das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nach einem Aktualisierungs-, Einfüge- oder Abbruchvorgang zurückkehrt, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Werte. Der Standardwert lautet <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft, um anzugeben, ob das <xref:System.Web.UI.WebControls.FormView> Steuerelement nach einem Aktualisierungs-, Einfüge-oder Abbruch Vorgang in den Bearbeitungs-, Einfügungs-oder schreibgeschützten Modus zurückkehrt. Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den schreibgeschützten Modus zurückgegeben. Allerdings können Sie das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungs-oder Einfügemodus belassen, indem Sie diese Eigenschaft auf den entsprechenden Wert festlegen. In der folgenden Tabelle werden die verschiedenen Moduswerte aufgelistet.

|Mode|BESCHREIBUNG|
|----------|-----------------|
|`FormViewMode.Edit`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Bearbeitungsmodus, sodass der Benutzer die Werte eines Datensatzes aktualisieren kann.|
|`FormViewMode.Insert`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement befindet sich im Einfügemodus, mit dem der Benutzer der Datenquelle einen neuen Datensatz hinzufügen kann.|
|`FormViewMode.ReadOnly`|Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement befindet sich im schreibgeschützten Modus, der der normale Anzeigemodus ist.|

 Diese Eigenschaft wird häufig verwendet, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement einen einzigen Zweck hat, z. b. nur zum Einfügen oder Bearbeiten von Datensätzen.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft verwendet wird, um ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement nach einem Aktualisierungs Vorgang im Bearbeitungsmodus beizubehalten.

 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Wert ist keiner der <see cref="T:System.Web.UI.WebControls.FormViewMode" />-Enumerationswerte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den aktuellen Datensatz im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A>-Methode, um den aktuellen Datensatz im <xref:System.Web.UI.WebControls.FormView>-Steuerelement Programm gesteuert aus der Datenquelle zu löschen. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des <xref:System.Web.UI.WebControls.FormView> Steuer Elements löschen müssen, z. b. von einem anderen Steuerelement auf der Seite. Durch den Aufruf dieser Methode werden auch die <xref:System.Web.UI.WebControls.FormView.ItemDeleted>-und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse ausgelöst.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A>-Methode verwendet wird, um den aktuellen Datensatz in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement aus der Datenquelle Programm gesteuert zu löschen.

 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Löschvorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine tutorialreihe zur Verwendung der Modell Bindung mit Web Forms finden Sie unter [Modell Bindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Bearbeitungsmodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Bearbeitungsmodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement rendert eine andere Vorlage für die Daten Zeile basierend auf dem aktuellen Modus des-Steuer Elements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft). In der folgenden Tabelle wird gezeigt, welche Vorlage für die einzelnen Modi verwendet wird.

|Mode|Vorlage gerendert|
|----------|-----------------------|
|Edit (Bearbeiten)|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|Einfügen|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-Eigenschaft, um eine eigene Benutzeroberfläche (UI) für die Daten Zeile zu definieren, wenn sich das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befindet. Die Vorlage Element bearbeiten enthält in der Regel die Eingabe Steuerelemente für den Benutzer, um die Werte eines vorhandenen Datensatzes zu aktualisieren, sowie die Befehls Schaltflächen, um den Datensatz zu aktualisieren und den Aktualisierungs Vorgang abzubrechen.

 Um die benutzerdefinierte Vorlage anzugeben, platzieren Sie zunächst `<EditItemTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<EditItemTemplate>` Tags auflisten. Wenn Sie einen bidirektionalen Bindungs Ausdruck verwenden, können Sie ein Feld einem Eingabe Steuerelement zuordnen. Dadurch kann das <xref:System.Web.UI.WebControls.FormView> Steuerelement den ursprünglichen Feldwert im zugeordneten Eingabe Steuerelement im Bearbeitungsmodus automatisch anzeigen. Wenn ein Datensatz aktualisiert wird, extrahiert das <xref:System.Web.UI.WebControls.FormView>-Steuerelement automatisch den aktualisierten Feldwert aus dem zugeordneten Eingabe Steuerelement. Weitere Informationen zu bidirektionalen Bindungs Ausdrücken finden [Sie unterbinden an Datenbanken](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100)). Fügen Sie zum Erstellen von Befehls Schaltflächen, die die integrierten Cancel-und Update-Vorgänge ausführen, der Vorlage ein Befehlszeilen-Steuerelement hinzu, dessen `CommandName`-Eigenschaft auf einen der in der folgenden Tabelle aufgeführten Werte festgelegt ist.

|Befehls Schaltflächentyp|CommandName-Wert|
|-------------------------|-----------------------|
|Abbrechen|Jederzeit|
|Aktualisieren|Alisierungs|

 Sie können das Aussehen der Element Vorlage mithilfe der <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>-Eigenschaft steuern.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Vorlage für eine Daten Zeile im Bearbeitungsmodus definieren.

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich dieses im Bearbeitungsmodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Bearbeitungsmodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>-Eigenschaft, um die Darstellung der Daten Zeile zu steuern, wenn sich ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet. Wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet, wird in der Daten Zeile der benutzerdefinierte Inhalt angezeigt, der durch die <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-Eigenschaft angegeben wird. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `EditRowStyle-ForeColor`).

-   Schachteln Sie ein `<EditRowStyle>` Element zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `EditRowStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>-Eigenschaft verwendet wird, um einen benutzerdefinierten Stil für eine Daten Zeile anzugeben, wenn sich ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet.

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der leeren Datenzeile festlegen können, die angezeigt wird, wenn die an ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebundene Datenquelle keine Datensätze enthält.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, mit dem die Darstellung der leeren Datenzeile festgelegt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>-Eigenschaft, um die Darstellung der leeren Daten Zeile in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu steuern. Die leere Daten Zeile wird angezeigt, wenn die Datenquelle, die an das-Steuerelement gebunden ist, keine Datensätze enthält. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `EmptyDataRowStyle-ForeColor`).

-   Schachteln Sie ein `<EmptyDataRowStyle>` Element zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `EmptyDataRowStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>-Eigenschaft verwendet wird, um einen benutzerdefinierten Stil für die leere Daten Zeile anzugeben, der angezeigt wird, wenn ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement an eine Datenquelle gebunden ist, die keine Datensätze enthält.

 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt diesen Inhalt fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die leere Datenzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die leere Daten Zeile wird in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt, wenn die Datenquelle, die an das-Steuerelement gebunden ist, keine Datensätze enthält. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die leere Daten Zeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>-Eigenschaft verwenden. Um eine benutzerdefinierte Vorlage für die leere Daten Zeile anzugeben, platzieren Sie zunächst `<EmptyDataTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<EmptyDataTemplate>` Tags auflisten. Um den Stil der leeren Daten Zeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>-Eigenschaft. Alternativ können Sie die integrierte Benutzeroberfläche für die leere Daten Zeile verwenden, indem Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Vorrang.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie eine benutzerdefinierte Vorlage für die leere Daten Zeile definiert wird, die angezeigt wird, wenn ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement an eine Datenquelle gebunden ist, die keine Datensätze enthält.

 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text für die leere Datenzeile ab, die gerendert wird, wenn ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement an eine Datenquelle ohne Datensätze gebunden ist, oder legt den Text fest.</summary>
        <value>Der Text, der in der leeren Datenzeile angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die leere Daten Zeile wird in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt, wenn die Datenquelle, die an das-Steuerelement gebunden ist, keine Datensätze enthält. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>-Eigenschaft, um den Text anzugeben, der in der leeren Daten Zeile angezeigt werden soll. Um den Stil der leeren Daten Zeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>-Eigenschaft. Alternativ können Sie eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die leere Daten Zeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> und <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Vorrang.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>-Eigenschaft verwendet wird, um den Text anzugeben, der in der leeren Daten Zeile angezeigt werden soll.

 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Validierungssteuerelement Ausnahmen behandelt, die während Einfüge- oder Aktualisierungsvorgängen auftreten, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn in Einfüge- oder Aktualisierungsvorgängen auftretende Ausnahmen von einem Validierungssteuerelement behandelt werden; andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stellt sicher, dass das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zum gegebenen Zeitpunkt an Daten gebunden wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A>-Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.FormView>-Klasse verwendet wird, um sicherzustellen, dass das <xref:System.Web.UI.WebControls.FormView>-Steuerelement bei Bedarf an Daten gebunden ist. Die <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A>-Methode wird in der Regel während der <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>-Methode aufgerufen, um das Steuerelement an die Datenquelle zu binden, wenn das Daten gebundene Steuerelement noch nicht gebunden ist, aber eine Datenbindung erfordert. Diese Version der-Methode wurde überschrieben, um zu verhindern, dass Daten Bindungen auftreten, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">Ein <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> zur Speicherung der Feldwerte des aktuellen Datenelements.</param>
        <param name="includeKeys"><see langword="true" /> bei Einbeziehung von Schlüsselfeldern, andernfalls <see langword="false" />.</param>
        <summary>Ruft die Werte jedes innerhalb der Datenzeile deklarierten Felds ab und speichert sie in dem angegebenen <see cref="T:System.Collections.Specialized.IOrderedDictionary" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um die Werte jedes in der Daten Zeile deklarierten Felds abzurufen. Da in der Daten Zeile eine andere Vorlage basierend auf dem aktuellen Modus angezeigt wird, ruft diese Methode nur die Feldwerte ab, die in der Vorlage deklariert werden, die dem aktuellen Modus entspricht. In der folgenden Tabelle werden die verfügbaren Modi und die entsprechenden Vorlagen angezeigt.

|Mode|Vorlage|
|----------|--------------|
|Einfügen|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|Edit (Bearbeiten)|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 Mithilfe des `includeKeys`-Parameters können Sie angeben, ob die extrahierten Werte das Schlüsselfeld oder Felder enthalten.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine eigene Routine zum Abrufen der Feldwerte zu erstellen.</para></block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Footerzeile wird am unteren Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>-Eigenschaft, um Programm gesteuert auf das <xref:System.Web.UI.WebControls.FormViewRow> Objekt zuzugreifen, das die Footerzeile darstellt.

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>-Eigenschaft ist nur verfügbar, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die Footerzeile im <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis erstellt hat.

 Diese Eigenschaft wird häufig verwendet, wenn Sie die Footerzeile Programm gesteuert bearbeiten müssen, z. b. beim Hinzufügen von benutzerdefiniertem Inhalt. Alle Änderungen an der <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> Eigenschaft müssen ausgeführt werden, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement gerendert wurde. Andernfalls überschreibt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement alle Änderungen.

 Um den Stil der Footerzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>-Eigenschaft.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>-Eigenschaft verwendet wird, um die Eigenschaften der Footerzeile während des <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignisses Programm gesteuert zu ändern.

 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Footerzeile wird am unteren Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>-Eigenschaft, um das Aussehen der Footerzeile in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `FooterStyle-ForeColor`).

-   Schachteln eines `<FooterStyle>` Elements zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `FooterStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>-Eigenschaft verwendet wird, um einen benutzerdefinierten Stil für die Footerzeile anzugeben.

 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Footerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Footerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Footerzeile wird am unteren Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft festgelegt ist. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die Footerzeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft verwenden. Um eine benutzerdefinierte Vorlage für die Fußzeile anzugeben, platzieren Sie zunächst `<FooterTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<FooterTemplate>` Tags auflisten. Um den Stil der Footerzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>-Eigenschaft. Alternativ können Sie einfach Text in der Footerzeile anzeigen, indem Sie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Vorrang.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft verwendet wird, um eine benutzerdefinierte Vorlage zum Rendering für die Footerzeile zu definieren.

 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Footerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Footerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Footerzeile wird am unteren Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-oder <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-Eigenschaft, um den Text anzugeben, der in der Footerzeile angezeigt werden soll. Um den Stil der Footerzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>-Eigenschaft. Alternativ können Sie eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die Footerzeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.FooterText%2A> und <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Vorrang.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-Eigenschaft verwendet wird, um den Text anzugeben, der in der Footerzeile angezeigt werden soll.

 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Rasterlinienstil für ein <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.GridLines" />-Werte. Der Standardwert lautet <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.GridLines%2A>-Eigenschaft, um den gridlinienstil für ein <xref:System.Web.UI.WebControls.FormView> Steuerelement anzugeben. In der folgenden Tabelle sind die verfügbaren Stile aufgeführt.

|Style|BESCHREIBUNG|
|-----------|-----------------|
|`GridLines.None`|Es werden keine Gitternetz Linien angezeigt.|
|`GridLines.Horizontal`|Zeigt nur die horizontalen Gitternetz Linien an.|
|`GridLines.Vertical`|Zeigt nur die vertikalen Gitternetz Linien an.|
|`GridLines.Both`|Zeigt die horizontalen und vertikalen Gitternetz Linien an.|



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.GridLines%2A>-Eigenschaft verwendet wird, um sowohl das vertikale als auch das horizontale Gitternetz Linien anzuzeigen.

 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt, das die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Kopfzeile wird am oberen Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>-Eigenschaft, um Programm gesteuert auf das <xref:System.Web.UI.WebControls.FormViewRow> Objekt zuzugreifen, das die Kopfzeile darstellt.

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>-Eigenschaft ist nur verfügbar, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die Kopfzeile im <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis erstellt hat.

 Diese Eigenschaft wird häufig verwendet, wenn Sie die Kopfzeile Programm gesteuert bearbeiten müssen, z. b. beim Hinzufügen von benutzerdefiniertem Inhalt. Alle Änderungen an der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> Eigenschaft müssen ausgeführt werden, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement gerendert wurde. Andernfalls überschreibt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement alle Änderungen.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>-Eigenschaft verwendet wird, um die Eigenschaften der Kopfzeile während des <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignisses Programm gesteuert zu ändern.

 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Kopfzeile wird am oberen Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>-Eigenschaft, um die Darstellung der Header Zeile in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu steuern. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `HeaderStyle-ForeColor`).

-   Schachteln eines `<HeaderStyle>` Elements zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `HeaderStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>-Eigenschaft ein benutzerdefinierter Stil für die Kopfzeile angegeben wird.

 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Headerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Headerzeile enthält. Der Standardwert ist <see langword="null" /> und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Kopfzeile wird am oberen Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft festgelegt ist. Sie können eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die Kopfzeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft verwenden. Um eine benutzerdefinierte Vorlage für die Kopfzeile anzugeben, platzieren Sie zunächst `<HeaderTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<HeaderTemplate>` Tags auflisten. Um den Stil der Kopfzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>-Eigenschaft. Alternativ können Sie einfach Text in der Kopfzeile anzeigen, indem Sie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Vorrang.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft verwendet wird, um eine benutzerdefinierte Vorlage zum Rendering für die Kopfzeile zu definieren.

 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der in der Headerzeile eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigt werden soll, oder legt diesen fest.</summary>
        <value>Der in der Headerzeile anzuzeigende Text. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Kopfzeile wird am oberen Rand des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements angezeigt, wenn die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-oder <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft festgelegt ist. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-Eigenschaft, um den Text anzugeben, der in der Kopfzeile angezeigt werden soll. Um den Stil der Kopfzeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>-Eigenschaft. Alternativ können Sie eine eigene benutzerdefinierte Benutzeroberfläche (User Interface, UI) für die Kopfzeile definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft anstelle dieser Eigenschaft festlegen.

> [!NOTE]
>  Wenn die Eigenschaften <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> und <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> festgelegt sind, hat die Eigenschaft <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Vorrang.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-Eigenschaft verwendet wird, um den Text anzugeben, der in der Kopfzeile angezeigt werden soll.

 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die horizontale Ausrichtung eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf der Seite ab bzw. legt die Ausrichtung fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />-Werte. Der Standardwert lautet <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>-Eigenschaft, um die horizontale Ausrichtung eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements innerhalb der Seite anzugeben. In der folgenden Tabelle sind die verschiedenen horizontalen Ausrichtungs Stile aufgeführt.

|HorizontalAlign-Wert|BESCHREIBUNG|
|---------------------------|-----------------|
|`HorizontalAlign.NotSet`|Die horizontale Ausrichtung des <xref:System.Web.UI.WebControls.FormView> Steuer Elements wurde nicht festgelegt.|
|`HorizontalAlign.Left`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite linksbündig ausgerichtet.|
|`HorizontalAlign.Center`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite zentriert.|
|`HorizontalAlign.Right`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird auf der Seite rechtsbündig ausgerichtet.|
|`HorizontalAlign.Justify`|Das <xref:System.Web.UI.WebControls.FormView> Steuerelement wird am linken und rechten Rand der Seite ausgerichtet.|



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>-Eigenschaft verwendet wird, um anzugeben, dass ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement auf der Seite zentriert werden soll.

 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializePager (row As FormViewRow, pagedDataSource As PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Die <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Pagerzeile enthält.</param>
        <param name="pagedDataSource">Eine <see cref="T:System.Web.UI.WebControls.PagedDataSource" />, die die Daten für die aktuelle Seite enthält.</param>
        <summary>Erstellt die Pagerzeile für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.InitializePager%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um die Pager-Zeile zu erstellen. Er erstellt ein <xref:System.Web.UI.WebControls.TableCell> Objekt, das die Navigations Steuerelemente mithilfe der Eigenschaften des <xref:System.Web.UI.WebControls.PagedDataSource>-Objekts enthält, das im `pagedDataSource`-Parameter enthalten ist. Die Zelle wird dann der durch den `row`-Parameter angegebenen Zeile hinzugefügt.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine eigene Pager-Zeile zu erstellen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.FormViewRow" />.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um das angegebene <xref:System.Web.UI.WebControls.FormViewRow> Objekt zu initialisieren. Die <xref:System.Web.UI.WebControls.FormViewRow> -Objekt initialisiert wird, basierend auf den Zeilentyp und Zeilenstatus gemäß seiner <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> und <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> Eigenschaften bzw. Der entsprechende Inhalt wird dann dem <xref:System.Web.UI.WebControls.FormViewRow> Objekt hinzugefügt. In der folgenden Tabelle wird beschrieben, wie die einzelnen Zeilen Typen initialisiert werden.

|Zeilentyp|BESCHREIBUNG|
|--------------|-----------------|
|Daten Zeile|Der Inhalt der <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>-, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-oder <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft wird dem <xref:System.Web.UI.WebControls.FormViewRow> Objekt hinzugefügt, abhängig vom Wert der <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>-Eigenschaft.|
|Leere Daten Zeile|Der Wert der <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>-Eigenschaft oder der Inhalt der <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>-Eigenschaft wird dem <xref:System.Web.UI.WebControls.FormViewRow>-Objekt hinzugefügt, je nachdem, welche Eigenschaft festgelegt ist. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>-Eigenschaft Vorrang.|
|Footerzeile|Der Wert der <xref:System.Web.UI.WebControls.FormView.FooterText%2A>-Eigenschaft oder der Inhalt der <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft wird dem <xref:System.Web.UI.WebControls.FormViewRow>-Objekt hinzugefügt, je nachdem, welche Eigenschaft festgelegt ist. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>-Eigenschaft Vorrang.|
|Kopfzeile|Der Wert der <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>-Eigenschaft oder der Inhalt der <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft wird dem <xref:System.Web.UI.WebControls.FormViewRow>-Objekt hinzugefügt, je nachdem, welche Eigenschaft festgelegt ist. Wenn beide Eigenschaften festgelegt sind, hat die <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>-Eigenschaft Vorrang.|

> [!NOTE]
>  Diese Methode initialisiert die Pager-Zeile nicht. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InitializePager%2A>-Methode, um die Pager-Zeile zu erstellen.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine eigene benutzerdefinierte Zeile zu erstellen.</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Fügt den aktuellen Datensatz in der Datenquelle ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A>-Methode, um den aktuellen Datensatz Programm gesteuert in die Datenquelle einzufügen. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements einfügen müssen, z. b. von einem anderen Steuerelement auf der Seite.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.FormView> Steuerelement muss sich im Einfügemodus befinden, wenn diese Methode aufgerufen wird. Andernfalls wird eine <xref:System.Web.HttpException> ausgelöst.

 Verwenden Sie den `causesValidation`-Parameter, um anzugeben, ob die Seiten Validierung vor dem Einfügevorgang ausgeführt wird. Durch den Aufruf dieser Methode werden auch die <xref:System.Web.UI.WebControls.FormView.ItemInserted>-und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse ausgelöst.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertItem%2A>-Methode verwendet wird, um den aktuellen Datensatz Programm gesteuert in ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement in der Datenquelle einzufügen.

 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Einfügemodus befindet.

Oder

Der Wert des mit dem <see cref="T:System.Web.UI.DataSourceView" />-Steuerelement verknüpften <see cref="T:System.Web.UI.WebControls.FormView" />-Objekts ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt eines Elements im Einfügemodus ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt der Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im Einfügemodus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement rendert eine andere Vorlage für die Daten Zeile basierend auf dem aktuellen Modus des-Steuer Elements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft). In der folgenden Tabelle wird gezeigt, welche Vorlage für die einzelnen Modi verwendet wird.

|Mode|Vorlage gerendert|
|----------|-----------------------|
|Edit (Bearbeiten)|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|Einfügen|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft, um eine eigene Benutzeroberfläche für die Daten Zeile zu definieren, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet. Die Element Vorlage einfügen enthält in der Regel die Eingabe Steuerelemente für den Benutzer, um die Werte für den neuen Datensatz einzugeben, sowie Befehls Schaltflächen zum Einfügen des Datensatzes und zum Abbrechen des Einfügevorgangs.

 Um die benutzerdefinierte Vorlage anzugeben, platzieren Sie zunächst `<InsertItemTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<InsertItemTemplate>` Tags auflisten. Wenn Sie einen bidirektionalen Bindungs Ausdruck verwenden, können Sie ein Feld einem Eingabe Steuerelement zuordnen. Wenn ein Datensatz eingefügt wird, extrahiert das <xref:System.Web.UI.WebControls.FormView>-Steuerelement automatisch den Feldwert aus dem zugeordneten Eingabe Steuerelement. Weitere Informationen zu bidirektionalen Bindungs Ausdrücken finden [Sie unterbinden an Datenbanken](https://docs.microsoft.com/previous-versions/aspnet/ms178361(v=vs.100)). Zum Erstellen von Befehls Schaltflächen, die die integrierten abbrechen-und Einfügevorgänge ausführen, fügen Sie der Vorlage ein Befehlszeilen-Steuerelement hinzu, dessen `CommandName`-Eigenschaft auf einen der in der folgenden Tabelle aufgeführten Werte festgelegt ist.

|Befehls Schaltflächentyp|CommandName-Wert|
|-------------------------|-----------------------|
|Abbrechen|Jederzeit|
|Einfügen|Setze|

 Sie können das Aussehen der Element Vorlage mithilfe der <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>-Eigenschaft steuern.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Vorlage für eine Daten Zeile im Einfügemodus definieren.

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Einfügevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine tutorialreihe zur Verwendung der Modell Bindung mit Web Forms finden Sie unter [Modell Bindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festgelegt werden kann, wenn sich das Steuerelement im Einfügemodus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im Einfügemodus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>-Eigenschaft, um die Darstellung der Daten Zeile zu steuern, wenn sich ein <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus befindet. Wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus befindet, zeigt die Daten Zeile den benutzerdefinierten Inhalt an, der durch die <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft angegeben wird. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird.

 Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `InsertRowStyle-ForeColor`).

-   Schachteln Sie ein `<InsertRowStyle>` Element zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `InsertRowStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>-Eigenschaft verwendet wird, um einen benutzerdefinierten Stil für eine Daten Zeile anzugeben, wenn sich ein <xref:System.Web.UI.WebControls.FormView> Steuerelement im Einfügemodus befindet.

 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsBindableType (type As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Ein <see cref="T:System.Type" />, der den zu überprüfenden Datentyp darstellt.</param>
        <summary>Bestimmt, ob der angegebene Datentyp an ein Feld im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann.</summary>
        <returns><see langword="true" />, wenn der angegebene Datentyp an ein Feld im<see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um zu bestimmen, ob der angegebene Datentyp an ein Feld im-Steuerelement gebunden werden kann. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement unterstützt die folgenden Datentypen:

-   Alle primitiven Datentypen, z. b. <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>usw.

-   <xref:System.DateTime>

-   <xref:System.Decimal>

-   <xref:System.Guid>

-   <xref:System.String>

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um die Datentypen, die in einem <see cref="T:System.Web.UI.WebControls.FormView" /> Steuerelement verwendet werden können, hinzuzufügen oder einzuschränken.</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn innerhalb eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements auf eine Schaltfläche geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView.ItemCommand>-Ereignis wird ausgelöst, wenn auf eine Schaltfläche innerhalb des <xref:System.Web.UI.WebControls.FormView> Steuer Elements geklickt wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.

 Schaltflächen in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement können auch einige der integrierten Funktionen des-Steuer Elements aufrufen. Um einen dieser Vorgänge auszuführen, legen Sie die `CommandName`-Eigenschaft einer Schaltfläche auf einen der Werte in der folgenden Tabelle fest.

|CommandName-Wert|BESCHREIBUNG|
|-----------------------|-----------------|
|Jederzeit|Bricht einen Bearbeitungs-oder Einfügevorgang ab und gibt das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft angegebenen Modus zurück. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse aus.|
|"Löschen"|Löscht den aktuellen Datensatz. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleted> und <xref:System.Web.UI.WebControls.FormView.ItemDeleting> Ereignisse aus.|
|Bearbeiten|Versetzt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement in den Bearbeitungsmodus. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse aus.|
|Setze|Fügt den aktuellen Datensatz in der Datenquelle ein. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserted> und <xref:System.Web.UI.WebControls.FormView.ItemInserting> Ereignisse aus.|
|Neubau|Versetzt das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Einfügemodus. Löst die <xref:System.Web.UI.WebControls.FormView.ModeChanged> und <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignisse aus.|
|S|Führt einen Pagingvorgang aus. Legen Sie die `CommandArgument`-Eigenschaft der Schaltfläche auf "First", "Last", "Next", "Prev" oder eine Seitenzahl fest, um den Typ des auszuführenden Paging-Vorgangs anzugeben. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Ereignisse aus.|
|Alisierungs|Aktualisiert den aktuellen Datensatz in der Datenquelle. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdated> und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse aus.|

 Obwohl das <xref:System.Web.UI.WebControls.FormView.ItemCommand>-Ereignis ausgelöst wird, wenn auf eine Schaltfläche in der vorherigen Tabelle geklickt wird, empfiehlt es sich, die in der Tabelle aufgeführten Ereignisse für den Vorgang zu verwenden.

 Ein <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, sodass Sie den Befehlsnamen und das Befehls Argument der Schaltfläche, auf die geklickt wurde, bestimmen können. Name des Befehls und Befehlsargument ermitteln Sie mithilfe der <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> und <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Eigenschaften bzw. Sie können auch auf das Steuerelement zugreifen, das das Ereignis ausgelöst hat, indem Sie die <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>-Eigenschaft verwenden.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemCommand>-Ereignis verwendet wird, um einen Schaltflächen Klick in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu verarbeiten. Wenn der Benutzer auf die Schaltfläche hinzufügen klickt, wird das aktuell angezeigte Element einem <xref:System.Web.UI.WebControls.ListBox> Steuerelement hinzugefügt.

 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, nachdem alle Zeilen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement erstellt sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis wird ausgelöst, nachdem alle Zeilen in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement erstellt wurden. Dies kann vorkommen, wenn das Steuerelement zum ersten Mal gerendert wird oder wenn der Benutzer zu einem anderen Datensatz navigiert. Sie können dieses Ereignis verwenden, um eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Hinzufügen oder Ändern des Inhalts einer Zeile, wenn dieses Ereignis auftritt.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis tritt auf, bevor das <xref:System.Web.UI.WebControls.FormView>-Steuerelement an Daten gebunden wird. Verwenden Sie das <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>-Ereignis, um den Wert eines gebundenen Felds zu ändern.

 Sie erreichen die Header, Footer und Pager Zeilen in der <xref:System.Web.UI.WebControls.FormView> -Steuerelement mithilfe der <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, oder <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> Eigenschaften bzw. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.Row%2A>-Eigenschaft, um auf die Daten Zeile zuzugreifen.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis verwendet wird, um den Text eines <xref:System.Web.UI.WebControls.Label> Steuer Elements zu aktualisieren, das in der Pager-Zeile enthalten ist.

 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings erst nachdem der Löschvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemDeleted>-Ereignis aus, wenn im-Steuerelement auf die Schaltfläche Löschen (eine Schaltfläche mit der Eigenschaft `CommandName` auf "Delete" festgelegt ist) geklickt wird, nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz gelöscht hat. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen der Ergebnisse eines Löschvorgangs, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie die Anzahl der betroffenen Datensätze und ggf. aufgetretenen Ausnahmen ermitteln können. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>-Eigenschaft, um die Anzahl der vom Löschvorgang betroffenen Datensätze zu bestimmen. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>-Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignis Behandlungsmethode behandelt wurde, indem Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>-Eigenschaft festgelegt haben. Wenn Sie die Name-Wert-Paare der Schlüsselfelder und nichtschlüsselfelder des gelöschten Datensatzes zugreifen möchten, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> Eigenschaften bzw.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemDeleted>-Ereignis verwendet wird, um zu bestimmen, ob während eines Löschvorgangs eine Ausnahme aufgetreten ist.

 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Löschen geklickt wird, allerdings bevor der Löschvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemDeleting>-Ereignis aus, wenn im-Steuerelement auf die Schaltfläche Löschen (eine Schaltfläche mit der Eigenschaft `CommandName` auf "Delete" festgelegt ist) geklickt wird, aber bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz löscht. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen eines Datensatzes vor dem Löschen, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie den Index des gelöschten Datensatzes bestimmen und angeben können, dass der Löschvorgang abgebrochen werden soll. Um den Index eines Datensatzes zu bestimmen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>-Eigenschaft. Um den Löschvorgang abzubrechen, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true`fest. Sie können auch die Schlüsselfelder und nichtschlüsselfelder zugreifen, mithilfe der <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> Eigenschaften bzw.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemDeleting>-Ereignis verwendet wird, um einen Löschvorgang abzubrechen.

 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings erst nachdem der Einfügevorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemInserted>-Ereignis aus, wenn auf eine einfügeschaltfläche (eine Schaltfläche, deren `CommandName`-Eigenschaft auf "Einfügen" festgelegt ist) im-Steuerelement geklickt wird, aber nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen der Ergebnisse eines Einfügevorgangs, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie die Anzahl der betroffenen Datensätze und ggf. aufgetretenen Ausnahmen ermitteln können. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>-Eigenschaft, um die Anzahl der vom Einfügevorgang betroffenen Datensätze zu bestimmen. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>-Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignis Behandlungsmethode behandelt wurde, indem Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>-Eigenschaft festgelegt haben. Wenn Sie auf die Werte des eingefügten Datensatzes zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>-Eigenschaft.

 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView>-Steuerelement nach einem Einfügevorgang in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft angegebenen Modus zurückgegeben. Um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus zu behalten, legen Sie die Eigenschaft <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> auf `true`fest.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignis verwendet wird, um zu bestimmen, ob während eines Einfügevorgangs eine Ausnahme aufgetreten ist.

 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Einfügen geklickt wird, allerdings bevor der Einfügevorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemInserting>-Ereignis aus, wenn auf eine einfügeschaltfläche (eine Schaltfläche, deren `CommandName`-Eigenschaft auf "Einfügen" festgelegt ist) im-Steuerelement geklickt wird, aber bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. die HTML-Codierung der Werte eines Datensatzes vor dem Einfügen in die Datenquelle, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie den Wert eines optionalen Befehls Arguments bestimmen können, das an das <xref:System.Web.UI.WebControls.FormView> Steuerelement gesendet wird, und um anzugeben, dass der Einfügevorgang abgebrochen werden soll. Der Wert des Befehls Arguments entspricht der `CommandArgument`-Eigenschaft der Schaltfläche einfügen. Wenn die `CommandArgument`-Eigenschaft der Schaltfläche Einfügen festgelegt ist, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>-Eigenschaft, um den Wert des Befehls Arguments zu ermitteln. Um den Einfügevorgang abzubrechen, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true`fest. Sie können die Feldwerte für den neuen Datensatz auch lesen oder ändern, indem Sie die <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>-Eigenschaft verwenden.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemInserting>-Ereignis verwendet wird, um einen Einfügevorgang abzubrechen.

 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt für die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab, wenn sich das Steuerelement im schreibgeschützten Modus befindet, oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Datenzeile enthält, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement im schreibgeschützten Modus befindet. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement rendert eine andere Vorlage für die Daten Zeile basierend auf dem aktuellen Modus des-Steuer Elements (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft). In der folgenden Tabelle wird gezeigt, welche Vorlage für die einzelnen Modi verwendet wird.

|Mode|Vorlage gerendert|
|----------|-----------------------|
|Edit (Bearbeiten)|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|Einfügen|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>-Eigenschaft, um eine eigene Benutzeroberfläche (User Interface, UI) für die Daten Zeile zu definieren, wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus befindet. Die Element Vorlage enthält normalerweise Steuerelemente zum Anzeigen der Feldwerte eines Datensatzes sowie Befehls Schaltflächen zum Bearbeiten, einfügen und Löschen eines Datensatzes.

 Um die benutzerdefinierte Vorlage anzugeben, platzieren Sie zunächst `<ItemTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<ItemTemplate>` Tags auflisten. Um die Feldwerte der an das Steuerelement gebundenen Datenquelle anzuzeigen, verwenden Sie einen Daten Bindungs Ausdruck. Weitere Informationen zu Daten Bindungs Ausdrücken finden Sie unter [Daten Bindungs Ausdrucks Syntax](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Fügen Sie zum Erstellen von Befehls Schaltflächen, die die integrierten Vorgänge DELETE, Edit und New Record ausführen, der Vorlage ein Befehlszeilen-Steuerelement hinzu, dessen `CommandName`-Eigenschaft auf einen der in der folgenden Tabelle aufgeführten Werte festgelegt ist.

|Befehls Schaltflächentyp|CommandName-Wert|
|-------------------------|-----------------------|
|Löschen|"Löschen"|
|Edit (Bearbeiten)|Bearbeiten|
|Neu|Neubau|

 Sie können das Aussehen der Element Vorlage mithilfe der <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>-Eigenschaft steuern.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie eine benutzerdefinierte Vorlage für eine Daten Zeile im schreibgeschützten Modus definieren.

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings erst nachdem der Aktualisierungsvorgang ausgeführt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemUpdated>-Ereignis aus, wenn im-Steuerelement auf die Schaltfläche Aktualisieren (eine Schaltfläche mit der `CommandName`-Eigenschaft, die auf "Update" festgelegt ist) geklickt wird, nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Überprüfen der Ergebnisse eines Update Vorgangs, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie die Anzahl der betroffenen Datensätze und ggf. aufgetretenen Ausnahmen ermitteln können. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>-Eigenschaft, um die Anzahl der vom Aktualisierungs Vorgang betroffenen Datensätze zu bestimmen. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>-Eigenschaft, um zu bestimmen, ob Ausnahmen aufgetreten sind. Sie können auch angeben, ob die Ausnahme in der Ereignis Behandlungsmethode behandelt wurde, indem Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>-Eigenschaft festgelegt haben. Wenn Sie auf die Schlüssel Feldwerte für den aktualisierten Datensatz zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>-Eigenschaft. Die ursprünglichen und die aktualisierten nicht schlüsselbezogene Feldwerte können zugegriffen werden, mithilfe der <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> und <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Eigenschaften bzw.

 Standardmäßig wird das <xref:System.Web.UI.WebControls.FormView>-Steuerelement nach einem Aktualisierungs Vorgang in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft angegebenen Modus zurückgegeben. Um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus zu behalten, legen Sie die Eigenschaft <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> auf `true`fest.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemUpdated>-Ereignis verwendet wird, um zu bestimmen, ob während eines Aktualisierungs Vorgangs eine Ausnahme aufgetreten ist.

 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf eine Schaltfläche Aktualisieren geklickt wird, allerdings bevor der Aktualisierungsvorgang ausgeführt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.ItemUpdating>-Ereignis aus, wenn im-Steuerelement auf eine Schaltfläche Aktualisieren (auf die die Eigenschaft `CommandName` auf "Update" festgelegt ist) geklickt wird, aber bevor das <xref:System.Web.UI.WebControls.FormView> Steuerelement den Datensatz aktualisiert. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. die HTML-Codierung der Werte eines Datensatzes, bevor er in der Datenquelle aktualisiert wird, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übermittelt, mit der Sie den Wert eines optionalen Befehls Arguments bestimmen können, das an das <xref:System.Web.UI.WebControls.FormView> Steuerelement gesendet wird, und um anzugeben, dass der Aktualisierungs Vorgang abgebrochen werden soll. Der Wert des Befehls Arguments entspricht der `CommandArgument`-Eigenschaft der Schaltfläche Aktualisieren. Wenn die `CommandArgument`-Eigenschaft der Schaltfläche "Aktualisieren" festgelegt ist, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>-Eigenschaft, um den Wert des Befehls Arguments zu ermitteln. Um den Aktualisierungs Vorgang abzubrechen, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true`fest. Mithilfe der Eigenschaften <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> und <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> können Sie auch die neuen Werte lesen oder ändern, die vom Benutzer eingegeben wurden. Die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>-Eigenschaft enthält die Schlüsselfelder, während die <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>-Eigenschaft die nicht Schlüsselfelder enthält. Wenn Sie auf die ursprünglichen nicht-Schlüssel Feldwerte zugreifen müssen, verwenden Sie die <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>-Eigenschaft.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ItemUpdating>-Ereignis verwendet wird, um einen Aktualisierungs Vorgang abzubrechen.

 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A>-Methode wird verwendet, um den Zustand der <xref:System.Web.UI.WebControls.FormView> Steuerelement Eigenschaften zu laden, die beibehalten werden müssen, selbst wenn die <xref:System.Web.UI.Control.EnableViewState%2A>-Eigenschaft auf `false`festgelegt ist.

> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement erweitert wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein <see cref="T:System.Object" />, das den Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements darstellt.</param>
        <summary>Lädt den zuvor gespeicherten Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A>-Methode wird verwendet, um den zuvor gespeicherten Ansichts Zustand des <xref:System.Web.UI.WebControls.FormView> Steuer Elements zu laden.

> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement erweitert wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings erst, nachdem sich der Modus geändert hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView.ModeChanged>-Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement versucht, zwischen dem Bearbeitungs-, Einfügungs-und schreibgeschützten Modus zu wechseln, aber nachdem sich der Modus tatsächlich geändert hat. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. die Synchronisierung des <xref:System.Web.UI.WebControls.FormView> Steuer Elements mit einem anderen Steuerelement, wenn dieses Ereignis eintritt.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ModeChanged>-Ereignis verwendet wird, um den aktuellen Modus in der Kopfzeile eines <xref:System.Web.UI.WebControls.FormView> Steuer Elements anzuzeigen.

 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zwischen Bearbeitungsmodus, Einfügemodus und schreibgeschütztem Modus wechselt, allerdings bevor sich der Modus ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView.ModeChanging>-Ereignis wird ausgelöst, wenn ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement versucht, zwischen dem Bearbeitungs-, Einfügungs-und schreibgeschützten Modus zu wechseln, aber bevor der Modus tatsächlich geändert wird. Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Konfigurieren des <xref:System.Web.UI.WebControls.FormView> Steuer Elements für einen bestimmten Modus oder das Abbrechen der Modusänderung, wenn dieses Ereignis auftritt.

 Ein <xref:System.Web.UI.WebControls.FormViewModeEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übergeben, mit der Sie den Modus bestimmen können, in dem das <xref:System.Web.UI.WebControls.FormView> Steuerelement wechselt, um zu bestimmen, ob das <xref:System.Web.UI.WebControls.FormView.ModeChanging> Ereignis ausgelöst wurde, weil der Benutzer einen Bearbeitungsvorgang abgebrochen hat, oder um anzugeben, dass ein Einfügevorgang abgebrochen werden soll. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>-Eigenschaft, um den neuen Modus zu bestimmen. Sie können auch die <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>-Eigenschaft verwenden, um in einen alternativen Modus zu wechseln, indem Sie Sie auf einen der <xref:System.Web.UI.WebControls.FormViewMode> Enumerationswerte festlegen. Verwenden Sie die Eigenschaft <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>, um zu bestimmen, ob der Benutzer einen Bearbeitungsvorgang abgebrochen hat. Um einen Einfügevorgang abzubrechen, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft auf `true`fest.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.ModeChanging>-Ereignis verwendet wird, um die Pager-Zeile auszublenden, wenn das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Bearbeitungsmodus übergeht.

 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die tabellenspezifischen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind, auf ihre Standardwerte festgelegt werden.</summary>
        <returns>Die standardmäßigen CSS-Formatierungsregeln, die dem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Tabellen spezifischen CSS-Stilregeln werden mithilfe der Eigenschaften <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> und <xref:System.Web.UI.WebControls.Style.Font%2A> auf ihre Standardwerte festgelegt.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Behandelt ein Ereignis, das in der Steuerelementhierarchie nach oben weitergegeben wird.</summary>
        <returns><see langword="true" /> zeigt an, dass das Ereignis in der Steuerelementhierarchie nach oben weitergegeben werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType>-Methode wird vom-Steuerelement verwendet, um optional Ereignisse zu verarbeiten, die über die Steuerelement Hierarchie durch die <xref:System.Web.UI.Control.RaiseBubbleEvent%2A>-Methode übermittelt werden Es bestimmt, ob ein Ereignis behandelt werden soll, indem die Eigenschaften des <xref:System.EventArgs> Objekts untersucht werden, das im `e`-Parameter enthalten ist. Wenn ein Ereignis behandelt werden muss, führt die-Methode die entsprechende Aktion aus. Andere Ereignisse werden ignoriert und in der Steuerelement Hierarchie nach oben übermittelt. Diese Methode gibt an, ob das Ereignis weiter oben in der Steuerelement Hierarchie durch seinen Rückgabewert übergeben werden soll.

 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement überschreibt die Basis Implementierung dieser Methode, um die entsprechende Aktion auszuführen, wenn auf eine der vom Steuerelement erkannten Schaltflächen geklickt wird. In der folgenden Tabelle werden die Befehls Schaltflächen aufgelistet, die das <xref:System.Web.UI.WebControls.FormView> Steuerelement erkennt.

|Taste|CommandName-Wert|BESCHREIBUNG|
|------------|-----------------------|-----------------|
|Abbrechen|Jederzeit|Wird beim Aktualisieren oder Einfügen von Vorgängen verwendet, um den Vorgang abzubrechen und die vom Benutzer eingegebenen Werte zu verwerfen. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement wird dann in den von der <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>-Eigenschaft angegebenen Modus zurückgegeben.|
|Löschen|"Löschen"|Wird beim Löschen von Vorgängen verwendet, um den angezeigten Datensatz aus der Datenquelle zu löschen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemDeleting> und <xref:System.Web.UI.WebControls.FormView.ItemDeleted> Ereignisse aus.|
|Edit (Bearbeiten)|Bearbeiten|Wird in Aktualisierungs Vorgängen verwendet, um das <xref:System.Web.UI.WebControls.FormView> Steuerelement in den Bearbeitungsmodus zu versetzen Der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>-Eigenschaft angegeben ist, wird für die Daten Zeile angezeigt.|
|Einfügen|Setze|Wird beim Einfügen von Vorgängen verwendet, um zu versuchen, einen neuen Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten einzufügen. Löst die <xref:System.Web.UI.WebControls.FormView.ItemInserting> und <xref:System.Web.UI.WebControls.FormView.ItemInserted> Ereignisse aus.|
|Neu|Neubau|Wird beim Einfügen von Vorgängen verwendet, um das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Einfügemodus Der Inhalt, der in der <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>-Eigenschaft angegeben ist, wird für die Daten Zeile angezeigt.|
|Seite|S|Wird in Pagingvorgängen verwendet, um eine Schaltfläche in der Pager-Zeile darzustellen, die Paging ausführt. Um den Pagingvorgang anzugeben, legen Sie die `CommandArgument`-Eigenschaft der Schaltfläche auf "Next", "Prev", "First", "Last" oder den Index der Seite fest, zu der navigiert werden soll. Löst die <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> und <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Ereignisse aus. **Hinweis:**  Diese Art von Schaltfläche wird in der Regel nur in der Pager-Vorlage verwendet.|
|Aktualisieren|Alisierungs|Wird in Aktualisierungs Vorgängen verwendet, um zu versuchen, den angezeigten Datensatz in der Datenquelle mit den vom Benutzer bereitgestellten Werten zu aktualisieren. Löst die <xref:System.Web.UI.WebControls.FormView.ItemUpdating> und <xref:System.Web.UI.WebControls.FormView.ItemUpdated> Ereignisse aus.|

 Diese Version der Methode gibt `true` zurück, wenn eine dieser Schaltflächen behandelt wird. Weitere Informationen zum Ereignis Blasen finden Sie unter [behandeln und Auswerfen von Ereignissen](~/docs/standard/events/index.md).

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.FormView" /> Klasse erweitern, können Sie diese Methode überschreiben, um Ihre eigenen Ereignisse zu behandeln. Verwenden Sie den Rückgabewert, um anzugeben, ob das Ereignis weiter oben in der Steuerelement Hierarchie weitergegeben werden soll.</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.Init" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnInit%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.Control.Init>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnInit%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemCommand>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemDeleted>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemDeleting>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Löschvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemInserted>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemInserting>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Einfügevorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemUpdated>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ItemUpdating>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Benutzer den Aktualisierungsvorgang nicht abgebrochen hat und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ModeChanged>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.ModeChanging>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, die Modusänderung nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A>-Methode wird vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen, um das <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>-Ereignis zu erhöhen. Sie wird in der Regel von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.FormView>-Klasse erweitert wird.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht an ein Datenquellensteuerelement gebunden ist, der Pagingvorgang nicht abgebrochen wurde und kein Ereignishandler für das Ereignis registriert ist.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gesamtzahl der Seiten ab, die zum Anzeigen sämtlicher Datensätze aus der Datenquelle erforderlich sind.</summary>
        <value>Die Anzahl der Elemente in der zugrunde liegenden Datenquelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`festgelegt ist), verwenden Sie die Eigenschaft <xref:System.Web.UI.WebControls.FormView.PageCount%2A>, um die Gesamtanzahl der Datensätze in der zugrunde liegenden Datenquelle zu ermitteln.

> [!NOTE]
>  Da das <xref:System.Web.UI.WebControls.FormView>-Steuerelement jeweils nur einen Datensatz anzeigt, entspricht dieser Wert der Gesamtzahl der Seiten, die zum Anzeigen aller Datensätze in der Datenquelle erforderlich sind. Dieser Wert ist erst nach der Datenbindung genau.

 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft, um den Index des aktuellen Datensatzes aus der zugrunde liegenden Datenquelle zu ermitteln.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A>-Eigenschaft verwendet wird, um die Gesamtanzahl der im-Steuerelement angezeigten Datensätze zu bestimmen.

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Index der angezeigten Seite ab oder legt diesen fest.</summary>
        <value>Der nullbasierte Index des Datenelements aus der zugrunde liegenden Datenquelle, das in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`festgelegt ist), verwenden Sie die Eigenschaft <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>, um den Index des aktuell angezeigten Datensatzes zu bestimmen. Sie können diese Eigenschaft auch verwenden, um den angezeigten Datensatz Programm gesteuert zu ändern.

> [!NOTE]
>  Wenn das Pagingfeature aktiviert ist, können Sie diese Eigenschaft auch verwenden, um die Seitenzahl des angezeigten Datensatzes zu bestimmen. Beachten Sie jedoch, dass diese Eigenschaft NULL basiert ist.

 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PageCount%2A>-Eigenschaft, um die Gesamtanzahl der Elemente in der Datenquelle zu ermitteln.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft verwendet wird, um den Seitenindex des angezeigten Datensatzes zu bestimmen.

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der ausgewählte Wert ist kleiner als -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich nach einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>-Ereignis aus, wenn auf eine Pager-Schaltfläche (eine Schaltfläche mit der `CommandName`-Eigenschaft, die auf "page" festgelegt ist) im-Steuerelement geklickt wird, aber nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement den Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die immer dann eine benutzerdefinierte Routine ausführt, wenn dieses Ereignis auftritt.

> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft Programm gesteuert festlegen.

 Pager-Schaltflächen befinden sich in der Regel in der Pager-Zeile eines <xref:System.Web.UI.WebControls.FormView>-Steuer Elements. Dieses Ereignis wird häufig verwendet, um ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement mit einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement zu synchronisieren oder das Verhalten des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements nach einem Pagingvorgang festzulegen.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>-Ereignis verwendet wird, um die <xref:System.Web.UI.WebControls.FormView> in den schreibgeschützten Modus zurückzusetzen, wenn der Benutzer zu einem anderen Datensatz navigiert.

 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich vor einem Pagingvorgang der Wert der <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement löst das <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>-Ereignis aus <xref:System.Web.UI.WebControls.FormView>, wenn im-Steuerelement auf eine Pager-Schaltfläche (eine Schaltfläche mit der `CommandName`-Eigenschaft, die auf "page" festgelegt ist) geklickt wird Dies ermöglicht es Ihnen, eine Ereignis Behandlungsmethode bereitzustellen, die eine benutzerdefinierte Routine ausführt, z. b. das Abbrechen des Pagingvorgangs, wenn dieses Ereignis eintritt.

> [!NOTE]
>  Dieses Ereignis wird nicht ausgelöst, wenn Sie die <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>-Eigenschaft Programm gesteuert festlegen.

 Pager-Schaltflächen befinden sich in der Regel in der Pager-Zeile eines <xref:System.Web.UI.WebControls.FormView>-Steuer Elements.

 Ein <xref:System.Web.UI.WebControls.FormViewPageEventArgs>-Objekt wird an die Ereignis Behandlungsmethode übergeben, die es Ihnen ermöglicht, den Index der vom Benutzer ausgewählten Seite zu bestimmen und anzugeben, dass der Pagingvorgang abgebrochen werden soll. Verwenden Sie die <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>-Eigenschaft, um den Index der vom Benutzer ausgewählten Seite zu ermitteln. Um den Pagingvorgang abzubrechen, legen Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.FormViewPageEventArgs>-Objekts auf `true`fest.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>-Ereignis verwendet wird, um einen Auslagerungs Vorgang abzubrechen.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.PagerSettings" />-Objekt ab, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf die <see cref="T:System.Web.UI.WebControls.PagerSettings" />, mit dem Sie die Eigenschaften der Pagerschaltflächen in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>-Eigenschaft, um die Einstellungen der Pager-Zeile in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu steuern. Die Zeile Pager wird angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`festgelegt ist) und die Steuerelemente enthält, die es dem Benutzer ermöglichen, zu den verschiedenen Datensätzen im-Steuerelement zu navigieren. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.PagerSettings> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können deklarativ im Formular `Property-Subproperty`festgelegt werden, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.PagerSettings> Objekts ist (z. b. `PagerSettings-Mode`). Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `PagerSettings.Mode`). Zu den allgemeinen Einstellungen gehören in der Regel der Anzeigemodus der Pager-Zeile und benutzerdefinierter Text bzw. Bilder für die Navigations Steuerelemente.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>-Eigenschaft verwendet wird, um die Eigenschaften der Pager-Zeile anzugeben.

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können.</summary>
        <value>Ein Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt, das den Stil der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>-Eigenschaft, um die Darstellung der Pager-Zeile in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement zu steuern. Die Zeile Pager wird angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`festgelegt ist) und die Steuerelemente enthält, die es dem Benutzer ermöglichen, zu den verschiedenen Seiten im-Steuerelement zu navigieren. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `PagerStyle-ForeColor`).

-   Schachteln eines `<PagerRowStyle>` Elements zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `PagerStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>-Eigenschaft verwendet wird, um die Stileinstellungen für die Pager-Zeile anzugeben.

 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den benutzerdefinierten Inhalt der Pagerzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab oder legt diesen fest.</summary>
        <value>Eine <see cref="T:System.Web.UI.ITemplate" />, die den benutzerdefinierten Inhalt für die Pagerzeile enthält. Der Standardwert ist null (0). Dies bedeutet, dass diese Eigenschaft nicht festgelegt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine Pager-Zeile wird in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt, wenn das Pagingfeature aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf true festgelegt ist). Die Pager-Zeile enthält die Steuerelemente, die es dem Benutzer ermöglichen, zu den verschiedenen Seiten im Steuerelement zu navigieren. Anstatt die integrierte Benutzeroberfläche der Pager-Zeile zu verwenden, können Sie eine eigene Benutzeroberfläche definieren, indem Sie die <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>-Eigenschaft verwenden.

> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>-Eigenschaft festgelegt ist, wird die integrierte Pager-Zeilen Oberfläche überschrieben.

 Um eine benutzerdefinierte Vorlage für die Pager-Zeile anzugeben, platzieren Sie zunächst `<PagerTemplate>` Tags zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements. Anschließend können Sie den Inhalt der Vorlage zwischen dem öffnenden und dem schließenden `<PagerTemplate>` Tags auflisten. Um die Darstellung der Pager-Zeile zu steuern, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>-Eigenschaft.

 Normalerweise werden Schaltflächen Steuerelemente zur Pager-Vorlage hinzugefügt, um die Pagingvorgänge auszuführen. Das <xref:System.Web.UI.WebControls.FormView>-Steuerelement führt einen Pagingvorgang aus, wenn auf ein Schaltflächen-Steuerelement mit der `CommandName`-Eigenschaft auf "page" geklickt wird. Die `CommandArgument`-Eigenschaft der Schaltfläche bestimmt den Typ der auszuführenden Pagingoperation. In der folgenden Tabelle werden die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement unterstützten Befehls Argument Werte aufgelistet.

|CommandArgument-Wert|BESCHREIBUNG|
|---------------------------|-----------------|
|Weiter|Navigiert zur nächsten Seite.|
|Prev|Navigiert zur vorherigen Seite.|
|Erstes|Navigiert zur ersten Seite.|
|Letzten|Navigiert zur letzten Seite.|
|Ganzzahliger Wert|Navigiert zur angegebenen Seitenzahl.|



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie eine benutzerdefinierte Pager-Vorlage definiert wird.

 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Ein <see cref="T:System.Collections.IEnumerable" />, das die Datenquelle darstellt.</param>
        <summary>Bindet die angegebene Datenquelle an das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um die angegebene Datenquelle an das Steuerelement zu binden.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Da die <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />-Methode versiegelt ist, sollten Sie diese Methode überschreiben, wenn Sie zusätzliche Aufgaben beim Binden von Daten ausführen müssen.</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Richtet die Steuerelementhierarchie für dieses <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView> Steuerelement aufgerufen wird, um die Steuerelement Hierarchie im <xref:System.Web.UI.WebControls.FormView>-Steuerelement einzurichten, bevor das Steuerelement gerendert wird

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Ereignisargument, aus dem ein <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> für die ausgelösten Ereignisse erstellt wird.</param>
        <summary>Löst die entsprechenden Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es an den Server zurückgesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A>-Methode auf, wenn ein Post Back Ereignis auftritt, das die entsprechenden Ereignisse für ein <xref:System.Web.UI.WebControls.FormView> Steuerelement auslöst. Dieser Befehl tritt im Lebenszyklus der Seite nach dem Laden auf, und die Änderungs Benachrichtigung ist fertiggestellt, aber bevor die vorab Ausführung erfolgt. Diese Methode wurde implementiert, um ein <xref:System.Web.UI.WebControls.CommandEventArgs>-Objekt für die-Ereignisse zu erstellen, die ausgelöst werden.

> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.FormView> Steuerelement zu erweitern.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den auf dem Client zu rendernden Ausgabestream enthält.</param>
        <summary>Zeigt das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement auf dem Client an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.Render%2A>-Methode wird verwendet, um den Inhalt des Server Steuer Elements mithilfe des angegebenen <xref:System.Web.UI.HtmlTextWriter> Objekts im Browser des Clients zu Rendering.

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, um Inlinestile zu übernehmen.</summary>
        <value><see langword="true" />, wenn das Steuerelement gerendertes HTML in einem <see langword="table" />-Element einschließt, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Um Inline-Stileigenschaften wie <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> für alle HTML-Elemente anzuwenden, die für das Steuerelement gerendert werden, schließt ASP.NET den gerenderten HTML-Code in ein `table` Element ein. Wenn das äußere `table` Element nicht gerendert werden soll, legen Sie diese Eigenschaft auf `false`fest. Wenn Sie in diesem Fall versuchen, Inline-Stileigenschaften festzulegen, die für das gesamte Steuerelement gelten, wird eine Ausnahme ausgelöst.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.FormViewRow" />, die die Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.Row%2A>-Eigenschaft, um Programm gesteuert auf das <xref:System.Web.UI.WebControls.FormViewRow> Objekt zuzugreifen, das die Daten Zeile darstellt. Die Daten Zeile enthält unterschiedliche Inhalte basierend auf der Vorlage, die für den aktuellen Modus gerendert wird (angegeben durch die <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>-Eigenschaft). Sie können nur auf den Inhalt der Vorlage für den aktuellen Modus zugreifen. In der folgenden Tabelle wird gezeigt, welche Vorlage für die einzelnen Modi verwendet wird.

|Mode|Vorlage gerendert|
|----------|-----------------------|
|Edit (Bearbeiten)|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|
|Einfügen|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|
|Schreibgeschützt|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.Row%2A>-Eigenschaft ist nur verfügbar, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die Daten Zeile im <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignis erstellt hat.

 Diese Eigenschaft wird häufig verwendet, wenn Sie die Daten Zeile Programm gesteuert bearbeiten müssen, z. b. beim Hinzufügen von benutzerdefiniertem Inhalt. Alle Änderungen an der <xref:System.Web.UI.WebControls.FormView.Row%2A> Eigenschaft müssen ausgeführt werden, nachdem das <xref:System.Web.UI.WebControls.FormView> Steuerelement Daten gebunden wurde. Andernfalls überschreibt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement alle Änderungen.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.Row%2A>-Eigenschaft verwendet wird, um während des <xref:System.Web.UI.WebControls.FormView.ItemCreated> Ereignisses auf die Eigenschaften der Daten Zeile zuzugreifen.

 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Verweis auf das <see cref="T:System.Web.UI.WebControls.TableItemStyle" />-Objekt ab, mit dem Sie die Darstellung der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement festlegen können, wenn sich das Steuerelement im schreibgeschützten Modus befindet.</summary>
        <value>Ein Verweis auf den <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, der den Stil der Datenzeile in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt, wenn sich dieses im schreibgeschützten Modus befindet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>-Eigenschaft, um die Darstellung der Daten Zeile zu steuern, wenn sich ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus (Anzeigemodus) befindet. Wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus befindet, wird in der Daten Zeile der benutzerdefinierte Inhalt angezeigt, der durch die <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>-Eigenschaft angegeben wird. Diese Eigenschaft ist schreibgeschützt. Sie können jedoch die Eigenschaften des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts festlegen, das zurückgegeben wird. Die Eigenschaften können mithilfe einer der folgenden Methoden deklarativ festgelegt werden:

-   Platzieren Sie ein Attribut im öffnenden Tag des <xref:System.Web.UI.WebControls.FormView>-Steuer Elements im Formular `Property-Subproperty`, wobei `Subproperty` eine Eigenschaft des <xref:System.Web.UI.WebControls.TableItemStyle> Objekts ist (z. b. `RowStyle-ForeColor`).

-   Schachteln Sie ein `<RowStyle>` Element zwischen den öffnenden und schließenden Tags des <xref:System.Web.UI.WebControls.FormView> Steuer Elements.

 Die Eigenschaften können auch Programm gesteuert im Formular `Property.Subproperty` festgelegt werden (z. b. `RowStyle.ForeColor`). Allgemeine Einstellungen umfassen in der Regel eine benutzerdefinierte Hintergrundfarbe, Vordergrundfarbe und Schriftart Eigenschaften.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>-Eigenschaft verwendet wird, um einen benutzerdefinierten Stil für eine Daten Zeile anzugeben, wenn sich ein <xref:System.Web.UI.WebControls.FormView>-Steuerelement im schreibgeschützten Modus befindet.

 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den Zustand der Eigenschaften des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements, die auch dann beibehalten werden müssen, wenn die <see cref="P:System.Web.UI.Control.EnableViewState" />-Eigenschaft auf <see langword="false" /> festgelegt ist.</summary>
        <returns>Gibt den aktuellen Ansichtszustand des Serversteuerelements zurück. Wenn dem Steuerelement kein Ansichtszustand zugeordnet ist, gibt diese Methode <see langword="null" /> zurück.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird verwendet, um den Zustand der <xref:System.Web.UI.WebControls.FormView> Steuerelement Eigenschaften zu speichern, die persistent gespeichert werden müssen, auch wenn die <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>-Eigenschaft auf `false`festgelegt ist.

> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, um das <xref:System.Web.UI.WebControls.FormView> Steuerelement zu erweitern.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</summary>
        <returns>Ein <see cref="T:System.Object" />, das den gespeicherten Zustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um den Zustand des Steuer Elements zu speichern.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Der Datenschlüsselwert des aktuellen Datensatzes in einem <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft festgelegt ist, erstellt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement automatisch ein <xref:System.Web.UI.WebControls.DataKey>-Objekt, das die Schlüssel-Wert-Paare der Felder enthält, die in der <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft des aktuellen Datensatzes aufgeführt sind. Das <xref:System.Web.UI.WebControls.DataKey>-Objekt stellt das Primärschlüssel Feld oder die Felder für den aktuellen Datensatz dar und wird in der <xref:System.Web.UI.WebControls.FormView.DataKey%2A>-Eigenschaft gespeichert. Anstatt die <xref:System.Web.UI.WebControls.FormView.DataKey%2A>-Eigenschaft für den Zugriff auf den Datenschlüssel Wert zu verwenden, können Sie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>-Eigenschaft als Verknüpfung verwenden.

> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>-Eigenschaft mehrere Felder auflistet, gibt diese Eigenschaft den Wert des ersten aufgeführten Felds zurück.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>-Eigenschaft verwendet wird, um den Wert des Schlüssel Felds zu bestimmen.

 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="index">Der festzulegende Index.</param>
        <summary>Legt den Index der derzeit angezeigten Seite im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement fest.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IDataItemContainer.DataItemIndex : int" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Ein Objekt, das den Anzeigeindex darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.IDataItemContainer.DisplayIndex : int" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Eine Beschreibung dieses Members finden Sie unter <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Es wird immer 0 zurückgegeben.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.IDataItemContainer>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="formView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die Seite ruft die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>-Methode auf, wenn ein Post Back Ereignis auftritt. Dieser Befehl tritt im Lebenszyklus der Seite nach dem Laden auf, und die Änderungs Benachrichtigung ist fertiggestellt, aber bevor die Seite gerendert wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein Array ab, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält, bzw. legt das Array fest.</summary>
        <value>Ein Array, das die Namen der primären Schlüsselfelder der im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement angezeigten Elemente enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataMember : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Datenelementliste ab, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird, wenn die Datenquelle mehrere Listen mit Datenelementen enthält, oder legt den Namen fest.</summary>
        <value>Der Name der Datenelementliste, an die das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement gebunden wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSource : obj with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt das Objekt fest.</summary>
        <value>Das Objekt, das die Liste der Daten enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceID : string with get, set" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die ID des Datenquellensteuerelements ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden, oder legt die ID fest.</summary>
        <value>Die ID des Datenquellensteuerelements, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject : System.Web.UI.IDataSource" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datenquellenobjekt ab, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</summary>
        <value>Das Datenquellenobjekt, das die Liste der Datenelemente enthält, die vom <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundItemControl.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</summary>
        <value>Das Objekt, das den Datenschlüsselwert der Zeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Web.UI.WebControls.IDataBoundItemControl.Mode : System.Web.UI.WebControls.DataBoundControlMode" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den aktuellen Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements ab.</summary>
        <value>Der aktuelle Modus des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieser Member ist eine explizite Schnittstellen-Memberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.FormView>-Instanz in eine <xref:System.Web.UI.WebControls.IDataBoundControl>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions : System.Web.UI.WebControls.IButtonControl -&gt; System.Web.UI.PostBackOptions&#xA;override this.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions : System.Web.UI.WebControls.IButtonControl -&gt; System.Web.UI.PostBackOptions" Usage="formView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions buttonControl" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Das Schaltflächensteuerelement, das die Seite zurück an den Server gesendet hat.</param>
        <summary>Bestimmt die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</summary>
        <returns>Die Postbackereignisoptionen für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A>-Methode ist eine Hilfsmethode, die vom <xref:System.Web.UI.WebControls.FormView>-Steuerelement aufgerufen wird, um ein <xref:System.Web.UI.PostBackOptions>-Objekt zu erstellen, das die Post Back Ereignis Optionen für das-Steuerelement enthält. Das <xref:System.Web.UI.PostBackOptions>-Objekt wird in der Regel als Parameter für die <xref:System.Web.UI.Page.GetPostBackEventReference%2A>-Methode verwendet.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das im <paramref name="buttonControl" />-Parameter enthaltene Objekt hat den Wert <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" />-Eigenschaft von <paramref name="buttonControl" /> ist <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Web.UI.HtmlTextWriterTag" />-Wert für das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement ab.</summary>
        <value>Gibt immer <see langword="HtmlTextWriterTag.Table" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.FormView.TagKey%2A>-Eigenschaft ermöglicht es dem Ausgabestream, das entsprechende HTML-Markup für das <xref:System.Web.UI.WebControls.FormView> Steuerelement zu schreiben.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können diese Eigenschaft überschreiben, um anzugeben, welcher <see cref="T:System.Web.UI.HtmlTextWriterTag" /> Wert für das abgeleitete Steuerelement verwendet werden soll.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Web.UI.WebControls.FormViewRow" />-Objekt ab, das die am oberen Rand eines <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements angezeigte Pagerzeile darstellt.</summary>
        <value>Ein <see cref="T:System.Web.UI.WebControls.FormViewRow" />, der die obere Pagerzeile im <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Paging aktiviert ist (wenn die <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>-Eigenschaft auf `true`) festgelegt ist, wird automatisch eine zusätzliche Zeile mit der Bezeichnung Pager im <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt. Die Pager-Zeile enthält Steuerelemente, die es dem Benutzer ermöglichen, zu anderen Datensätzen zu navigieren, und er kann am oberen Rand, am unteren Rand oder am oberen und unteren Rand des Steuer Elements angezeigt werden. Verwenden Sie die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>-Eigenschaft, um Programm gesteuert auf das <xref:System.Web.UI.WebControls.FormViewRow> Objekt zuzugreifen, das die oberste Pager-Zeile im <xref:System.Web.UI.WebControls.FormView>-Steuerelement darstellt.

> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>-Eigenschaft ist nur verfügbar, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement die oberste Pager-Zeile im <xref:System.Web.UI.WebControls.FormView.ItemCreated>-Ereignis erstellt hat.

 Diese Eigenschaft wird häufig verwendet, wenn Sie die oberste Pager-Zeile Programm gesteuert bearbeiten müssen, z. b. beim Hinzufügen von benutzerdefiniertem Inhalt. Alle Änderungen an der <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> Eigenschaft müssen ausgeführt werden, nachdem das <xref:System.Web.UI.WebControls.FormView>-Steuerelement an Daten gebunden wurde. Andernfalls überschreibt das <xref:System.Web.UI.WebControls.FormView>-Steuerelement alle Änderungen.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>-Eigenschaft verwenden, um auf die Pager-Zeile zuzugreifen, die oben in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement angezeigt wird. Die Pager-Zeile wird dann mit zusätzlichem Inhalt aktualisiert.

 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Markiert den Anfangspunkt, an dem begonnen werden soll, Änderungen am Ansichtszustand des <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelements zu verfolgen und zu speichern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird überschrieben, um den Anfangspunkt zu markieren, an dem mit dem Nachverfolgen und Speichern von Änderungen am Steuerelement als Teil des Ansichts Zustands des Steuer Elements begonnen werden soll.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation"><see langword="true" />, wenn beim Aufrufen der Methode eine Seitenvalidierung ausgeführt werden soll, andernfalls <see langword="false" />.</param>
        <summary>Aktualisiert den aktuellen Datensatz in der Datenquelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn sich das <xref:System.Web.UI.WebControls.FormView>-Steuerelement im Bearbeitungsmodus befindet, verwenden Sie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A>-Methode, um den aktuellen Datensatz in der Datenquelle Programm gesteuert zu aktualisieren. Diese Methode wird häufig verwendet, wenn Sie den aktuellen Datensatz von außerhalb des <xref:System.Web.UI.WebControls.FormView> Steuer Elements aktualisieren müssen, z. b. von einem anderen Steuerelement auf der Seite.

> [!NOTE]
>  Wenn diese Methode aufgerufen wird, muss sich das <xref:System.Web.UI.WebControls.FormView> Steuerelement im Bearbeitungsmodus befinden. Andernfalls wird eine <xref:System.Web.HttpException> ausgelöst.

 Verwenden Sie den `causesValidation`-Parameter, um anzugeben, ob die Seiten Validierung vor dem Aktualisierungs Vorgang ausgeführt wird. Durch den Aufruf dieser Methode werden auch die <xref:System.Web.UI.WebControls.FormView.ItemUpdated>-und <xref:System.Web.UI.WebControls.FormView.ItemUpdating> Ereignisse ausgelöst.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A>-Methode verwendet wird, um den aktuellen Datensatz in einem <xref:System.Web.UI.WebControls.FormView>-Steuerelement in der Datenquelle Programm gesteuert zu aktualisieren.

 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]

 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Diese Methode wird aufgerufen, wenn sich das <see cref="T:System.Web.UI.WebControls.FormView" />-Steuerelement nicht im Bearbeitungsmodus befindet.

Oder

Der Wert des mit dem <see cref="T:System.Web.UI.DataSourceView" />-Steuerelement verknüpften <see cref="T:System.Web.UI.WebControls.FormView" />-Objekts ist NULL.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Methode auf der Seite ab, die aufgerufen wird, wenn das Steuerelement einen Aktualisierungsvorgang ausführt, oder legt diesen fest.</summary>
        <value>Der Name der Methode auf der Seite, die aufgerufen wird, wenn das Steuerelement einen Updatevorgang ausführt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Eine tutorialreihe zur Verwendung der Modell Bindung mit Web Forms finden Sie unter [Modell Bindung und Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
