<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c208dc6912a3730b8c8110454613935fd9ef8ca9" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862785" /></Metadata><TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ListView> -Steuerelement löst die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis aus, wenn eine Schaltfläche Einfügen in die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage geklickt wird, und die <xref:System.Web.UI.WebControls.ListView> Steuerelement aktualisiert den Datensatz in der Datenquelle. (Eine Einfügeschaltfläche ist eine Schaltfläche, deren `CommandName` -Eigenschaftensatz auf "Insert".) Die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis können Sie eine benutzerdefinierte Aktion, wie z. B. das Abrufen von automatisch generierten Werten aus der Datenbank für das eingefügte Element ausführen.  
  
 Ein <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Objekt wird an die Methode zur Verarbeitung von Ereignissen, können Sie bestimmen die Anzahl der eingefügten Elemente und alle möglicherweise aufgetretenen Ausnahmen übergeben. Um die Anzahl der vom Einfügevorgang betroffenen Elemente bestimmen, verwenden Sie die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> Eigenschaft. Verwenden der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> Eigenschaft, um zu bestimmen, ob eine Ausnahme aufgetreten ist. Sie können auch angeben, ob die Ausnahme in der Methode zur Verarbeitung von Ereignissen, indem behandelt wurde die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft. Wenn Sie auf die Feldwerte des eingefügten Elements zuzugreifen, die an die Datenquelle verwenden gesendet wurden, haben die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> Eigenschaft.  
  
 In der Standardeinstellung die <xref:System.Web.UI.WebControls.ListView> steuern, löscht der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage nach einem Einfügevorgang, der Benutzern ermöglicht, Werte für ein neues Element eingefügt werden soll. Wenn eine Ausnahme während des Einfügevorgangs auftritt, können Sie behalten die <xref:System.Web.UI.WebControls.ListView> -Steuerelement in Einfügemodus durch Festlegen der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`. Dies erneuerte Bindungen die <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage auf die Werte aus der vorherige Versuch, ein Element eingefügt werden soll.  
  
 Eine Liste der anfänglichen Eigenschaftenwerte für eine Instanz der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>-Klasse finden Sie im <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> -Objekt, das an den Handler für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
    <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Die Anzahl der vom Einfügevorgang betroffenen Zeilen.</param>
        <param name="exception">Die Ausnahme, die ggf. beim Ausführen des Einfügevorgangs ausgelöst wird. Wenn keine Ausnahme ausgelöst wurde, verwenden Sie <see langword="null" /> für diesen Parameter.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Klasse.  
  
> [!NOTE]
>  Dieser Konstruktor wird hauptsächlich von Steuerelemententwicklern verwendet werden, beim Auslösen von Ereignissen.  
  
 Die folgende Tabelle zeigt die anfänglichen Eigenschaftswerte für eine Instanz der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>-Klasse.  
  
|Eigenschaft|Anfangswert|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|Der Wert des `affectedRows`-Parameters.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|Die <xref:System.Exception?displayProperty=nameWithType> -Objekt, das in enthalten ist das `e` Parameter.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|Initialisiert auf `false`.|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|Initialisiert auf `false`.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der vom Einfügevorgang betroffenen Zeilen ab.</summary>
        <value>Die Anzahl der vom Einfügevorgang betroffenen Zeilen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A> -Eigenschaft bestimmt die Anzahl der Datensätze, die von der Insert-Vorgang betroffen sind, so wie das Datenquellen-Steuerelement zurückgegeben. Diese Eigenschaft wird in der Regel in den folgenden Szenarien verwendet:  
  
-   So überprüfen, dass nur ein einzelner Datensatz eingefügt wurde. Manchmal kann eine Fehler in Insert-Anweisung mehrere Datensätze einfügen.  
  
-   Um sicherzustellen, dass es sich bei kein Datensatz eingefügt wurde, da während des Einfügevorgangs ist ein Fehler aufgetreten, aber eine Ausnahme nicht ausgelöst wurde.  
  
-   Um sicherzustellen, dass ein Datensatz eingefügt wurde, wenn ein Datenquellen-Steuerelement, das konflikterkennung (vollständige Parallelität) unterstützt hat seine <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaftensatz auf die `ConflictOptions.CompareAllValues` Enumerationswert. U. a. diese Eigenschaft unterstützt die <xref:System.Web.UI.WebControls.SqlDataSource> und <xref:System.Web.UI.WebControls.ObjectDataSource> Steuerelemente. Wenn die Eigenschaft auf diesen Wert aufweist, kann ein Datensatz nicht eingefügt werden, wenn es auf den gleichen Schlüsselwert als ein Datensatz eingefügt wird, von einem anderen Benutzer hat.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> -Objekt, das an einen Handler für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis, um zu bestimmen, ob eine Ausnahme während des Einfügevorgangs ausgelöst wurde. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ausnahme (sofern vorhanden) ab, die während des Einfügevorgangs ausgelöst wurde.</summary>
        <value>Die Ausnahme, die während des Einfügevorgangs ausgelöst wurde, oder <see langword="null" />, wenn keine Ausnahme ausgelöst wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Ausnahme ausgelöst wurde und die Ausnahme zu behandeln, im Ereignisprotokoll Ereignishandler die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft `true`. Andernfalls die <xref:System.Web.UI.WebControls.ListView> Steuerelement löst die Ausnahme erneut aus.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> -Objekt, das an einen Handler für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis, um zu bestimmen, ob eine Ausnahme während des Einfügevorgangs ausgelöst wurde. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob eine während des Einfügevorgangs ausgelöste Ausnahme im Ereignishandler behandelt wurde, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Ausnahme im Ereignishandler behandelt wurde, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn eine Ausnahme während des Einfügevorgangs ausgelöst wird, verwenden Sie die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A> Eigenschaft, um anzugeben, ob die Ausnahme im Ereignishandler behandelt wurde. Wenn diese Eigenschaft auf festgelegt ist `true`, die Ausnahme als behandelt und nicht erneut ausgelöst. Wenn diese Eigenschaft, um festgelegt wird `false`, <xref:System.Web.UI.WebControls.ListView> Steuerelement löst die Ausnahme erneut aus. Um zu bestimmen, welche Ausnahme ausgelöst wurde, verwenden die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> -Objekt, das an den Handler für die <xref:System.Web.UI.WebControls.ListView.ItemInserted> Ereignis, um zu bestimmen, ob eine Ausnahme während des Einfügevorgangs ausgelöst wurde. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Eingabewerte eines Benutzers für die Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />-Vorlage beibehalten werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Eingabewerte des Benutzers für die Steuerelemente in der <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" />-Vorlage beibehalten werden, <see langword="false" />, wenn die Eingabewerte des Benutzers durch die Standardwerte für die Steuerelemente ersetzt werden. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung die <xref:System.Web.UI.WebControls.ListView> Steuerelement setzt die Werte des Steuerelements aus der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage auf die Standardwerte nach einem Einfügevorgang. Dies ermöglicht Benutzern das Hinzufügen von Werten für ein neues Element eingefügt werden soll. Wenn eine Ausnahme während des Einfügevorgangs ausgelöst wird, können Sie behalten die <xref:System.Web.UI.WebControls.ListView> -Steuerelement in Einfügemodus durch Festlegen der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft `true`. Hierdurch bleibt die Werte aus der vorherigen Versuch zum Einfügen eines Elements für die Steuerelemente in der <xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A> Vorlage.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A> Eigenschaft, um die Werte, die vom Benutzer eingegeben wird, tritt ein Fehler während des Einfügevorgangs beizubehalten. Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> Klasse.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Feldname-Wert-Paare für den eingefügten Datensatz ab.</summary>
        <value>Die Feldname-Wert-Paare für den eingefügten Datensatz.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> Eigenschaft, um die Werte der Felder für den eingefügten Datensatz zugreifen. Diese Werte können Sie z. B. die eingefügten Datensätze protokollieren.  
  
 Die <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A> -Eigenschaft gibt ein <xref:System.Collections.Specialized.OrderedDictionary> Objekt, das implementiert die <xref:System.Collections.Specialized.IOrderedDictionary> Schnittstelle. Die <xref:System.Collections.Specialized.OrderedDictionary> Objekt enthält <xref:System.Collections.DictionaryEntry> Objekte, die die Felder des eingefügten Datensatzes darstellen. Verwenden Sie den Feldnamen für den Zugriff auf die <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=nameWithType> Eigenschaft der <xref:System.Collections.Specialized.OrderedDictionary> Objekt. Auf ähnliche Weise können Sie die Feldwerte zugreifen, indem Sie mit der <xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=nameWithType> Eigenschaft.  
  
> [!NOTE]
>  Als Verknüpfung können Sie auch den Indexer, der die <xref:System.Collections.Specialized.OrderedDictionary> Objekt Zugriff auf das Feld Werte direkt. Der Vorteil der Verwendung des Indexers ist, dass es Feldwerte direkt zurückgibt. Datenquellen-Steuerelemente, die die Reihenfolge der Felder verwenden (z. B. <xref:System.Web.UI.WebControls.AccessDataSource>) können Feldwerte nur über den Index zugreifen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <related type="Article" href="https://msdn.microsoft.com/library/8b4da934-2f5e-4b5a-b03d-fca5e15f85af">Technologieübersicht: Das ListView-Steuerelement</related>
      </Docs>
    </Member>
  </Members>
</Type>