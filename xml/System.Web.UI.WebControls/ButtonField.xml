<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ab1599c971027ba7ce03b7419519b26ceba289b" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86658621" /></Metadata><TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <TypeSignature Language="F#" Value="type ButtonField = class&#xA;    inherit ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Feld dar, das als Schaltfläche in einem datengebundenen Steuerelement angezeigt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ButtonField> -Klasse wird von Daten gebundenen Steuerelementen (z. b. <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> ) verwendet, um eine Schaltfläche für jeden angezeigten Datensatz anzuzeigen. Das <xref:System.Web.UI.WebControls.ButtonField> Objekt wird unterschiedlich angezeigt, je nach dem Daten gebundenen Steuerelement, in dem es verwendet wird. Das-Steuerelement <xref:System.Web.UI.WebControls.GridView> zeigt z. b. ein- <xref:System.Web.UI.WebControls.ButtonField> Objekt als Spalte an, während das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement es als Zeile anzeigt.  
  
 Wenn Sie auf eine Schaltfläche in einem Schaltflächen Feld klicken, wird das Befehls Ereignis des übergeordneten Daten gebundenen Steuer Elements ausgelöst. Sie können eine benutzerdefinierte Routine bereitstellen, die beim Klicken auf eine Befehls Schaltfläche auszuführen ist, indem Sie einen Ereignishandler für das Befehls Ereignis bereitstellen.  
  
> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.GridView> Steuerelement löst das- <xref:System.Web.UI.WebControls.GridView.RowCommand> Ereignis aus, während das- <xref:System.Web.UI.WebControls.DetailsView> Steuerelement das-Ereignis auslöst <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> .  
  
 Um den Index des Datensatzes zu bestimmen, der das Befehls Ereignis auslöst, verwenden Sie die- <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Eigenschaft des Ereignis Arguments, das an das-Befehls Ereignis für das Daten gebundene Steuerelement übermittelt wird. Die- <xref:System.Web.UI.WebControls.ButtonField> Klasse füllt automatisch die- <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> Eigenschaft mit dem entsprechenden Indexwert auf.  
  
 Um den Typ der anzuzeigenden Schaltfläche anzugeben, verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Eigenschaft. Wenn Sie eine Verknüpfung oder Befehls Schaltfläche anzeigen, verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft, um die in den Schaltflächen anzuzeigende Beschriftung anzugeben.  
  
> [!NOTE]
>  Wenn Sie die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft festlegen, haben alle Schaltflächen in einer <xref:System.Web.UI.WebControls.ButtonField> dieselbe Beschriftung.  
  
 Alternativ können Sie das <xref:System.Web.UI.WebControls.ButtonField> Objekt an ein Feld in einer Datenquelle binden. Auf diese Weise können Sie unterschiedliche Beschriftungen für die Schaltflächen im- <xref:System.Web.UI.WebControls.ButtonField> Objekt anzeigen. Die Werte im angegebenen Feld werden für die Text Beschriftungen der Schaltflächen verwendet. Legen Sie die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft fest, um ein- <xref:System.Web.UI.WebControls.ButtonField> Objekt an ein Feld in einer Datenquelle zu binden.  
  
 Verwenden Sie beim Anzeigen der Schaltfläche Bild die- <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> Eigenschaft, um das Bild anzugeben, das für die Schaltflächen im-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.ButtonField> .  
  
> [!NOTE]
>  Alle Schaltflächen in einem- <xref:System.Web.UI.WebControls.ButtonField> Objekt haben dasselbe Bild gemeinsam.  
  
 Sie können ein- <xref:System.Web.UI.WebControls.ButtonField> Objekt in einem Daten gebundenen Steuerelement ausblenden, indem Sie die- <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Eigenschaft auf festlegen `false` .  
  
 <xref:System.Web.UI.WebControls.ButtonField>Mit dem-Objekt können Sie die Kopf-und Fußzeilen Abschnitte anpassen. Um eine Beschriftung in der Kopf- oder Fußzeile Abschnitt anzuzeigen, legen die <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Eigenschaften bzw. Anstatt Text im Header Abschnitt anzuzeigen, können Sie ein Bild anzeigen, indem Sie die- <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Eigenschaft festlegen. Um den Header Abschnitt in einem- <xref:System.Web.UI.WebControls.ButtonField> Objekt auszublenden, legen Sie die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> Eigenschaft auf fest `false` .  
  
> [!NOTE]
>  Einige Daten gebundene Steuerelemente (z. b. das- <xref:System.Web.UI.WebControls.GridView> Steuerelement) können nur den gesamten Header Abschnitt des Steuer Elements anzeigen oder ausblenden. Diese Daten gebundenen Steuerelemente unterstützen die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> Eigenschaft für ein einzelnes Schaltflächen Feld nicht. Um den gesamten Header Abschnitt eines Daten gebundenen Steuer Elements (sofern vorhanden) anzuzeigen oder auszublenden, verwenden Sie die- `ShowHeader` Eigenschaft für das-Steuerelement.  
  
 Sie können auch die Darstellung des <xref:System.Web.UI.WebControls.ButtonField> Objekts (Schriftfarbe, Hintergrundfarbe usw.) anpassen, indem Sie die Stileigenschaften für die verschiedenen Teile des Felds festlegen. In der folgenden Tabelle werden die verschiedenen Stileigenschaften aufgelistet.  
  
|Style-Eigenschaft|Die Stileinstellungen für|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Die untergeordneten Webserver-Steuerelemente des <xref:System.Web.UI.WebControls.ButtonField> .|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Der Footerbereich des <xref:System.Web.UI.WebControls.ButtonField> .|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Der Header Abschnitt von <xref:System.Web.UI.WebControls.ButtonField> .|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Die Datenelemente in der <xref:System.Web.UI.WebControls.ButtonField> .|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein-Objekt verwendet wird <xref:System.Web.UI.WebControls.ButtonField> , um eine Spalte mit Befehls Schaltflächen in einem-Steuerelement anzuzeigen <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ButtonField" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie den- <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> Konstruktor, um eine neue Instanz der-Klasse zu initialisieren <xref:System.Web.UI.WebControls.ButtonField> . Dieser Konstruktor wird häufig verwendet, wenn einem dynamisch erstellten Daten gebundenen Steuerelement Felder hinzugefügt werden.  
  
 Wenn Sie einem <xref:System.Web.UI.WebControls.ButtonField> Daten gebundenen Steuerelement ein-Objekt dynamisch hinzufügen möchten, erstellen Sie ein neues- <xref:System.Web.UI.WebControls.ButtonField> Objekt, legen Sie die zugehörigen Eigenschaften fest, und fügen Sie es der Feld Auflistung für das Daten gebundene Steuerelement hinzu. Wenn Sie z. b. das-Steuerelement verwenden, fügen Sie das-Objekt der-Auflistung <xref:System.Web.UI.WebControls.GridView> hinzu <xref:System.Web.UI.WebControls.ButtonField> <xref:System.Web.UI.WebControls.GridView.Columns%2A> .  
  
> [!NOTE]
>  Obwohl Sie Felder einem Daten gebundenen Steuerelement dynamisch hinzufügen können, sollten Felder statisch deklariert und dann nach Bedarf angezeigt oder ausgeblendet werden. Wenn Sie alle Felder statisch deklarieren, verringert sich die Größe des Ansichts Zustands für das übergeordnete Daten gebundene Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der M:System.Web.UI.WebControls.ButtonField. #ctor-Konstruktor verwendet wird, um einem-Steuerelement ein- <xref:System.Web.UI.WebControls.ButtonField> Objekt dynamisch hinzuzufügen <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Zeichenfolge ab, die die Aktion darstellt, die beim Klicken auf eine Schaltfläche in einem <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt ausgeführt werden soll, oder legt diese fest.</summary>
        <value>Der Name der Aktion, die ausgeführt werden soll, wenn auf eine Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonField" /> geklickt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> Eigenschaft, um einen Befehlsnamen, z. b. `"Add"` oder `"Remove"` , mit den Schaltflächen im- <xref:System.Web.UI.WebControls.ButtonField> Objekt zuzuordnen. Sie können die- <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> Eigenschaft auf eine beliebige Zeichenfolge festlegen, die die auszuführende Aktion angibt, wenn auf die Befehls Schaltfläche geklickt wird. Sie können den Befehlsnamen dann Programm gesteuert in einem Ereignishandler ermitteln und die entsprechenden Aktionen ausführen.  
  
> [!NOTE]
>  Alle Schaltflächen in einem- <xref:System.Web.UI.WebControls.ButtonField> Objekt verwenden denselben Befehlsnamen.  
  
 Daten gebundene Steuerelemente erkennen bestimmte Befehlsnamen und lösen die entsprechenden Ereignisse für das Steuerelement automatisch aus und lösen diese aus. Die folgenden Befehlsnamen werden erkannt:  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Um Paging aufzurufen, legen Sie die <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> auf `"Page"` und die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> des enthaltenen Steuer Elements auf <xref:System.Web.UI.WebControls.Button> `"First"` , `"Last"` , `"Prev"` , `"Next"` oder auf eine Seitenzahl fest. Da der <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> für ein- <xref:System.Web.UI.WebControls.ButtonField> Steuerelement immer der ganzzahlige Zeilen Index ist, ist ein- <xref:System.Web.UI.WebControls.ButtonField> Steuerelement zum Aufrufen von Paging nicht geeignet. Auch wenn Sie die Sortierung aufrufen können, indem Sie <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> auf festlegen `"Sort"` , <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> ist die-Eigenschaft für ein <xref:System.Web.UI.WebControls.ButtonField> Steuerelement immer der ganzzahlige Zeilen Index. Aus diesem Grund eignet sich ein <xref:System.Web.UI.WebControls.ButtonField> Steuerelement nicht zum Aufrufen der Sortierung. Bei benutzerdefinierten Befehlsnamen, wie z. b. `"Add"` und `"Remove"` , müssen Sie den Ereignis Code schreiben, um den Befehlsnamen zu überprüfen und benutzerdefinierte Aktionen auszuführen. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Nicht alle Befehlsnamen werden von allen Daten gebundenen Steuerelementen erkannt. Beispielsweise `"New"` wird vom-Steuerelement nicht erkannt <xref:System.Web.UI.WebControls.GridView> und `"Select"` vom-Steuerelement nicht erkannt <xref:System.Web.UI.WebControls.DetailsView> .  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> , um einen Befehlsnamen für die Schaltflächen in einem- <xref:System.Web.UI.WebControls.ButtonField> Objekt eines-Steuer Elements anzugeben <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="buttonField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Das <see cref="T:System.Web.UI.WebControls.DataControlField" />, in das die Eigenschaften der aktuellen <see cref="T:System.Web.UI.WebControls.ButtonField" /> kopiert werden sollen.</param>
        <summary>Kopiert die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekts in das angegebene <see cref="T:System.Web.UI.WebControls.DataControlField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> Methode ist eine Hilfsmethode, die von der-Methode verwendet wird, <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> um die Eigenschaften des aktuellen <xref:System.Web.UI.WebControls.ButtonFieldBase> , von abgeleiteten Objekts in das-Objekt zu kopieren <xref:System.Web.UI.WebControls.DataControlField> , das von der-Methode erstellt wurde <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> .  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn die <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> Methode in einer abgeleiteten Klasse überschrieben wird, wird die- <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> Methode der Basisklasse aufgerufen, um sicherzustellen, dass alle Eigenschaften des-Objekts kopiert werden.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="buttonField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt und gibt eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ButtonField" />-Klasse zurück.</summary>
        <returns>Eine neue Instanz der <see cref="T:System.Web.UI.WebControls.ButtonField" />-Klasse.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> Methode ist eine Hilfsmethode, die von der- <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> Methode der-Basisklasse verwendet wird, um ein leeres-Objekt zu erstellen, <xref:System.Web.UI.WebControls.ButtonField> in das die Eigenschaften des aktuellen, von <xref:System.Web.UI.WebControls.ButtonField> abgeleiteten Objekts kopiert werden sollen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Überschreiben <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> Sie die-Methode, um eine neue Instanz der abgeleiteten Klasse zurückzugeben. Nennen Sie nicht die- <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> Methode der Basisklasse.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextField : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenfelds ab, für das der Wert an die <see cref="P:System.Web.UI.WebControls.Button.Text" />-Eigenschaft des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements gebunden ist, das durch das <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt gerendert wird, oder legt diesen Namen fest.</summary>
        <value>Der Name des Felds, das an <see cref="T:System.Web.UI.WebControls.ButtonField" /> gebunden werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass die <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Eigenschaft eines- <xref:System.Web.UI.WebControls.ButtonField> Objekts auf den Wert oder festgelegt ist <xref:System.Web.UI.WebControls.ButtonType.Button> <xref:System.Web.UI.WebControls.ButtonType.Link> , verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft, um den Namen des Felds anzugeben, das an das-Objekt gebunden werden soll <xref:System.Web.UI.WebControls.ButtonField> . Die Werte des Felds werden dann als Text für die Schaltflächen im-Objekt angezeigt <xref:System.Web.UI.WebControls.ButtonField> . Optional können Sie den angezeigten Text formatieren, indem Sie die- <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> Eigenschaft festlegen.  
  
 Anstatt die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft zu verwenden, um ein- <xref:System.Web.UI.WebControls.ButtonField> Objekt an ein Feld aus einer Datenquelle zu binden, können Sie die-Eigenschaft verwenden, <xref:System.Web.UI.WebControls.ButtonField.Text%2A> um statischen Text für den Text der Schaltflächen im- <xref:System.Web.UI.WebControls.ButtonField> Objekt anzuzeigen. Wenn die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft verwendet wird, verwendet jede Schaltfläche dieselbe Beschriftung.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft festgelegt sind, hat die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft Vorrang.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> , um anzugeben, welches Feld in einer Spalte eines-Steuer Elements angezeigt werden soll <xref:System.Web.UI.WebControls.ButtonField> <xref:System.Web.UI.WebControls.GridView> .  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataTextFormatString : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die das Anzeigeformat für den Wert des Felds angibt, oder legt diese fest.</summary>
        <value>Eine Formatzeichenfolge, die das Anzeigeformat für den Wert des Felds angibt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass keine besondere Formatierung auf den Feldwert angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> Eigenschaft, um ein benutzerdefiniertes Anzeige Format für die Werte anzugeben, die im-Objekt angezeigt werden <xref:System.Web.UI.WebControls.ButtonField> . Wenn die <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> Eigenschaft nicht festgelegt ist, wird der Wert für das Feld ohne besondere Formatierung angezeigt.  
  
> [!NOTE]
>  Die Format Zeichenfolge wird nur angewendet, wenn die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft festgelegt wird.  
  
 Die Format Zeichenfolge kann eine beliebige Literalzeichenfolge sein und in der Regel einen Platzhalter für den Wert des Felds enthalten. Beispielsweise wird der Platzhalter in der Format Zeichenfolge durch `"Item Value: {0}"` `{0}` den Wert für das Feld ersetzt, wenn er im-Objekt angezeigt wird <xref:System.Web.UI.WebControls.ButtonField> . Der Rest der Format Zeichenfolge wird als Literaltext angezeigt.  
  
> [!NOTE]
>  Wenn die Format Zeichenfolge keinen Platzhalter enthält, ist der Wert für das Feld aus der Datenquelle nicht im letzten Anzeige Text enthalten.  
  
 Der Platzhalter besteht aus zwei Teilen, die durch einen Doppelpunkt getrennt und in geschweifte Klammern eingeschlossen sind (in Form von { `A` : `Bxx` }). Der Wert vor dem Doppel `A` Punkt (im allgemeinen Beispiel) gibt den Index für den Feldwert in einer Null basierten Liste von Parametern an.  
  
> [!NOTE]
>  Dieser `A` Parameter ist Teil der Formatierungs Syntax. Da in jeder Zelle nur ein Feldwert vorhanden ist, kann dieser Wert nur auf 0 festgelegt werden.  
  
 Der Doppelpunkt und die Werte nach dem Doppelpunkt sind optional. Das Zeichen nach dem Doppelpunkt ( `B` im allgemeinen Beispiel) gibt das Format an, in dem der Wert angezeigt werden soll. In der folgenden Tabelle sind die allgemeinen Formate aufgeführt.  
  
|Zeichen formatieren|BESCHREIBUNG|  
|----------------------|-----------------|  
|`C`|Zeigt numerische Werte im Währungs Format an.|  
|`D`|Zeigt numerische Werte im Dezimal Format an.|  
|`E`|Zeigt numerische Werte im wissenschaftlichen Format (exponentiell) an.|  
|`F`|Zeigt numerische Werte im Fixed-Format an.|  
|`G`|Zeigt numerische Werte im allgemeinen Format an.|  
|`N`|Zeigt numerische Werte im Zahlenformat an.|  
|`X`|Zeigt numerische Werte im Hexadezimal Format an.|  
  
> [!NOTE]
>  Mit Ausnahme von wird `X` bei den Formatzeichen die Groß-/Kleinschreibung beachtet. Das `X` Formatzeichen zeigt die hexadezimalen Zeichen in dem Fall an, dass angegeben wird.  
  
 Der Wert nach dem Formatzeichen ( `xx` im allgemeinen Beispiel) gibt die Anzahl von signifikanten Ziffern oder Dezimalstellen an, die angezeigt werden sollen. Die Format Zeichenfolge `"{0:F2}"` zeigt z. b. eine Festkomma Zahl mit zwei Dezimalstellen an.  
  
 Weitere Informationen zum Formatieren von Zeichenfolgen finden Sie unter [Formatierungstypen](/dotnet/standard/base-types/formatting-types).  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> , um ein benutzerdefiniertes Anzeige Format für die Werte eines Felds anzugeben.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataTextValue : obj -&gt; string&#xA;override this.FormatDataTextValue : obj -&gt; string" Usage="buttonField.FormatDataTextValue dataTextValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Der zu formatierende Feldwert.</param>
        <summary>Formatiert den angegebenen Feldwert für eine Zelle im <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt.</summary>
        <returns>Der Feldwert, der in das von der <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />-Eigenschaft angegebene Format konvertiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der-Methode handelt es sich um <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> eine Hilfsmethode, die verwendet wird, um einen Feldwert in das von der-Eigenschaft angegebene Format zu transformieren <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> .  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die- <see cref="T:System.Web.UI.WebControls.ButtonField" /> Klasse erweitern, können Sie die- <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> Methode überschreiben, um eine benutzerdefinierte Formatierungs Routine auszuführen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.UrlProperty]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Bild ab, das für jede Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt angezeigt werden soll, oder legt dieses fest.</summary>
        <value>Das Bild, das für jede Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonField" /> angezeigt werden soll. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass die <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />-Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Eigenschaft eines- <xref:System.Web.UI.WebControls.ButtonField> Objekts auf den Wert festgelegt ist <xref:System.Web.UI.WebControls.ButtonType.Image> , verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> Eigenschaft, um das Bild anzugeben, das für jede Schaltfläche angezeigt werden soll. Dieses Bild kann in einem beliebigen Dateiformat (JPG, GIF, BMP usw.) vorliegen, solange der Client Browser dieses Format unterstützt.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> , um ein Bild anzugeben, das für jede Schaltfläche im-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.ButtonField> . Damit dieses Codebeispiel angezeigt werden kann, müssen Sie ein eigenes Bild bereitstellen.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (sortingEnabled As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="buttonField.Initialize (sortingEnabled, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled"><see langword="true" />, um die Sortierung zu aktivieren, andernfalls <see langword="false" />.</param>
        <param name="control">Das Datensteuerelement, das das <see cref="T:System.Web.UI.WebControls.ButtonField" /> besitzt.</param>
        <summary>Initialisiert das aktuelle <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt.</summary>
        <returns><see langword="false" /> gibt an, dass keine erneute Bindung des Steuerelements an die Daten erfolgen muss.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> Methode wird von dem Daten Steuerelement aufgerufen, dem das- <xref:System.Web.UI.WebControls.ButtonField> Objekt zugeordnet ist, um die grundlegende Objekt Initialisierung für Instanzen des Felds auszuführen, bevor das Feld einer Zeilen Auflistung hinzugefügt wird. Daten Steuerelemente, wie z. b. <xref:System.Web.UI.WebControls.DetailsView> und <xref:System.Web.UI.WebControls.GridView> , rufen die- <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> Methode in ihren Methoden auf, `CreateChildControls` bevor andere Methoden, z `CreateRow` . b., aufgerufen werden, um bestimmte Zeilen mit Daten zu erstellen  
  
 Ruft die- <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> Methode auf, wenn Sie ein benutzerdefiniertes Daten gebundenes Steuerelement schreiben, das- <xref:System.Web.UI.WebControls.TableCell> Objekte verwendet, um die grundlegende Initialisierung eines- <xref:System.Web.UI.WebControls.ButtonField> Objekts auszuführen Implementieren Sie diese Methode, wenn <xref:System.Web.UI.WebControls.ButtonField> der von abgeleitete Typ eine Objekt Initialisierung erfordert, bevor- <xref:System.Web.UI.WebControls.TableCell> Objekte mit Daten oder Steuerelementen in der-Methode aufgefüllt werden <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> .  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie sollten die <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> -Methode überschreiben und zurückgeben <see langword="true" /> , wenn das Feld erfordert, dass die Datenbindung beim Postback durchgeführt wird, damit das Feld ordnungsgemäß funktioniert.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="buttonField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />.</param>
        <param name="cellType">Ein <see cref="T:System.Web.UI.WebControls.DataControlCellType" />-Wert, der den Typ der Zeile (Kopfzeile, Fußzeile oder Datenzeile) angibt.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="rowIndex">Der nullbasierte Index der Zeile.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />-Objekt mit dem angegebenen Zeilenzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> -Methode erstellt den Schalt Flächentyp, der durch die-Eigenschaft angegeben wird, <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> und fügt Sie der-Auflistung <xref:System.Web.UI.Control.Controls%2A> des-Objekts hinzu <xref:System.Web.UI.WebControls.DataControlFieldCell> . Die- <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft des- <xref:System.Web.UI.WebControls.Button> Steuer Elements ist auf festgelegt `rowIndex` .  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.ButtonField.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die statische Beschriftung ab, die für jede Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt angezeigt wird, oder legt diese fest.</summary>
        <value>Die Beschriftung, die für jede Schaltfläche im <see cref="T:System.Web.UI.WebControls.ButtonField" /> angezeigt wird. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die- <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> Eigenschaft eines- <xref:System.Web.UI.WebControls.ButtonField> Objekts auf den-Wert oder den-Wert festgelegt ist <xref:System.Web.UI.WebControls.ButtonType.Button> <xref:System.Web.UI.WebControls.ButtonType.Link> , verwenden Sie die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft, um statischen Text für die Beschriftung der Schaltflächen in anzuzeigen <xref:System.Web.UI.WebControls.ButtonField> . Jede Schaltfläche verfügt über dieselbe Beschriftung.  
  
 Anstatt die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft zum Anzeigen von statischem Text in einem-Objekt zu verwenden <xref:System.Web.UI.WebControls.ButtonField> , können Sie die-Eigenschaft verwenden, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> um das <xref:System.Web.UI.WebControls.ButtonField> an ein Feld in einer Datenquelle zu binden. Die Werte des Felds werden dann als Beschriftung der Schaltflächen angezeigt.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> -Eigenschaft und die- <xref:System.Web.UI.WebControls.ButtonField.Text%2A> Eigenschaft festgelegt sind, hat die- <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> Eigenschaft Vorrang.  
  
 Der Wert dieser Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.ButtonField.Text%2A> , um die Beschriftung anzugeben, die für jede Schaltfläche in einem-Objekt angezeigt werden soll <xref:System.Web.UI.WebControls.ButtonField> .  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="buttonField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die in einem <see cref="T:System.Web.UI.WebControls.ButtonField" />-Objekt enthaltenen Steuerelemente Rückrufe unterstützen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der- <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Methode handelt es sich um eine Hilfsmethode, mit der bestimmt wird, ob die in einem-Objekt enthaltenen Steuerelemente <xref:System.Web.UI.WebControls.ButtonField> Rückrufe unterstützen. Diese Methode wird als leere Methode (eine Methode, die keinen Code enthält) implementiert, um anzugeben, dass Rückrufe unterstützt werden.  
  
> [!NOTE]
>  Die- <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Methode wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klassen, die von der- <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse abgeleitet werden, können die- <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> Methode überschreiben, um anzugeben, ob die im Feld enthaltenen Steuerelemente Rückrufe unterstützen. Um anzugeben, dass Rückrufe unterstützt werden, implementieren Sie die <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> Methode als leere Methode, die keine Ausnahme auslöst. andernfalls lösen Sie eine Ausnahme mit einer nützlichen Meldung aus, die beschreibt, warum Rückrufe nicht unterstützt werden.</para></block>
      </Docs>
    </Member>
  </Members>
</Type>
