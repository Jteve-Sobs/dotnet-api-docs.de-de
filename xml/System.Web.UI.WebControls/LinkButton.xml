<Type Name="LinkButton" FullName="System.Web.UI.WebControls.LinkButton">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b097e82914533d3113c202d224143b3865943682" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86612159" /></Metadata><TypeSignature Language="C#" Value="public class LinkButton : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkButton extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinkButton" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkButton&#xA;Inherits WebControl&#xA;Implements IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkButton : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type LinkButton = class&#xA;    inherit WebControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class LinkButton : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinkButton extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class LinkButton&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinkButton : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type LinkButton = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultEvent("Click")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultEvent("Click")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.DefaultProperty("Text")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultProperty("Text")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LinkButtonControlBuilder))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LinkButtonControlBuilder))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Web.UI.ParseChildren(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ParseChildren(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName Language="C#">[System.Web.UI.ToolboxData("&lt;{0}:LinkButton runat=server&gt;LinkButton&lt;/{0}:LinkButton&gt;")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ToolboxData("&lt;{0}:LinkButton runat=server&gt;LinkButton&lt;/{0}:LinkButton&gt;")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName Language="C#">[System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Web.UI.SupportsEventValidation]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.SupportsEventValidation&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Web.UI.ToolboxData("&lt;{0}:LinkButton runat="server"&gt;LinkButton&lt;/{0}:LinkButton&gt;")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.ToolboxData("&lt;{0}:LinkButton runat="server"&gt;LinkButton&lt;/{0}:LinkButton&gt;")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinkButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName Language="C#">[System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Schaltflächensteuerelement im Linkformat auf einer Webseite an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Introduction (Einführung)](#introduction)

-   [LinkButton-Steuerelemente und Validierung](#ButtonControlsAndValidation)

-   [Deklarative Syntax](#DeclarativeSyntax)

<a name="introduction"></a>
## <a name="introduction"></a>Einführung
 Verwenden Sie das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement, um auf der Webseite eine Schaltfläche im Hyperlink-Stil zu erstellen. Das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement hat dieselbe Darstellung wie ein-Steuerelement <xref:System.Web.UI.WebControls.HyperLink> , verfügt jedoch über die gleichen Funktionen wie ein-Steuerelement <xref:System.Web.UI.WebControls.Button> . Wenn Sie beim Klicken auf das-Steuerelement eine Verknüpfung mit einer anderen Webseite herstellen möchten, sollten Sie das-Steuerelement verwenden <xref:System.Web.UI.WebControls.HyperLink> .

> [!NOTE]
>  Das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement rendert JavaScript in den Client Browser. Für den Client Browser muss JavaScript aktiviert sein, damit dieses Steuerelement ordnungsgemäß funktioniert. Weitere Informationen zu Client Skripts finden Sie unter [Client Script in ASP.net Web Pages](https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)).

 Sie können entweder eine Schaltfläche zum Senden oder eine Befehls Schaltfläche erstellen. Der Schaltfläche "Senden" ist kein Befehls Name zugeordnet. Mit der Schaltfläche wird die Webseite einfach an den Server zurückgesendet. Standardmäßig ist ein- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement eine Schaltfläche zum Senden. Sie können einen Ereignishandler für das- <xref:System.Web.UI.WebControls.LinkButton.Click> Ereignis bereitstellen, um die Aktionen Programm gesteuert zu steuern, die beim Klicken auf die Schaltfläche Senden ausgeführt werden. Auf der anderen Seite hat eine Befehls Schaltfläche einen Befehlsnamen, der der Schaltfläche zugeordnet ist, z `Sort` . b.. Legen Sie die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft fest, um den Befehlsnamen anzugeben. Dies ermöglicht es Ihnen, mehrere <xref:System.Web.UI.WebControls.LinkButton> Steuerelemente auf einer Webseite zu erstellen und Programm gesteuert zu ermitteln, auf welches <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Sie können auch die- <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> Eigenschaft mit einer Befehls Schaltfläche verwenden, um zusätzliche Informationen über den auszuführenden Befehl bereitzustellen, z. b. die aufsteigende Reihenfolge. Sie können auch einen Ereignishandler für das- <xref:System.Web.UI.WebControls.LinkButton.Command> Ereignis bereitstellen, um die Aktion Programm gesteuert zu steuern, die beim Klicken auf die Befehls Schaltfläche ausgeführt wird.

> [!CAUTION]
>  Dieses Steuerelement kann zum Anzeigen von Benutzereingaben verwendet werden, die möglicherweise böswillige Client Skripts enthalten. Text ist nicht HTML-codiert, bevor er im-Steuerelement angezeigt wird <xref:System.Web.UI.WebControls.LinkButton> . Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Validierungsserver Steuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Validation Server Control-Syntax](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).

<a name="ButtonControlsAndValidation"></a>
## <a name="linkbutton-controls-and-validation"></a>LinkButton-Steuerelemente und Validierung
 Standardmäßig wird die Seiten Validierung durchgeführt, wenn auf ein <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Die Seiten Validierung bestimmt, ob die Eingabe Steuerelemente, die einem Validierungs Steuerelement auf der Seite zugeordnet sind, die vom Validierungs Steuerelement angegebenen Validierungsregeln bestehen. Legen Sie die-Eigenschaft auf fest, um zu verhindern, dass Seiten Validierung stattfindet <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> `false` .

<a name="DeclarativeSyntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:LinkButton
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CausesValidation="True|False"
    CommandArgument="string"
    CommandName="string"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    OnClick="Click event handler"
    OnClientClick="string"
    OnCommand="Command event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PostBackUrl="uri"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    Text="string"
    ToolTip="string"
    ValidationGroup="string"
    Visible="True|False"
    Width="size"
/>
```



## Examples
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=192872).

 Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.LinkButton> Steuerelement erstellt wird, das Text in einem-Steuerelement anzeigt, <xref:System.Web.UI.WebControls.Label> Wenn auf den Link geklickt wird.

 [!code-aspx-csharp[Classic LinkButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton Example/VB/sourcevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Button" />
    <altmember cref="T:System.Web.UI.WebControls.ImageButton" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">Client Skript in ASP.net Web Pages</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkButton ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkButton();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.LinkButton" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz des-Steuer Elements zu erstellen und zu initialisieren <xref:System.Web.UI.WebControls.LinkButton> .



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie eine neue Instanz des-Steuer Elements erstellt und initialisiert wird <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[Classic LinkButton.LinkButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.LinkButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.LinkButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.LinkButton Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="linkButton.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" /> mit dem Ausgabestream, der auf dem Client gerendert werden soll.</param>
        <summary>Fügt die Attribute eines <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements zum Ausgabestream hinzu, der auf dem Client gerendert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Web.UI.WebControls.LinkButton.AddAttributesToRender%2A> Methode in einem benutzerdefinierten Server Steuerelement überschrieben wird, sodass der <xref:System.Web.UI.WebControls.LinkButton> Text für Listenelemente immer fett angezeigt wird.

 [!code-aspx-csharp[CustomLinkButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonAddAttributesToRender/CS/custom_linkbutton_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomLinkButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonAddAttributesToRender/VB/custom_linkbutton_addattributestorendervb.aspx#1)]
[!code-csharp[CustomLinkButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonAddAttributesToRender/CS/custom_linkbutton_addattributestorender.cs#2)]
[!code-vb[CustomLinkButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonAddAttributesToRender/VB/custom_linkbutton_addattributestorender.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="linkButton.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein <see cref="T:System.Object" />, das das analysierte Element darstellt.</param>
        <summary>Benachrichtigt das Steuerelement, dass entweder ein XML- oder ein HTML-Element analysiert wurde, und fügt das Element dem <see cref="T:System.Web.UI.ControlCollection" />-Objekt des Steuerelements hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.LinkButton.AddParsedSubObject%2A> -Methode in einem benutzerdefinierten <xref:System.Web.UI.WebControls.LinkButton> Server Steuerelement überschrieben wird, sodass die Text-Eigenschaft entweder auf die Text-Eigenschaft des analysierten Objekts festgelegt wird, wenn es sich bei dem analysierten Objekt um ein- <xref:System.Web.UI.WebControls.Literal> Objekt handelt, andernfalls auf eine leere Zeichenfolge.

 [!code-aspx-csharp[CustomLinkButtonAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonAddParsedSubObject/CS/custom_linkbutton_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomLinkButtonAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonAddParsedSubObject/VB/custom_linkbutton_addparsedsubobjectvb.aspx#1)]
[!code-csharp[CustomLinkButtonAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonAddParsedSubObject/CS/custom_linkbutton_addparsedsubobject.cs#2)]
[!code-vb[CustomLinkButtonAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonAddParsedSubObject/VB/custom_linkbutton_addparsedsubobject.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Literal" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.LinkButton.CausesValidation" />
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.ComponentModel.Bindable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement eine Validierung durchgeführt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Klicken auf das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement eine Validierung durchgeführt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Standardmäßig wird die Seiten Validierung durchgeführt, wenn auf ein <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Die Seiten Validierung bestimmt, ob die Eingabe Steuerelemente, die einem Validierungs Steuerelement auf der Seite zugeordnet sind, die vom Validierungs Steuerelement angegebenen Validierungsregeln bestehen.

 Sie können angeben (oder bestimmen), ob die Überprüfung sowohl auf dem Client als auch auf dem Server ausgeführt wird, wenn auf ein <xref:System.Web.UI.WebControls.LinkButton> Steuerelement mithilfe der-Eigenschaft geklickt wird <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> . Legen Sie die-Eigenschaft auf fest, um zu verhindern, dass eine Validierung ausgeführt wird <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> `false` .

 Diese Eigenschaft wird `false` im Allgemeinen für die Schaltfläche Zurücksetzen oder Löschen festgelegt, um zu verhindern, dass die Validierung beim Klicken auf die Schaltfläche ausgeführt wird.

 Wenn der Wert der- <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> Eigenschaft auf festgelegt ist `true` , können Sie auch die- <xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A> Eigenschaft verwenden, um den Namen der Validierungs Gruppe anzugeben, für die das Steuerelement eine <xref:System.Web.UI.WebControls.LinkButton> Validierung veranlasst.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> , um das Auftreten der Seiten Validierung zu verhindern. Beachten Sie, dass die- <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> Methode jedes Validierungs Steuerelement unabhängig aktiviert.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[LinkButtonCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LinkButtonCausesValidation/CS/linkbuttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[LinkButtonCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LinkButtonCausesValidation/VB/linkbuttoncausesvalidationvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.LinkButton.ValidationGroup" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinkButton.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.LinkButton" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.LinkButton.Click> Ereignis wird ausgelöst, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn dem Steuerelement kein Befehls Name zugeordnet ist <xref:System.Web.UI.WebControls.LinkButton> , wie im Fall einer Schaltfläche zum Senden.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie einen Handler für das-Ereignis angeben und Codieren <xref:System.Web.UI.WebControls.LinkButton.Click> , um eine Meldung anzuzeigen, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

 [!code-aspx-csharp[Classic LinkButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinkButton.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.LinkButton" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.LinkButton.Command> Ereignis wird ausgelöst, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn ein Befehls Name, wie z `Sort` . b., dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.LinkButton> . Dies ermöglicht es Ihnen, mehrere <xref:System.Web.UI.WebControls.LinkButton> Steuerelemente auf einer Webseite zu erstellen und Programm gesteuert zu ermitteln, auf welches <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

> [!NOTE]
>  Das- <xref:System.Web.UI.WebControls.LinkButton.Command> Ereignis wird durch die Steuerelement Hierarchie in Form von ausgelöst `BubbleEvent` .

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](/dotnet/standard/events/).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie einen Handler für das-Ereignis angeben und Codieren <xref:System.Web.UI.WebControls.LinkButton.Click> , um eine Meldung anzuzeigen, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

 [!code-aspx-csharp[Classic LinkButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein zusammen mit der zugeordneten <see cref="E:System.Web.UI.WebControls.LinkButton.Command" />-Eigenschaft an den <see cref="P:System.Web.UI.WebControls.LinkButton.CommandName" />-Ereignishandler übergebenes optionales Argument ab oder legt dieses fest.</summary>
        <value>Ein zusammen mit der zugeordneten <see cref="E:System.Web.UI.WebControls.LinkButton.Command" />-Eigenschaft an den <see cref="P:System.Web.UI.WebControls.LinkButton.CommandName" />-Ereignishandler übergebenes optionales Argument. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die- <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> Eigenschaft, um ein Argument anzugeben, das die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft ergänzt.

> [!NOTE]
>  Die- <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> Eigenschaft wird in der Regel nur verwendet, wenn die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft festgelegt wird.

 Die- <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> Eigenschaft ergänzt die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft, indem Sie zusätzliche Informationen über den auszuführenden Befehl bereitstellen können. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> -Eigenschaft auf festlegen `Sort` und die- <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> Eigenschaft auf festlegen, um `Ascending` einen Befehl anzugeben, der in aufsteigender Reihenfolge sortiert werden soll.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> , um ein optionales Argument anzugeben, das den Befehlsnamen für ein-Steuerelement ergänzt <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[Classic LinkButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Command" />
        <altmember cref="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.LinkButton.CommandName" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Befehlsnamen ab, der dem <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement zugeordnet ist, oder legt diesen fest. Dieser Wert wird zusammen mit der <see cref="E:System.Web.UI.WebControls.LinkButton.Command" />-Eigenschaft an den <see cref="P:System.Web.UI.WebControls.LinkButton.CommandArgument" />-Ereignishandler übergeben.</summary>
        <value>Der Befehlsname des <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements. Der Standardwert ist <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie über mehrere Steuer <xref:System.Web.UI.WebControls.LinkButton> Elemente auf einer Webseite verfügen, verwenden Sie die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft, um den dem Steuerelement zugeordneten Befehlsnamen anzugeben oder zu bestimmen <xref:System.Web.UI.WebControls.LinkButton> . Sie können die- <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> Eigenschaft mit einer beliebigen Zeichenfolge festlegen, die den auszuführenden Befehl identifiziert. Sie können dann Programm gesteuert den Befehlsnamen des Steuer Elements bestimmen <xref:System.Web.UI.WebControls.LinkButton> und die entsprechenden Aktionen ausführen.

 Zusätzliche Informationen über den Befehl, z. b. eine `Ascending` Sortierreihenfolge, können mithilfe der-Eigenschaft angegeben werden <xref:System.Web.UI.WebControls.LinkButton.CommandArgument%2A> .

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.CommandName%2A> , um einen Befehlsnamen für ein-Steuerelement anzugeben <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[Classic LinkButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Command" />
        <altmember cref="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.LinkButton.CommandArgument" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="linkButton.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Web.UI.PostBackOptions" />-Objekt, das das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements darstellt.</summary>
        <returns><see cref="T:System.Web.UI.PostBackOptions" />, die das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.LinkButton.GetPostBackOptions%2A> -Methode erstellt ein <xref:System.Web.UI.PostBackOptions> -Objekt, das das <xref:System.Web.UI.WebControls.LinkButton> Post Back Verhalten des-Steuer Elements darstellt. Das- <xref:System.Web.UI.PostBackOptions> Objekt wird dann in der Regel an die-Methode weitergegeben <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> , die verwendet wird, um einen Verweis auf eine Client seitige Skriptfunktion zu erhalten, die beim Aufrufen den Server zurück an die Seite sendet.

 Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn die-Klasse erweitert wird <xref:System.Web.UI.WebControls.LinkButton> .

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können die- <see cref="M:System.Web.UI.WebControls.LinkButton.GetPostBackOptions" /> Methode in der abgeleiteten Klasse überschreiben, um die Post Back Optionen für das Schaltflächen-Steuerelement zu ändern, oder um Client seitiges Skript aufzurufen, wenn auf die Schaltfläche geklickt wird. Stellen Sie sicher, dass die-Methode der Basisklasse aufgerufen wird <see cref="M:System.Web.UI.WebControls.LinkButton.GetPostBackOptions" /> , damit die Standard-Post Back Optionen festgelegt werden.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">Client Skript in ASP.net Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="linkButton.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den wiederherzustellenden Steuerelementzustand darstellt.</param>
        <summary>Stellt Ansichtszustandsinformationen von einer vorherigen Anforderung wieder her, die mit der <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />-Methode gespeichert wurde.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="linkButton.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinkButton.Click" />-Ereignis des <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.LinkButton.Click> Ereignis wird ausgelöst, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn dem Steuerelement kein Befehls Name zugeordnet ist <xref:System.Web.UI.WebControls.LinkButton> , wie im Fall einer Schaltfläche zum Senden.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).

 Mit der <xref:System.Web.UI.WebControls.LinkButton.OnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie einen Handler für das-Ereignis angeben und codieren, <xref:System.Web.UI.WebControls.LinkButton.Click> um anzuzeigen, auf welches <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

 [!code-aspx-csharp[Classic LinkButton Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.LinkButton.OnClick(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das clientseitige Skript ab, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.LinkButton.Click" />-Ereignis ausgelöst wird, oder legt das clientseitige Skript fest.</summary>
        <value>Das clientseitige Skript, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.LinkButton.Click" />-Ereignis ausgelöst wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die- <xref:System.Web.UI.WebControls.LinkButton.OnClientClick%2A> Eigenschaft, um zusätzliches Client seitiges Skript anzugeben, das ausgeführt wird, wenn das <xref:System.Web.UI.WebControls.LinkButton> -Ereignis des-Steuer Elements <xref:System.Web.UI.WebControls.LinkButton.Click> ausgelöst wird. Das Skript, das Sie für diese Eigenschaft angeben, wird im <xref:System.Web.UI.WebControls.LinkButton> -Attribut des Steuer Elements zusätzlich `OnClick` zum vordefinierten Client seitigen Skript des-Steuer Elements gerendert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.OnClientClick%2A> , um zusätzliches Client seitiges Skript anzugeben, das beim Klicken auf ein-Steuerelement ausgeführt <xref:System.Web.UI.WebControls.LinkButton> wird.

 [!code-aspx-csharp[LinkButton.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LinkButton.OnClientClick/CS/linkbutton.onclientclickcs.aspx#1)]
 [!code-aspx-vb[LinkButton.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LinkButton.OnClientClick/VB/linkbutton.onclientclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Click" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="linkButton.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.LinkButton.Command" />-Ereignis des <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das- <xref:System.Web.UI.WebControls.LinkButton.Command> Ereignis wird ausgelöst, wenn auf das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn ein Befehls Name, wie z `Sort` . b., dem-Steuerelement zugeordnet ist <xref:System.Web.UI.WebControls.LinkButton> . Dies ermöglicht es Ihnen, mehrere <xref:System.Web.UI.WebControls.LinkButton> Steuerelemente auf einer Webseite zu erstellen und Programm gesteuert zu ermitteln, auf welches <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

> [!NOTE]
>  Das- <xref:System.Web.UI.WebControls.LinkButton.Command> Ereignis wird durch die Steuerelement Hierarchie in Form von ausgelöst `BubbleEvent` .

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [behandeln und Auswerfen von Ereignissen](/dotnet/standard/events/).

 Mit der <xref:System.Web.UI.WebControls.LinkButton.OnCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie Sie einen Handler für das-Ereignis angeben und codieren, <xref:System.Web.UI.WebControls.LinkButton.Command> um anzuzeigen, auf welches <xref:System.Web.UI.WebControls.LinkButton> Steuerelement geklickt wird.

 [!code-aspx-csharp[Classic LinkButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.LinkButton.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="linkButton.OnPreRender e" />
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Löst das <see cref="E:System.Web.UI.Control.PreRender" />-Ereignis aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.LinkButton.OnPreRender%2A> Methode benachrichtigt das- <xref:System.Web.UI.WebControls.LinkButton> Steuerelement, dass vor dem Speichern von Ansichts Zustand und Rendern des Inhalts auf dem Client alle erforderlichen vorab Schritte ausgeführt werden.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Methode überschrieben <xref:System.Web.UI.WebControls.LinkButton.OnPreRender%2A> wird, sodass ein Rahmen niemals in einem benutzerdefinierten Steuerelement angezeigt wird <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[CustomLinkButtonOnPreRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonOnPreRender/CS/custom_linkbutton_onprerendercs.aspx#1)]
 [!code-aspx-vb[CustomLinkButtonOnPreRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonOnPreRender/VB/custom_linkbutton_onprerendervb.aspx#1)]
[!code-csharp[CustomLinkButtonOnPreRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonOnPreRender/CS/custom_linkbutton_onprerender.cs#2)]
[!code-vb[CustomLinkButtonOnPreRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonOnPreRender/VB/custom_linkbutton_onprerender.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.UrlProperty("*.aspx")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.UrlProperty("*.aspx")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL der Seite ab, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement geklickt wird, oder legt diese fest.</summary>
        <value>Die URL der Webseite, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement geklickt wird. Der Standardwert ist eine leere Zeichenfolge (""), wodurch die Seite an sich selbst zurückgesendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die- <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> Eigenschaft ermöglicht es Ihnen, mithilfe des-Steuer Elements einen Kreuz seitigen Beitrag auszuführen <xref:System.Web.UI.WebControls.LinkButton> . Legen Sie die- <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> Eigenschaft auf die URL der Webseite fest, an die beim Klicken auf das-Steuerelement gepostet werden soll <xref:System.Web.UI.WebControls.LinkButton> . Beispielsweise bewirkt die Angabe von Page2. aspx, dass die Seite, die das Steuerelement enthält, <xref:System.Web.UI.WebControls.LinkButton> in gepostet wird `Page2.aspx` . Wenn Sie keinen Wert für die-Eigenschaft angeben <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> , wird die Seite wieder an sich selbst zurückgesendet.

> [!IMPORTANT]
>  Wenn Sie ein Seiten übergreifendes Postback mit Steuerelementen mit serverseitiger Validierung durchführen, sollten Sie überprüfen, ob die-Eigenschaft der Seite <xref:System.Web.UI.Page.IsValid%2A> `true` vor der Verarbeitung des Postbacks liegt. Im Fall eines Seiten übergreifenden Postbacks ist die zu überprüfen Seite das PreviousPage. Der folgende Visual Basic Code zeigt, wie dies geschieht:

```
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Page.PreviousPage.IsValid Then
            ' Handle the post back
        Else
            Response.Write("Invalid")
        End If
End Sub
```

 Weitere Informationen zu Seiten übergreifenden Bereitstellungstechniken finden Sie unter [Page Page Posting in ASP.net Web Forms](https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100)).

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> , um einen Seiten übergreifenden Beitrag auszuführen. Wenn der Benutzer auf das-Steuerelement klickt <xref:System.Web.UI.WebControls.LinkButton> , wird der im Textfeld eingegebene Wert von der Seite an die durch die-Eigenschaft angegebene Zielseite gepostet <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> . Um dieses Beispiel ausführen zu können, müssen Sie auch eine Datei für die Zielseite im gleichen Verzeichnis wie dieses Codebeispiel erstellen. Der Code für die Zielseite wird im nächsten Beispiel bereitgestellt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[LinkButton.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LinkButton.PostBackUrlProperty/CS/linkbutton.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[LinkButton.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LinkButton.PostBackUrlProperty/VB/linkbutton.postbackurlpropertyvb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> , um auf einen Wert zuzugreifen, der mithilfe der-Eigenschaft von einer anderen Seite gepostet wurde <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> . Diese Seite ruft die Zeichenfolge ab, die von der vorherigen Seite gepostet wurde, und zeigt Sie dem Benutzer an. Wenn Sie versuchen, dieses Codebeispiel direkt auszuführen, erhalten Sie eine Fehlermeldung, da der Wert des `text` Felds ist `null` . Verwenden Sie stattdessen diesen Code zum Erstellen einer Zielseite, und platzieren Sie die Datei im gleichen Verzeichnis wie der Code für das vorherige Beispiel. Der Name der Datei muss dem Wert entsprechen, der im vorherigen Beispiel für die-Eigenschaft angegeben wurde <xref:System.Web.UI.WebControls.LinkButton.PostBackUrl%2A> . Wenn Sie den Code für das vorherige Beispiel ausführen, wird diese Seite automatisch ausgeführt, wenn der Seiten übergreifende Post auftritt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[LinkButton.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LinkButton.PostBackUrlPage2/CS/linkbutton.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[LinkButton.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LinkButton.PostBackUrlPage2/VB/linkbutton.postbackurlpage2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178139(v=vs.100)">Seiten übergreifendes Posting auf einer ASP.NET-Webseite</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="linkButton.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieses Ereignis wird vom-Steuerelement intern verwendet <xref:System.Web.UI.WebControls.LinkButton> , wenn auf das-Steuerelement geklickt wird, um ein <xref:System.Web.UI.WebControls.LinkButton.Click> -Ereignis und ggf. ein-Ereignis zu erhöhen <xref:System.Web.UI.WebControls.LinkButton.Command> .

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Click" />
        <altmember cref="E:System.Web.UI.WebControls.LinkButton.Command" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="linkButton.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream zum Rendern des HTML-Inhalts auf dem Client darstellt.</param>
        <summary>Rendert den Inhalt des Steuerelements im angegebenen Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Web.UI.WebControls.LinkButton.RenderContents%2A> Methode in einem benutzerdefinierten Server Steuerelement überschrieben wird, sodass ein Text an die angefügt wird <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[CustomLinkButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonRenderContents/CS/custom_linkbutton_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomLinkButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonRenderContents/VB/custom_linkbutton_rendercontentsvb.aspx#1)]
[!code-csharp[CustomLinkButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLinkButtonRenderContents/CS/custom_linkbutton_rendercontents.cs#2)]
[!code-vb[CustomLinkButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLinkButtonRenderContents/VB/custom_linkbutton_rendercontents.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public override bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.LinkButton.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob vom Steuerelement das <see langword="disabled" />-Attribut des gerenderten HTML-Elements auf "disabled" festgelegt werden soll, wenn die <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />-Eigenschaft des Steuerelements <see langword="false" /> ist.</summary>
        <value><see langword="true" /> , wenn die- <see cref="P:System.Web.UI.Control.RenderingCompatibility" /> Eigenschaft eine ASP.NET-Version unter <c>4,0</c>angibt, andernfalls <see langword="false" /> .</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Eigenschaft gibt an, wie ASP.net html für ein Steuerelement erzeugen soll, wenn das Steuerelement deaktiviert ist. Wenn diese Eigenschaft ist `true` , rendert ASP.net ein- `disabled` Attribut, wenn ein-Steuerelement deaktiviert ist. Wenn diese Eigenschaft ist `false` , rendert ASP.net ein- `class` Attribut, wenn ein-Steuerelement deaktiviert ist. Weitere Informationen finden Sie unter <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A?displayProperty=nameWithType>.

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinkButton.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="linkButton.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Web.UI.WebControls.LinkButton>-Instanz in eine <xref:System.Web.UI.IPostBackEventHandler>-Schnittstelle umgewandelt wird.

 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.Bindable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Bindable(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.Localizable(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.Localizable(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den auf dem <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement angezeigten Beschriftungstext ab oder legt diesen fest.</summary>
        <value>Der auf dem <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement angezeigte Beschriftungstext. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die- <xref:System.Web.UI.WebControls.LinkButton.Text%2A> Eigenschaft, um die Beschriftung anzugeben oder zu bestimmen, die im Steuerelement angezeigt werden soll <xref:System.Web.UI.WebControls.LinkButton> .

> [!CAUTION]
>  Dieses Steuerelement kann zum Anzeigen von Benutzereingaben verwendet werden, die möglicherweise böswillige Client Skripts enthalten. Überprüfen Sie alle Informationen, die von einem Client für ausführbare Skripts, SQL-Anweisungen oder anderen Code gesendet werden, bevor Sie ihn in der Anwendung anzeigen. ASP.net bietet eine Überprüfungs Funktion für die Eingabe Anforderung zum Blockieren von Skripts und HTML in Benutzereingaben. Validierungsserver Steuerelemente werden ebenfalls bereitgestellt, um Benutzereingaben zu bewerten. Weitere Informationen finden Sie unter [Validation Server Control-Syntax](https://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Beispiel wird veranschaulicht, wie die-Eigenschaft verwendet wird <xref:System.Web.UI.WebControls.LinkButton.Text%2A> , um die Beschriftung anzugeben, die auf dem-Steuerelement angezeigt wird <xref:System.Web.UI.WebControls.LinkButton> .

 [!code-aspx-csharp[Classic LinkButton.CommandName Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic LinkButton.CommandName Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic LinkButton.CommandName Example/VB/sourcevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinkButton.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.LinkButton.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue("")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue("")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Steuerelementen ab, für die das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet, oder legt diese fest.</summary>
        <value>Die Gruppe von Steuerelementen, für die das <see cref="T:System.Web.UI.WebControls.LinkButton" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Validierungs Gruppen ermöglichen es Ihnen, Validierungs Steuerelemente auf einer Seite einer bestimmten Kategorie zuzuweisen. Jede Validierungs Gruppe kann unabhängig von anderen Validierungs Gruppen auf der Seite überprüft werden. Verwenden Sie die- <xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A> Eigenschaft, um den Namen der Validierungs Gruppe anzugeben, für die das-Steuerelement eine <xref:System.Web.UI.WebControls.LinkButton> Validierung veranlasst, wenn es an den Server zurückgesendet wird.

 Diese Eigenschaft hat nur dann Auswirkungen, wenn der Wert der- <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> Eigenschaft auf festgelegt ist `true` . Wenn Sie einen Wert für die- <xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A> Eigenschaft angeben, werden nur die Validierungs Steuerelemente, die Teil der angegebenen Gruppe sind, überprüft, wenn das <xref:System.Web.UI.WebControls.LinkButton> Steuerelement an den Server zurückgesendet wird. Wenn Sie keinen Wert für diese Eigenschaft angeben und die- <xref:System.Web.UI.WebControls.LinkButton.CausesValidation%2A> Eigenschaft auf festgelegt ist `true` , werden alle Validierungs Steuerelemente auf der Seite, die keiner Validierungs Gruppe zugewiesen sind, überprüft, wenn das Steuerelement an den Server zurückgesendet wird.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die- <xref:System.Web.UI.WebControls.LinkButton.ValidationGroup%2A> Eigenschaft verwendet wird, um die Steuerelemente anzugeben, die überprüft werden sollen, wenn ein <xref:System.Web.UI.WebControls.LinkButton> Steuerelement an den Server zurückgesendet wird. Die Seite enthält drei Textfelder zum Erfassen von Daten vom Benutzer und drei Steuer <xref:System.Web.UI.WebControls.RequiredFieldValidator> Elemente, um sicherzustellen, dass der Benutzer kein Textfeld leer lässt. Die <xref:System.Web.UI.WebControls.RequiredFieldValidator> Steuerelemente für die ersten beiden Textfelder befinden sich in der `PersonalInfoGroup` Validierungs Gruppe, und das <xref:System.Web.UI.WebControls.RequiredFieldValidator> Steuerelement für das dritte Textfeld befindet sich in der `LocationInfoGroup` Gruppe Validierung. Wenn `LinkButton1` auf geklickt wird, werden nur die Steuerelemente in der Validierungs Gruppe `PersonalInfoGroup` überprüft. Wenn `LinkButton2` auf geklickt wird, wird nur das Steuerelement in der Validierungs Gruppe `LocationInfoGroup` überprüft.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[LinkButton.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/LinkButton.ValidationGroup/CS/linkbutton.validationgroupcs.aspx#1)]
 [!code-aspx-vb[LinkButton.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LinkButton.ValidationGroup/VB/linkbutton.validationgroupvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.LinkButton.CausesValidation" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/t41dh257(v=vs.100)">Übersicht über Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
