<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dbcc6d5e8eb494fa6465ee09ee3bff8571a3ae4d" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83909231" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Feld dar, das als Text in einem datengebundenen Steuerelement angezeigt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField>-Klasse wird von Daten gebundenen Steuerelementen (z. b. <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>) verwendet, um den Wert eines Felds als Text anzuzeigen. Das <xref:System.Web.UI.WebControls.BoundField> Objekt wird unterschiedlich angezeigt, je nach dem Daten gebundenen Steuerelement, in dem es verwendet wird. Das <xref:System.Web.UI.WebControls.GridView>-Steuerelement zeigt z. b. ein <xref:System.Web.UI.WebControls.BoundField> Objekt als Spalte an, während das <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement es als Zeile anzeigt.  
  
 Um das Feld anzugeben, das in einem <xref:System.Web.UI.WebControls.BoundField> Objekt angezeigt werden soll, legen Sie die <xref:System.Web.UI.WebControls.BoundField.DataField%2A>-Eigenschaft auf den Namen des Felds fest. Der Wert des Felds kann HTML-codiert werden, bevor er angezeigt wird, indem die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>-Eigenschaft auf `true`festgelegt wird. Sie können eine benutzerdefinierte Formatierungs Zeichenfolge auf den Wert des Felds anwenden, indem Sie die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft festlegen. Wenn die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>-Eigenschaft `true`ist, wird der codierte Zeichen folgen Wert des Felds in der benutzerdefinierten Format Zeichenfolge verwendet. Standardmäßig wird die Formatierungs Zeichenfolge nur dann auf Feldwerte angewendet, wenn sich das Daten gebundene Steuerelement im schreibgeschützten Modus befindet. Um die Formatierungs Zeichenfolge auf die angezeigten Werte anzuwenden, während sich das Daten gebundene Steuerelement im Bearbeitungsmodus befindet, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest. Wenn der Wert eines Felds NULL ist, können Sie eine benutzerdefinierte Beschriftung anzeigen, indem Sie die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft festlegen. Das <xref:System.Web.UI.WebControls.BoundField>-Objekt kann auch leere Zeichen folgen ("")-Feldwerte automatisch in NULL-Werte konvertieren, indem die <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>-Eigenschaft auf `true`festgelegt wird.  
  
 Sie können ein <xref:System.Web.UI.WebControls.BoundField> Objekt in einem Daten gebundenen Steuerelement ausblenden, indem Sie die Eigenschaft <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> auf `false`festlegen. Legen Sie die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>-Eigenschaft auf `true`fest, um zu verhindern, dass der Wert eines Felds im Bearbeitungsmodus geändert wird. In Daten gebundenen Steuerelementen, die das Einfügen von Datensätzen unterstützen (z. b. das <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement), können Sie ein <xref:System.Web.UI.WebControls.BoundField> Objekt ausblenden, indem Sie die Eigenschaft <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> auf `false`festlegen Dies geschieht in der Regel, wenn Sie ein automatisch generiertes Schlüsselfeld im Einfügemodus ausblenden möchten.  
  
 Sie können die Kopf-und Fußzeilen Abschnitte eines <xref:System.Web.UI.WebControls.BoundField> Objekts anpassen. Um eine Beschriftung in der Kopf- oder Fußzeile Abschnitte anzuzeigen, legen Sie die <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Eigenschaften bzw. Anstatt Text im Header Abschnitt anzuzeigen, können Sie ein Bild anzeigen, indem Sie die <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>-Eigenschaft festlegen. Der Header Abschnitt kann im <xref:System.Web.UI.WebControls.BoundField> Objekt ausgeblendet werden, indem die Eigenschaft <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> auf `false`festgelegt wird.  
  
> [!NOTE]
>  Einige Daten gebundene Steuerelemente (z. b. das <xref:System.Web.UI.WebControls.GridView>-Steuerelement) können nur den gesamten Header Abschnitt des Steuer Elements anzeigen oder ausblenden. Diese Daten gebundenen Steuerelemente unterstützen die <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>-Eigenschaft für ein einzelnes gebundenes Feld nicht. Um den gesamten Header Abschnitt eines Daten gebundenen Steuer Elements (falls verfügbar) anzuzeigen oder auszublenden, verwenden Sie die `ShowHeader`-Eigenschaft des Steuer Elements.  
  
 Sie können auch die Darstellung des <xref:System.Web.UI.WebControls.BoundField> Objekts (Schriftfarbe, Hintergrundfarbe usw.) anpassen, indem Sie die Stileigenschaften für die verschiedenen Teile des Felds festlegen. In der folgenden Tabelle werden die verschiedenen Stileigenschaften aufgelistet.  
  
|Style-Eigenschaft|BESCHREIBUNG|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Die Stileinstellungen für die untergeordneten Webserver-Steuerelemente des <xref:System.Web.UI.WebControls.BoundField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Die Stileinstellungen für den Footerbereich des <xref:System.Web.UI.WebControls.BoundField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Die Stileinstellungen für den Header Abschnitt des <xref:System.Web.UI.WebControls.BoundField> Objekts.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Die Stileinstellungen für die Datenelemente im <xref:System.Web.UI.WebControls.BoundField> Objekt.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.BoundField>-Objekt verwendet wird, um die Werte eines Felds in einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement anzuzeigen.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.BoundField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.BoundField>-Klasse zu initialisieren. Dieser Konstruktor wird häufig verwendet, wenn einem dynamisch erstellten Daten gebundenen Steuerelement Felder hinzugefügt werden.  
  
 Wenn Sie einem Daten gebundenen Steuerelement dynamisch ein <xref:System.Web.UI.WebControls.BoundField> Objekt hinzufügen möchten, erstellen Sie ein neues <xref:System.Web.UI.WebControls.BoundField> Objekt, legen Sie seine Eigenschaften fest, und fügen Sie es dann der Feld Auflistung des Daten gebundenen Steuer Elements hinzu. Wenn Sie z. b. das <xref:System.Web.UI.WebControls.GridView>-Steuerelement verwenden, fügen Sie das <xref:System.Web.UI.WebControls.BoundField>-Objekt der <xref:System.Web.UI.WebControls.GridView.Columns%2A>-Auflistung hinzu.  
  
> [!NOTE]
>  Obwohl Sie Felder einem Daten gebundenen Steuerelement dynamisch hinzufügen können, wird dringend empfohlen, dass Felder statisch deklariert und dann nach Bedarf angezeigt oder ausgeblendet werden. Wenn Sie alle Felder statisch deklarieren, verringert sich die Größe des Ansichts Zustands für das übergeordnete Daten gebundene Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der-Konstruktor verwendet wird, um ein <xref:System.Web.UI.WebControls.BoundField> Objekt dynamisch zu einem <xref:System.Web.UI.WebControls.GridView>-Steuerelement hinzuzufügen.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, ob die von der <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />-Eigenschaft angegebene Formatierungszeichenfolge auf Feldwerte angewendet wird, wenn sich das datengebundene Steuerelement, das das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt enthält, im Bearbeitungsmodus befindet, oder legt diesen fest.</summary>
        <value><see langword="true" />, um die Formatierungszeichenfolge auf Feldwerte im Bearbeitungsmodus anzuwenden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Daten gebundene Steuerelemente (z. b. <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>und <xref:System.Web.UI.WebControls.GridView>) weisen verschiedene Anzeigemodi auf, die dem Benutzer das Lesen, bearbeiten und Einfügen von Datensätzen ermöglichen. Standardmäßig wird die durch die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft angegebene Formatierungs Zeichenfolge nur dann auf Feldwerte angewendet, wenn sich das Daten gebundene Steuerelement im schreibgeschützten Modus befindet. Um die Formatierungs Zeichenfolge auf die angezeigten Werte anzuwenden, während sich das Daten gebundene Steuerelement im Bearbeitungsmodus befindet, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest.  
  
> [!NOTE]
>  Ein <xref:System.Web.UI.WebControls.BoundField>-Objekt entfernt die Formatierung nicht automatisch, wenn das Feld in der Datenquelle aktualisiert wird. Wenn Sie nicht möchten, dass die Formatierung als Teil des gespeicherten Werts verwendet wird, müssen Sie die Formatierung Programm gesteuert entfernen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>-Eigenschaft die Formatierungs Zeichenfolge auf Feldwerte angewendet wird, während sich ein <xref:System.Web.UI.WebControls.GridView>-Steuerelement im Bearbeitungsmodus befindet. Die Formatierung wird dann Programm gesteuert entfernt, bevor der Wert in der Datenquelle aktualisiert wird.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob bei der Aktualisierung des Datenfelds in der Datenquelle Werte, die leere Zeichenfolgen ("") darstellen, in NULL-Werte konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, um leere Zeichenfolgenwerte automatisch in NULL-Werte zu konvertieren, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal kann der Benutzer beim Aktualisieren oder Einfügen von Datensätzen eine leere Zeichenfolge für einen Feldwert eingeben. Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>-Eigenschaft, um anzugeben, ob ein leerer Zeichen folgen Wert automatisch in NULL konvertiert wird, wenn das Datenfeld in der Datenquelle aktualisiert wird.  
  
> [!NOTE]
>  Standardmäßig zeigt ein <xref:System.Web.UI.WebControls.BoundField> Objekt NULL-Werte als leere Zeichen folgen an. Um einen anderen Wert anzuzeigen, legen Sie die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft fest.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>-Eigenschaft verwendet wird, um anzugeben, dass der Feldwert einer leeren Zeichenfolge ("") automatisch in NULL konvertiert werden soll.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Das <see cref="T:System.Web.UI.WebControls.DataControlField" />, in das die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.BoundField" /> kopiert werden sollen.</param>
        <summary>Kopiert die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekts in das angegebene <see cref="T:System.Web.UI.WebControls.DataControlField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>-Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>-Methode verwendet wird, um die Eigenschaften des aktuellen <xref:System.Web.UI.WebControls.BoundField> Objekts in das <xref:System.Web.UI.WebControls.DataControlField> Objekt zu kopieren, das von der-Methode erstellt wurde.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein leeres <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns>Ein leerer <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.CreateField%2A>-Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>-Methode verwendet wird, um ein leeres <xref:System.Web.UI.WebControls.BoundField>-Objekt zu erstellen, in das die Eigenschaften des aktuellen <xref:System.Web.UI.WebControls.BoundField> Objekts kopiert werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenfelds ab, das an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt gebunden werden soll, oder legt diesen fest.</summary>
        <value>Der Name des Datenfelds, das an <see cref="T:System.Web.UI.WebControls.BoundField" /> gebunden werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.DataField%2A>-Eigenschaft, um den Namen des Daten Felds anzugeben, das an das <xref:System.Web.UI.WebControls.BoundField> Objekt gebunden werden soll. Die Werte des angegebenen Felds werden im <xref:System.Web.UI.WebControls.BoundField> Objekt als Text angezeigt. Sie können den angezeigten Text optional formatieren, indem Sie die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft festlegen.  
  
> [!NOTE]
>  Wenn der Wert eines Felds NULL ist, wird standardmäßig eine leere Zeichenfolge ("") für den Wert angezeigt. Um eine alternative Beschriftung anzugeben, legen Sie die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft fest.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BoundField.DataField%2A>-Eigenschaft verwendet wird, um anzugeben, welches Feld in einer <xref:System.Web.UI.WebControls.BoundField> Feld Spalte eines <xref:System.Web.UI.WebControls.GridView>-Steuer Elements angezeigt werden soll.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die das Anzeigeformat für den Wert des Felds angibt, oder legt diese fest.</summary>
        <value>Eine Formatierungszeichenfolge, die das Anzeigeformat für den Wert des Felds angibt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass keine besondere Formatierung auf den Feldwert angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft, um ein benutzerdefiniertes Anzeige Format für die Werte anzugeben, die im <xref:System.Web.UI.WebControls.BoundField>-Objekt angezeigt werden. Wenn die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft nicht festgelegt ist, wird der Wert des Felds ohne besondere Formatierung angezeigt.  
  
> [!NOTE]
>  In früheren Versionen von ASP.net als 3,5 müssen Sie die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>-Eigenschaft auf `false` festlegen, um Felder zu formatieren, die keine Zeichen folgen Datentypen sind. Andernfalls wird der Feldwert durch die Standard Konvertierungsmethode in eine Zeichenfolge konvertiert, bevor die in der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft gespeicherte Format Zeichenfolge angewendet wird.  
  
 Standardmäßig wird die Formatierungs Zeichenfolge nur dann auf den Feldwert angewendet, wenn sich das Daten gebundene Steuerelement, das das <xref:System.Web.UI.WebControls.BoundField> Objekt enthält, im schreibgeschützten Modus befindet. Wenn Sie die Formatierungs Zeichenfolge auf Feldwerte im Bearbeitungsmodus anwenden möchten, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>-Eigenschaft auf `true`fest.  
  
 Die Formatierungs Zeichenfolge kann eine beliebige Literalzeichenfolge sein und enthält normalerweise einen Platzhalter für den Wert des Felds. Beispielsweise wird im `Item Value: {0}`der Formatierungs Zeichenfolge der Wert des Felds für den {0} Platzhalter ersetzt, wenn die Zeichenfolge im <xref:System.Web.UI.WebControls.BoundField>-Objekt angezeigt wird. Der Rest der Formatierungs Zeichenfolge wird als Literaltext angezeigt.  
  
 Wenn die Formatierungs Zeichenfolge keinen Platzhalter enthält, wird nur die Formatierungs Zeichenfolge selbst in den endgültigen Anzeige Text eingeschlossen (der Wert des Felds aus der Datenquelle ist nicht eingeschlossen). Wenn der Platzhalter eine 0 (null) ist, wie im vorherigen Beispiel gezeigt, wird der Feldwert durch die Standardmethode in eine Zeichenfolge konvertiert. Sie können eine Zeichenfolge, die angibt, wie der Feldwert formatiert werden soll, an die NULL-Zeichenfolge anfügen. Der Platzhalter `{0:C}` für ein numerisches Feld gibt z. b. an, dass der Wert des Felds in ein Währungs Format konvertiert werden soll.  
  
 Die Formatierung wird mithilfe der <xref:System.String.Format%2A>-Methode angewendet. Die Zahl, die der linken geschweiften Klammer folgt, ist Teil der Syntax, die von dieser Methode verwendet wird, und gibt an, welche einer Reihe von Werten der Platzhalter verwenden soll. Da in jeder Zelle nur ein Feldwert vorhanden ist, kann die Zahl, die der linken geschweiften Klammer folgt, nur auf 0 festgelegt werden.  
  
 In der folgenden Tabelle sind die Standard Formatierungszeichen für numerische Felder aufgeführt. Bei diesen Formatzeichen wird die Groß-/Kleinschreibung nicht beachtet, mit Ausnahme von `X`, bei der hexadezimale Zeichen in dem angegebenen Fall angezeigt werden. Sie können eine Zahl an die meisten Formatierungszeichen anfügen, um anzugeben, wie viele signifikante Ziffern oder Dezimalstellen angezeigt werden sollen.  
  
> [!NOTE]
>  In den meisten Fällen hängt die Formatierung von der Kultur Einstellung des Servers ab. Die Beispiele gelten für eine Kultur Einstellung `en-US`.  
  
|Zeichen formatieren|BESCHREIBUNG|Beispiel|  
|----------------------|-----------------|-------------|  
|`C` oder `c`|Zeigt numerische Werte im Währungs Format an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` oder `d`|Zeigt ganzzahlige Werte im Dezimal Format an. Sie können die Anzahl der Ziffern angeben. (Obwohl der Typ als "Decimal" bezeichnet wird, werden die Zahlen als ganze Zahlen formatiert.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` oder `e`|Zeigt numerische Werte im wissenschaftlichen Format (exponentiell) an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` oder `f`|Zeigt numerische Werte im Fixed-Format an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` oder `g`|Zeigt numerische Werte im allgemeinen Format an (die kompakteste von der Fixed-Point-oder der Scientific-Notation). Sie können die Anzahl der signifikanten Ziffern angeben.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` oder `n`|Zeigt numerische Werte im Zahlenformat an (einschließlich Gruppen Trennzeichen und optionales Minuszeichen). Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` oder `p`|Zeigt numerische Werte im Prozent Format an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` oder `r`|Zeigt <xref:System.Single>-, <xref:System.Double>-oder `BigInteger`-Werte im Roundtrip-Format an.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` oder `x`|Zeigt ganzzahlige Werte im Hexadezimal Format an. Sie können die Anzahl der Ziffern angeben.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 Weitere Informationen und Beispiele, die die Formatierung für andere Kultur Werte anzeigen, finden Sie unter [Standard mäßige Zahlen Format](/dotnet/standard/base-types/standard-numeric-format-strings)Zeichenfolgen. Sie können auch benutzerdefinierte numerische Format Zeichenfolgen erstellen. Weitere Informationen finden Sie unter [Benutzerdefinierte Zahlenformatzeichenfolgen](/dotnet/standard/base-types/custom-numeric-format-strings).  
  
 In der folgenden Tabelle sind die Formatzeichen für <xref:System.DateTime> Felder aufgeführt. Die meisten dieser Formatierungs Spezifikationen führen je nach Kultur Einstellungen zu einer anderen Ausgabe. Die Beispiele gelten für einen <xref:System.DateTime> Wert von 6/15/2009 1:45:30 Uhr mit der Kultur Einstellung `en-US`.  
  
|Zeichen formatieren|BESCHREIBUNG|Beispiel|  
|----------------------|-----------------|-------------|  
|`d`|Kurzes Datumsmuster.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009|  
|`D`|Langes Datumsmuster.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 Uhr-> Montag, 15. Juni 2009|  
|`f`|Vollständiges Datums-/Zeitmuster (kurze Zeit).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 Uhr-> Montag, 15. Juni 2009 1:45 Uhr|  
|`F`|Vollständiges Datums-/Zeitmuster (lange Zeit).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 Uhr-> Montag, 15. Juni 2009 1:45:30 Uhr|  
|`g`|Allgemeines Datums-/Zeitmuster (kurze Zeit).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 Uhr-> 6/15/2009 1:45 Uhr|  
|`G`|Allgemeines Datums-/Zeitmuster (lange Zeit).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 Uhr-> 6/15/2009 1:45:30 Uhr|  
|`M` oder `m`|Monatstagmuster.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 Uhr-> 15. Juni|  
|`O` oder `o`|Zurückkonvertieren von Datums-/Zeitmuster.|Format: `{0:o}`<br /><br /> 15.06.2009 13:45:30 -> 2009-06-15T13:45:30.0900000|  
|`R` oder `r`|RFC1123-Muster (Weitere Informationen finden Sie unter <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Sortierbares Datums-/Zeitmuster.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Kurzes Zeitmuster.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 Uhr-> 1:45 Uhr|  
|`T`|Langes Zeitmuster.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 Uhr-> 1:45:30 Uhr|  
|`u`|Universelles, sortierbares Datums-/Zeitmuster.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Universelles Datums-/Zeitmuster (Koordinierte Weltzeit).|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 Uhr-> Montag, 15. Juni 2009 8:45:30 Uhr|  
|`Y` oder `y`|Jahr-Monat-Muster.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 Uhr-> Juni 2009|  
  
 Weitere Informationen und Beispiele, die die Formatierung für andere Kultur Werte anzeigen, finden Sie unter Standard Format Zeichenfolgen für [Datum und Uhrzeit](/dotnet/standard/base-types/standard-date-and-time-format-strings). Sie können auch benutzerdefinierte Format Zeichenfolgen für Datum und Uhrzeit erstellen. Weitere Informationen finden Sie unter [benutzerdefinierte Format](/dotnet/standard/base-types/custom-date-and-time-format-strings)Zeichenfolgen für Datum und Uhrzeit.  
  
   
  
## Examples  
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=191889).  
  
 Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft verwenden, um ein benutzerdefiniertes Anzeige Format für die Werte eines Felds anzugeben.  
  
  
  
 Das folgende Beispiel zeigt eine Zeile der Ausgabe, die in diesem Beispiel erstellt wird.  
  
|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Ein <see cref="T:System.Collections.IDictionary" />, das verwendet wird, um die Werte der angegebenen Zelle zu speichern.</param>
        <param name="cell">Die <see cref="T:System.Web.UI.WebControls.TableCell" />, die die abzurufenden Werte enthält.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="includeReadOnly"><see langword="true" />, wenn die Werte schreibgeschützter Felder einbezogen werden, andernfalls <see langword="false" />.</param>
        <summary>Füllt das angegebene <see cref="T:System.Collections.IDictionary" />-Objekt mit den Werten aus dem angegebenen <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>-Methode wird als bequeme Möglichkeit zur Verfügung gestellt, um die Werte der Felder aus dem angegebenen <xref:System.Web.UI.WebControls.TableCell> Objekt in einem <xref:System.Web.UI.WebControls.BoundField>-Objekt abzurufen.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 Diese Methode besitzt keinen Rückgabewert. Stattdessen werden die Feldwerte als Verweis durch das <xref:System.Collections.IDictionary?displayProperty=nameWithType> Objekt zurückgegeben, das für den `dictionary`-Parameter übergeben wird. Nachdem die-Methode aufgerufen wurde, durchlaufen Sie das <xref:System.Collections.IDictionary?displayProperty=nameWithType>-Objekt, um auf die Feldwerte zuzugreifen.  
  
> [!NOTE]
>  Wenn das <xref:System.Web.UI.WebControls.TableCell>-Objekt schreibgeschützte Feldwerte enthält, müssen Sie `true` für den `includeReadOnly`-Parameter übergeben, um diese Werte einzuschließen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Der zu formatierende Feldwert.</param>
        <param name="encode"><see langword="true" />, wenn der Wert codiert werden soll, andernfalls <see langword="false" />.</param>
        <summary>Formatiert den angegebenen Feldwert für eine Zelle im <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns>Der Feldwert, der in das von <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> angegebene Format konvertiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A>-Methode ist eine Hilfsmethode, die verwendet wird, um einen Feldwert in das von der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft angegebene Format umzuwandeln. Wenn ein Feldwert NULL ist, wird der Wert der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft zurückgegeben.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine benutzerdefinierte Formatierungs Routine auszuführen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft beim Rendern des <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekts in einem Designer den für den Wert des Felds verwendeten Wert ab.</summary>
        <returns>Der Wert, der im Designer als der Wert des Felds angezeigt werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>-Methode ist eine Hilfsmethode, mit der bestimmt wird, welcher Wert für ein Feld angezeigt wird, wenn das <xref:System.Web.UI.WebControls.BoundField> Objekt in einem Designer gerendert wird. Wenn echte Daten nicht zur Entwurfszeit aus der Datenquelle abgerufen werden können, wird stattdessen der von dieser Methode zurückgegebene Wert angezeigt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse erweitern, können Sie diese Methode überschreiben, um einen anderen Wert zurückzugeben, der für das Feld in einem Designer angezeigt werden soll.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Der Container für den Feldwert.</param>
        <summary>Ruft den Wert des Felds ab, das an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt gebunden ist.</summary>
        <returns>Der Wert des Felds, das an das <see cref="T:System.Web.UI.WebControls.BoundField" /> gebunden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.GetValue%2A>-Methode ist eine Hilfsmethode, mit der der Wert eines Felds bestimmt wird. Wenn das <xref:System.Web.UI.WebControls.BoundField> Objekt in einem Designer angezeigt wird und der Feldwert nicht zur Entwurfszeit bestimmt werden kann, wird der von der <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>-Methode zurückgegebene Wert anstelle des eigentlichen Feldwerts zurückgegeben.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der durch den <paramref name="controlContainer" />-Parameter angegebene Container ist <see langword="null" />.  
  
Oder 
Der durch den <paramref name="controlContainer" />-Parameter angegebene Container weist kein Datenelement auf.  
  
Oder 
Das Datenfeld wurde nicht gefunden.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine benutzerdefinierte Routine bereitzustellen, um den Wert eines Felds zu bestimmen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der im Header eines Datensteuerelements angezeigt wird, oder legt diesen fest.</summary>
        <value>Der im Header eines Datensteuerelements angezeigte Text. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>-Eigenschaft, um ein Feld in einem Daten Steuerelement mit einem anzeigen Amen zu identifizieren. Die häufigste Anwendung der <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>-Eigenschaft ist das Bereitstellen aussagekräftiger Spaltennamen für Daten gebundene Felder in einem <xref:System.Web.UI.WebControls.GridView>-oder <xref:System.Web.UI.WebControls.DetailsView>-Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Feldwerte vor dem Anzeigen in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt HTML-codiert werden.</summary>
        <value><see langword="true" />, wenn die Feldwerte vor dem Anzeigen in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt HTML-codiert werden, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>-Eigenschaft, um anzugeben, ob Feldwerte in ihren jeweiligen Zeichen folgen Darstellungen HTML-codiert werden, bevor Sie in einem <xref:System.Web.UI.WebControls.BoundField> Objekt angezeigt werden. Wenn diese Eigenschaft z. b. `true`ist, wird der Zeichen folgen Wert "\<script >" als "&lt;Script&gt;" gerendert. Wenn diese Eigenschaft `false`ist, wird die Zeichenfolge unverändert gerendert.  
  
> [!NOTE]
>  HTML-Codierungs Feldwerte helfen, Site übergreifende Skript Angriffe und böswillige Inhalte zu verhindern. Diese Eigenschaft sollte nach Möglichkeit aktiviert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>-Eigenschaft verwendet wird, um zu verhindern, dass Feldwerte HTML-codiert werden, bevor Sie in einem <xref:System.Web.UI.WebControls.BoundField>-Objekt angezeigt werden.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob durch Übernehmen der <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />-Eigenschaft für den <see cref="T:System.Web.UI.WebControls.BoundField" />-Wert erstellter Text beim Anzeigen HTML-codiert werden soll, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn der Text HTML-codiert werden soll, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML-Codierungs Werte können dabei helfen, Site übergreifende Skript Angriffe und böswillige Inhalte zu verhindern. Die HTML-Codierung ist auch nützlich, wenn Sie HTML-Code im Browser anzeigen möchten, z. b. die Zeichenfolge "\<br/>" anzeigen, anstatt einen Zeilenumbruch (`<br/>`-Element) auf der Seite einzufügen.  
  
> [!NOTE]
>  Diese Eigenschaft ist neu in ASP.NET 3,5. Wenn diese Eigenschaft auf `false` festgelegt wird, wird das Standardverhalten der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft in früheren Versionen von ASP.net als 3,5 wieder hergestellt. Weitere Informationen finden Sie unter den Ausführungen zur Eigenschaft <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Initialize (enableSorting As Boolean, control As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><see langword="true" />, wenn das Sortieren unterstützt wird, andernfalls <see langword="false" />.</param>
        <param name="control">Das Datensteuerelement, das das <see cref="T:System.Web.UI.WebControls.BoundField" /> besitzt.</param>
        <summary>Initialisiert das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns><see langword="false" /> in allen Fällen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.Initialize%2A>-Methode wird von dem Daten Steuerelement aufgerufen, dem das <xref:System.Web.UI.WebControls.BoundField>-Objekt zugeordnet ist, um die grundlegende Objekt Initialisierung für Instanzen des Felds auszuführen, bevor das Feld einer Zeilen Auflistung hinzugefügt wird. Daten Steuerelemente wie <xref:System.Web.UI.WebControls.DetailsView> und <xref:System.Web.UI.WebControls.GridView> rufen die <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>-Methode in ihren `CreateChildControls` Methoden auf, bevor andere Methoden wie `CreateRow` aufgerufen werden, um bestimmte Zeilen mit Daten zu erstellen.  
  
 Diese Methode wird aufgerufen, wenn Sie ein benutzerdefiniertes Daten gebundenes Steuerelement schreiben, das <xref:System.Web.UI.WebControls.TableCell>-Objekte verwendet, um die grundlegende Initialisierung für ein <xref:System.Web.UI.WebControls.BoundField> Objekt auszuführen. Implementieren Sie diese Methode, wenn Ihr <xref:System.Web.UI.WebControls.BoundField>abgeleiteter Typ eine Objekt Initialisierung erfordert, bevor <xref:System.Web.UI.WebControls.TableCell> Objekte mit Daten oder Steuerelementen in der <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>-Methode aufgefüllt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="cellType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlCellType" />-Werte.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="rowIndex">Der nullbasierte Index der Zeile.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt mit dem angegebenen Zeilenzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>-Methode wird von <xref:System.Web.UI.WebControls.BoundField>abgeleiteten Typen implementiert, um einem <xref:System.Web.UI.WebControls.TableCell>-Objekt eines Daten Steuer Elements, das Tabellen verwendet, eine Benutzeroberfläche anzuzeigen, Text und Steuerelemente hinzuzufügen. Diese Daten Steuerelemente erstellen die gesamte Tabellenstruktur zeilenweise, wenn die `CreateChildControls`-Methode des Steuer Elements aufgerufen wird. Die <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>-Methode wird von der `InitializeRow`-Methode von Daten Steuerelementen, z. b. <xref:System.Web.UI.WebControls.DetailsView> und <xref:System.Web.UI.WebControls.GridView>, aufgerufen.  
  
 Wenn Sie ein benutzerdefiniertes Daten gebundenes Steuerelement schreiben, das <xref:System.Web.UI.WebControls.TableCell>-Objekte verwendet, um die Zellen der Tabellenstruktur mit Daten oder Steuerelementen zu initialisieren, wird diese Methode aufgerufen. Implementieren Sie diese Methode, wenn Sie eine <xref:System.Web.UI.WebControls.BoundField>abgeleitete Klasse schreiben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt mit dem angegebenen Zeilenzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>-Methode ist eine Hilfsmethode, mit der eine Zelle im <xref:System.Web.UI.WebControls.BoundField> Objekt initialisiert wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine benutzerdefinierte Initialisierungs Routine auszuführen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Stellt den Steuerelementzustand dar, der wiederhergestellt werden soll.</param>
        <summary>Stellt die zuvor gespeicherten Ansichtszustandsinformationen für das Feld wieder her.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschriftung ab, die für ein Feld angezeigt wird, wenn der Wert des Felds NULL ist, oder legt diesen fest.</summary>
        <value>Die Beschriftung, die für ein Feld angezeigt wird, wenn der Wert des Felds NULL ist. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal wird der Wert eines Felds als NULL in der Datenquelle gespeichert. Sie können eine benutzerdefinierte Beschriftung angeben, die für Felder mit einem NULL-Wert angezeigt werden soll, indem Sie die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft festlegen. Wenn diese Eigenschaft nicht festgelegt ist, werden NULL-Feldwerte als leere Zeichen folgen ("") angezeigt. Wenn ein Datensatz in einem Daten gebundenen Steuerelement aktualisiert oder eingefügt wird, wird dieser Wert in der Datenquelle automatisch in NULL konvertiert, wenn der Benutzer den von dieser Eigenschaft (mit Ausnahme einer leeren Zeichenfolge) angegebenen Wert für ein Feld in einem Daten gebundenen Steuerelement eingibt.  
  
> [!NOTE]
>  Um einen leeren Zeichen folgen Feldwert in einen NULL-Wert zu konvertieren, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>-Eigenschaft auf `true`fest.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>-Eigenschaft verwendet wird, um eine benutzerdefinierte Beschriftung anzugeben, die für NULL-Feldwerte angezeigt werden soll.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Bindet den Wert eines Felds an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei der <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>-Methode handelt es sich um eine Hilfsmethode, mit der der Wert eines Felds in der Datenquelle an eine entsprechende Zelle im <xref:System.Web.UI.WebControls.BoundField> Objekt gebunden wird.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Steuerelement, an das der Feldwert gebunden ist, ist weder eine <see cref="T:System.Web.UI.WebControls.TextBox" /> noch eine <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse erweitern, können Sie diese Methode überschreiben, um eine benutzerdefinierte Bindungs Routine auszuführen.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Feldwert im Bearbeitungsmodus geändert werden kann, oder legt diesen fest.</summary>
        <value><see langword="true" />, um zu verhindern, dass der Wert des Felds im Bearbeitungsmodus geändert wird, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>-Eigenschaft, um zu verhindern, dass die in einem <xref:System.Web.UI.WebControls.BoundField> Objekt angezeigten Werte geändert werden. Wenn sich ein Daten gebundenes Steuerelement im Bearbeitungsmodus befindet, werden Felder, die schreibgeschützt sind, als nur-Text ohne Bearbeitungs Steuerelemente angezeigt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>-Eigenschaft gilt nur für den Bearbeitungsmodus. Verwenden Sie die <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>-Eigenschaft, um zu verhindern, dass Felder im Einfügemodus angezeigt werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>-Eigenschaft verwendet wird, um zu verhindern, dass die Werte des in einem <xref:System.Web.UI.WebControls.BoundField>-Objekt angezeigten Schlüssel Felds im Bearbeitungsmodus geändert werden.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die HTML-Codierung von einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt unterstützt wird.</summary>
        <value>Gibt immer <see langword="true" /> zurück, um anzugeben, dass die HTML-Codierung von einem <see cref="T:System.Web.UI.WebControls.BoundField" /> unterstützt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>-Eigenschaft ist eine Hilfseigenschaft, die von der <xref:System.Web.UI.WebControls.BoundField>-Klasse und abgeleiteten Klassen verwendet wird, um zu bestimmen, ob die HTML-Codierung von der-Klasse  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse ableiten, können Sie diese Eigenschaft überschreiben, um anzugeben, ob die HTML-Codierung von der-Klasse unterstützt wird.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Ausdruck „this“ dar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Feld gibt an, dass das <xref:System.Web.UI.WebControls.BoundField> Objekt an die Datenquelle selbst gebunden werden soll, und nicht an ein Feld der Datenquelle. In diesem Fall wird der `ToString` Wert des Objekts im-Feld angezeigt.  
  
 Dieses Feld wird hauptsächlich von Steuerelement Entwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der bestimmt, ob das Steuerelement Clienteingaben überprüft.</summary>
        <value>Ein Wert, der bestimmt, ob das Steuerelement Clienteingaben überprüft oder nicht. Der Standardwert lautet <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt enthaltenen Steuerelemente Rückrufe unterstützen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A>-Methode ist eine Hilfsmethode, mit der bestimmt wird, ob die in einem <xref:System.Web.UI.WebControls.BoundField>-Objekt enthaltenen Steuerelemente Rückrufe unterstützen. Diese Methode wurde als leere Methode (eine Methode, die keinen Code enthält) implementiert, um anzugeben, dass Rückrufe unterstützt werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Klassen, die von der <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse abgeleitet werden, können diese Methode überschreiben, um anzugeben, ob die im Feld enthaltenen Steuerelemente Rückrufe unterstützen. Um anzugeben, dass Rückrufe unterstützt werden, implementieren Sie diese Methode als leere Methode, die keine Ausnahme auslöst. Andernfalls lösen Sie eine Ausnahme mit einer nützlichen Meldung aus, die beschreibt, warum Rückrufe nicht unterstützt werden.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>
