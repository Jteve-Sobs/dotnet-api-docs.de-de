<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17dd5582629af3cc927ad2efa47188f93acd2675" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323631" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt ein Feld dar, das als Text in einem datengebundenen Steuerelement angezeigt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField> Klasse wird von datengebundenen Steuerelementen verwendet (z. B. <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView>) den Wert eines Felds als Text angezeigt. Die <xref:System.Web.UI.WebControls.BoundField> -Objekt anders angezeigt wird, abhängig von dem vom datengebundenen Steuerelement, in dem er verwendet wird. Z. B. die <xref:System.Web.UI.WebControls.GridView> -Steuerelement zeigt ein <xref:System.Web.UI.WebControls.BoundField> -Objekt als eine Spalte, während die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zeigt es als eine Zeile an.  
  
 Das Feld anzuzeigenden angeben einer <xref:System.Web.UI.WebControls.BoundField> -Objekts die <xref:System.Web.UI.WebControls.BoundField.DataField%2A> Eigenschaft, um den Namen des Felds. Der Wert des Felds kann werden HTML-codiert, bevor es, indem angezeigt wird die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Eigenschaft `true`. Sie können eine benutzerdefinierte Formatierungszeichenfolge auf den Wert des Felds anwenden, durch Festlegen der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft. Wenn die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Eigenschaft `true`, die codierte Zeichenfolge-Wert des Felds wird verwendet, in der benutzerdefinierten Formatzeichenfolge. Standardmäßig ist die Formatierungszeichenfolge auf Feldwerte nur angewendet, wenn das datengebundene Steuerelement im schreibgeschützten Modus befindet. Zum Anwenden der Formatierungszeichenfolge auf Werte angezeigt, während das datengebundene Steuerelement im Bearbeitungsmodus befindet. Legen Sie die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Eigenschaft `true`. Wenn der Wert eines Felds null ist, können Sie eine benutzerdefinierte Beschriftung anzeigen, indem Sie die Einstellung der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.BoundField> Objekt kann auch automatisch konvertieren leere Zeichenfolge ("") Feldwerte in null-Werte durch Festlegen der <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> Eigenschaft `true`.  
  
 Können Sie Ausblenden einer <xref:System.Web.UI.WebControls.BoundField> Objekt in einem datengebundenen Steuerelement durch Festlegen der <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Eigenschaft `false`. Um zu verhindern, dass den Wert eines Felds im Bearbeitungsmodus geändert wird, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Eigenschaft `true`. In datengebundenen Steuerelementen, die das Einfügen von Datensätzen unterstützen (z. B. die <xref:System.Web.UI.WebControls.DetailsView> Steuerelement), können Sie Ausblenden einer <xref:System.Web.UI.WebControls.BoundField> Objekt durch Festlegen der <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> Eigenschaft, um `false`. Dies geschieht häufig, wenn Sie ein automatisch generiertes Schlüsselfeld im Einfügemodus ausblenden möchten.  
  
 Sie können anpassen, dass die Kopf- und Fußzeile Abschnitte einer <xref:System.Web.UI.WebControls.BoundField> Objekt. Um eine Beschriftung in der Kopf- oder Fußzeile Abschnitte anzuzeigen, legen Sie die <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> oder <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> Eigenschaften bzw. Anstelle von Text in der Kopfzeile angezeigt werden, können Sie ein Bild anzeigen, durch Festlegen der <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> Eigenschaft. Der Headerbereich kann ausgeblendet werden, der <xref:System.Web.UI.WebControls.BoundField> Objekt durch Festlegen der <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Eigenschaft `false`.  
  
> [!NOTE]
>  Einige von datengebundenen Steuerelementen (z. B. die <xref:System.Web.UI.WebControls.GridView> Steuerelement) können ein- oder Ausblenden des Steuerelements nur den gesamten Kopfzeilenbereich. Diese datengebundenen Steuerelemente unterstützen nicht die <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> -Eigenschaft für ein einzelnes gebundenen Feld. Für das Anzeigen oder Ausblenden von den gesamten Kopfzeilenbereich eines datengebundenen Steuerelements (falls verfügbar), Verwenden des Steuerelements `ShowHeader` Eigenschaft.  
  
 Sie können angepasst werden, die Darstellung von der <xref:System.Web.UI.WebControls.BoundField> Objekt (Schriftart, Farbe, Hintergrundfarbe, usw.) durch die Stileigenschaften für die verschiedenen Teile des Felds festlegen. Die folgende Tabelle enthält die verschiedenen Stileigenschaften.  
  
|Style-Eigenschaft|Beschreibung |  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Die stileinstellungen für den untergeordneten Webserver-Steuerelementen von der <xref:System.Web.UI.WebControls.BoundField> Objekt.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Die stileinstellungen für den Fußzeilenbereich des der <xref:System.Web.UI.WebControls.BoundField> Objekt.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Die stileinstellungen für den Headerbereich des der <xref:System.Web.UI.WebControls.BoundField> Objekt.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Die stileinstellungen für die Datenelemente in der <xref:System.Web.UI.WebControls.BoundField> Objekt.|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit einem <xref:System.Web.UI.WebControls.BoundField> Objekt zum Anzeigen der Werte eines Felds in einer <xref:System.Web.UI.WebControls.GridView> Steuerelement.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.BoundField" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.BoundField> Klasse. Dieser Konstruktor wird häufig verwendet, wenn eine dynamisch erstellte vom datengebundenen Steuerelement Felder hinzugefügt.  
  
 Zum dynamischen Hinzufügen einer <xref:System.Web.UI.WebControls.BoundField> Objekt zu einem datengebundenen Steuerelement, erstellen Sie ein neues <xref:System.Web.UI.WebControls.BoundField> Objekt, dessen Eigenschaften festlegen und fügen Sie es auf die vom datengebundenen Steuerelement feldauflistung. Angenommen, Sie verwenden die <xref:System.Web.UI.WebControls.GridView> Steuerelement, fügen die <xref:System.Web.UI.WebControls.BoundField> -Objekt an die <xref:System.Web.UI.WebControls.GridView.Columns%2A> Auflistung.  
  
> [!NOTE]
>  Obwohl Sie Felder zu einem datengebundenen Steuerelement dynamisch hinzufügen können, wird dringend empfohlen, dass Felder statisch deklariert, und klicken Sie dann angezeigt oder ausgeblendet werden, je nach Bedarf. Alle Ihre Felder statisch zu deklarieren, reduziert die Größe des Ansichtszustands für das übergeordnete Element vom datengebundenen Steuerelement.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie mithilfe des Konstruktors dynamisch Hinzufügen einer <xref:System.Web.UI.WebControls.BoundField> -Objekt an eine <xref:System.Web.UI.WebControls.GridView> Steuerelement.  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, ob die von der <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />-Eigenschaft angegebene Formatierungszeichenfolge auf Feldwerte angewendet wird, wenn sich das datengebundene Steuerelement, das das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt enthält, im Bearbeitungsmodus befindet, oder legt diesen fest.</summary>
        <value><see langword="true" />, um die Formatierungszeichenfolge auf Feldwerte im Bearbeitungsmodus anzuwenden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Datengebundene Steuerelemente (z. B. <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, und <xref:System.Web.UI.WebControls.GridView>) verfügen über verschiedene Anzeigemodi, die den Benutzer zu lesen, bearbeiten oder Einfügen von Datensätzen zu ermöglichen. Die Formatierungszeichenfolge angegeben wird standardmäßig von der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft auf Feldwerte angewendet wird, nur, wenn das datengebundene Steuerelement im schreibgeschützten Modus befindet. Zum Anwenden der Formatierungszeichenfolge auf Werte angezeigt, während das datengebundene Steuerelement im Bearbeitungsmodus befindet. Legen Sie die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Eigenschaft `true`.  
  
> [!NOTE]
>  Ein <xref:System.Web.UI.WebControls.BoundField> Objekt wird nicht automatisch entfernt die Formatierung verwendet werden, wenn das Feld in der Datenquelle aktualisiert wird. Wenn Sie nicht möchten, die Formatierung als Teil des Werts, der gespeichert wird, müssen Sie die Formatierung programmgesteuert zu entfernen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Eigenschaft für die Formatierung von string in Feldwerte während einer <xref:System.Web.UI.WebControls.GridView> Steuerelement befindet sich im Bearbeitungsmodus befindet. Die Formatierung wird dann programmgesteuert entfernt, bevor der Wert in der Datenquelle aktualisiert wird.  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob bei der Aktualisierung des Datenfelds in der Datenquelle Werte, die leere Zeichenfolgen ("") darstellen, in NULL-Werte konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" />, um leere Zeichenfolgenwerte automatisch in NULL-Werte zu konvertieren, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal kann der Benutzer eine leere Zeichenfolge für einen Feldwert beim Aktualisieren oder Einfügen von Datensätzen eingeben. Verwenden der <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> Eigenschaft, um anzugeben, ob es sich bei ein leeren Zeichenfolgenwert automatisch in null konvertiert wird, wenn das Datenfeld in der Datenquelle aktualisiert wird.  
  
> [!NOTE]
>  Standardmäßig eine <xref:System.Web.UI.WebControls.BoundField> Objekt zeigt die null-Werte als leere Zeichenfolgen. Um einen anderen Wert anzuzeigen, legen die <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> Eigenschaft, um anzugeben, dass eine leere Zeichenfolge ("") Wert des Felds automatisch in null konvertiert werden sollen.  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Das <see cref="T:System.Web.UI.WebControls.DataControlField" />, in das die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.BoundField" /> kopiert werden sollen.</param>
        <summary>Kopiert die Eigenschaften des aktuellen <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekts in das angegebene <see cref="T:System.Web.UI.WebControls.DataControlField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> Methode, um die Eigenschaften des aktuellen kopieren <xref:System.Web.UI.WebControls.BoundField> -Objekt an die <xref:System.Web.UI.WebControls.DataControlField> Objekt von der Methode erstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein leeres <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns>Ein leerer <see cref="T:System.Web.UI.WebControls.BoundField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> Methode ist eine Hilfsmethode, die von der <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> Methode zum Erstellen eines leeren <xref:System.Web.UI.WebControls.BoundField> Objekt, das die Eigenschaften des aktuellen kopiert <xref:System.Web.UI.WebControls.BoundField> -Objekt an.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenfelds ab, das an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt gebunden werden soll, oder legt diesen fest.</summary>
        <value>Der Name des Datenfelds, das an <see cref="T:System.Web.UI.WebControls.BoundField" /> gebunden werden soll. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BoundField.DataField%2A> -Eigenschaft an den Namen des Felds zum Binden an die <xref:System.Web.UI.WebControls.BoundField> Objekt. Die Werte des angegebenen Felds werden angezeigt, der <xref:System.Web.UI.WebControls.BoundField> Objekt als Text. Sie können optional den angezeigten Text formatieren, durch Festlegen der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft.  
  
> [!NOTE]
>  Wenn der Wert eines Felds null ist, ist eine leere Zeichenfolge ("") wird standardmäßig für den Wert angezeigt. Legen Sie zum Angeben einer alternativen Beschriftung der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.DataField%2A> Eigenschaft, welches Feld anzuzeigenden soll eine <xref:System.Web.UI.WebControls.BoundField> Field-Spalte eine <xref:System.Web.UI.WebControls.GridView> Steuerelement.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die das Anzeigeformat für den Wert des Felds angibt, oder legt diese fest.</summary>
        <value>Eine Formatierungszeichenfolge, die das Anzeigeformat für den Wert des Felds angibt. Der Standardwert ist eine leere Zeichenfolge (""), die angibt, dass keine besondere Formatierung auf den Feldwert angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft, um ein benutzerdefiniertes Format für die Werte anzugeben, die in angezeigt werden, die <xref:System.Web.UI.WebControls.BoundField> Objekt. Wenn die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft nicht festgelegt ist, wird der Wert des Felds ohne besondere Formatierung angezeigt.  
  
> [!NOTE]
>  In Versionen von ASP.NET 3.5 vor, Sie müssen festlegen, die <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Eigenschaft `false` Formatierung von Feldern, die nicht string-Datentypen. Andernfalls der Wert des Felds wird konvertiert in eine Zeichenfolge durch die Standardmethode für die Konvertierung vor der Formatzeichenfolge, die in gespeichert ist die <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> -Eigenschaft angewendet wird.  
  
 Standardmäßig wird die Formatierungszeichenfolge auf den Feldwert angewendet, nur dann, wenn das datengebundene Steuerelement, enthält die <xref:System.Web.UI.WebControls.BoundField> Objekt befindet sich im schreibgeschützten Modus. Um die Formatierungszeichenfolge auf Feldwerte im Bearbeitungsmodus anzuwenden, legen die <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Eigenschaft `true`.  
  
 Die Formatierungszeichenfolge kann eine beliebige Zeichenfolge sein und in der Regel enthält einen Platzhalter für den Wert des Felds. Z. B. in die Formatierungszeichenfolge `Item Value: {0}`, der Wert des Felds wird durch ersetzt die {0} Platzhalter, wenn die Zeichenfolge, in angezeigt wird der <xref:System.Web.UI.WebControls.BoundField> Objekt. Der Rest der Formatierungszeichenfolge wird als Literaltext angezeigt.  
  
 Wenn die Formatierungszeichenfolge keine Platzhalter enthalten, ist nur die Formatierungszeichenfolge selbst in den letzten anzuzeigenden Text enthalten (der Wert des Felds aus der Datenquelle ist nicht enthalten). Wenn der Platzhalter 0 (null) in geschweiften Klammern, wie im vorherigen Beispiel gezeigt wird, wird der Wert des Felds durch die Standardmethode in eine Zeichenfolge konvertiert. Sie können die 0 (null) eine Zeichenfolge anfügen, die angibt, wie der Wert des Felds formatiert werden soll. Zum Beispiel den Platzhalter `{0:C}` für ein numerisches Feld gibt an, dass der Wert des Felds in ein Währungsformat konvertiert werden sollen.  
  
 Formatierung angewendet wird, mithilfe der <xref:System.String.Format%2A> Methode. Die Anzahl, die auf der linken geschweiften Klammer folgt Teil der Syntax, die von dieser Methode verwendet wird, und gibt an, die eine Reihe von Werten der Platzhalter verwenden sollten. Da nur ein Wert des Felds in jeder Zelle vorhanden ist, kann nur die Anzahl, die auf der linken geschweiften Klammer folgt auf 0 festgelegt werden.  
  
 Die folgende Tabelle enthält die standardmäßige Formatzeichen für numerische Felder. Diese Zeichen sind nicht in der Groß-/Kleinschreibung beachtet, mit Ausnahme von `X`, dem hexadezimalen Zeichen angezeigt, in dem Fall, der angegeben wird. Sie können eine Zahl, die meisten Zeichen anfügen, um anzugeben, wie viele signifikanten Stellen oder Dezimalstellen, die Sie anzeigen möchten.  
  
> [!NOTE]
>  In den meisten Fällen hängt von Formatierung kultureinstellung des Servers. Die Beispiele sind für die kultureinstellung `en-US`.  
  
|Formatzeichen|Beschreibung |Beispiel|  
|----------------------|-----------------|-------------|  
|`C` oder `c`|Zeigt numerische Werte im Währungsformat an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Format: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` oder `d`|Ganzzahlige Werte im Dezimalformat anzeigt. Sie können die Anzahl der Ziffern angeben. (Auch wenn der Typ als "Decimal" bezeichnet wird, werden die Zahlen als ganze Zahlen formatiert.)|Format: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Format: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` oder `e`|Zeigt numerische Werte in wissenschaftlicher (exponentieller)-Format. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> Format: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` oder `f`|Numerischen Werte in festen Format angezeigt. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Format: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` oder `g`|Zeigt numerische Werte im Allgemeinen Format (möglichst kompakte Festkomma- oder wissenschaftliche Notation) an. Sie können die Anzahl der signifikanten Ziffern angeben.|Format: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Format: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` oder `n`|Zeigt numerische Werte im Format (einschließlich Gruppentrennzeichen und optionalem Minuszeichen). Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Format: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` oder `p`|Zeigt numerische Werte als Prozentsatz an. Sie können die Anzahl der Dezimalstellen angeben.|Format: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Format: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` oder `r`|Zeigt <xref:System.Single>, <xref:System.Double>, oder `BigInteger` Werte in die Roundtrip-Format.|Format: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` oder `x`|Ganzzahlige Werte im Hexadezimalformat anzeigt. Sie können die Anzahl der Ziffern angeben.|Format: `{0:X}`<br /><br /> 255 -> FF<br /><br /> Format: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 Weitere Informationen und Beispiele für die Formatierung für andere Werte für die Kultur, finden Sie unter [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md). Sie können auch benutzerdefinierte numerische Formatzeichenfolgen erstellen. Weitere Informationen finden Sie unter [Benutzerdefinierte Zahlenformatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).  
  
 Die folgende Tabelle enthält die Formatzeichen für <xref:System.DateTime> Felder. Die meisten dieser Spezifikationen Formatierung dazu führen, eine andere Ausgabe je nach den Einstellungen der Benutzeroberflächenkultur. Die Beispiele sind für eine <xref:System.DateTime> Wert 6/15/2009 1:45:30 Uhr mit der kultureinstellung des `en-US`.  
  
|Formatzeichen|Beschreibung |Beispiel|  
|----------------------|-----------------|-------------|  
|`d`|Kurzes Datumsmuster.|Format: `{0:d}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009|  
|`D`|Langes Datumsmuster.|Format: `{0:D}`<br /><br /> 6/15/2009 1:45:30 PM -> Montag, 15. Juni 2009|  
|`f`|Vollständiges Datums-/Zeitmuster (kurze Zeit).|Format: `{0:f}`<br /><br /> 6/15/2009 1:45:30 PM -> Montag, 15. Juni 2009 13:45 Uhr|  
|`F`|Vollständiges Datums-/Zeitmuster (lange Zeit).|Format: `{0:F}`<br /><br /> 6/15/2009 1:45:30 PM -> Montag, 15. Juni 2009 13:45:30 Uhr|  
|`g`|Allgemeines Datums-/Zeitmuster (kurze Zeit).|Format: `{0:g}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM|  
|`G`|Allgemeines Datums-/Zeitmuster (lange Zeit).|Format: `{0:G}`<br /><br /> 6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM|  
|`M` oder `m`|Monatstagmuster.|Format: `{0:M}`<br /><br /> 6/15/2009 1:45:30 PM-15. Juni >|  
|`O` oder `o`|Zurückkonvertieren von Datums-/Zeitmuster.|Format: `{0:o}`<br /><br /> 15.06.2009 13:45:30 -> 2009-06-15T13:45:30.0900000|  
|`R` oder `r`|RFC1123-Muster (Weitere Informationen finden Sie unter <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).|Format: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|Sortierbares Datums-/Zeitmuster.|Format: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|Kurzes Zeitmuster.|Format: `{0:t}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45 PM|  
|`T`|Langes Zeitmuster.|Format: `{0:T}`<br /><br /> 6/15/2009 1:45:30 PM -> 1:45:30 PM|  
|`u`|Universelles, sortierbares Datums-/Zeitmuster.|Format: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|Universelles Datums-/Zeitmuster (Koordinierte Weltzeit).|Format: `{0:U}`<br /><br /> 6/15/2009 1:45:30 PM -> Montag, 15. Juni 2009 20:45:30 Uhr|  
|`Y` oder `y`|Jahr-Monat-Muster.|Format: `{0:Y}`<br /><br /> 6/15/2009 1:45:30 PM -> Juni 2009|  
  
 Weitere Informationen und Beispiele für die Formatierung für andere Werte für die Kultur, finden Sie unter [Standardformatzeichenfolgen für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md). Sie können auch benutzerdefinierte Zeichenfolgen für Datum und Uhrzeit-Format erstellen. Weitere Informationen finden Sie unter [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).  
  
   
  
## Examples  
 Ein Visual Studio Web-Websiteprojekt mit Quellcode ist zur Ergänzung dieses Themas verfügbar: [Herunterladen](https://go.microsoft.com/fwlink/?LinkId=191889).  
  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft, um ein benutzerdefiniertes Format für die Werte eines Felds angeben.  
  
  
  
 Das folgende Beispiel zeigt eine Zeile der Ausgabe, die durch dieses Beispiel erzeugt wird.  
  
|ProductID|name|ProductNumber|ListPrice|Schriftbreite|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Formatieren von Typen in .NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">Ein <see cref="T:System.Collections.IDictionary" />, das verwendet wird, um die Werte der angegebenen Zelle zu speichern.</param>
        <param name="cell">Die <see cref="T:System.Web.UI.WebControls.TableCell" />, die die abzurufenden Werte enthält.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="includeReadOnly"><see langword="true" />, wenn die Werte schreibgeschützter Felder einbezogen werden, andernfalls <see langword="false" />.</param>
        <summary>Füllt das angegebene <see cref="T:System.Collections.IDictionary" />-Objekt mit den Werten aus dem angegebenen <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> Methode dient als einfache Möglichkeit zum Abrufen der Werte der Felder aus dem angegebenen <xref:System.Web.UI.WebControls.TableCell> -Objekt in ein <xref:System.Web.UI.WebControls.BoundField> Objekt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 Diese Methode besitzt keinen Rückgabewert. Stattdessen werden die Feldwerte zurückgegeben, als Verweis über die <xref:System.Collections.IDictionary?displayProperty=nameWithType> für übergebene Objekt das `dictionary` Parameter. Nachdem die Methode aufgerufen wurde, durchlaufen die <xref:System.Collections.IDictionary?displayProperty=nameWithType> Objekt, das die Feldwerte zuzugreifen.  
  
> [!NOTE]
>  Wenn die <xref:System.Web.UI.WebControls.TableCell> Objekt enthält nur-Lese Feldwerten, müssen Sie übergeben `true` für die `includeReadOnly` Parameter, um diese Werte enthalten.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">Der zu formatierende Feldwert.</param>
        <param name="encode"><see langword="true" />, wenn der Wert codiert werden soll, andernfalls <see langword="false" />.</param>
        <summary>Formatiert den angegebenen Feldwert für eine Zelle im <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns>Der Feldwert, der in das von <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> angegebene Format konvertiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> Methode ist eine Hilfsmethode verwendet, um den Wert eines Felds, das vom angegebenen Format Transformieren der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Eigenschaft. Wenn ein Feldwert null ist, den Wert des der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft zurückgegeben wird.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse können Sie überschreiben diese Methode, um eine benutzerdefinierte Formatierung Routine durchführen.</para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft beim Rendern des <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekts in einem Designer den für den Wert des Felds verwendeten Wert ab.</summary>
        <returns>Der Wert, der im Designer als der Wert des Felds angezeigt werden soll.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> Methode ist eine Hilfsmethode verwendet, um zu ermitteln, welcher Wert für ein Feld angezeigt wird, beim Rendern der <xref:System.Web.UI.WebControls.BoundField> Objekt in einem Designer. Wenn Sie sich um echte Daten aus der Datenquelle zur Entwurfszeit abgerufen werden können, wird stattdessen der von dieser Methode zurückgegebene Wert angezeigt.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse können Sie überschreiben diese Methode, um einen anderen Wert für das Feld in einem Designer anzuzeigende zurück.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">Der Container für den Feldwert.</param>
        <summary>Ruft den Wert des Felds ab, das an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt gebunden ist.</summary>
        <returns>Der Wert des Felds, das an das <see cref="T:System.Web.UI.WebControls.BoundField" /> gebunden ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> Methode ist eine Hilfsmethode verwendet, um den Wert eines Felds zu bestimmen. Wenn die <xref:System.Web.UI.WebControls.BoundField> Objekt in einem Designer angezeigt wird, und der Wert des Felds kann nicht zur Entwurfszeit bestimmt werden, wird der Wert zurückgegeben, aus der <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> Methode anstelle der tatsächlichen Feldwert zurückgegeben.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Der durch den <paramref name="controlContainer" />-Parameter angegebene Container ist <see langword="null" />.  
  
- oder - 
Der durch den <paramref name="controlContainer" />-Parameter angegebene Container weist kein Datenelement auf.  
  
- oder - 
Das Datenfeld wurde nicht gefunden.</exception>
        <block subset="none" type="overrides"><para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse können Sie überschreiben diese Methode, um eine benutzerdefinierte Routine, um zu bestimmen, der Wert eines Felds angeben.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Text ab, der im Header eines Datensteuerelements angezeigt wird, oder legt diesen fest.</summary>
        <value>Der im Header eines Datensteuerelements angezeigte Text. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> Eigenschaft, um ein Feld in ein Steuerelement mit dem Anzeigenamen zu identifizieren. Die am häufigsten verwendete Anwendung von der <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> darin, dass die Eigenschaft bereitzustellen, sinnvolle Spaltennamen, datengebundene Felder in einem <xref:System.Web.UI.WebControls.GridView> oder <xref:System.Web.UI.WebControls.DetailsView> Steuerelement.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Feldwerte vor dem Anzeigen in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt HTML-codiert werden.</summary>
        <value><see langword="true" />, wenn die Feldwerte vor dem Anzeigen in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt HTML-codiert werden, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Eigenschaft, um anzugeben, ob die Feldwerte werden in ihren jeweiligen zeichenfolgendarstellungen HTML-codierte, vor dem Anzeigen in einem <xref:System.Web.UI.WebControls.BoundField> Objekt. Wenn diese Eigenschaft ist z. B. `true`, ein Zeichenfolgenwert, der "\<Skript >" als gerendert "&lt;Skript&gt;". Wenn diese Eigenschaft `false`, würde die Zeichenfolge gerendert werden unverändert.  
  
> [!NOTE]
>  HTML-Codierung Feldwerten trägt dazu bei, die verhindern, dass Cross-Site scripting-Angriffe und schädlichen Inhalt angezeigt wird. Diese Eigenschaft sollte nach Möglichkeit aktiviert werden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Eigenschaft, um zu verhindern, dass die Feldwerte als HTML-Codierung, bevor Sie angezeigt werden, einem <xref:System.Web.UI.WebControls.BoundField> Objekt.  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob durch Übernehmen der <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />-Eigenschaft für den <see cref="T:System.Web.UI.WebControls.BoundField" />-Wert erstellter Text beim Anzeigen HTML-codiert werden soll, oder legt ihn fest.</summary>
        <value><see langword="true" />, wenn der Text HTML-codiert werden soll, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML-Codierung von Werten können verhindern, dass Cross-Site scripting-Angriffe und schädlichen Inhalt angezeigt wird. HTML-Codierung ist auch nützlich, wenn Sie HTML-Code im Browser wie z. B. die Anzeige der Zeichenfolge angezeigt werden soll "\<Br / >" statt einen Zeilenumbruch einfügen (`<br/>` Element) auf der Seite.  
  
> [!NOTE]
>  Diese Eigenschaft ist neu in ASP.NET 3.5. Wenn diese Eigenschaft auf `false` stellt das Standardverhalten von der <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> -Eigenschaft in früheren Versionen von ASP.NET als 3.5. Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>-Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><see langword="true" />, wenn das Sortieren unterstützt wird, andernfalls <see langword="false" />.</param>
        <param name="control">Das Datensteuerelement, das das <see cref="T:System.Web.UI.WebControls.BoundField" /> besitzt.</param>
        <summary>Initialisiert das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <returns><see langword="false" /> in allen Fällen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> Methode wird aufgerufen, durch das Steuerelement mit dem die <xref:System.Web.UI.WebControls.BoundField> Objekt gehört zum Ausführen von grundlegenden objektinitialisierung für Instanzen des Felds, bevor Sie das Feld für eine Zeilensammlung je hinzugefügt wird. Daten steuert, wie z. B. <xref:System.Web.UI.WebControls.DetailsView> und <xref:System.Web.UI.WebControls.GridView> rufen Sie die <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> -Methode in der ihre `CreateChildControls` Methoden, bevor andere Methoden wie z. B. `CreateRow` werden aufgerufen, um bestimmte Zeilen mit Daten zu erstellen.  
  
 Wird verwendet, rufen Sie diese Methode, wenn Sie schreiben eine benutzerdefinierte datengebundene Steuerelement, <xref:System.Web.UI.WebControls.TableCell> Objekte für die grundlegende Initialisierung für einen <xref:System.Web.UI.WebControls.BoundField> Objekt. Diese Methode implementieren, wenn Ihre <xref:System.Web.UI.WebControls.BoundField>-abgeleiteten Typ erforderlich Initialisierungen Objekt füllt es <xref:System.Web.UI.WebControls.TableCell> -Objekte mit Daten oder Steuerelemente in der <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="cellType">Einer der <see cref="T:System.Web.UI.WebControls.DataControlCellType" />-Werte.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <param name="rowIndex">Der nullbasierte Index der Zeile.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt mit dem angegebenen Zeilenzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Methode wird implementiert, indem <xref:System.Web.UI.WebControls.BoundField>-abgeleiteten Typen, die zum Hinzufügen von Text und Steuerelemente an eine <xref:System.Web.UI.WebControls.TableCell> Objekt ein Steuerelement, das Tabellen verwendet, um eine Benutzeroberfläche (UI) anzeigen. Diese Datensteuerelemente erstellen, die vollständige Tabelle Struktur Zeile für Zeile beim des Steuerelements `CreateChildControls` Methode wird aufgerufen. Die <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> Methode wird aufgerufen, indem die `InitializeRow` -Methode der Daten steuert, wie z. B. <xref:System.Web.UI.WebControls.DetailsView> und <xref:System.Web.UI.WebControls.GridView>.  
  
 Wird verwendet, rufen Sie diese Methode, wenn Sie schreiben eine benutzerdefinierte datengebundene Steuerelement, <xref:System.Web.UI.WebControls.TableCell> Objekte zum Initialisieren der Zellen der Tabellenstruktur mit Daten oder Steuerelementen. Diese Methode implementieren, wenn Sie schreiben eine <xref:System.Web.UI.WebControls.BoundField>-abgeleitete Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">Die zu initialisierende <see cref="T:System.Web.UI.WebControls.TableCell" />.</param>
        <param name="rowState">Einer der <see cref="T:System.Web.UI.WebControls.DataControlRowState" />-Werte.</param>
        <summary>Initialisiert das angegebene <see cref="T:System.Web.UI.WebControls.TableCell" />-Objekt mit dem angegebenen Zeilenzustand.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> Methode ist eine Hilfsmethode, die zum Initialisieren einer Zelle in der <xref:System.Web.UI.WebControls.BoundField> Objekt.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse können Sie überschreiben diese Methode, um eine benutzerdefinierte Initialisierungsroutine auszuführen.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Stellt den Steuerelementzustand dar, der wiederhergestellt werden soll.</param>
        <summary>Stellt die zuvor gespeicherten Ansichtszustandsinformationen für das Feld wieder her.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Beschriftung ab, die für ein Feld angezeigt wird, wenn der Wert des Felds NULL ist, oder legt diesen fest.</summary>
        <value>Die Beschriftung, die für ein Feld angezeigt wird, wenn der Wert des Felds NULL ist. Der Standardwert ist eine leere Zeichenfolge ("") und gibt an, dass diese Eigenschaft nicht festgelegt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Manchmal ist der Wert eines Felds als null in der Datenquelle gespeichert. Sie können angeben, eine benutzerdefinierte Beschriftung für die Felder angezeigt werden soll, die einen null-Wert durch Festlegen der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft. Wenn diese Eigenschaft nicht festgelegt ist, werden null-Feldwerte angezeigt, als leere Zeichenfolgen (""). Wenn ein Datensatz ist, die aktualisiert oder in einem datengebundenen Steuerelement eingefügt werden, wenn der Benutzer den Wert eingibt. von dieser Eigenschaft angegebene (als eine leere Zeichenfolge) für ein Feld in einem datengebundenen Steuerelement, dass der Wert automatisch in null konvertiert wird, in der Datenquelle.  
  
> [!NOTE]
>  Um einen leeren Zeichenfolgenwert des Felds in einen null-Wert konvertieren möchten, legen Sie die <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> Eigenschaft `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> Eigenschaft, um eine benutzerdefinierte Beschriftung für Feldwerte null anzugeben.  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Die Quelle des Ereignisses.</param>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Bindet den Wert eines Felds an das <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> Methode ist eine Hilfsmethode verwendet, um den Wert eines Felds in der Datenquelle zu binden, in eine entsprechende Zelle in der <xref:System.Web.UI.WebControls.BoundField> Objekt.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Das Steuerelement, an das der Feldwert gebunden ist, ist weder eine <see cref="T:System.Web.UI.WebControls.TextBox" /> noch eine <see cref="T:System.Web.UI.WebControls.TableCell" />.</exception>
        <block subset="none" type="overrides"><para>Beim Erweitern der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse können Sie überschreiben diese Methode, um eine benutzerdefinierte Bindungsroutine durchführen.</para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Feldwert im Bearbeitungsmodus geändert werden kann, oder legt diesen fest.</summary>
        <value><see langword="true" />, um zu verhindern, dass der Wert des Felds im Bearbeitungsmodus geändert wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Eigenschaft, um zu verhindern, dass die Werte in einer <xref:System.Web.UI.WebControls.BoundField> Objekt aus, die geändert wird. Wenn ein vom datengebundenen Steuerelement im Bearbeitungsmodus befindet, werden Felder, die schreibgeschützt werden als nur-Text, ohne alle Bearbeitungssteuerelemente angezeigt.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Eigenschaft gilt nur für den Bearbeitungsmodus. Um zu verhindern, dass Felder angezeigt, die im Einfügemodus befindet, verwenden Sie die <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> Eigenschaft.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Eigenschaft, um zu verhindern, dass die Werte des Schlüsselfelds angezeigt, die einem <xref:System.Web.UI.WebControls.BoundField> Objekt im Bearbeitungsmodus geändert werden.  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die HTML-Codierung von einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt unterstützt wird.</summary>
        <value>Gibt immer <see langword="true" /> zurück, um anzugeben, dass die HTML-Codierung von einem <see cref="T:System.Web.UI.WebControls.BoundField" /> unterstützt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> Eigenschaft ist eine Helper-Eigenschaft ein, die die <xref:System.Web.UI.WebControls.BoundField> Klasse und abgeleitete Klassen, um zu bestimmen, ob HTML-Codierung durch die Klasse unterstützt wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Bei der Ableitung von der <see cref="T:System.Web.UI.WebControls.BoundField" /> -Klasse, überschreiben Sie diese Eigenschaft, um anzugeben, ob HTML-Codierung durch die Klasse unterstützt wird.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt den Ausdruck „this“ dar.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Feld wird verwendet, um anzugeben, dass die <xref:System.Web.UI.WebControls.BoundField> Objekt sollten selbst statt eines Felds der Datenquelle für die Datenquelle binden. In diesem Fall ist das Objekt des `ToString` Wert im Feld angezeigt.  
  
 Dieses Feld wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der bestimmt, ob das Steuerelement Clienteingaben überprüft.</summary>
        <value>Ein Wert, der bestimmt, ob das Steuerelement Clienteingaben überprüft oder nicht. Die Standardeinstellung ist <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob die in einem <see cref="T:System.Web.UI.WebControls.BoundField" />-Objekt enthaltenen Steuerelemente Rückrufe unterstützen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> Methode ist eine Hilfsmethode verwendet, um zu bestimmen, ob die in Steuerelemente enthaltenen eine <xref:System.Web.UI.WebControls.BoundField> Objekt Rückrufe unterstützen. Diese Methode wurde implementiert, als eine leere Methode (eine Methode, die keinen Code enthalten ist), um anzugeben, dass Rückrufe unterstützt werden.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Abgeleitete Klassen die <see cref="T:System.Web.UI.WebControls.BoundField" /> Klasse kann diese Methode, um anzugeben, ob die Rückrufe Unterstützung Feld Steuerelemente enthaltenen überschreiben. Implementieren Sie diese Methode als leere Methode, die keine Ausnahme auslöst, um anzugeben, dass Rückrufe unterstützt werden, Lösen Sie andernfalls eine Ausnahme mit einer aussagekräftigen Meldung, die erläutert, warum die Rückrufe nicht unterstützt werden.</para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>