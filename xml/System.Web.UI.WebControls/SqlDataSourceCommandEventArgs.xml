<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="568e3b8907c9a6766f8e3faecebef6282ef782c6" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86657607" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceCommandEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für die Ereignisse <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> und <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> des <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Indem Sie einen Ereignishandlerdelegaten hinzufügen, um die <xref:System.Web.UI.WebControls.SqlDataSource.Updating> Ereignisse, oder zu behandeln <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> , können Sie jede zusätzliche Vorverarbeitung ausführen oder den Datenbankbefehl vollständig abbrechen.  
  
 Da die- <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Klasse von der- <xref:System.ComponentModel.CancelEventArgs> Klasse abgeleitet ist, können Sie einen ausstehenden <xref:System.Web.UI.WebControls.SqlDataSource> Datenbankbefehl abbrechen, indem Sie die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft auf festlegen `true` . Sie können die-Auflistung <xref:System.Data.Common.DbCommand.CommandText%2A> <xref:System.Data.Common.DbCommand.Parameters%2A> und andere Befehls Eigenschaften vor dem Ausführen des Befehls überprüfen und bearbeiten, indem Sie auf das-Objekt zugreifen, das <xref:System.Data.Common.DbCommand> von der-Eigenschaft verfügbar gemacht wird <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> .  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> -Klasse wird in den <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Methoden, und verwendet, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> um den Zugriff auf einen <xref:System.Web.UI.WebControls.SqlDataSource> Datenbankbefehl bereitzustellen, bevor er ausgeführt wird. Das-Steuerelement macht <xref:System.Web.UI.WebControls.SqlDataSource> viele Ereignisse verfügbar, die Sie behandeln können, um während eines Daten Vorgangs mit den zugrunde liegenden Datenobjekten zu arbeiten. In der folgenden Tabelle werden die-Ereignisse und zugeordneten <xref:System.EventArgs> -und-Ereignishandlerklassen aufgelistet, um Sie besser zu den verschiedenen Ereignissen zu führen, die dem Lebenszyklus eines Daten Vorgangs mithilfe des-Steuer Elements entsprechen <xref:System.Web.UI.WebControls.SqlDataSource> .  
  
|Ereignis|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Tritt ein, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating> , <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> treten vor einem INSERT-, Update-oder DELETE-Vorgang auf.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> , <xref:System.Web.UI.WebControls.SqlDataSource.Updated> , <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> treten nach Abschluss der Datenabruf-, INSERT-, Update-oder DELETE-Vorgänge auf.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer Microsoft SQL Server-Datenbank in einem <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement abgerufen wurden, und den Datensatz mithilfe eines-Steuer Elements aktualisieren <xref:System.Web.UI.WebControls.TextBox> Das Beispiel zeigt, wie Sie mithilfe eines- <xref:System.Data.Common.DbTransaction> Objekts einen Transaktionskontext hinzufügen können, wenn Sie das- <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zum Aktualisieren von Daten verwenden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs : System.Data.Common.DbCommand -&gt; System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das die Befehle <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> und <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> darstellt, die abgebrochen werden können.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />-Klasse unter Verwendung des angegebenen Datenbankbefehlsobjekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ausstehenden Datenbankbefehl ab.</summary>
        <value>Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das den ausstehenden Datenbankbefehl darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können das- <xref:System.Web.UI.WebControls.SqlDataSource.Updating> <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> Ereignis, das <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> -Ereignis oder das-Ereignis behandeln, um die Eigenschaften von zu überprüfen und zu bearbeiten, <xref:System.Data.Common.DbCommand> bevor es vom Steuerelement ausgeführt wird <xref:System.Web.UI.WebControls.SqlDataSource> Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den Daten Bank Vorgang nicht abbrechen, indem Sie die- <xref:System.Data.Common.DbCommand.Cancel%2A> Methode für das- <xref:System.Data.Common.DbCommand> Objekt direkt aufrufen. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die- <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft von <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> auf festlegen `true` .  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden. Außerdem wird gezeigt, wie ein-Steuerelement verwendet wird, <xref:System.Web.UI.WebControls.DetailsView> um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Die Daten werden anfänglich im <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt, und die ausgewählte Zeile des <xref:System.Web.UI.WebControls.GridView> wird ebenfalls im angezeigt <xref:System.Web.UI.WebControls.DetailsView> . Das-Steuerelement und das-Steuerelement <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView> verwenden unterschiedliche Datenquellen-Steuerelemente; das-Steuerelement, das dem zugeordnet ist, <xref:System.Web.UI.WebControls.DetailsView> verfügt über eine <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> , die sicherstellen, dass die ausgewählte <xref:System.Web.UI.WebControls.GridView>  
  
 Wenn Sie auf die automatisch generierte Schaltfläche Einfügen des- <xref:System.Web.UI.WebControls.DetailsView> Steuer Elements klicken, wird <xref:System.Web.UI.WebControls.DetailsView> eine andere Benutzeroberfläche angezeigt, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, füllt die Auflistung <xref:System.Web.UI.WebControls.DetailsView> automatisch <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> mit Werten aus den gebundenen Spalten auf und ruft die- <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter aus beliebigen <xref:System.Web.UI.WebControls.BoundField> und einen Parameter für die ableiten, <xref:System.Web.UI.WebControls.TemplateField> Wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im-Ereignishandler hinzugefügt, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem die Daten <xref:System.Web.UI.WebControls.DetailsView> in die Datenbank eingefügt wurden, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> wird der Ereignishandler aufgerufen, um das-Ereignis zu behandeln <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> , der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die- <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode des-Steuer Elements wird <xref:System.Web.UI.WebControls.GridView> explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>
