<Type Name="SqlDataSourceCommandEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a93f1ccd154b2ab09e32ab504c6a50b023f087df" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39743063" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceCommandEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceCommandEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceCommandEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceCommandEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type SqlDataSourceCommandEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für die Ereignisse <see cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />, <see cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" /> und <see cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" /> des <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelements bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Durch das Hinzufügen eines Ereignishandlerdelegaten, behandeln die <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, oder <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignisse können den Datenbankbefehl abbrechen, vollständig oder führen Sie weitere vorverarbeitung erforderlich.  
  
 Da die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> abgeleitete Klasse wird die <xref:System.ComponentModel.CancelEventArgs> -Klasse, die Sie Abbrechen einer ausstehenden <xref:System.Web.UI.WebControls.SqlDataSource> -Datenbankbefehls durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft, um `true`. Untersuchen und Bearbeiten der <xref:System.Data.Common.DbCommand.CommandText%2A>, <xref:System.Data.Common.DbCommand.Parameters%2A> Sammlung und andere Befehlseigenschaften vor dem Ausführen des Befehls durch den Zugriff auf die <xref:System.Data.Common.DbCommand> Objekt verfügbar gemacht werden, indem die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command%2A> Eigenschaft.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> Klasse wird verwendet, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>, und <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Methoden zur Bereitstellung von Zugriff auf eine <xref:System.Web.UI.WebControls.SqlDataSource> -Datenbankbefehls, bevor er ausgeführt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement stellt viele Ereignisse, die Sie behandeln können, um mit der zugrunde liegenden Datenobjekte im Verlauf eines Datenvorgangs zu arbeiten. Die folgende Tabelle listet die Ereignisse und die zugehörigen <xref:System.EventArgs> und -Handler-Ereignisklassen, um eine bessere Übersicht über die verschiedenen Ereignisse erhalten, die den Lebenszyklus einer Vorgang unter Verwendung entsprechen, den <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement.  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Tritt auf, bevor die Daten abgerufen werden.|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> auftreten, bevor eine INSERT-, Update- oder Delete-Vorgang wird ausgeführt.|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>, <xref:System.Web.UI.WebControls.SqlDataSource.Updated>, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> treten nach dem Abrufen von Daten, INSERT-, Update- oder delete-Vorgänge abgeschlossen ist.|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anzeigen von Daten aus einer Microsoft SQL Server-Datenbank in abgerufen eine <xref:System.Web.UI.WebControls.DropDownList> steuern und aktualisieren Sie den Datensatz mit einem <xref:System.Web.UI.WebControls.TextBox> Steuerelement. Das Beispiel zeigt, wie Sie verwenden können eine <xref:System.Data.Common.DbTransaction> Objekt Transaktionskontext hinzugefügt werden soll, wenn Sie mit der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zum Aktualisieren von Daten.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
    <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceCommandEventArgs (System.Data.Common.DbCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.#ctor(System.Data.Common.DbCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As DbCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceCommandEventArgs(System::Data::Common::DbCommand ^ command);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs : System.Data.Common.DbCommand -&gt; System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" Usage="new System.Web.UI.WebControls.SqlDataSourceCommandEventArgs command" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
      </Parameters>
      <Docs>
        <param name="command">Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das die Befehle <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />, <see cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" /> und <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> darstellt, die abgebrochen werden können.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />-Klasse unter Verwendung des angegebenen Datenbankbefehlsobjekts.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Data.Common.DbCommand" Usage="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den ausstehenden Datenbankbefehl ab.</summary>
        <value>Ein <see cref="T:System.Data.Common.DbCommand" />-Objekt, das den ausstehenden Datenbankbefehl darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie behandeln die <xref:System.Web.UI.WebControls.SqlDataSource.Updating>, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>, oder <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Ereignis zum Überprüfen und ändern die Eigenschaften der <xref:System.Data.Common.DbCommand> vor der Ausführung von der <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement. Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignis-Handler-Delegat aufgerufen wird. Sie können nicht aus diesem Grund den Datenbankvorgang abbrechen, durch den Aufruf der <xref:System.Data.Common.DbCommand.Cancel%2A> Methode für die <xref:System.Data.Common.DbCommand> direkt. Allerdings können Sie die Datenbankvorgang abbrechen, durch Festlegen der <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> zu `true`.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Abrufen von Daten aus Microsoft SQL Server und zeigt es im eine <xref:System.Web.UI.WebControls.GridView> -Steuerelement, und wie Sie mit einem <xref:System.Web.UI.WebControls.DetailsView> Steuerelement zur Anzeige von Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> sowie ein Formular zum Einfügen neuer Datensätze.  
  
 Die Daten werden zuerst angezeigt, der <xref:System.Web.UI.WebControls.GridView> -Steuerelement, und der ausgewählten Zeile der <xref:System.Web.UI.WebControls.GridView> wird auch angezeigt, der <xref:System.Web.UI.WebControls.DetailsView>. Die <xref:System.Web.UI.WebControls.GridView> und <xref:System.Web.UI.WebControls.DetailsView> Steuerelemente verwenden unterschiedliche Daten Datenquellen-Steuerelemente, die zugeordnet ist der <xref:System.Web.UI.WebControls.DetailsView> verfügt über eine <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> sicher, dass die ausgewählte Zeile der <xref:System.Web.UI.WebControls.GridView> wird angezeigt.  
  
 Wenn Sie die automatisch generierte Einfügen-Schaltfläche, der auf die <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement, das <xref:System.Web.UI.WebControls.DetailsView> zeigt eine andere Benutzeroberfläche, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel verwendet eine gespeicherte Prozedur zum Einfügen von Datensätzen, und gibt den primären Schlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen der <xref:System.Web.UI.WebControls.DetailsView> füllt automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung mit Werten aus der gebundenen Spalten und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Methode. Der <xref:System.Web.UI.WebControls.DetailsView> kann ableiten, die richtigen Parameter aus einer <xref:System.Web.UI.WebControls.BoundField>, und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> Wenn die ASP.NET-Syntax für bidirektionale Datenbindung verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter hinzugefügt, der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Ereignishandler zur Behandlung von des primären Schlüssels, die von der gespeicherten Prozedur zurückgegeben.  
  
 Schließlich nach dem Einfügen von Daten die <xref:System.Web.UI.WebControls.DetailsView> in die Datenbank, die <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler wird aufgerufen, um die Behandlung der <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Ereignis, den Wert des Primärschlüssels der eingefügten Zeile wird angezeigt, und die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Methode der <xref:System.Web.UI.WebControls.GridView>Steuerelement explizit aufgerufen wird, um Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
  </Members>
</Type>