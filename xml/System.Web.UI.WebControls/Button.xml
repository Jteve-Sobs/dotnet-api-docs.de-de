<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="97835c334aeb6983aa3c9003c8dd43555415c178" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323397" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Schaltflächen-Steuerelement auf der Webseite an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#Introduction)  
  
-   [Verhalten der Schaltfläche Postbacks und Server-Ereignisse](#ButtonPostbackBehaviorandServerEvents)  
  
-   [Behandlung von Ereignissen im Clientskript Schaltfläche](#HandlingButtonEventsinClientScript)  
  
-   [Button-Steuerelemente und Überprüfung](#ButtonControlsAndValidation)  
  
-   [Schaltflächen in Datensteuerelementen](#ButtonsInDataControls)  
  
-   [Binden von Daten an Steuerelemente](#BindingDataToTheControls)  
  
-   [Verwenden von Schaltflächen mit UpdatePanel-Steuerelemente](#UsingButtonsWithUpdatePanelControls)  
  
-   [Deklarative Syntax](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>Einführung  
 Verwenden der <xref:System.Web.UI.WebControls.Button> Steuerelement, das eine Schaltfläche auf der Webseite zu erstellen, die Benutzer eine Seite an den Server senden können. Das Steuerelement löst ein Ereignis in Server-Code, die Sie behandeln können, um auf das Postback zu reagieren. Sie können auch ein Ereignis im Clientskript auslösen, die Sie behandeln können, bevor die Seite zurückgesendet wird, oder, ausführen und klicken Sie dann die Übermittlung der Seite abbrechen kann.  
  
> [!NOTE]
>  ASP.NET umfasst verschiedene Arten von Schaltflächen-Steuerelemente, von die jede anders auf Webseiten angezeigt wird. Werden die <xref:System.Web.UI.WebControls.Button> -Steuerelement, das als eine Schaltfläche; rendert die <xref:System.Web.UI.WebControls.LinkButton> Steuerelement, das als Link gerendert und der <xref:System.Web.UI.WebControls.ImageButton> -Steuerelement, das als ein Bild rendert und die <xref:System.Web.UI.WebControls.ImageMap> -Steuerelement, das können Sie eine Grafik zu erstellen, die Hotspots enthält dass die Benutzer klicken können. Standardmäßig senden alle Schaltflächen-Steuerelemente die Seite, die beim Klicken auf. Sie können auch die <xref:System.Web.UI.HtmlControls.HtmlButton> und <xref:System.Web.UI.HtmlControls.HtmlInputButton> Steuerelemente zum Erstellen von Schaltflächen auf der Seite, die in Servercode programmierbar sind. Weitere Informationen zu den Unterschieden zwischen HTML und Webserversteuerelemente finden Sie unter [Übersicht über die Steuerelemente von ASP.NET Web Server](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).  
  
 Standardmäßig eine <xref:System.Web.UI.WebControls.Button> Steuerelement ist eine Schaltfläche "Senden". Eine Schaltfläche "Senden" verfügt nicht über einen Befehlsnamen (angegeben durch die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft) der Schaltfläche und einfach Beiträge, die die Webseite wieder auf dem Server zugeordnet. Sie können angeben, einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Click> Ereignis, um programmgesteuert steuern von Aktionen ausgeführt werden, wenn auf die Schaltfläche "Senden" geklickt wird.  
  
 Eine Befehlsschaltfläche hat einen Befehlsnamen Zusammenhang mit der Schaltfläche wie etwa `Sort`, durch Festlegen der <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft. Dies ermöglicht Ihnen die Erstellung mehrerer <xref:System.Web.UI.WebControls.Button> Steuerelemente auf einer Webseite und programmgesteuert bestimmen, die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Sie können auch die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft mit dem eine Befehlsschaltfläche, um zusätzliche Informationen über den Befehl ausführen, z. B. bereitzustellen `Ascending`. Sie können angeben, einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Command> Ereignis, um programmgesteuert steuern von Aktionen ausgeführt werden soll, wenn der Befehl geklickt wird.  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a>Verhalten der Schaltfläche Postbacks und Server-Ereignisse  
 Wenn ein Benutzer eine beliebige Web Server Control-Schaltfläche klickt, wird die Seite an den Server gesendet. Dies bewirkt, dass die Webseite, die verarbeitet werden und alle ausstehenden Ereignisse im Server-basierten Code ausgelöst werden. Wenn alle Seite und Steuern der Verarbeitung abgeschlossen hat, rendert die Seite selbst an den Browser erneut.  
  
 Die Schaltflächen können ihre eigenen auslösen <xref:System.Web.UI.WebControls.Button.Click> Ereignisse oder <xref:System.Web.UI.WebControls.Button.Command> -Ereignis, das Sie mithilfe von Server-basierten Code behandeln können. Dies ist anders als bei Ereignissen, die in herkömmlichen HTML-Seiten oder in Client-basierte Webanwendungen, bei einer Schaltfläche `onclick` Ereignis erfolgt mithilfe von JavaScript, die auf dem Client ausgeführt wird. Weitere Informationen finden Sie unter [ASP.NET Web Forms-Steuerelement Ereignis Servermodell](https://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).  
  
 Wenn Benutzer ein Schaltflächen-Steuerelement klicken, wird die Seite an den Server zurückgesendet. Standardmäßig wird die Seite an sich selbst zurückgesendet,  
  
 Sie können die Schaltflächen zum Veröffentlichen der aktuellen Seite zu einer anderen Seite konfigurieren. Dies kann zum Erstellen von mehrseitiger Formularen nützlich sein. Weitere Informationen finden Sie unter [Cross-Page Posting in ASP.NET Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a>Behandlung von Ereignissen im Clientskript Schaltfläche  
 Schaltflächen-Steuerelemente können sowohl Serverereignisse und Client-Ereignisse auslösen. Server-Ereignisse treten nach dem Postback, und sie in den serverseitigen Code, den Sie, für die Seite schreiben behandelt werden. Client-Ereignisse werden im Clientskript, in der Regel ECMAScript (JavaScript), verarbeitet, und es werden ausgelöst, bevor die Seite gesendet wird. Clientseitige Ereignisse ASP.NET Schaltflächen-Steuerelemente hinzufügen, können Sie Aufgaben wie das Anzeigen von Dialogfeldern zur Bestätigung vor dem Senden der Seite durchführen und potenziell die Übermittlung abbrechen. Weitere Informationen finden Sie unter [Clientskript in ASP.NET Web Pages](https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) und [Vorgehensweise: Reagieren auf die Schaltfläche "Web Server Steuerelementereignisse im Clientskript](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).  
  
 Sie sollten auch die <xref:System.Web.UI.WebControls.Button> Steuerelement Clientskript auch verwenden, um das Postback (anstatt einfach einen HTTP POST-Vorgang) auszuführen. Dies kann nützlich, wenn das Postback, z. B. das Anschließen es auf andere Elemente auf der Seite programmgesteuert zu bearbeiten sein. Sie können festlegen, die <xref:System.Web.UI.WebControls.Button> des Steuerelements <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft, um `true` , dazu führen, dass die <xref:System.Web.UI.WebControls.Button> Steuerelements Clientskript-basierte Postback.  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a>Button-Steuerelemente und Überprüfung  
 Wenn eine Seite ASP.NET Validator-Steuerelemente in der Standardeinstellung enthält, führt dazu, dass ein Schaltflächen-Steuerelement auf das Validierungssteuerelement die Überprüfung ausführen. Wenn die clientseitige Validierung für ein Validator-Steuerelement aktiviert ist, wird die Seite nicht gesendet, wenn die Validierung fehlgeschlagen ist.  
  
 In der folgende Tabelle beschreibt die Eigenschaften von Schaltflächen-Steuerelemente, mit die Sie den Überprüfungsprozess genauer steuern können unterstützt werden.  
  
|Eigenschaft|Beschreibung |  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Gibt an, ob es sich bei Klicken auf die Schaltfläche auch eine validierungsüberprüfung ausgeführt werden. Legen Sie diese Eigenschaft auf `false` um die Validierung zu verhindern.|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Können Sie angeben, welche Validierungssteuerelemente auf der Seite aufgerufen werden, wenn die Schaltfläche geklickt wird. Wenn keine Gruppen für die Überprüfung nicht hergestellt werden, ruft ein Klick auf die alle die Validierungssteuerelemente, die auf der Seite befinden.|  
  
 Weitere Informationen finden Sie unter [Überprüfen der Benutzereingabe in ASP.NET-Webseiten](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a>Schaltflächen in Datensteuerelementen  
 Button-Webserversteuerelemente werden häufig in Datensteuerelementen, z. B. in verwendet die <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, und <xref:System.Web.UI.WebControls.Repeater> Listen-Steuerelemente. In diesen Fällen reagieren Sie in der Regel nicht direkt auf die Schaltfläche mit den click-Ereignis. Stattdessen löst eine Schaltfläche in einem Datensteuerelement an ein Ereignis, das für das Steuerelement spezifisch sind. Z. B. in der <xref:System.Web.UI.WebControls.DataList> -Steuerelement, eine Schaltfläche löst ggf. aus der <xref:System.Web.UI.WebControls.DataList> des Steuerelements <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis anstatt der <xref:System.Web.UI.WebControls.Button> des Steuerelements <xref:System.Web.UI.WebControls.Button.Click> Ereignis.  
  
 Da von datengebundenen Steuerelementen viele Schaltflächen enthalten können, können Sie festlegen, dass der Schaltfläche <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> -Eigenschaft einen Wert zur Übergabe als Teil des Ereignisses an. Anschließend können Sie testen, für dieses Argument, um festzustellen, welche Schaltfläche geklickt wurde.  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a>Binden von Daten an Steuerelemente  
 Sie können die Schaltfläche "Webserver-Steuerelemente an eine Datenquelle binden, um zu steuern, die eigenschafteneinstellungen dynamisch. Sie können z. B. einer Schaltfläche festlegen <xref:System.Web.UI.WebControls.Button.Text%2A> Eigenschaft mithilfe der Datenbindung.  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a>Verwenden von Schaltflächen mit UpdatePanel-Steuerelemente  
 Teilrendering von Seiten ermöglicht es, Teile einer Seite ohne ein Postback zu aktualisieren. <xref:System.Web.UI.UpdatePanel> Steuerelemente können Sie Teile der Seite zu markieren, die in das Teilrendering von Seiten beteiligt sind. Standardmäßig wird das Verhalten von Steuerelementen innerhalb einer <xref:System.Web.UI.UpdatePanel> zu steuern, einschließlich <xref:System.Web.UI.WebControls.Button> steuert, besteht darin, ein asynchrones Postback statt eines Postbacks ausführen. Dadurch wird nur der Inhalt des aktualisiert die <xref:System.Web.UI.UpdatePanel> -Steuerelement aus dem das Postback stammt.  
  
 Zusätzlich zu das Szenario einer <xref:System.Web.UI.WebControls.Button> Steuerelement in ein <xref:System.Web.UI.UpdatePanel> -Steuerelement, können Sie <xref:System.Web.UI.WebControls.Button> Steuerelemente, bei denen <xref:System.Web.UI.UpdatePanel> Steuerelemente in den folgenden Szenarien:  
  
-   Definieren einer <xref:System.Web.UI.WebControls.Button> Steuerelement, das außerhalb einer <xref:System.Web.UI.UpdatePanel> steuern, wie ein <xref:System.Web.UI.AsyncPostBackTrigger> -Steuerelement für den Bereich. Wenn die Schaltfläche geklickt wird, ein asynchrones Postback ausgeführt und aktualisiert den Inhalt des Bereichs.  
  
-   Definieren einer <xref:System.Web.UI.WebControls.Button> Steuerelement in ein <xref:System.Web.UI.UpdatePanel> steuern, wie eine <xref:System.Web.UI.PostBackTrigger> für den Bereich. Wenn die Schaltfläche geklickt wird, führt es ein Postback, auch wenn es in ist eine <xref:System.Web.UI.UpdatePanel> Steuerelement.  
  
 Weitere Informationen zu Partial-Page rendering und Verwenden von <xref:System.Web.UI.UpdatePanel> Steuerelemente finden Sie [Übersicht über das UpdatePanel-Steuerelement](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) und [Übersicht über das Teilrendering von Seiten](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines Sendevorgangs <xref:System.Web.UI.WebControls.Button> -Steuerelement, das die Webseite Inhalt an den Server zurücksendet.  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen eines Befehls <xref:System.Web.UI.WebControls.Button> -Steuerelement, das eine Liste sortiert.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Button" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.Button> Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie erstellt und initialisiert eine neue Instanz der dem <xref:System.Web.UI.WebControls.Button> Klasse.  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den auf dem Client zu rendernden Ausgabestream enthält.</param>
        <summary>Fügt die Attribute eines <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements zum Ausgabestream hinzu, der auf dem Client gerendert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> -Methode in der ein benutzerdefiniertes Steuerelement, sodass der <xref:System.Web.UI.WebControls.Button> Text werden immer in Rot angezeigt.  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung durchgeführt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Klicken auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung durchgeführt wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Standardmäßig erfolgt die Validierung bei einer <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Validierung der Seite bestimmt, ob die Benutzereingabe-Steuerelemente auf der Seite mit einem Validierungssteuerelement, die alle die Validierungsregeln zugeordnet, angegeben durch das Validierungssteuerelement übergeben.  
  
 Sie können angeben, oder zu bestimmen, ob die Überprüfung auf dem Client und dem Server ausgeführt wird beim eine <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird, mit der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Eigenschaft. Validierung durchgeführt werden soll, muss die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Eigenschaft `false`.  
  
> [!NOTE]
>  Legen Sie die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Eigenschaft `false` bei Verwendung der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft zum Zurücksenden an eine andere Seite. Wenn Sie zurück zu einer anderen Seite Posten, sollten Sie explizit Überprüfung überprüfen. Ein Beispiel finden Sie im Abschnitt "Hinweise" der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft.  
  
 Diese Eigenschaft ist im Allgemeinen festgelegt, um `false` für eine `reset` oder `clear` Schaltfläche, um zu verhindern, dass die Überprüfung durchgeführt werden, wenn die Schaltfläche geklickt wird.  
  
 Bei der der Wert des der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> -Eigenschaftensatz auf `true`, können Sie auch die <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Eigenschaft, um den Namen der Validierungsgruppe für das Angeben der <xref:System.Web.UI.WebControls.Button> Steuerelement eine Validierung veranlasst.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Eigenschaft, um zu verhindern, dass bei der Validierung auftritt. Beachten Sie, dass die <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> Methode wird jedes Validierungssteuerelement unabhängig voneinander aktiviert.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.Button" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.Click> Ereignis wird ausgelöst, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn Sie kein Befehlsname zugeordnet ist die <xref:System.Web.UI.WebControls.Button> -Steuerelement (z. B. mit einer Schaltfläche "Senden").  
  
 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und codiert einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Click> Ereignis, um eine Meldung im Web anzeigen Seite, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.Button" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.Command> Ereignis wird ausgelöst, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn eine Befehlsnamen ein, z. B. `Sort`, zugeordnet ist die <xref:System.Web.UI.WebControls.Button> Steuerelement. Dies ermöglicht Ihnen die Erstellung mehrerer <xref:System.Web.UI.WebControls.Button> Steuerelemente auf einer Webseite und programmgesteuert bestimmen, die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Button.Command> Ereignis wird ausgelöst, durch die Hierarchie der Steuerelemente in der Form der `BubbleEvent`.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und codiert einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Command> Ereignis, um eine Liste sortieren bei der <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. In diesem Beispiel gibt den Ereignishandler deklarativ an, mit der <xref:System.Web.UI.WebControls.Button.OnClick%2A> Eigenschaft der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Ereignishandler und programmgesteuert auf das Ereignis im Hinzufügen der `Page_Load` Methode.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen zusammen mit dem zugeordneten <see cref="E:System.Web.UI.WebControls.Button.Command" /> an das <see cref="P:System.Web.UI.WebControls.Button.CommandName" />-Ereignis übergebenen optionalen Parameter ab, oder legt diesen fest.</summary>
        <value>Ein zusammen mit dem zugeordneten <see cref="E:System.Web.UI.WebControls.Button.Command" /> an das <see cref="P:System.Web.UI.WebControls.Button.CommandName" />-Ereignis übergebener optionaler Parameter. Der Standardwert ist <see cref="F:System.String.Empty" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft, um einen Parameter angegeben wird, ergänzt die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft.  
  
> [!NOTE]
>  Obwohl Sie festlegen können die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> -Eigenschaft selbst ist normalerweise nur verwendet, wenn die <xref:System.Web.UI.WebControls.Button.CommandName%2A> -Eigenschaft ebenfalls festgelegt wird.  
  
 Die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft ergänzt die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft, sodass Sie zusätzliche Informationen zu den auszuführenden Befehl bereitstellen. Wenn Sie festlegen, z. B. die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft `Sort` und die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft, um `Ascending`, geben Sie einen Befehl zum Sortieren in aufsteigender Reihenfolge.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft zum Erstellen einer <xref:System.Web.UI.WebControls.Button> -Steuerelement, das eine Liste in aufsteigender Reihenfolge sortiert.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement zugeordneten Befehlsnamen ab, der an das <see cref="E:System.Web.UI.WebControls.Button.Command" />-Ereignis übergeben wird, oder legt diesen fest.</summary>
        <value>Der Befehlsname des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements. Der Standardwert ist <see cref="F:System.String.Empty" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie über mehrere verfügen <xref:System.Web.UI.WebControls.Button> Steuerelemente auf einer Webseite verwenden die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft angeben oder den Namen des Befehls Ermitteln von einzelnen zugeordnet <xref:System.Web.UI.WebControls.Button> Steuerelement. Sie können festlegen, die <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft mit dem eine beliebige Zeichenfolge, die den auszuführenden Befehl identifiziert. Sie können den Befehlsnamen dann programmgesteuert bestimmen die <xref:System.Web.UI.WebControls.Button> steuern und die entsprechenden Aktionen ausführen.  
  
 Weitere Informationen zu den Befehl ein, z. B. `Ascending`, kann angegeben werden, mithilfe der <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Eigenschaft.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.CommandName%2A> Eigenschaft zum Erstellen einer <xref:System.Web.UI.WebControls.Button> -Steuerelement, das eine Liste sortiert.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Web.UI.PostBackOptions" />-Objekt, das das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements darstellt.</summary>
        <returns><see cref="T:System.Web.UI.PostBackOptions" />, die das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> -Methode erstellt eine <xref:System.Web.UI.PostBackOptions> Objekt, das darstellt der <xref:System.Web.UI.WebControls.Button> Postbackverhalten des Steuerelements. Die <xref:System.Web.UI.PostBackOptions> Objekt wird dann in der Regel zum Übergeben der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> -Methode, die verwendet wird, um einem Verweis auf eine Funktion des clientseitigen Skripts abzurufen, die beim Aufrufen, bewirkt, dass der Server an die Seite zurückgesendet.  
  
 Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn Sie erweitern die <xref:System.Web.UI.WebControls.Button> Klasse.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können außer Kraft setzen der <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> -Methode in der abgeleiteten Klasse die postback Optionen für das Schaltflächen-Steuerelement zu ändern oder Client-seitige Skript aufrufen, wenn die Schaltfläche geklickt wird. Achten Sie darauf, dass Sie die Basisklasse aufrufen <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> Methode, damit die Standardoptionen für die postback festgelegt werden.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Clientskript in ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.Click> Ereignis wird ausgelöst, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn Sie kein Befehlsname zugeordnet ist die <xref:System.Web.UI.WebControls.Button> -Steuerelement (z. B. mit einer Schaltfläche "Senden").  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und codiert einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Click> Ereignis, um eine einfache Nachricht auf der Webseite angezeigt.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das clientseitige Skript ab, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis ausgelöst wird, oder legt das clientseitige Skript fest.</summary>
        <value>Das clientseitige Skript, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis ausgelöst wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Eigenschaft, um zusätzliche clientseitige Skripts anzugeben, die beim Instanziieren einer <xref:System.Web.UI.WebControls.Button> des Steuerelements <xref:System.Web.UI.WebControls.Button.Click> Ereignis wird ausgelöst. Das Skript, das Sie für diese Eigenschaft im gerendert wird angeben, die <xref:System.Web.UI.WebControls.Button> des Steuerelements `OnClick` Attributs sowie des Steuerelements vordefinierte des clientseitigen Skripts.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Ein Visual Studio Web-Websiteprojekt mit Quellcode ist zur Ergänzung dieses Themas verfügbar: [Herunterladen](https://go.microsoft.com/fwlink/?LinkId=192871).  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Eigenschaft, um zusätzliche clientseitige Skripts anzugeben, die beim Instanziieren einer <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird.  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Button.Command" />-Ereignis des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.Command> Ereignis wird ausgelöst, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn eine Befehlsnamen ein, z. B. `Sort`, zugeordnet ist die <xref:System.Web.UI.WebControls.Button> Steuerelement. Dies ermöglicht Ihnen die Erstellung mehrerer <xref:System.Web.UI.WebControls.Button> Steuerelemente auf einer Webseite und programmgesteuert bestimmen, die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird.  
  
> [!NOTE]
>  Die <xref:System.Web.UI.WebControls.Button.Command> Ereignis wird ausgelöst, durch die Hierarchie der Steuerelemente in der Form der `BubbleEvent`.  
  
 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 Mit der <xref:System.Web.UI.WebControls.Button.OnCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie angegeben und codiert einen Ereignishandler für die <xref:System.Web.UI.WebControls.Button.Command> Ereignis, um eine Liste sortieren bei der <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. In diesem Beispiel gibt den Ereignishandler deklarativ an, mit der <xref:System.Web.UI.WebControls.Button.OnClick%2A> Eigenschaft der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der Ereignishandler und programmgesteuert auf das Ereignis im Hinzufügen der `Page_Load` Methode.  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Bestimmt, ob vor dem Rendern auf dem Client auf die Schaltfläche geklickt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> Methode wird hauptsächlich von Steuerelemententwicklern verwendet, wenn eine benutzerdefinierte Klasse von Ableiten der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL der Seite ab, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement geklickt wird, oder legt diese fest.</summary>
        <value>Die URL der Webseite, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement geklickt wird. Der Standardwert ist eine leere Zeichenfolge (""), wodurch die Seite an sich selbst zurückgesendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft können Sie zum Ausführen einer mithilfe von post seitenübergreifenden der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
> [!NOTE]
>  Nur richtig angegebenen Pfade, die mit dieser Eigenschaft verwendet werden. Z. B. relative Pfade (Test), absolute Pfade (https://localhost/WebApp/default.aspx) und virtuellen (~ \Test\default.aspx) ordnungsgemäß funktionieren. Ein falsches Format Pfade wie z. B. "/ Test" oder "\Test\default.aspx" funktionieren nicht. Finden Sie unter [ASP.NET Web-Projektpfade](https://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) für eine Erläuterung zum Erstellen der korrekten Pfade.  
  
 Legen Sie die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> -Eigenschaft auf die URL der Webseite zum Posten, wenn die <xref:System.Web.UI.WebControls.Button> -Steuerelement geklickt wird. Z. B. `Page2.aspx` bewirkt, dass die Seite, enthält die <xref:System.Web.UI.WebControls.Button> Steuerelement zum an `Page2.aspx`. Wenn Sie einen Wert für nicht angeben der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> -Eigenschaft, die Seite zurückgesendet wird, an sich selbst.  
  
> [!IMPORTANT]
>  Beim Ausführen eines seitenübergreifenden Postbacks mit Steuerelementen mit serverseitigen Validierung sollten Sie überprüfen, die der Seite <xref:System.Web.UI.Page.IsValid%2A> Eigenschaft `true` vor der Verarbeitung des Postbacks. Im Fall von seitenübergreifenden Postback die Seite, um zu überprüfen ist die <xref:System.Web.UI.Page.PreviousPage%2A>. Der folgende VB-Code zeigt, wie dies funktioniert:  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 Weitere Informationen zu seitenübergreifendes Senden Techniken, finden Sie unter [Cross-Page Posting in ASP.NET Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft seitenübergreifendes Senden können. Klickt der Benutzer die <xref:System.Web.UI.WebControls.Button> -Steuerelement die Seite stellt den Wert in das Textfeld eingegeben werden, auf der Zielseite, die gemäß der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft. Um dieses Beispiel ausführen zu können, müssen Sie auch eine Datei für die Zielseite in demselben Verzeichnis wie in diesem Codebeispiel wird erstellen. Der Code für die Zielseite wird im nächsten Beispiel bereitgestellt.  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> Eigenschaft einen Wert, der gepostet wurde von einer anderen Seite mit Zugriff auf die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft. Auf dieser Seite ruft die Zeichenfolge, die aus der vorherigen Seite gesendet wurde, und es dem Benutzer werden angezeigt. Wenn Sie versuchen, die in diesem Codebeispiel wird nicht direkt ausführen, erhalten Sie eine Fehlermeldung, da der Wert des der `text` Feld `null`. Verwenden Sie stattdessen diesen Code, erstellen eine Seite "Ziel", und legen Sie die Datei im gleichen Verzeichnis wie der Code für das vorherige Beispiel. Der angegebene Wert für der Namen der Datei entsprechen muss die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Eigenschaft im vorherigen Beispiel. Wenn Sie den Code für das vorherige Beispiel ausführen, wird die Seite automatisch ausgeführt, wenn die seitenübergreifend gesendet.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Seitenübergreifendes Senden, die in einer ASP.NET-Webseite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird intern von verwendet die <xref:System.Web.UI.WebControls.Button> Steuerelement, wenn darauf geklickt wird, um auszulösen, eine <xref:System.Web.UI.WebControls.Button.Click> -Ereignis, und sofern definiert, eine <xref:System.Web.UI.WebControls.Button.Command> Ereignis.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Rendert den Inhalt des Steuerelements im angegebenen Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.Button.RenderContents%2A> Methode in einem benutzerdefinierten Steuerelement, sodass diese immer nach einem benutzerdefinierten Text anzeigt <xref:System.Web.UI.WebControls.Button> -Steuerelement.  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird intern von verwendet die <xref:System.Web.UI.WebControls.Button> Steuerelement, wenn darauf geklickt wird, um auszulösen, eine <xref:System.Web.UI.WebControls.Button.Click> -Ereignis, und sofern definiert, eine <xref:System.Web.UI.WebControls.Button.Command> Ereignis.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Überschreiben der <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> Methode, sodass immer ausgelöst der <xref:System.Web.UI.WebControls.Button.OnClick%2A> Ereignis in einem benutzerdefinierten <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement angezeigten Beschriftungstext ab, oder legt diesen fest.</summary>
        <value>Der im <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement angezeigte Beschriftungstext. Der Standardwert ist <see cref="F:System.String.Empty" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Button.Text%2A> Eigenschaft angeben oder ermitteln die in anzuzeigende Beschriftung der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.Text%2A> -Eigenschaft an die im Literalsteuerelement angezeigte Beschriftung der <xref:System.Web.UI.WebControls.Button> Steuerelement.  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement den Sendemechanismus des Clientbrowsers oder den Postbackmechanismus von ASP.NET verwendet.</summary>
        <value><see langword="true" />, wenn das Steuerelement den Sendemechanismus des Clientbrowsers verwendet, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft, um anzugeben, ob eine <xref:System.Web.UI.WebControls.Button> Steuerelement verwendet der Client des Browsers zu übermitteln, Methode oder den Postbackmechanismus von ASP.NET verwendet. Standardmäßig ist der Wert dieser Eigenschaft `true`, und bewirkt, die <xref:System.Web.UI.WebControls.Button> Sendemechanismus des Steuerelements, des Browsers verwendet. Bei Angabe von `false`, das ASP.NET-Seitenframework die Seite zum Senden des Formulars an den Server des clientseitigen Skripts hinzugefügt.  
  
 Wenn die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> -Eigenschaft ist `false`, Entwickler von Steuerelementen können die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Methode, um den Client zurückzugeben postback-Ereignis für die <xref:System.Web.UI.WebControls.Button>. Die zurückgegebene Zeichenfolge den <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> -Methode enthält den Text des Funktionsaufrufs der clientseitigen und in einem Client-Side-Ereignishandler eingefügt werden kann.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> Eigenschaft, um den Sendemechanismus anzugeben, die eine <xref:System.Web.UI.WebControls.Button> Steuerelement verwendet, wenn es Daten an den Server zurücksendet. Die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> -Eigenschaftensatz auf `false`, wodurch die Schaltfläche, um den ASP.NET-Ausgabecache postback-Mechanismus. Wenn Sie den Quellcode für die gerenderte Seite, die mit Ihrem Browser auf die Quelle anzeigen-Befehl anzeigen, sehen Sie sich, dass die Client-seitige Skript durch das ASP.NET-Seitenframework zum Senden des Formulars auf dem Server hinzugefügt wurde.  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa">Clientskript in ASP.NET Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Steuerelementen ab, für die das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet, oder legt diese fest.</summary>
        <value>Die Gruppe von Steuerelementen, für die das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet. Der Standardwert ist eine leere Zeichenfolge („“).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Validierungsgruppen können Sie Steuerelementen zur gültigkeitsprüfung auf einer Seite einer bestimmten Kategorie zuweisen. Jede Validierungsgruppe kann unabhängig von anderen Validierungsgruppen auf der Seite überprüft werden. Verwenden der <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Eigenschaft, um den Namen der Validierungsgruppe für das Angeben der <xref:System.Web.UI.WebControls.Button> Steuerelement eine Validierung veranlasst, wenn es an den Server zurücksendet.  
  
 Diese Eigenschaft wirkt sich nur, wenn der Wert des der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> -Eigenschaftensatz auf `true`. Wenn Sie einen Wert für angeben der <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> -Eigenschaft, um nur die Validierungssteuerelemente, die Teil der angegebenen Gruppe sind werden überprüft, wenn die <xref:System.Web.UI.WebControls.Button> Steuerelement ein Postback an den Server ausführt. Wenn Sie einen Wert für diese Eigenschaft nicht angeben und die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> -Eigenschaftensatz auf `true`, alle Validierungssteuerelemente auf der Seite, die eine Gruppe für die Überprüfung nicht zugewiesen sind, werden überprüft, wenn das Steuerelement an den Server zurücksendet.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> -Eigenschaft an die Steuerelemente, um beim Überprüfen einer <xref:System.Web.UI.WebControls.Button> Steuerelement ein Postback an den Server ausführt. Die Seite enthält drei Textfelder zum Erfassen von Daten des Benutzers und drei <xref:System.Web.UI.WebControls.RequiredFieldValidator> Steuerelemente, um sicherzustellen, dass der Benutzer nicht das Textfeld leer bleibt. Die <xref:System.Web.UI.WebControls.RequiredFieldValidator> Identitätsbereichs für die ersten beiden Textfelder in sind die `PersonalInfoGroup` Validierungsgruppe und <xref:System.Web.UI.WebControls.RequiredFieldValidator> Steuern für das dritte Textfeld wird der `LocationInfoGroup` Validierungsgruppe. Wenn `Button1` geklickt wird, wird nur die Steuerelemente in Validierungsgruppe `PersonalInfoGroup` werden überprüft. Wenn `Button2` geklickt wird, wird nur das Steuerelement in Validierungsgruppe `LocationInfoGroup` wird überprüft.  
  
> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltfläche "Webserver-Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>