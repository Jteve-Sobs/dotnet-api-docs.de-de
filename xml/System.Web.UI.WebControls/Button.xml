<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b4283b87ef6b3720c548382384da5abde98b086" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78764747" /></Metadata><TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit WebControl&#xA;    interface IButtonControl&#xA;    interface IPostBackEventHandler" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat=server Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Zeigt ein Schaltflächen-Steuerelement auf der Webseite an.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Inhalte dieses Themas:

-   [Einführung](#Introduction)

-   [Schaltfläche-Postback Verhalten und Server Ereignisse](#ButtonPostbackBehaviorandServerEvents)

-   [Behandeln von Schaltflächen Ereignissen in Client Skripts](#HandlingButtonEventsinClientScript)

-   [Schaltflächen-Steuerelemente und Validierung](#ButtonControlsAndValidation)

-   [Schaltflächen in Daten Steuerelementen](#ButtonsInDataControls)

-   [Binden von Daten an die Steuerelemente](#BindingDataToTheControls)

-   [Verwenden von Schaltflächen mit Update Panel-Steuerelementen](#UsingButtonsWithUpdatePanelControls)

-   [Deklarative Syntax](#DeclarativeSyntax)

<a name="Introduction"></a>
## <a name="introduction"></a>Einführung
 Verwenden Sie das Steuerelement <xref:System.Web.UI.WebControls.Button>, um auf der Webseite eine pushschaltfläche zu erstellen, mit der Benutzer eine Seite auf dem Server veröffentlichen können. Das-Steuerelement löst ein Ereignis im Servercode aus, das Sie behandeln können, um auf das Postback zu reagieren. Außerdem kann ein Ereignis in einem Client Skript angezeigt werden, das Sie behandeln können, bevor die Seite gepostet wird oder ausgeführt werden kann, und die Übermittlung der Seite abbrechen.

> [!NOTE]
>  ASP.NET enthält verschiedene Arten von Schaltflächen-Steuerelementen, die jeweils auf Webseiten unterschiedlich angezeigt werden. Dabei handelt es sich um das <xref:System.Web.UI.WebControls.Button> Steuerelement, das als pushschaltfläche Das <xref:System.Web.UI.WebControls.LinkButton> Steuerelement, das als Link gerendert wird. und das <xref:System.Web.UI.WebControls.ImageButton>-Steuerelement, das als Bild gerendert wird. und das <xref:System.Web.UI.WebControls.ImageMap> Steuerelement, mit dem Sie eine Grafik erstellen können, die Hotspots enthält, auf die Benutzer klicken können. Standardmäßig senden alle Schaltflächen-Steuerelemente die Seite, wenn darauf geklickt wird. Sie können auch die Steuerelemente <xref:System.Web.UI.HtmlControls.HtmlButton> und <xref:System.Web.UI.HtmlControls.HtmlInputButton> verwenden, um Schaltflächen auf der Seite zu erstellen, die im Servercode programmierbar sind. Ausführliche Informationen zu den Unterschieden zwischen HTML-und Webserver-Steuerelementen finden Sie unter [ASP.NET Webserver Controls Overview](https://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).

 Standardmäßig ist ein <xref:System.Web.UI.WebControls.Button> Steuerelement eine Schaltfläche zum Senden. Eine Schaltfläche "Senden" weist keinen Befehlsnamen (angegeben durch die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft) auf, der der Schaltfläche zugeordnet ist, und sendet die Webseite einfach an den Server zurück. Sie können einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Click> Ereignis bereitstellen, um die Aktionen Programm gesteuert zu steuern, die beim Klicken auf die Schaltfläche Senden ausgeführt werden.

 Eine Befehls Schaltfläche verfügt über einen Befehlsnamen, der der Schaltfläche zugeordnet ist, z. b. `Sort`, indem Sie die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft Dadurch können Sie mehrere <xref:System.Web.UI.WebControls.Button>-Steuerelemente auf einer Webseite erstellen und Programm gesteuert ermitteln, auf welches <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. Sie können auch die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft mit einer Befehls Schaltfläche verwenden, um zusätzliche Informationen zum auszuführenden Befehl, z. b. `Ascending`, bereitzustellen. Sie können einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Command> Ereignis bereitstellen, um die Aktionen, die beim Klicken auf die Befehls Schaltfläche ausgeführt werden, Programm gesteuert zu steuern.

<a name="ButtonPostbackBehaviorandServerEvents"></a>
## <a name="button-postback-behavior-and-server-events"></a>Schaltfläche-Postback Verhalten und Server Ereignisse
 Wenn ein Benutzer auf eine beliebige Webserver-Steuerelement Schaltfläche klickt, wird die Seite an den Server gesendet. Dies bewirkt, dass die Webseite verarbeitet wird und alle ausstehenden Ereignisse in Server basiertem Code ausgelöst werden. Wenn die gesamte Seiten-und Steuerelement Verarbeitung abgeschlossen ist, wird die Seite wieder in den Browser gerendert.

 Die Schaltflächen können eigene <xref:System.Web.UI.WebControls.Button.Click> Ereignisse oder <xref:System.Web.UI.WebControls.Button.Command> Ereignis lösen, das Sie mithilfe von Server basiertem Code behandeln können. Dies unterscheidet sich von Ereignissen in herkömmlichen HTML-Seiten oder in Client basierten Webanwendungen, bei denen das `onclick` Ereignis einer Schaltfläche mithilfe von JavaScript behandelt wird, das auf dem Client ausgeführt wird. Weitere Informationen finden Sie unter [ASP.net Web Forms-Serversteuerelement Event Model](https://docs.microsoft.com/previous-versions/aspnet/y3bwdsh3(v=vs.100)).

 Wenn Benutzer auf ein Schaltflächen-Steuerelement klicken, wird die Seite an den Server zurückgesendet. Standardmäßig wird die Seite an sich selbst zurückgesendet,

 Sie können Schaltflächen konfigurieren, um die aktuelle Seite auf einer anderen Seite zu veröffentlichen. Dies kann beim Erstellen von mehrseitigen Formularen nützlich sein. Weitere Informationen finden Sie unter [Cross-Page Posting in ASP.net Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).

<a name="HandlingButtonEventsinClientScript"></a>
## <a name="handling-button-events-in-client-script"></a>Behandeln von Schaltflächen Ereignissen in Client Skripts
 Schaltflächen-Steuerelemente können sowohl Server Ereignisse als auch Client Ereignisse hervorrufen. Server Ereignisse treten nach dem Postback auf, und Sie werden im serverseitigen Code behandelt, den Sie für die Seite schreiben. Client Ereignisse werden in Client Skripts behandelt, in der Regel ECMAScript (JavaScript), und werden ausgelöst, bevor die Seite übermittelt wird. Durch das Hinzufügen von Client seitigen Ereignissen zu ASP.net-Schaltflächen-Steuerelementen können Sie Aufgaben wie das Anzeigen von Bestätigungs Dialogfeldern vor dem Senden der Seite ausführen und die Übermittlung möglicherweise abbrechen. Weitere Informationen finden Sie unter [Client Script in ASP.net Web Pages](https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)) und Gewusst [wie: reagieren auf Schaltflächen-Webserver Steuerelement-Ereignisse in Client Skripts](https://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).

 Sie können auch festlegen, dass das <xref:System.Web.UI.WebControls.Button>-Steuerelement auch das-Client Skript verwendet, um das Postback auszuführen (statt einfach einen HTTP Post-Vorgang auszuführen). Dies kann hilfreich sein, wenn Sie das Postback Programm gesteuert bearbeiten möchten, z. b. das Anfügen an andere Elemente auf der Seite. Sie können die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.Button>-Steuer Elements auf `true` festlegen, damit das <xref:System.Web.UI.WebControls.Button> Steuerelement die Verwendung von Client-Skript-basiertem Postback bewirkt.

<a name="ButtonControlsAndValidation"></a>
## <a name="button-controls-and-validation"></a>Schaltflächen-Steuerelemente und Validierung
 Wenn eine Seite ASP.net Prüfungs-Steuerelemente enthält, führt das Klicken auf ein Schaltflächen-Steuerelement standardmäßig dazu, dass das Validierungs Steuerelement die Überprüfung ausführt. Wenn die Client seitige Validierung für ein Prüfungs-Steuerelement aktiviert ist, wird die Seite nicht gesendet, wenn bei der Überprüfung ein Fehler aufgetreten ist.

 In der folgenden Tabelle werden die von Schaltflächen-Steuerelementen unterstützten Eigenschaften beschrieben, mit denen Sie den Überprüfungsprozess genauer steuern können.

|Eigenschaft|BESCHREIBUNG|
|--------------|-----------------|
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|Gibt an, ob beim Klicken auf die Schaltfläche auch eine Validierungs Überprüfung durchführt Legen Sie diese Eigenschaft auf `false` fest, um eine Validierungs Überprüfung zu verhindern.|
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|Ermöglicht Ihnen, anzugeben, welche Validierungs Steuerelemente auf der Seite aufgerufen werden, wenn auf die Schaltfläche geklickt wird. Wenn keine Validierungs Gruppen erstellt werden, werden durch Klicken auf die Schaltfläche alle Validierungs Steuerelemente auf der Seite aufgerufen.|

 Weitere Informationen finden Sie unter [Überprüfen der Benutzereingabe in ASP.NET-Webseiten](https://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).

<a name="ButtonsInDataControls"></a>
## <a name="buttons-in-data-controls"></a>Schaltflächen in Daten Steuerelementen
 Schaltflächen-Webserver Steuerelemente werden häufig in Daten Steuerelementen verwendet, z. b. in den <xref:System.Web.UI.WebControls.DataList>-, <xref:System.Web.UI.WebControls.GridView>-und <xref:System.Web.UI.WebControls.Repeater> List-Steuerelementen. In diesen Fällen reagieren Sie in der Regel nicht direkt auf das Click-Ereignis der Schaltfläche. Stattdessen löst eine Schaltfläche in einem Daten Steuerelement ein Ereignis aus, das für das Daten Steuerelement spezifisch ist. Im <xref:System.Web.UI.WebControls.DataList> Steuerelement kann beispielsweise eine Schaltfläche das <xref:System.Web.UI.WebControls.DataList.ItemCommand> Ereignis des <xref:System.Web.UI.WebControls.DataList>-Steuer Elements erhöhen, anstatt das <xref:System.Web.UI.WebControls.Button.Click> Ereignis des <xref:System.Web.UI.WebControls.Button> Steuer Elements zu erhöhen.

 Da Daten gebundene Listen Steuerelemente viele Schaltflächen enthalten können, können Sie die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft der Schaltfläche festlegen, um einen Wert anzugeben, der als Teil des Ereignisses übergeben werden soll. Sie können dann auf dieses Argument testen, um anzuzeigen, auf welche Schaltfläche geklickt wurde.

<a name="BindingDataToTheControls"></a>
## <a name="binding-data-to-the-controls"></a>Binden von Daten an die Steuerelemente
 Sie können die Schaltflächen-Webserver Steuerelemente an eine Datenquelle binden, um Ihre Eigenschafts Einstellungen dynamisch zu steuern. Beispielsweise können Sie die <xref:System.Web.UI.WebControls.Button.Text%2A>-Eigenschaft einer Schaltfläche mithilfe der Datenbindung festlegen.

<a name="UsingButtonsWithUpdatePanelControls"></a>
## <a name="using-buttons-with-updatepanel-controls"></a>Verwenden von Schaltflächen mit Update Panel-Steuerelementen
 Das partielle Seiten Rendering ermöglicht das Aktualisieren von Teilen einer Seite ohne Postback. mit <xref:System.Web.UI.UpdatePanel> Steuerelemente können Sie Teile der Seite markieren, die am Teil Rendering von Seiten beteiligt sind. Standardmäßig ist das Verhalten von Steuerelementen in einem <xref:System.Web.UI.UpdatePanel> Steuerelement, einschließlich <xref:System.Web.UI.WebControls.Button> Steuerelementen, das Ausführen eines asynchronen Postbacks anstelle eines Postbacks. Dadurch wird nur der Inhalt des <xref:System.Web.UI.UpdatePanel> Steuer Elements aktualisiert, von dem das Postback stammt.

 Zusätzlich zum Szenario eines <xref:System.Web.UI.WebControls.Button> Steuer Elements, das sich innerhalb eines <xref:System.Web.UI.UpdatePanel> Steuer Elements befindet, können Sie <xref:System.Web.UI.WebControls.Button> Steuerelemente mit <xref:System.Web.UI.UpdatePanel> Steuerelementen in den folgenden Szenarien verwenden:

-   Definieren eines <xref:System.Web.UI.WebControls.Button> Steuer Elements, das sich außerhalb eines <xref:System.Web.UI.UpdatePanel> Steuer Elements befindet, als <xref:System.Web.UI.AsyncPostBackTrigger> Steuerelement für diesen Bereich. Wenn auf die Schaltfläche geklickt wird, führt Sie ein asynchrones Postback durch und aktualisiert den Inhalt des Bereichs.

-   Definieren eines <xref:System.Web.UI.WebControls.Button> Steuer Elements, das sich innerhalb eines <xref:System.Web.UI.UpdatePanel> Steuer Elements befindet, als <xref:System.Web.UI.PostBackTrigger> für den Bereich. Wenn auf die Schaltfläche geklickt wird, wird ein Postback durchführt, obwohl es sich in einem <xref:System.Web.UI.UpdatePanel>-Steuerelement befindet.

 Weitere Informationen zum partiellen Seiten Rendering und zum Verwenden von <xref:System.Web.UI.UpdatePanel>-Steuerelementen finden Sie unter Übersicht über das [Update Panel-Steuer](https://docs.microsoft.com/previous-versions/aspnet/bb386454(v=vs.100)) Element und Übersicht über das [Seiten Rendering](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).

<a name="DeclarativeSyntax"></a>
## <a name="declarative-syntax"></a>Deklarative Syntax

```
<asp:Button
    AccessKey="string"
    BackColor="color name|#dddddd"
    BorderColor="color name|#dddddd"
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|
        Inset|Outset"
    BorderWidth="size"
    CausesValidation="True|False"
    CommandArgument="string"
    CommandName="string"
    CssClass="string"
    Enabled="True|False"
    EnableTheming="True|False"
    EnableViewState="True|False"
    Font-Bold="True|False"
    Font-Italic="True|False"
    Font-Names="string"
    Font-Overline="True|False"
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|
        Large|X-Large|XX-Large"
    Font-Strikeout="True|False"
    Font-Underline="True|False"
    ForeColor="color name|#dddddd"
    Height="size"
    ID="string"
    OnClick="Click event handler"
    OnClientClick="string"
    OnCommand="Command event handler"
    OnDataBinding="DataBinding event handler"
    OnDisposed="Disposed event handler"
    OnInit="Init event handler"
    OnLoad="Load event handler"
    OnPreRender="PreRender event handler"
    OnUnload="Unload event handler"
    PostBackUrl="uri"
    runat="server"
    SkinID="string"
    Style="string"
    TabIndex="integer"
    Text="string"
    ToolTip="string"
    UseSubmitBehavior="True|False"
    ValidationGroup="string"
    Visible="True|False"
    Width="size"
/>
```



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie ein Submit <xref:System.Web.UI.WebControls.Button>-Steuerelement erstellt wird, das den Webseiteninhalt an den Server zurücksendet.

 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie ein Befehl <xref:System.Web.UI.WebControls.Button> Steuerelement erstellt wird, das eine Liste sortiert.

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.UI.WebControls.Button" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie diesen Konstruktor, um eine neue Instanz der <xref:System.Web.UI.WebControls.Button>-Klasse zu erstellen und zu initialisieren.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie eine neue Instanz der <xref:System.Web.UI.WebControls.Button>-Klasse erstellt und initialisiert wird.

 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den auf dem Client zu rendernden Ausgabestream enthält.</param>
        <summary>Fügt die Attribute eines <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements zum Ausgabestream hinzu, der auf dem Client gerendert werden soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass der <xref:System.Web.UI.WebControls.Button> Text immer rot angezeigt wird.

 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public bool CausesValidation { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Property CausesValidation As Boolean" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.CausesValidation : bool with get, set" Usage="System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob beim Klicken auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung durchgeführt wird, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn beim Klicken auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung durchgeführt wird, andernfalls <see langword="false" />. Standardwert: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Standardmäßig wird die Seiten Validierung durchgeführt, wenn auf ein <xref:System.Web.UI.WebControls.Button>-Steuerelement geklickt wird. Die Seiten Validierung bestimmt, ob die Eingabe Steuerelemente, die einem Validierungs Steuerelement auf der Seite zugeordnet sind, die vom Validierungs Steuerelement angegebenen Validierungsregeln bestehen.

 Sie können angeben oder bestimmen, ob die Überprüfung auf dem Client und dem Server durchgeführt wird, wenn auf ein <xref:System.Web.UI.WebControls.Button> Steuerelement mithilfe der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft geklickt wird. Um zu verhindern, dass eine Validierung ausgeführt wird, legen Sie die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft auf `false`fest.

> [!NOTE]
>  Sie sollten die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft auf `false` festlegen, wenn Sie die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft verwenden, um auf eine andere Seite zurückzukehren. Sie sollten die Validierung explizit überprüfen, wenn Sie eine andere Seite zurücksenden. Ein Beispiel finden Sie im Abschnitt "Hinweise" der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft.

 Diese Eigenschaft wird im Allgemeinen auf `false` für eine Schaltfläche `reset` oder `clear` festgelegt, um zu verhindern, dass die Validierung beim Klicken auf die Schaltfläche ausgeführt wird.

 Wenn der Wert der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist, können Sie auch die <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>-Eigenschaft verwenden, um den Namen der Validierungs Gruppe anzugeben, für die das <xref:System.Web.UI.WebControls.Button> Steuerelement eine Validierung veranlasst.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft verwendet wird, um das Auftreten der Seiten Validierung zu verhindern. Beachten Sie, dass die <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>-Methode jedes Validierungs Steuerelement unabhängig aktiviert.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Click : EventHandler " Usage="member this.Click : System.EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.Button" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.Button.Click>-Ereignis wird ausgelöst, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn kein Befehls Name mit dem <xref:System.Web.UI.WebControls.Button> Steuerelement verknüpft ist (z. h. mit der Schaltfläche "Senden").

 Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Click>-Ereignis angeben und codieren, um eine Meldung auf der Webseite anzuzeigen, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird.

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="member this.Command : System.Web.UI.WebControls.CommandEventHandler " Usage="member this.Command : System.Web.UI.WebControls.CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn auf das Steuerelement <see cref="T:System.Web.UI.WebControls.Button" /> geklickt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.Button.Command>-Ereignis wird ausgelöst, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn ein Befehls Name, wie z. b. `Sort`, dem <xref:System.Web.UI.WebControls.Button> Steuerelement zugeordnet ist. Dadurch können Sie mehrere <xref:System.Web.UI.WebControls.Button>-Steuerelemente auf einer Webseite erstellen und Programm gesteuert ermitteln, auf welches <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.Button.Command>-Ereignis wird durch die Steuerelement Hierarchie in Form des `BubbleEvent`ausgelöst.

 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Command> Ereignis angeben und codieren, um eine Liste zu sortieren, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. In diesem Beispiel wird der Ereignishandler deklarativ mithilfe der <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.Button> Steuer Elements angegeben.

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie Sie den Ereignishandler angeben und ihn Programm gesteuert dem-Ereignis in der `Page_Load`-Methode hinzufügen.

 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen zusammen mit dem zugeordneten <see cref="E:System.Web.UI.WebControls.Button.Command" /> an das <see cref="P:System.Web.UI.WebControls.Button.CommandName" />-Ereignis übergebenen optionalen Parameter ab, oder legt diesen fest.</summary>
        <value>Ein zusammen mit dem zugeordneten <see cref="E:System.Web.UI.WebControls.Button.Command" /> an das <see cref="P:System.Web.UI.WebControls.Button.CommandName" />-Ereignis übergebener optionaler Parameter. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft, um einen Parameter anzugeben, der die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft ergänzt.

> [!NOTE]
>  Obwohl Sie die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft eigenständig festlegen können, wird Sie normalerweise nur verwendet, wenn die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft ebenfalls festgelegt ist.

 Die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft ergänzt die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft, indem Sie zusätzliche Informationen über den auszuführenden Befehl bereitstellen können. Wenn Sie z. b. die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft auf `Sort` und die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft auf `Ascending`festlegen, geben Sie einen Befehl an, der in aufsteigender Reihenfolge sortiert werden soll.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft verwendet wird, um ein <xref:System.Web.UI.WebControls.Button> Steuerelement zu erstellen, das eine Liste in aufsteigender Reihenfolge sortiert.

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string with get, set" Usage="System.Web.UI.WebControls.Button.CommandName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den dem <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement zugeordneten Befehlsnamen ab, der an das <see cref="E:System.Web.UI.WebControls.Button.Command" />-Ereignis übergeben wird, oder legt diesen fest.</summary>
        <value>Der Befehlsname des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie über mehrere <xref:System.Web.UI.WebControls.Button>-Steuerelemente auf einer Webseite verfügen, verwenden Sie die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft, um den Befehlsnamen anzugeben oder zu bestimmen, der den einzelnen <xref:System.Web.UI.WebControls.Button> Steuerelementen zugeordnet ist. Sie können die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft mit einer beliebigen Zeichenfolge festlegen, die den auszuführenden Befehl identifiziert. Sie können dann Programm gesteuert den Befehlsnamen des <xref:System.Web.UI.WebControls.Button> Steuer Elements bestimmen und die entsprechenden Aktionen ausführen.

 Weitere Informationen über den Befehl, wie z. b. `Ascending`, können mit der <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>-Eigenschaft angegeben werden.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.CommandName%2A>-Eigenschaft verwendet wird, um ein <xref:System.Web.UI.WebControls.Button> Steuerelement zu erstellen, das eine Liste sortiert.

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions&#xA;override this.GetPostBackOptions : unit -&gt; System.Web.UI.PostBackOptions" Usage="button.GetPostBackOptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt ein <see cref="T:System.Web.UI.PostBackOptions" />-Objekt, das das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements darstellt.</summary>
        <returns><see cref="T:System.Web.UI.PostBackOptions" />, die das Postbackverhalten des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements darstellen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A>-Methode erstellt ein <xref:System.Web.UI.PostBackOptions> Objekt, das das Post Back Verhalten des <xref:System.Web.UI.WebControls.Button> Steuer Elements darstellt. Das <xref:System.Web.UI.PostBackOptions>-Objekt wird dann in der Regel an die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType>-Methode weitergegeben, die verwendet wird, um einen Verweis auf eine Client seitige Skriptfunktion zu erhalten, die beim Aufrufen den Server zurück an die Seite sendet.

 Diese Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn die <xref:System.Web.UI.WebControls.Button>-Klasse erweitert wird.

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Sie können die <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />-Methode in der abgeleiteten Klasse überschreiben, um die Post Back Optionen für das Schaltflächen-Steuerelement zu ändern, oder um Client seitiges Skript aufzurufen, wenn auf die Schaltfläche geklickt wird. Stellen Sie sicher, dass die <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />-Methode der Basisklasse aufgerufen wird, damit die Standard-Post Back Optionen festgelegt werden.</para></block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">Client Skript in ASP.net Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClick : EventArgs -&gt; unit&#xA;override this.OnClick : EventArgs -&gt; unit" Usage="button.OnClick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.Button.Click>-Ereignis wird ausgelöst, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn kein Befehls Name mit dem <xref:System.Web.UI.WebControls.Button> Steuerelement verknüpft ist (z. h. mit der Schaltfläche "Senden").

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Click>-Ereignis angeben und codieren, um auf der Webseite eine einfache Meldung anzuzeigen.

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnClientClick : string with get, set" Usage="System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das clientseitige Skript ab, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis ausgelöst wird, oder legt das clientseitige Skript fest.</summary>
        <value>Das clientseitige Skript, das ausgeführt wird, wenn für ein <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement ein <see cref="E:System.Web.UI.WebControls.Button.Click" />-Ereignis ausgelöst wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>-Eigenschaft, um zusätzliches Client seitiges Skript anzugeben, das ausgeführt wird, wenn das <xref:System.Web.UI.WebControls.Button.Click> Ereignis eines <xref:System.Web.UI.WebControls.Button>-Steuer Elements ausgelöst wird. Das Skript, das Sie für diese Eigenschaft angeben, wird im `OnClick` Attribut des <xref:System.Web.UI.WebControls.Button> Steuer Elements zusätzlich zum vordefinierten Client seitigen Skript des-Steuer Elements gerendert.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Für dieses Thema steht ein Visual Studio-Website Projekt mit Quellcode zur Verfügung: [herunterladen](https://go.microsoft.com/fwlink/?LinkId=192871).

 Im folgenden Codebeispiel wird veranschaulicht, wie Sie mit der <xref:System.Web.UI.WebControls.Button.OnClientClick%2A>-Eigenschaft zusätzliches Client seitiges Skript angeben, das ausgeführt wird, wenn auf ein <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird.

 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit&#xA;override this.OnCommand : System.Web.UI.WebControls.CommandEventArgs -&gt; unit" Usage="button.OnCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Löst das <see cref="E:System.Web.UI.WebControls.Button.Command" />-Ereignis des <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelements aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Das <xref:System.Web.UI.WebControls.Button.Command>-Ereignis wird ausgelöst, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. Dieses Ereignis wird häufig verwendet, wenn ein Befehls Name, wie z. b. `Sort`, dem <xref:System.Web.UI.WebControls.Button> Steuerelement zugeordnet ist. Dadurch können Sie mehrere <xref:System.Web.UI.WebControls.Button>-Steuerelemente auf einer Webseite erstellen und Programm gesteuert ermitteln, auf welches <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird.

> [!NOTE]
>  Das <xref:System.Web.UI.WebControls.Button.Command>-Ereignis wird durch die Steuerelement Hierarchie in Form des `BubbleEvent`ausgelöst.

 Durch das Auslösen eines Ereignisses wird der Ereignishandler über einen Delegaten aufgerufen. Weitere Informationen finden Sie unter [Behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).

 Mit der <xref:System.Web.UI.WebControls.Button.OnCommand%2A>-Methode können auch abgeleitete Klassen das Ereignis ohne Anfügen eines Delegaten behandeln. Dies ist das bevorzugte Verfahren für die Behandlung des Ereignisses in einer abgeleiteten Klasse.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie einen Ereignishandler für das <xref:System.Web.UI.WebControls.Button.Command> Ereignis angeben und codieren, um eine Liste zu sortieren, wenn auf das <xref:System.Web.UI.WebControls.Button> Steuerelement geklickt wird. In diesem Beispiel wird der Ereignishandler deklarativ mithilfe der <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Eigenschaft des <xref:System.Web.UI.WebControls.Button> Steuer Elements angegeben.

 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie Sie den Ereignishandler angeben und ihn Programm gesteuert dem-Ereignis in der `Page_Load`-Methode hinzufügen.

 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]

 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in einer abgeleiteten Klasse überschreiben, müssen Sie die <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />-Methode der Basisklasse aufrufen, damit registrierte Delegaten das Ereignis empfangen.</para></block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="button.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten.</param>
        <summary>Bestimmt, ob vor dem Rendern auf dem Client auf die Schaltfläche geklickt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.Button.OnPreRender%2A>-Methode wird hauptsächlich von Steuerelement Entwicklern verwendet, wenn eine benutzerdefinierte Klasse vom <xref:System.Web.UI.WebControls.Button>-Steuerelement abgeleitet wird.

 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PostBackUrl : string with get, set" Usage="System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die URL der Seite ab, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement geklickt wird, oder legt diese fest.</summary>
        <value>Die URL der Webseite, an die Daten von der aktuellen Seite gesendet werden sollen, wenn auf das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement geklickt wird. Der Standardwert ist eine leere Zeichenfolge (""), wodurch die Seite an sich selbst zurückgesendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft ermöglicht es Ihnen, mithilfe des <xref:System.Web.UI.WebControls.Button> Steuer Elements einen Kreuz seitigen Beitrag auszuführen.

> [!NOTE]
>  Nur ordnungsgemäß angegebene Pfade funktionieren mit dieser Eigenschaft. Relative Pfade (`Test/default.aspx`), absolute Pfade (`https://localhost/WebApp/default.aspx`) und Virtual (`~\Test\default.aspx`) funktionieren z. b. ordnungsgemäß. Falsch formatierte Pfade, wie z. b. "/Test/default.aspx" oder "\Test\default.aspx", funktionieren nicht. Eine Erläuterung zum Erstellen korrekter Pfade finden Sie unter [ASP.NET-Webprojekt Pfade](https://docs.microsoft.com/previous-versions/aspnet/ms178116(v=vs.100)) .

 Legen Sie die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft auf die URL der Webseite fest, an die beim Klicken auf das <xref:System.Web.UI.WebControls.Button> Steuerelement gepostet werden soll. Beispielsweise bewirkt das Angeben von `Page2.aspx`, dass die Seite, die das <xref:System.Web.UI.WebControls.Button> Steuerelement enthält, an `Page2.aspx`gepostet wird. Wenn Sie keinen Wert für die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft angeben, wird die Seite zurück an sich selbst gesendet.

> [!IMPORTANT]
>  Wenn Sie ein Seiten übergreifendes Postback mit Steuerelementen mit serverseitiger Validierung durchführen, sollten Sie überprüfen, ob die <xref:System.Web.UI.Page.IsValid%2A>-Eigenschaft der Seite vor der Verarbeitung des Postbacks `true` ist. Im Fall eines Seiten übergreifenden Postbacks ist die zu überprüfen Seite die <xref:System.Web.UI.Page.PreviousPage%2A>. Der folgende VB-Code zeigt, wie dies geschieht:

```
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load
        If Page.PreviousPage.IsValid Then
            ' Handle the post back
        Else
            Response.Write("Invalid")
        End If
End Sub
```

 Weitere Informationen zu Seiten übergreifenden Bereitstellungstechniken finden Sie unter [Page Page Posting in ASP.net Web Forms](https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft verwenden, um einen Seiten übergreifenden Beitrag auszuführen. Wenn der Benutzer auf das <xref:System.Web.UI.WebControls.Button>-Steuerelement klickt, wird der im Textfeld eingegebene Wert von der Seite an die durch die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft angegebene Zielseite gepostet. Um dieses Beispiel ausführen zu können, müssen Sie auch eine Datei für die Zielseite im gleichen Verzeichnis wie dieses Codebeispiel erstellen. Der Code für die Zielseite wird im nächsten Beispiel bereitgestellt.

 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]

 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType>-Eigenschaft verwendet wird, um auf einen Wert zuzugreifen, der mithilfe der <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft von einer anderen Seite gepostet wurde. Diese Seite ruft die Zeichenfolge ab, die von der vorherigen Seite gepostet wurde, und zeigt Sie dem Benutzer an. Wenn Sie versuchen, dieses Codebeispiel direkt auszuführen, erhalten Sie eine Fehlermeldung, da der Wert des `text` Felds `null`wird. Verwenden Sie stattdessen diesen Code zum Erstellen einer Zielseite, und platzieren Sie die Datei im gleichen Verzeichnis wie der Code für das vorherige Beispiel. Der Name der Datei muss dem Wert entsprechen, der im vorherigen Beispiel für die <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>-Eigenschaft angegeben wurde. Wenn Sie den Code für das vorherige Beispiel ausführen, wird diese Seite automatisch ausgeführt, wenn der Seiten übergreifende Post auftritt.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b">Seiten übergreifendes Posting auf einer ASP.NET-Webseite</related>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="button.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieses Ereignis wird intern vom <xref:System.Web.UI.WebControls.Button>-Steuerelement verwendet, wenn darauf geklickt wird, um ein <xref:System.Web.UI.WebControls.Button.Click> Ereignis und ggf. ein <xref:System.Web.UI.WebControls.Button.Command> Ereignis aufzurichten.

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="button.RenderContents writer" />
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt, das den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Rendert den Inhalt des Steuerelements im angegebenen Writer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie die <xref:System.Web.UI.WebControls.Button.RenderContents%2A>-Methode in einem benutzerdefinierten Server Steuerelement überschreiben, sodass nach einem benutzerdefinierten <xref:System.Web.UI.WebControls.Button> Server-Steuerelement immer Text angezeigt wird.

 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberSignature Language="F#" Value="abstract member System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit&#xA;override this.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent : string -&gt; unit" Usage="button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Das Argument für das Ereignis.</param>
        <summary>Löst Ereignisse für das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement aus, wenn es ein Postback an den Server ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Dieses Ereignis wird intern vom <xref:System.Web.UI.WebControls.Button>-Steuerelement verwendet, wenn darauf geklickt wird, um ein <xref:System.Web.UI.WebControls.Button.Click> Ereignis und ggf. ein <xref:System.Web.UI.WebControls.Button.Command> Ereignis aufzurichten.



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>-Methode überschrieben wird, sodass Sie immer das <xref:System.Web.UI.WebControls.Button.OnClick%2A>-Ereignis in einem benutzerdefinierten <xref:System.Web.UI.WebControls.Button>-Steuerelement auslöst.

 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]

 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Button.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den im <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement angezeigten Beschriftungstext ab, oder legt diesen fest.</summary>
        <value>Der im <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement angezeigte Beschriftungstext. Standardwert: <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.Button.Text%2A>-Eigenschaft, um die Beschriftung anzugeben oder zu bestimmen, die im <xref:System.Web.UI.WebControls.Button> Steuerelement angezeigt werden soll.

 Der Wert dieser Eigenschaft, wenn festgelegt, kann mithilfe eines Designers Tools automatisch zu einer Ressourcendatei gespeichert werden. Weitere Informationen finden Sie unter <xref:System.ComponentModel.LocalizableAttribute> und [Globalisierung und Lokalisierung](https://docs.microsoft.com/previous-versions/aspnet/c6zyy3s9(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.Text%2A>-Eigenschaft verwendet wird, um die im Steuerelement <xref:System.Web.UI.WebControls.Button> angezeigte Beschriftung anzugeben.

 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseSubmitBehavior : bool with get, set" Usage="System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement den Sendemechanismus des Clientbrowsers oder den Postbackmechanismus von ASP.NET verwendet.</summary>
        <value><see langword="true" />, wenn das Steuerelement den Sendemechanismus des Clientbrowsers verwendet, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Verwenden Sie die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>-Eigenschaft, um anzugeben, ob ein <xref:System.Web.UI.WebControls.Button> Steuerelement den Sende Mechanismus des Client Browsers oder den Postback Mechanismus ASP.NET verwendet. Standardmäßig ist der Wert dieser Eigenschaft `true`, was bewirkt, dass das <xref:System.Web.UI.WebControls.Button> Steuerelement den Sende Mechanismus des Browsers verwendet. Wenn Sie `false`angeben, fügt das ASP.net page Framework der Seite ein Client seitiges Skript hinzu, um das Formular an den Server zu senden.

 Wenn die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>-Eigenschaft `false`ist, können Entwickler von Steuerelementen die <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>-Methode verwenden, um das Client-Post Back Ereignis für die <xref:System.Web.UI.WebControls.Button>zurückzugeben. Die Zeichenfolge, die von der <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>-Methode zurückgegeben wird, enthält den Text des Client seitigen Funktions Aufrufes und kann in einen Client seitigen Ereignishandler eingefügt werden.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie mit der <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>-Eigenschaft der Sende Mechanismus angegeben wird, der von einem <xref:System.Web.UI.WebControls.Button>-Steuerelement verwendet wird, wenn es an den Server zurückgesendet wird. Die <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>-Eigenschaft ist auf `false`festgelegt, sodass die Schaltfläche den ASP.net Post Back-Mechanismus verwendet. Wenn Sie den Quellcode für die gerenderte Seite mithilfe des Befehls Quelle anzeigen des Browsers anzeigen, sehen Sie, dass das Client seitige Skript vom ASP.net page Framework hinzugefügt wurde, um das Formular an den Server zu senden.

 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/3hc29e2a(v=vs.100)">Client Skript in ASP.net Web Pages</related>
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationGroup : string with get, set" Usage="System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Gruppe von Steuerelementen ab, für die das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet, oder legt diese fest.</summary>
        <value>Die Gruppe von Steuerelementen, für die das <see cref="T:System.Web.UI.WebControls.Button" />-Steuerelement eine Validierung erfordert, wenn es Daten an den Server zurücksendet. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Validierungs Gruppen ermöglichen es Ihnen, Validierungs Steuerelemente auf einer Seite einer bestimmten Kategorie zuzuweisen. Jede Validierungs Gruppe kann unabhängig von anderen Validierungs Gruppen auf der Seite überprüft werden. Verwenden Sie die <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>-Eigenschaft, um den Namen der Validierungs Gruppe anzugeben, für die das <xref:System.Web.UI.WebControls.Button>-Steuerelement eine Validierung auslöst, wenn es an den Server zurückgesendet wird.

 Diese Eigenschaft hat nur dann Auswirkungen, wenn der Wert der <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist. Wenn Sie einen Wert für die <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>-Eigenschaft angeben, werden nur die Validierungs Steuerelemente, die Teil der angegebenen Gruppe sind, überprüft, wenn der <xref:System.Web.UI.WebControls.Button> die Beiträge an den Server zurücksendet. Wenn Sie keinen Wert für diese Eigenschaft angeben und die <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>-Eigenschaft auf `true`festgelegt ist, werden alle Validierungs Steuerelemente auf der Seite, die keiner Validierungs Gruppe zugewiesen sind, überprüft, wenn das Steuerelement an den Server zurückgesendet wird.

 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).



## Examples
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>-Eigenschaft verwendet wird, um die zu validierenden Steuerelemente anzugeben, wenn ein <xref:System.Web.UI.WebControls.Button> Steuerelement an den Server zurücksendet. Die Seite enthält drei Textfelder zum Erfassen von Daten vom Benutzer und drei <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelemente, um sicherzustellen, dass der Benutzer kein Textfeld leer lässt. Die <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelemente für die ersten beiden Textfelder befinden sich in der `PersonalInfoGroup` Validierungs Gruppe, und das <xref:System.Web.UI.WebControls.RequiredFieldValidator>-Steuerelement für das dritte Textfeld befindet sich in der `LocationInfoGroup` Validierungs Gruppe. Wenn auf `Button1` geklickt wird, werden nur die Steuerelemente in der Validierungs Gruppe `PersonalInfoGroup` überprüft. Beim Klicken auf `Button2` wird nur das Steuerelement in der Validierungs Gruppe `LocationInfoGroup` überprüft.

> [!IMPORTANT]
>  Dieses Beispiel umfasst ein Textfeld, das Benutzereingaben akzeptiert, die ein potenzielles Sicherheitsrisiko darstellen. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://docs.microsoft.com/previous-versions/aspnet/w1sw53ds(v=vs.100)).

 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]

 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">Schaltflächen-Webserver Steuerelemente</related>
      </Docs>
    </Member>
  </Members>
</Type>
