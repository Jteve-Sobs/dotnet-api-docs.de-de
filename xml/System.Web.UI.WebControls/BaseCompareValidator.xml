<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5908d85bef180a45afd6915eba8cbf75f683b364" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86658751" /></Metadata><TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als die abstrakte Basisklasse für Validierungssteuerelemente, die typisierte Vergleiche ausführen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator> -Klasse wird von Validierungs Steuerelementen geerbt, die Werte vergleichen, wie z. b. die Steuer <xref:System.Web.UI.WebControls.CompareValidator> <xref:System.Web.UI.WebControls.RangeValidator> Elemente und, um grundlegende allgemeine Funktionen bereitzustellen.  
  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft, um den Datentyp anzugeben, in den die Werte konvertiert werden, bevor Sie verglichen werden.  
  
> [!NOTE]
>  Wenn der Wert des validierten Eingabe Steuer Elements nicht in den angegebenen Datentyp konvertiert werden kann, schlägt die Validierung fehl. Die- <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> Eigenschaft des Validierungs Steuer Elements ist auf festgelegt `false` .  
  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator> -Klasse enthält auch mehrere statische Eigenschaften und Methoden, die beim Durchführen von Vergleichs Überprüfungen nützlich sind. Mithilfe der-Methode können Sie feststellen, ob eine Zeichenfolge in einen bestimmten Datentyp konvertiert werden kann <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> . Das maximale Jahr, das durch eine zweistellige Jahres Angabe dargestellt werden kann, ist in der- <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft enthalten. Mit der- <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Methode können Sie ein zweistelliges Jahr in eine vierstellige Jahres Angabe konvertieren.  
  
> [!NOTE]
>  Wenn Sie Validierungs Steuerelement-Steuerelemente verwenden, die vom-Steuerelement innerhalb eines-Steuer Elements abgeleitet werden <xref:System.Web.UI.WebControls.BaseCompareValidator> <xref:System.Web.UI.UpdatePanel> , stellen Sie sicher, dass sich das Validierungs Steuerelement und das zugeordnete Steuerelement im selben Bereich befinden. Weitere Informationen zum Verwenden des <xref:System.Web.UI.UpdatePanel> -Steuer Elements für Teil Aktualisierungen von Seiten finden Sie unter [Übersicht über partielle Seiten Rendering](https://docs.microsoft.com/previous-versions/aspnet/bb386573(v=vs.100)).  
  
 Weitere Informationen zu Validierungs Steuerelementen finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator> .  
  
## <a name="accessibility"></a>Zugriff  
 Das Markup, das für dieses Steuerelement standardmäßig gerendert wird, entspricht möglicherweise nicht den Barrierefreiheits Standards, wie z. b. den Richtlinien für die Richtlinien für die Barrierefreiheit 1,0 ( Ausführliche Informationen zur Unterstützung der Barrierefreiheit für dieses Steuerelement finden Sie unter [ASP.NET Controls and Accessibility](https://docs.microsoft.com/previous-versions/ms227996(v=vs.140)).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse abstrakt ist, können Sie ein- <xref:System.Web.UI.WebControls.BaseCompareValidator> Objekt nicht direkt erstellen. Dieser Konstruktor wird in der Regel vom Konstruktor einer abgeleiteten Klasse aufgerufen, um die in der-Klasse definierten Eigenschaften zu initialisieren <xref:System.Web.UI.WebControls.BaseCompareValidator> .  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die HTML-Attribute und -Stile hinzu, die für das Steuerelement gerendert werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> Methode wird verwendet, um die Attribute des Steuer Elements im HTML-Tag für das-Steuerelement zu erzeugen. Diese Methode wird in der Regel von Steuerelement Entwicklern in abgeleiteten Klassen überschrieben, um die entsprechenden Attribute und Stile in den <xref:System.Web.UI.HtmlTextWriter> Ausgabestream für ein Steuerelement einzufügen.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> Methode überschreiben, stellen Sie sicher, dass Sie die entsprechende Methode in der Basisklasse aufzurufen. Andernfalls werden die Attribute, die in der Basisklasse enthalten sind, nicht gerendert.</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">Die zu testende Zeichenfolge.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Version der überladenen Methode testet Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns><see langword="true" />, wenn die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode, um zu bestimmen, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Methode wird häufig verwendet, um zu testen, ob eine Zeichenfolge in einen kompatiblen Datentyp konvertiert werden kann, bevor ein Vorgang durchgeführt wird, der von diesem Datentyp abhängig ist.  
  
 Diese Version der-Methode testet den Wert unter Verwendung des Formats, das von der aktuellen Kultur verwendet wird. Verwenden Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> überladene Version dieser Methode, um den Wert mithilfe eines Kultur neutralen Formats zu testen.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> -Methode zum Vergleichen zweier ganzzahliger Werte und zum bestimmen, ob die zweite Ganzzahl konvertiert werden kann.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Die zu testende Zeichenfolge.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Enumerationswerte.</param>
        <param name="cultureInvariant"><see langword="true" />, um Werte mithilfe eines kulturneutralen Formats zu testen, andernfalls <see langword="false" />.</param>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Mithilfe dieser Version der überladenen Methode können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats getestet werden.</summary>
        <returns><see langword="true" />, wenn die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> Methode, um zu bestimmen, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Methode wird häufig verwendet, um zu testen, ob eine Zeichenfolge in einen kompatiblen Datentyp konvertiert werden kann, bevor ein Vorgang durchgeführt wird, der von diesem Datentyp abhängig ist. Um anzugeben, dass Werte mithilfe eines Kultur neutralen Formats getestet werden sollen, übergeben Sie `true` für den- `cultureInvariant` Parameter. andernfalls werden Werte mit dem Format getestet, das von der aktuellen Kultur verwendet wird. Wenn Sie einen Wert anhand des von der aktuellen Kultur verwendeten Formats testen, sollten Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> überladene Version dieser Methode verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps für Validierungen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Der Wert auf der linken Seite des Operators.</param>
        <param name="rightText">Der Wert auf der rechten Seite des Operators.</param>
        <param name="op">Einer der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps. Diese Version der überladenen Methode vergleicht Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns><see langword="true" />, wenn sich der <paramref name="leftValue" />-Parameter auf die vom <paramref name="rightValue" />-Parameter angegebene Weise auf den <paramref name="op" />-Parameter bezieht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode wird verwendet, um zu testen, ob der Wert des-Parameters auf den Wert des-Parameters `leftText` `rightText` in der vom-Parameter angegebenen Weise verknüpft ist `op` . Der- `type` Parameter gibt den Datentyp der Werte an, die verglichen werden.  
  
> [!NOTE]
>  Wenn der- `op` Parameter auf festgelegt ist `ValidationCompareOperator.DataTypeCheck` , testet diese Methode nur den Wert des- `leftText` Parameters für den Datentyp, der durch den-Parameter angegeben wird `type` . Der- `rightText` Parameter wird ignoriert.  
  
 Diese Version der-Methode vergleicht die Werte mit dem Format, das von der aktuellen Kultur verwendet wird. Verwenden Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> überladene Version dieser Methode, um die Werte mithilfe eines Kultur neutralen Formats zu vergleichen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="rightText" Type="System.String" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" Index="4" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" Index="5" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="leftText">Der Wert auf der linken Seite des Operators.</param>
        <param name="cultureInvariantLeftText"><see langword="true" />, um den Wert auf der linken Seite in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="rightText">Der Wert auf der rechten Seite des Operators.</param>
        <param name="cultureInvariantRightText"><see langword="true" />, um den Wert auf der rechten Seite in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="op">Einer der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps für Validierungen. Mithilfe dieser Version der Überladung können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats verglichen werden.</summary>
        <returns><see langword="true" />, wenn sich der <paramref name="leftValue" />-Parameter auf die vom <paramref name="rightValue" />-Parameter angegebene Weise auf den <paramref name="op" />-Parameter bezieht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode wird verwendet, um zu testen, ob der Wert des-Parameters auf den Wert des-Parameters `leftText` `rightText` in der vom-Parameter angegebenen Weise verknüpft ist `op` . Der- `type` Parameter gibt den Datentyp der Werte an, die verglichen werden.  
  
> [!NOTE]
>  Wenn der- `op` Parameter auf festgelegt ist `ValidationCompareOperator.DataTypeCheck` , testet diese Methode nur den Wert des- `leftText` Parameters für den Datentyp, der durch den-Parameter angegeben wird `type` . Der- `rightText` Parameter wird ignoriert.  
  
 Um anzugeben, dass Werte mithilfe eines Kultur neutralen Formats verglichen werden sollen, übergeben Sie `true` für den `cultureInvariantLeftText` -Parameter und den- `cultureInvariantRightText` Parameter. andernfalls werden die Werte mit dem von der aktuellen Kultur verwendeten Format verglichen. Wenn Sie Werte mithilfe des von der aktuellen Kultur verwendeten Formats vergleichen, sollten Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> überladene Version dieser Methode in Erwägung gezogen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * obj -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Der zu konvertierende Text.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <param name="value">Diese Methode gibt ein Objekt mit dem Ergebnis der Konvertierung zurück. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps. Diese Version der überladenen Methode konvertiert Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> Methode wird verwendet, um Text in ein Objekt des angegebenen Datentyps zu konvertieren. Obwohl die-Methode `true` oder zurückgibt `false` , um anzugeben, ob die Konvertierung erfolgreich war, wird der konvertierte Wert im- `value` `out` Parameter gespeichert.  
  
> [!NOTE]
>  Wenn die Konvertierung nicht erfolgreich ist, `value` wird der-Parameter auf festgelegt `null` .  
  
 Diese Version der-Methode konvertiert Werte mithilfe des von der aktuellen Kultur verwendeten Formats. Um Werte mithilfe eines Kultur neutralen Formats zu konvertieren, verwenden Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> überladene Version dieser Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool * obj -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" Index="0" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" Index="1" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" Index="2" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="value" Type="System.Object" RefType="out" Index="3" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="text">Der zu konvertierende Text.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <param name="cultureInvariant"><see langword="true" />, um Werte in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="value">Diese Methode gibt ein Objekt mit dem Ergebnis der Konvertierung zurück. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps. Mithilfe dieser Version der überladenen Methode können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats konvertiert werden.</summary>
        <returns><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> Methode wird verwendet, um Text in ein Objekt des angegebenen Datentyps zu konvertieren. Obwohl die-Methode `true` oder zurückgibt `false` , um anzugeben, ob die Konvertierung erfolgreich war, wird der konvertierte Wert im- `value` `out` Parameter gespeichert.  
  
> [!NOTE]
>  Wenn die Konvertierung nicht erfolgreich ist, `value` wird der-Parameter auf festgelegt `null` .  
  
 Um anzugeben, dass Werte mithilfe eines Kultur neutralen Formats konvertiert werden sollen, übergeben Sie `true` für den- `cultureInvariant` Parameter. andernfalls werden Werte mithilfe des von der aktuellen Kultur verwendeten Formats konvertiert. Wenn Sie einen Wert mit dem von der aktuellen Kultur verwendeten Format umrechnen, sollten Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> überladene Version dieser Methode in Erwägung gezogen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Werte vor dem Vergleichen in ein kulturneutrales Format konvertiert werden, oder legt diesen fest.</summary>
        <value><see langword="true" /> , um Werte in ein Kultur neutrales Format zu konvertieren, bevor Sie verglichen werden. andernfalls <see langword="false" /> . Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> Eigenschaft auf festgelegt ist `true` , werden die Eigenschaften des Steuer Elements, die nicht stark typisiert sind, vor dem Vergleich in ein Kultur neutrales Format konvertiert. Wenn diese Eigenschaft auf festgelegt ist `false` , werden Werte in das Format der aktuellen Kultur konvertiert. Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> Eigenschaft wirkt sich nicht auf Werte aus, die von Benutzern des-Steuer Elements auf einer Webseite eingegeben werden.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheet-Designs festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
        <related type="Article" href="/dotnet/standard/globalization-localization/culture-insensitive-string-operations">Kulturunabhängige Zeichenfolgenoperationen</related>
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die höchste Jahreszahl ab, die als zweistellige Zahl dargestellt werden kann.</summary>
        <value>Die höchste Jahreszahl, die als zweistellige Zahl dargestellt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft, um das maximale Jahr zu bestimmen, das in einem Bereich von 100 Jahren durch ein zweistelliges Jahr dargestellt werden kann. Wenn diese Eigenschaft z. b. den Wert enthält `2029` , können Sie die Jahre 1930 bis 2029 mit einer zweistelligen Jahres Angabe darstellen. Die zweistellige Jahres Angabe wird als 1930 interpretiert, 29 wird jedoch als 2029 interpretiert. Der Wert dieser Eigenschaft kann nicht direkt geändert werden. Sie können jedoch das maximale Jahr, das um eine zweistellige Jahres Angabe dargestellt werden kann, durch Festlegen der- <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> Eigenschaft ändern.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob das Validierungssteuerelement in einem neueren Browser mit komplexer Darstellung gerendert werden kann.</summary>
        <returns><see langword="true" />, wenn das Validierungssteuerelement in einem Browser mit komplexer Darstellung gerendert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> -Methode ist eine Hilfsfunktion, die in erster Linie von der <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> -Eigenschaft verwendet wird, um zu bestimmen, ob der Browser des Clients "Uplevel" Rendering (Rendering in einem neueren Browser) unterstützt. Die- <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse überschreibt diese Methode, um zurückzugeben, `false` Wenn die aktuelle Kultur einen nicht gregorianischen Kalender verwendet.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie die <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> Methode überschreiben, stellen Sie sicher, dass Sie die entsprechende Methode in der Basisklasse aufzurufen. Andernfalls werden Bedingungen, die in der Basisklasse definiert sind, umgangen.</para></block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt die Reihenfolge der Darstellung von Monat, Tag und Jahr im Datumswert in der aktuellen Kultur.</summary>
        <returns>Eine Zeichenfolge, die die Reihenfolge der Darstellung von Monat, Tag und Jahr im Datumswert in der aktuellen Kultur darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Monat, der Tag und das Jahr eines Datums Werts können abhängig von den aktuellen Kultur Einstellungen in unterschiedlichen Aufträgen angezeigt werden. Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> Methode wird verwendet, um die Reihenfolge zu bestimmen, in der diese Werte angezeigt werden. In der folgenden Tabelle werden die verschiedenen Werte angezeigt, die von dieser Methode zurückgegeben werden.  
  
|Reihenfolge der Datums Elemente|Rückgabewert|  
|------------------------|------------------|  
|Tag, Monat, Jahr|DMY|  
|Monat, Tag, Jahr|MDY|  
|Jahr, Monat, Tag|YMD|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Eine zweistellige Jahresangabe.</param>
        <summary>Generiert die vierstellige Darstellung der angegebenen zweistelligen Jahreszahl.</summary>
        <returns>Die vierstellige Darstellung der angegebenen zweistelligen Jahreszahl.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Methode, um die vierstellige Jahres Darstellung der angegebenen zweistelligen Jahres Angabe zu generieren. Die vierstellige Jahres Angabe hängt vom Wert der-Eigenschaft ab <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> , die das maximale Jahr enthält, das in einem Bereich von 100 Jahren durch ein zweistelliges Jahr dargestellt werden kann. Wenn beispielsweise die- <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft den-Wert enthält `2029` , <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> gibt die-Methode ein Jahr zwischen 1930 und 2029 zurück. Die zweistellige Jahres Angabe wird als 1930 interpretiert, 29 wird jedoch als 2029 interpretiert. Sie können das maximale Jahr, das um eine zweistellige Jahres Angabe dargestellt werden kann, durch Festlegen der- <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> Eigenschaft ändern.  
  
> [!NOTE]
>  Da diese Methode ist `static` , können Sie Sie verwenden, ohne eine Instanz der-Klasse zu erstellen, indem Sie den Methodennamen zusammen mit dem Klassennamen qualifizieren, z `BaseCompareValidator.GetFullYear` . b..  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Web.UI.Themeable(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Web.UI.Themeable(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp ab, in den die zu vergleichenden Werte vor dem Vergleichen konvertiert werden, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Enumerationswerte. Der Standardwert ist <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft, um den für den Vergleich verwendeten Datentyp anzugeben. Die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft wird von den verschiedenen Vergleichs Validierungs Steuerelementen unterschiedlich verwendet.  
  
> [!IMPORTANT]
>  Wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> -Eigenschaft auf festgelegt ist <xref:System.Web.UI.WebControls.ValidationDataType.Date> und der aktuelle Kalendertyp nicht Gregorianisch ist, führt das Validierungs Steuerelement nur eine serverseitige Validierung aus. Das Validierungs Steuerelement-Client Skript unterstützt nur gregorianische Kalender.  
  
 Im- <xref:System.Web.UI.WebControls.RangeValidator> Steuerelement werden z. b. alle verglichenen Werte (die obere Grenze, die untere Grenze und der Wert des Eingabe Steuer Elements) vor dem Durchführen eines Vergleichs in den angegebenen Datentyp konvertiert. Wenn Sie jedoch ein <xref:System.Web.UI.WebControls.CompareValidator> -Steuerelement verwenden und seine <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> -Eigenschaft auf festlegen `ValidationCompareOperator.DataTypeCheck` , wird nur der Wert des Eingabe Steuer Elements in den angegebenen Datentyp konvertiert.  
  
> [!NOTE]
>  Wenn der Wert des Eingabe Steuer Elements, das dem Validierungs Steuerelement zugeordnet ist, nicht in den angegebenen Datentyp konvertiert werden kann, schlägt die Validierung fehl. Die- <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> Eigenschaft des Validierungs Steuer Elements ist auf festgelegt `false` .  
  
 In der folgenden Tabelle sind die Werte aufgelistet, die Sie für die-Eigenschaft verwenden können <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> .  
  
|Datentyp|BESCHREIBUNG|  
|---------------|-----------------|  
|`String`|Gibt einen Zeichen folgen-Datentyp an.|  
|`Integer`|Gibt einen ganzzahligen 32-Bit-Datentyp mit Vorzeichen an.|  
|`Double`|Gibt den Datentyp einer Gleit Komma Zahl mit doppelter Genauigkeit an.|  
|`Date`|Gibt einen Date-Datentyp an.|  
|`Currency`|Gibt einen monetären Datentyp an.|  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](https://docs.microsoft.com/previous-versions/aspnet/ykzx33wh(v=vs.100)).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die- <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft verwendet wird, um den Datentyp anzugeben, in den die verglichenen Werte konvertiert werden, bevor der Vergleich erfolgt.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Datentyp ist keiner der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>
