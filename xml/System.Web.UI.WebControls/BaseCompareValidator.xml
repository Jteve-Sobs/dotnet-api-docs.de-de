<Type Name="BaseCompareValidator" FullName="System.Web.UI.WebControls.BaseCompareValidator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="26fe419816552ca56b06d89ddf2523c4a2809c9b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39784660" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BaseCompareValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BaseCompareValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BaseCompareValidator" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BaseCompareValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class BaseCompareValidator abstract : System::Web::UI::WebControls::BaseValidator" />
  <TypeSignature Language="F#" Value="type BaseCompareValidator = class&#xA;    inherit BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fungiert als die abstrakte Basisklasse für Validierungssteuerelemente, die typisierte Vergleiche ausführen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse geerbt wird, von Steuerelementen zur gültigkeitsprüfung, die Werte, wie z. B. Vergleichen der <xref:System.Web.UI.WebControls.CompareValidator> und <xref:System.Web.UI.WebControls.RangeValidator> -Steuerelemente, um grundlegende allgemeine Funktionen bereitzustellen.  
  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaftentyp zum Angeben der Daten, die die Werte vor dem Vergleichen konvertiert werden.  
  
> [!NOTE]
>  Wenn der Wert des validierten Eingabesteuerelement in den angegebenen Datentyp konvertiert werden kann, schlägt die Validierung fehl. Die <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> des Validierungssteuerelements-Eigenschaftensatz auf `false`.  
  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse enthält auch mehrere statische Eigenschaften und Methoden, die bei der Validierung von Vergleichen hilfreich sind. Sie können bestimmen, ob eine Zeichenfolge in einen bestimmten Datentyp konvertiert werden kann die <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> Methode. Die höchste Jahreszahl, die durch eine Jahresangabe mit 2 Stellen dargestellt werden kann ist Bestandteil der <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft. Die <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Methode können Sie eine zweistellige Jahresangabe in eine vierstellige Jahresangabe zu konvertieren.  
  
> [!NOTE]
>  Bei Verwendung von Validator-Steuerelemente, die Ableiten der <xref:System.Web.UI.WebControls.BaseCompareValidator> -Steuerelement innerhalb einer <xref:System.Web.UI.UpdatePanel> steuern, stellen Sie sicher, dass das Validierungssteuerelement und das Steuerelement, das diesem zugeordnet ist, in demselben Bereich sind. Weitere Informationen zur Verwendung der <xref:System.Web.UI.UpdatePanel> für teilaktualisierungen von Seiten zu steuern, finden Sie unter [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
 Weitere Informationen zu Steuerelementen zur gültigkeitsprüfung, finden Sie unter <xref:System.Web.UI.WebControls.BaseValidator>.  
  
## <a name="accessibility"></a>Zugriff  
 Das Markup gerendert wird, wird standardmäßig für dieses Steuerelement kann nicht Accessibility Standards wie z. B. die Web Content Accessibility Guidelines 1.0 (WCAG) Priorität 1-Richtlinien entsprechen. Weitere Informationen zur Unterstützung von Eingabehilfen für dieses Steuerelement finden Sie unter [ASP.NET-Steuerelemente und Barrierefreiheit](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
    <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
    <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BaseCompareValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BaseCompareValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.BaseCompareValidator" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse ist abstrakt, können Sie erstellen eine <xref:System.Web.UI.WebControls.BaseCompareValidator> direkt. Dieser Konstruktor wird häufig aufgerufen, durch den Konstruktor einer abgeleiteten Klasse die in definierten Eigenschaften initialisiert die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CompareValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RangeValidator" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="baseCompareValidator.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Ein <see cref="T:System.Web.UI.HtmlTextWriter" />, der den Ausgabestream für das Rendering von HTML-Inhalten auf dem Client darstellt.</param>
        <summary>Fügt dem angegebenen <see cref="T:System.Web.UI.HtmlTextWriter" />-Objekt die HTML-Attribute und -Stile hinzu, die für das Steuerelement gerendert werden sollen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender%2A> Methode wird verwendet, um die Attribute des Steuerelements in der HTML-Kennung für das Steuerelement zu rendern. Diese Methode wird von Entwicklern in abgeleiteten Klassen, legen Sie die entsprechenden Attribute in der Regel überschreiben und Stile in die <xref:System.Web.UI.HtmlTextWriter> Ausgabestream für ein Steuerelement.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" /> -Methode, achten Sie darauf, dass Sie die entsprechende Methode in der Basisklasse aufrufen. Andernfalls werden die Attribute in der Basisklasse nicht gerendert werden.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CanConvert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="text">Die zu testende Zeichenfolge.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Version der überladenen Methode testet Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode, um zu bestimmen, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Methode wird häufig verwendet, zu prüfen, ob eine Zeichenfolge kann, einen kompatiblen Datentyp konvertiert werden vor dem Ausführen eines Vorgangs, das von diesem Datentyp abhängt.  
  
 Diese Version der Methode testet, ob der Wert, der mithilfe des von der aktuellen Kultur verwendeten Formats. Um den Wert mithilfe eines kulturneutralen Formats zu testen, verwenden die <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29?displayProperty=nameWithType> Version dieser Methode zu überladen.  
  
   
  
## Examples  
 Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%2A> Methode zum Vergleichen von zwei ganzzahligen Werten aus, und bestimmen, ob die zweite ganze Zahl konvertiert werden kann.  
  
 [!code-aspx-csharp[BaseCompareValidatorCanConvert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/CS/basecomparevalidatorcanconvertcs.aspx#1)]
 [!code-aspx-vb[BaseCompareValidatorCanConvert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BaseCompareValidatorCanConvert/VB/basecomparevalidatorcanconvertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <Member MemberName="CanConvert">
      <MemberSignature Language="C#" Value="public static bool CanConvert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool CanConvert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.CanConvert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CanConvert (text As String, type As ValidationDataType, cultureInvariant As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool CanConvert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant);" />
      <MemberSignature Language="F#" Value="static member CanConvert : string * System.Web.UI.WebControls.ValidationDataType * bool -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.CanConvert (text, type, cultureInvariant)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">Die zu testende Zeichenfolge.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Enumerationswerte.</param>
        <param name="cultureInvariant">
          <see langword="true" />, um Werte mithilfe eines kulturneutralen Formats zu testen, andernfalls <see langword="false" />.</param>
        <summary>Bestimmt, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Mithilfe dieser Version der überladenen Methode können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats getestet werden.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%29> Methode, um zu bestimmen, ob die angegebene Zeichenfolge in den angegebenen Datentyp konvertiert werden kann. Diese Methode wird häufig verwendet, zu prüfen, ob eine Zeichenfolge kann, einen kompatiblen Datentyp konvertiert werden vor dem Ausführen eines Vorgangs, das von diesem Datentyp abhängt. Um anzugeben, dass die Werte mithilfe eines kulturneutralen Formats getestet werden soll, übergeben Sie `true` für die `cultureInvariant` -Parameter ist; andernfalls werden Werte mithilfe des von der aktuellen Kultur verwendeten Formats getestet. Wenn Sie einen Wert mithilfe des von der aktuellen Kultur verwendeten Formats zu testen, erwägen Sie die Verwendung der <xref:System.Web.UI.WebControls.BaseCompareValidator.CanConvert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> Version dieser Methode zu überladen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
        <altmember cref="Overload:System.Web.UI.WebControls.BaseCompareValidator.Convert" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps für Validierungen.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, string rightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, string rightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, rightText As String, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, System::String ^ rightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, rightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Der Wert auf der linken Seite des Operators.</param>
        <param name="rightText">Der Wert auf der rechten Seite des Operators.</param>
        <param name="op">Einer der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps. Diese Version der überladenen Methode vergleicht Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns>
          <see langword="true" />, wenn sich der <paramref name="leftValue" />-Parameter auf die vom <paramref name="rightValue" />-Parameter angegebene Weise auf den <paramref name="op" />-Parameter bezieht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode wird verwendet, um zu testen, ob der Wert des der `leftText` Parameter bezieht sich auf den Wert der der `rightText` Parameter in der vom angegebenen der `op` Parameter. Die `type` Parameter gibt den Datentyp der Werte mit dem verglichen wird.  
  
> [!NOTE]
>  Wenn die `op` Parametersatz zu `ValidationCompareOperator.DataTypeCheck`, diese Methode überprüft nur den Wert der die `leftText` -Parameter für den angegebenen Datentyp die `type` Parameter. Die `rightText` Parameter wird ignoriert.  
  
 Diese Version der Methode vergleicht die Werte, die mithilfe des von der aktuellen Kultur verwendeten Formats. Um die Werte mithilfe eines kulturneutralen Formats zu vergleichen, verwenden die <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> Version dieser Methode zu überladen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="protected static bool Compare (string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, System.Web.UI.WebControls.ValidationCompareOperator op, System.Web.UI.WebControls.ValidationDataType type);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Compare(string leftText, bool cultureInvariantLeftText, string rightText, bool cultureInvariantRightText, valuetype System.Web.UI.WebControls.ValidationCompareOperator op, valuetype System.Web.UI.WebControls.ValidationDataType type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.Boolean,System.String,System.Boolean,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Compare (leftText As String, cultureInvariantLeftText As Boolean, rightText As String, cultureInvariantRightText As Boolean, op As ValidationCompareOperator, type As ValidationDataType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Compare(System::String ^ leftText, bool cultureInvariantLeftText, System::String ^ rightText, bool cultureInvariantRightText, System::Web::UI::WebControls::ValidationCompareOperator op, System::Web::UI::WebControls::ValidationDataType type);" />
      <MemberSignature Language="F#" Value="static member Compare : string * bool * string * bool * System.Web.UI.WebControls.ValidationCompareOperator * System.Web.UI.WebControls.ValidationDataType -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Compare (leftText, cultureInvariantLeftText, rightText, cultureInvariantRightText, op, type)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="leftText" Type="System.String" />
        <Parameter Name="cultureInvariantLeftText" Type="System.Boolean" />
        <Parameter Name="rightText" Type="System.String" />
        <Parameter Name="cultureInvariantRightText" Type="System.Boolean" />
        <Parameter Name="op" Type="System.Web.UI.WebControls.ValidationCompareOperator" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
      </Parameters>
      <Docs>
        <param name="leftText">Der Wert auf der linken Seite des Operators.</param>
        <param name="cultureInvariantLeftText">
          <see langword="true" />, um den Wert auf der linken Seite in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="rightText">Der Wert auf der rechten Seite des Operators.</param>
        <param name="cultureInvariantRightText">
          <see langword="true" />, um den Wert auf der rechten Seite in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="op">Einer der <see cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />-Werte.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <summary>Vergleicht zwei Zeichenfolgen unter Verwendung des angegebenen Operators und Datentyps für Validierungen. Mithilfe dieser Version der Überladung können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats verglichen werden.</summary>
        <returns>
          <see langword="true" />, wenn sich der <paramref name="leftValue" />-Parameter auf die vom <paramref name="rightValue" />-Parameter angegebene Weise auf den <paramref name="op" />-Parameter bezieht, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.Boolean%2CSystem.String%2CSystem.Boolean%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29> Methode wird verwendet, um zu testen, ob der Wert des der `leftText` Parameter bezieht sich auf den Wert der der `rightText` Parameter in der vom angegebenen der `op` Parameter. Die `type` Parameter gibt den Datentyp der Werte mit dem verglichen wird.  
  
> [!NOTE]
>  Wenn die `op` Parametersatz zu `ValidationCompareOperator.DataTypeCheck`, diese Methode überprüft nur den Wert der die `leftText` -Parameter für den angegebenen Datentyp die `type` Parameter. Die `rightText` Parameter wird ignoriert.  
  
 Um anzugeben, dass die Werte mithilfe eines kulturneutralen Formats verglichen werden soll, übergeben Sie `true` für die `cultureInvariantLeftText` und `cultureInvariantRightText` Parameter angegeben werden, andernfalls werden die Werte mithilfe des von der aktuellen Kultur verwendeten Formats verglichen. Beim Vergleichen von Werten, die mithilfe des von der aktuellen Kultur verwendeten Formats, erwägen Sie die Verwendung der <xref:System.Web.UI.WebControls.BaseCompareValidator.Compare%28System.String%2CSystem.String%2CSystem.Web.UI.WebControls.ValidationCompareOperator%2CSystem.Web.UI.WebControls.ValidationDataType%29?displayProperty=nameWithType> Version dieser Methode zu überladen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationCompareOperator" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Convert">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Der zu konvertierende Text.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <param name="value">Diese Methode gibt ein Objekt mit dem Ergebnis der Konvertierung zurück. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps. Diese Version der überladenen Methode konvertiert Währungs-, Datums- und Double-Werte mithilfe des von der aktuellen Kultur verwendeten Formats.</summary>
        <returns>
          <see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29> Methode zum Konvertieren von Text in ein Objekt des angegebenen Datentyps verwendet wird. Obwohl die Methode zurückgibt, `true` oder `false` um anzugeben, ob die Konvertierung erfolgreich war, wird der konvertierte Wert gespeichert, der `value` `out` Parameter.  
  
> [!NOTE]
>  Wenn die Konvertierung nicht erfolgreich ist, ist die `value` Parametersatz zu `null`.  
  
 Diese Version der Methode konvertiert die Werte, die mithilfe des von der aktuellen Kultur verwendeten Formats. Um Werte mithilfe eines kulturneutralen Formats zu konvertieren, verwenden Sie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29?displayProperty=nameWithType> Version dieser Methode zu überladen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="protected static bool Convert (string text, System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig bool Convert(string text, valuetype System.Web.UI.WebControls.ValidationDataType type, bool cultureInvariant, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.Convert(System.String,System.Web.UI.WebControls.ValidationDataType,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function Convert (text As String, type As ValidationDataType, cultureInvariant As Boolean, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static bool Convert(System::String ^ text, System::Web::UI::WebControls::ValidationDataType type, bool cultureInvariant, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="static member Convert : string * System.Web.UI.WebControls.ValidationDataType * bool *  -&gt; bool" Usage="System.Web.UI.WebControls.BaseCompareValidator.Convert (text, type, cultureInvariant, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="type" Type="System.Web.UI.WebControls.ValidationDataType" />
        <Parameter Name="cultureInvariant" Type="System.Boolean" />
        <Parameter Name="value" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="text">Der zu konvertierende Text.</param>
        <param name="type">Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</param>
        <param name="cultureInvariant">
          <see langword="true" />, um Werte in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />.</param>
        <param name="value">Diese Methode gibt ein Objekt mit dem Ergebnis der Konvertierung zurück. Dieser Parameter wird nicht initialisiert übergeben.</param>
        <summary>Konvertiert den angegebenen Text in ein Objekt des angegebenen Datentyps. Mithilfe dieser Version der überladenen Methode können Sie angeben, ob Werte mithilfe eines kulturneutralen Formats konvertiert werden.</summary>
        <returns>
          <see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Boolean%2CSystem.Object%40%29> Methode zum Konvertieren von Text in ein Objekt des angegebenen Datentyps verwendet wird. Obwohl die Methode zurückgibt, `true` oder `false` um anzugeben, ob die Konvertierung erfolgreich war, wird der konvertierte Wert gespeichert, der `value` `out` Parameter.  
  
> [!NOTE]
>  Wenn die Konvertierung nicht erfolgreich ist, ist die `value` Parametersatz zu `null`.  
  
 Um anzugeben, dass die Werte mithilfe eines kulturneutralen Formats konvertiert werden soll, übergeben Sie `true` für die `cultureInvariant` -Parameter ist; andernfalls werden Werte mithilfe des von der aktuellen Kultur verwendeten Formats konvertiert. Wenn Sie einen Wert mithilfe des von der aktuellen Kultur verwendeten Formats zu konvertieren, erwägen Sie die Verwendung der <xref:System.Web.UI.WebControls.BaseCompareValidator.Convert%28System.String%2CSystem.Web.UI.WebControls.ValidationDataType%2CSystem.Object%40%29?displayProperty=nameWithType> überladene Version dieser Methode.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.Compare(System.String,System.String,System.Web.UI.WebControls.ValidationCompareOperator,System.Web.UI.WebControls.ValidationDataType)" />
      </Docs>
    </Member>
    <Member MemberName="CultureInvariantValues">
      <MemberSignature Language="C#" Value="public bool CultureInvariantValues { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CultureInvariantValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInvariantValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CultureInvariantValues { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInvariantValues : bool with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob Werte vor dem Vergleichen in ein kulturneutrales Format konvertiert werden, oder legt diesen fest.</summary>
        <value>
          <see langword="true" />, um Werte vor dem Vergleichen in ein kulturneutrales Format zu konvertieren, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> -Eigenschaftensatz auf `true`, Eigenschaften des Steuerelements, die nicht stark typisiert werden vor dem Vergleichen in ein kulturneutrales Format konvertiert. Wenn diese Eigenschaft auf festgelegt ist `false`, Werte in das Format der aktuellen Kultur konvertiert. Die <xref:System.Web.UI.WebControls.BaseCompareValidator.CultureInvariantValues%2A> Eigenschaft wirkt sich nicht auf die Werte, die vom Benutzer des Steuerelements auf einer Webseite eingegeben werden.  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
        <altmember cref="P:System.Globalization.NumberFormatInfo.CurrentInfo" />
      </Docs>
    </Member>
    <Member MemberName="CutoffYear">
      <MemberSignature Language="C#" Value="protected static int CutoffYear { get; }" />
      <MemberSignature Language="ILAsm" Value=".property int32 CutoffYear" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly Property CutoffYear As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static property int CutoffYear { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CutoffYear : int" Usage="System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die höchste Jahreszahl ab, die als zweistellige Zahl dargestellt werden kann.</summary>
        <value>Die höchste Jahreszahl, die als zweistellige Zahl dargestellt werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft, um die höchste Jahreszahl zu ermitteln, die durch eine zweistellige Jahresangabe in einem Bereich von 100 Jahren dargestellt werden kann. Wenn diese Eigenschaft den Wert enthält z. B. `2029`, Sie können die Jahre 1930 und 2029 zum darstellen über eine zweistellige Jahresangabe. Die zweistellige Jahresangabe 30 wird als 1930 interpretiert, während der 29 als 2029 interpretiert wird. Sie können den Wert dieser Eigenschaft nicht direkt ändern; Sie können jedoch ändern, die höchste Jahreszahl, die durch eine zweistellige Jahresangabe Zahl kann, durch Festlegen dargestellt werden der <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="DetermineRenderUplevel">
      <MemberSignature Language="C#" Value="protected override bool DetermineRenderUplevel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool DetermineRenderUplevel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function DetermineRenderUplevel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool DetermineRenderUplevel();" />
      <MemberSignature Language="F#" Value="override this.DetermineRenderUplevel : unit -&gt; bool" Usage="baseCompareValidator.DetermineRenderUplevel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob das Validierungssteuerelement in einem neueren Browser mit komplexer Darstellung gerendert werden kann.</summary>
        <returns>
          <see langword="true" />, wenn das Validierungssteuerelement in einem Browser mit komplexer Darstellung gerendert werden kann, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel%2A> Methode ist eine Hilfsfunktion, die in erster Linie verwendet die <xref:System.Web.UI.WebControls.BaseValidator.RenderUplevel%2A> Eigenschaft, um zu bestimmen, ob der Browser des Clients "komplexer"-Darstellung (Rendern auf einem neueren Browser) unterstützt. Die <xref:System.Web.UI.WebControls.BaseCompareValidator> Klasse überschreibt diese Methode zurückgibt `false` , wenn die aktuelle Kultur einen nicht Gregorianischer Kalender verwendet.  
  
> [!NOTE]
>  Diese Methode wird hauptsächlich von Steuerelemententwicklern verwendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Überschreiben der <see cref="M:System.Web.UI.WebControls.BaseCompareValidator.DetermineRenderUplevel" /> -Methode, achten Sie darauf, dass Sie die entsprechende Methode in der Basisklasse aufrufen. Andernfalls werden in der Basisklasse definierte Bedingungen umgangen werden.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BaseValidator.RenderUplevel" />
      </Docs>
    </Member>
    <Member MemberName="GetDateElementOrder">
      <MemberSignature Language="C#" Value="protected static string GetDateElementOrder ();" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string GetDateElementOrder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetDateElementOrder () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static System::String ^ GetDateElementOrder();" />
      <MemberSignature Language="F#" Value="static member GetDateElementOrder : unit -&gt; string" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt die Reihenfolge der Darstellung von Monat, Tag und Jahr im Datumswert in der aktuellen Kultur.</summary>
        <returns>Eine Zeichenfolge, die die Reihenfolge der Darstellung von Monat, Tag und Jahr im Datumswert in der aktuellen Kultur darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Monat, Tag und Jahr der einen Datumswert können in einer anderen Reihenfolge je nach den Einstellungen der aktuellen Kultur angezeigt. Die <xref:System.Web.UI.WebControls.BaseCompareValidator.GetDateElementOrder%2A> Methode wird verwendet, um die Reihenfolge zu bestimmen, in der folgenden Werte angezeigt werden. Die folgende Tabelle zeigt die verschiedenen Werte, die von dieser Methode zurückgegeben wird.  
  
|Datumsreihenfolge-element|Rückgabewert|  
|------------------------|------------------|  
|Tag, Monat, Jahr|"Dmy"|  
|Monat, Tag, Jahr|"Mdy"|  
|Jahr, Monat und Tag|"Ymd"|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DateTime" />
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetFullYear">
      <MemberSignature Language="C#" Value="protected static int GetFullYear (int shortYear);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig int32 GetFullYear(int32 shortYear) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function GetFullYear (shortYear As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static int GetFullYear(int shortYear);" />
      <MemberSignature Language="F#" Value="static member GetFullYear : int -&gt; int" Usage="System.Web.UI.WebControls.BaseCompareValidator.GetFullYear shortYear" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="shortYear" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="shortYear">Eine zweistellige Jahresangabe.</param>
        <summary>Generiert die vierstellige Darstellung der angegebenen zweistelligen Jahreszahl.</summary>
        <returns>Die vierstellige Darstellung der angegebenen zweistelligen Jahreszahl.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Methode, um die vierstellige Darstellung der angegebenen zweistelligen Jahreszahl zu generieren. Die vierstellige Darstellung hängt vom Wert von der <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft, die die höchste Jahreszahl enthält, die durch eine zweistellige Jahresangabe in einem Bereich von 100 Jahren dargestellt werden können. Z. B. wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear%2A> Eigenschaft enthält den Wert `2029`, <xref:System.Web.UI.WebControls.BaseCompareValidator.GetFullYear%2A> Methode gibt ein Jahr zwischen 1930 und 2029 zurück. Die zweistellige Jahresangabe 30 wird als 1930 interpretiert, während der 29 als 2029 interpretiert wird. Sie können ändern, dass die höchste Jahreszahl, die durch eine zweistellige Jahresangabe Zahl kann, durch Festlegen dargestellt werden der <xref:System.Globalization.Calendar.TwoDigitYearMax%2A?displayProperty=nameWithType> Eigenschaft.  
  
> [!NOTE]
>  Da diese Methode ist `static`, können Sie sie ohne eine Instanz der Klasse erstellen, durch die Qualifizierung zusammen mit dem Klassennamen – z. B. der Name der Methode `BaseCompareValidator.GetFullYear`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BaseCompareValidator.CutoffYear" />
        <altmember cref="T:System.Globalization.Calendar" />
        <altmember cref="P:System.Globalization.Calendar.TwoDigitYearMax" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ValidationDataType Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ValidationDataType Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As ValidationDataType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ValidationDataType Type { System::Web::UI::WebControls::ValidationDataType get(); void set(System::Web::UI::WebControls::ValidationDataType value); };" />
      <MemberSignature Language="F#" Value="member this.Type : System.Web.UI.WebControls.ValidationDataType with get, set" Usage="System.Web.UI.WebControls.BaseCompareValidator.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ValidationDataType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datentyp ab, in den die zu vergleichenden Werte vor dem Vergleichen konvertiert werden, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Enumerationswerte. Der Standardwert ist <see langword="String" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden der <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> -Eigenschaft an den Datentyp für den Vergleich verwendet. Die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft wird von den verschiedenen Steuerelementen zur gültigkeitsprüfung Vergleich anders verwendet.  
  
> [!IMPORTANT]
>  Wenn die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> -Eigenschaftensatz auf <xref:System.Web.UI.WebControls.ValidationDataType.Date> und der aktuelle Kalendertyp ist nicht gregorianische, nur eine serverseitige Validierung durchgeführt. Das Validierungssteuerelement Clientskript unterstützt nur dem gregorianischen Kalender.  
  
 Z. B. in der <xref:System.Web.UI.WebControls.RangeValidator> -Steuerelement, alle zu vergleichenden Werte (die obere Grenze, untere Grenze und Wert des Eingabesteuerelements) werden in den angegebenen Datentyp konvertiert, bevor jeder Vergleich ausgeführt wird. Jedoch bei Verwendung einer <xref:System.Web.UI.WebControls.CompareValidator> steuern, und legen Sie seine <xref:System.Web.UI.WebControls.CompareValidator.Operator%2A> Eigenschaft, um `ValidationCompareOperator.DataTypeCheck`, nur der Wert des Eingabesteuerelements wird in den angegebenen Datentyp konvertiert.  
  
> [!NOTE]
>  Wenn der Wert des Eingabesteuerelements Validierungssteuerelement zugeordnete in den angegebenen Datentyp konvertiert werden kann, schlägt die Validierung fehl. Die <xref:System.Web.UI.WebControls.BaseValidator.IsValid%2A> des Validierungssteuerelements-Eigenschaftensatz auf `false`.  
  
 Die folgende Tabelle enthält die Werte, mit denen Sie für die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft.  
  
|Datentyp|Beschreibung |  
|---------------|-----------------|  
|`String`|Gibt einen Zeichenfolgen-Datentyp an.|  
|`Integer`|Gibt einen Datentyp für die 32-Bit-Ganzzahl mit Vorzeichen.|  
|`Double`|Gibt eine Gleitkommazahl mit doppelter Genauigkeit Gleitkommazahl-Datentyp an.|  
|`Date`|Gibt ein Date-Datentyp an.|  
|`Currency`|Gibt ein monetary-Datentyp an.|  
  
 Diese Eigenschaft kann nicht durch Designs oder Stylesheetdesigns festgelegt werden. Weitere Informationen finden Sie unter <xref:System.Web.UI.ThemeableAttribute> und [ASP.NET-Designs und Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.BaseCompareValidator.Type%2A> Eigenschaft, um den Datentyp anzugeben, die die verglichenen Werte vor dem Vergleichen konvertiert werden.  
  
 [!code-aspx-csharp[Classic CompareValidator Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CompareValidator Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic CompareValidator Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CompareValidator Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Der angegebene Datentyp ist keiner der <see cref="T:System.Web.UI.WebControls.ValidationDataType" />-Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ValidationDataType" />
      </Docs>
    </Member>
  </Members>
</Type>