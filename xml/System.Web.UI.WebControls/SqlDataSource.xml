<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcab17400a5076f483cd5285e8f60959c4fe3b04" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69411506" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine SQL-Datenbank für datengebundene Steuerelemente dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In diesem Thema:  
  
-   [Introduction (Einführung)](#introduction)  
  
-   [Datenverbindungen](#data_connections)  
  
-   [Ausführen von Daten Vorgängen](#performing_data_operations)  
  
-   [Datenanbieter](#data_provider)  
  
-   [Zwischenspeichern](#caching)  
  
-   [Zusätzliche Features](#additional_features)  
  
-   [Datenquellen Sicht](#data_source_view)  
  
-   [Deklarative Syntax](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Einführung  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> Datenquellen-Steuerelement stellt Daten in einer relationalen SQL-Datenbank für Daten gebundene Steuerelemente dar. Sie können das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zusammen mit einem Daten gebundenen Steuerelement zum Abrufen von Daten aus einer relationalen Datenbank und zum Anzeigen, bearbeiten und Sortieren von Daten auf einer Webseite mit wenig oder ohne Code verwenden.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Datenverbindungen  
 Zum Herstellen einer Verbindung mit einer-Datenbank müssen Sie <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> die-Eigenschaft auf eine gültige Verbindungs Zeichenfolge festlegen. Der <xref:System.Web.UI.WebControls.SqlDataSource> kann beliebige relationale SQL-Datenbanken unterstützen, die mit einem ADO.NET-Anbieter verbunden werden `SqlClient`können, z. `OracleClient` b. den Anbieter, `OleDb`, `Odbc`oder. Weitere Informationen zum Sichern von Verbindungs Zeichenfolgen finden [Sie unter Gewusst wie: Sichern von Verbindungs Zeichenfolgen bei Verwendung](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)von Datenquellen-Steuerelementen  
  
 Um Daten aus einer zugrunde liegenden Datenbank abzurufen, legen <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Sie die-Eigenschaft mit einer SQL-Abfrage fest. Wenn die Datenbank, der <xref:System.Web.UI.WebControls.SqlDataSource> der zugeordnet ist, gespeicherte Prozeduren unterstützt, <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> können Sie die-Eigenschaft auf den Namen einer gespeicherten Prozedur festlegen. Bei der von Ihnen angegebenen SQL-Abfrage kann es sich auch um eine parametrisierte Abfrage handeln. Sie können der <xref:System.Web.UI.WebControls.Parameter> <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Auflistung Objekte hinzufügen, die einer parametrisierten Abfrage zugeordnet sind. Weitere Informationen über parametrisierte SQL-Abfragen und deren Syntax finden [Sie unter Verwenden von Parametern mit Datenquellen-Steuerelementen zum Filtern](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)).  
  
 Wenn <xref:System.Web.UI.WebControls.SqlDataSource> die<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode aufgerufen wird, ruft das-Steuerelement Daten ab. Diese Methode ermöglicht programmgesteuerten Zugriff auf die Methode, die durch <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> die-Eigenschaft angegeben wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode wird automatisch von Steuerelementen aufgerufen, die <xref:System.Web.UI.WebControls.SqlDataSource> an gebunden sind <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> , wenn Ihre-Methode aufgerufen wird. Wenn Sie die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> -Eigenschaft eines Daten gebundenen Steuer Elements festlegen, wird das-Steuerelement nach Bedarf automatisch an Daten aus der Datenquelle gebunden. Das Festlegen `DataSourceID` der-Eigenschaft ist die empfohlene Methode zum <xref:System.Web.UI.WebControls.ObjectDataSource> Binden eines-Steuer Elements an ein Daten gebundenes Steuerelement. Alternativ können Sie die `DataSource` -Eigenschaft verwenden, aber dann müssen Sie die <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> -Methode des Daten gebundenen Steuer Elements explizit aufzurufen. Einige Beispiele für Daten gebundene Steuerelemente, die verwenden <xref:System.Web.UI.WebControls.SqlDataSource> können <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>sind <xref:System.Web.UI.WebControls.DataList>,, <xref:System.Web.UI.WebControls.DropDownList>und. Sie können die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode jederzeit Programm gesteuert aufrufen, um Daten aus der zugrunde liegenden Datenbank abzurufen.  
  
 In deklarativen und programmatischen ASP.net-Szenarien können Sie die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> -Eigenschaft des Daten gebundenen Steuer Elements auf die ID <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements festlegen. Sie können der <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> -Eigenschaft des Daten gebundenen <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements auch eine Instanz der-Klasse zuweisen. Weitere Informationen zum Binden von Daten gebundenen Steuerelementen an Datenquellen-Steuerelemente finden Sie unter [ASP.NET Data Access Options](https://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Ausführen von Daten Vorgängen  
 Abhängig von den Funktionen des zugrunde liegenden Daten Bank Produkts und der Konfiguration der Instanz der <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse können Sie Daten Vorgänge durchführen, z. b. Aktualisierungen, Einfügungen und Löschungen. Um diese Daten Vorgänge auszuführen, legen Sie den entsprechenden Befehls Text und alle zugehörigen Parameter für den Vorgang fest, den Sie ausführen möchten. Legen Sie für einen Aktualisierungs Vorgang z. b <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> . die-Eigenschaft auf eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur fest, und <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> fügen Sie der Auflistung alle erforderlichen Parameter hinzu. Das Update wird ausgeführt, wenn <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> die-Methode aufgerufen wird, entweder explizit durch Ihren Code oder automatisch durch ein Daten gebundenes Steuerelement. Das gleiche allgemeine Muster wird für <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -und- <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Vorgänge befolgt.  
  
 Die SQL-Abfragen und-Befehle, die Sie <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>in <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>den <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>Eigenschaften, <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> , und verwenden, können parametrisiert werden. Dies bedeutet, dass für die Abfrage oder den Befehl Platzhalter anstelle von Literalwerten verwendet und die Platzhalter an Anwendungs-oder benutzerdefinierte Variablen gebunden werden können. Sie können Parameter in SQL-Abfragen an Sitzungsvariablen binden, Werte, die in der Abfrage Zeichenfolge für eine Web Forms Seite, die Eigenschaftswerte anderer Server Steuerelemente und vieles mehr weitergegeben werden. Weitere Informationen zum Verwenden von Parametern in SQL-Abfragen mit <xref:System.Web.UI.WebControls.SqlDataSource>finden Sie unter [Verwenden von Parametern mit Datenquellen-Steuerelementen zum Filtern](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)) und Verwenden von [Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
> [!NOTE]
>  Wenn einer der Parameter ist `null` , wenn Sie einen `Select` Befehl ausführen, werden standardmäßig keine Daten zurückgegeben, und es wird keine Ausnahme ausgelöst. Sie können dieses Verhalten ändern, indem Sie <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> die- `false`Eigenschaft auf festlegen.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Datenanbieter  
 Standardmäßig arbeitet das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement mit dem .NET Framework Datenanbieter für SQL Server, ist <xref:System.Web.UI.WebControls.SqlDataSource> aber nicht Microsoft SQL Server spezifisch. Sie können das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement mit einem beliebigen Datenbankprodukt verbinden, für das ein verwalteter ADO.NET-Anbieter vorhanden ist. Bei Verwendung mit dem <xref:System.Data.OleDb?displayProperty=nameWithType> -Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> kann mit jeder OLE DB kompatiblen Datenbank verwendet werden. Bei Verwendung mit dem <xref:System.Data.Odbc?displayProperty=nameWithType> -Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> kann für alle ODBC-Treiber und-Datenbanken verwendet werden, einschließlich IBM DB2, MySQL und PostgreSQL. Bei Verwendung mit dem <xref:System.Data.OracleClient?displayProperty=nameWithType> Anbieter kann die <xref:System.Web.UI.WebControls.SqlDataSource> mit Oracle 8.1.7-Datenbanken und höher arbeiten. Die Liste der zulässigen Anbieter wird entweder in der `DbProviderFactories` Datei Machine. config oder in der Datei Web. config im-Abschnitt der Konfigurationsdatei registriert. Weitere Informationen finden Sie unter [Auswählen von Daten mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)Element.  
  
<a name="caching"></a>   
## <a name="caching"></a>Zwischenspeicherung  
 Wenn Sie Daten auf der Seite mit einem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement anzeigen, können Sie die Leistung der Seite erhöhen, indem Sie die Daten zwischen Speicherungs Funktionen des Datenquellen-Steuer Elements verwenden. Durch das Caching wird die Verarbeitungs Last auf den Datenbankservern auf Kosten des Arbeitsspeichers auf dem Webserver reduziert. in den meisten Fällen ist dies ein guter Kompromiss. Speichert Daten <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> `true` <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> automatisch zwischen, wenn die-Eigenschaft auf festgelegt ist und die-Eigenschaft auf die Anzahl der Sekunden festgelegt ist, in denen der Cache Daten speichert, bevor der Cache Eintrag verworfen wird. <xref:System.Web.UI.WebControls.SqlDataSource> Sie können auch einen <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> und einen optionalen <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Wert angeben.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Zusätzliche Funktionen  
 <xref:System.Web.UI.WebControls.SqlDataSource> Bietet zusätzliche Funktionen, die in der folgenden Tabelle aufgeführt sind.  
  
|Funktion|Anforderungen|  
|----------------|------------------|  
|Zwischenspeicherung|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> auf den- <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> Wert, `true`die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> auf <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> und die-Eigenschaft und die-Eigenschaft entsprechend dem zwischen Speicherungs Verhalten für die zwischengespeicherten Daten fest.|  
|Wird gelöscht|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> die-Eigenschaft auf eine SQL-Anweisung fest, mit der Daten gelöscht werden. Diese Anweisung wird in der Regel parametrisiert.|  
|Filtern|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> auf den-Wert fest. Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> die-Eigenschaft auf einen Filter Ausdruck fest, mit dem die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Daten gefiltert werden, wenn die-Methode aufgerufen wird.|  
|Einfügen|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> die-Eigenschaft auf eine SQL-Anweisung fest, mit der Daten eingefügt werden. Diese Anweisung wird in der Regel parametrisiert.|  
|Paging|Wird derzeit nicht unterstützt <xref:System.Web.UI.WebControls.SqlDataSource>, aber einige Daten gebundene Steuerelemente, <xref:System.Web.UI.WebControls.GridView>wie z. b., unterstützen das Paging, wenn <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Sie die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf den Wert festlegen.|  
|Auswählen|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> die-Eigenschaft auf eine SQL-Anweisung fest, mit der Daten abgerufen werden.|  
|Sortieren|Legen Sie die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>fest.|  
|Wird aktualisiert|Legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> die-Eigenschaft auf eine SQL-Anweisung fest, mit der Daten aktualisiert werden. Diese Anweisung wird in der Regel parametrisiert.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Datenquellen Sicht  
 Wie bei allen Datenquellen-Steuerelementen <xref:System.Web.UI.WebControls.SqlDataSource> ist das Steuerelement einer Datenquellen Sicht-Klasse zugeordnet. Dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement ist nur <xref:System.Web.UI.WebControls.SqlDataSourceView>ein zugeordnet, und es wird `Table`immer benannt.  
  
 Es gibt kein visuelles Rendering des Steuer <xref:System.Web.UI.WebControls.SqlDataSource> Elements. es wird als Steuerelement implementiert, sodass Sie es deklarativ und optional erstellen können, damit es an der Zustands Verwaltung teilnehmen kann. Daher unterstützt das <xref:System.Web.UI.WebControls.SqlDataSource> keine visuellen Funktionen, wie z. b. die, die von der-Eigenschaft oder <xref:System.Web.UI.DataSourceControl.SkinID%2A> der <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> -Eigenschaft bereitgestellt werden.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Deklarative Syntax  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
## Examples  
 
Dieser Abschnitt enthält vier Codebeispiele:  
  
-   Im ersten Codebeispiel wird veranschaulicht, wie Daten aus SQL Server in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement mithilfe von deklarativer Syntax angezeigt werden.  
  
-   Im zweiten Codebeispiel wird veranschaulicht, wie Daten aus einer ODBC-kompatiblen Datenbank in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement mithilfe von deklarativer Syntax angezeigt werden.  
  
-   Im dritten Codebeispiel wird veranschaulicht, wie Daten in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt und aktualisiert werden.  
  
-   Im vierten Codebeispiel wird veranschaulicht, wie Daten in einem <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt und aktualisiert werden.  
  
    > [!NOTE]
    >  In diesen Beispielen wird gezeigt, wie deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement deklarativ zum Abrufen von Daten aus SQL Server verwendet und <xref:System.Web.UI.WebControls.GridView> in einem-Steuerelement angezeigt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement deklarativ zum Abrufen von Daten aus einer ODBC-kompatiblen Datenbank verwendet und <xref:System.Web.UI.WebControls.GridView> in einem-Steuerelement angezeigt wird. Die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaft ist der Name der .NET Framework Datenanbieter für ODBC <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird ein gängiges Anzeige-und Aktualisierungs <xref:System.Web.UI.WebControls.GridView> Szenario mit dem-Steuerelement veranschaulicht. Wie bei den vorherigen Beispielen werden Daten aus der Northwind-Datenbank im <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt. Da außerdem eine <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft angegeben und die <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> -Eigenschaft auf `true`festgelegt ist, können Sie die Datensätze ohne zusätzlichen Code bearbeiten und aktualisieren. Das <xref:System.Web.UI.WebControls.GridView> -Steuerelement übernimmt das Hinzufügen <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> von Parametern zur <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Auflistung und ruft **** die-Methode auf <xref:System.Web.UI.WebControls.GridView> , wenn auf die Schaltfläche Aktualisieren im-Steuerelement geklickt wird  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird ein häufiges Anzeige-und Aktualisierungs Szenario <xref:System.Web.UI.WebControls.DropDownList> mit <xref:System.Web.UI.WebControls.TextBox> den Steuerelementen und veranschaulicht. Das <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement fügt der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung weder automatisch Update Parameter hinzu, noch <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> wird die-Methode aufgerufen, daher müssen Sie dies tun. Die Update Parameter werden deklarativ angegeben, und Sie können einen Ereignishandler hinzufügen, <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> um den Vorgang durchzuführen, wenn ein Ereignis ausgelöst wird.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung. Standardmäßig stellen ASP.NET-Webseiten sicher, dass Benutzereingaben keine Skript- oder HTML-Elemente enthalten. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc">Zugreifen auf Daten in Visual Studio</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
    <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Klasse.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Die Verbindungszeichenfolge, mit der die Verbindung zur zugrunde liegenden Datenbank hergestellt wird.</param>
        <param name="selectCommand">Die SQL-Abfrage, mit der Daten aus der zugrunde liegenden Datenbank abgerufen werden. Wenn es sich bei der SQL-Abfrage um eine parametrisierte SQL-Zeichenfolge handelt, ist unter Umständen das Hinzufügen von <see cref="T:System.Web.UI.WebControls.Parameter" />-Objekten zur <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />-Auflistung erforderlich.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Klasse mit der angegebenen Verbindungszeichenfolge und dem Select-Befehl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da unterschiedliche Daten Bankprodukte unterschiedliche Arten von SQL verwenden, `selectCommand` hängt die Syntax für vom aktuellen verwendeten ADO.NET-Anbieter ab, der durch <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> die-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der-Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`der Platzhalter des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Data.OleDb?displayProperty=nameWithType>oder festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Wert kann eine SQL-Zeichenfolge oder der Name einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> mit dem-Konstruktor erstellt wird. Das Beispiel ist insofern ungewöhnlich, als <xref:System.Web.UI.WebControls.SqlDataSource> dass das Steuerelement nicht auf einer Web Forms Seite verwendet wird, sondern in der Implementierung eines Objekts der mittleren Ebene als einfache Methode für ein Geschäftsobjekt, mit einer Datenbank zu interagieren. Im Beispiel wird eine Verbindungs Zeichenfolge verwendet, die in der Datei "Web. config" gespeichert ist.  
  
 Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Web.UI.WebControls.ObjectDataSource> -Klasse bereitgestellt wird.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Der Name des Datenanbieters, der von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> verwendet wird. Wenn kein Anbieter festgelegt ist, verwendet die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> standardmäßig den ADO.NET-Anbieter für Microsoft SQL Server.</param>
        <param name="connectionString">Die Verbindungszeichenfolge, mit der die Verbindung zur zugrunde liegenden Datenbank hergestellt wird.</param>
        <param name="selectCommand">Die SQL-Abfrage, mit der Daten aus der zugrunde liegenden Datenbank abgerufen werden. Wenn es sich bei der SQL-Abfrage um eine parametrisierte SQL-Zeichenfolge handelt, ist unter Umständen das Hinzufügen von <see cref="T:System.Web.UI.WebControls.Parameter" />-Objekten zur <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />-Auflistung erforderlich.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Klasse mit der angegebenen Verbindungszeichenfolge und dem Select-Befehl.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da unterschiedliche Daten Bankprodukte unterschiedliche Arten von SQL verwenden, `selectCommand` hängt die Syntax von vom aktuellen verwendeten ADO.NET-Anbieter ab, der durch `providerName` den-Parameter identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`der Platzhalter des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Data.OleDb?displayProperty=nameWithType>oder festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Bei <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> der-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeitspanne in Sekunden ab, die das Datenquellen-Steuerelement zum Zwischenspeichern der von der <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufenen Daten benötigt, oder legt diese fest.</summary>
        <value>Die Anzahl von Sekunden, die die Ergebnisse eines <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Vorgangs von der <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> zwischengespeichert bleiben. Der Standard ist 0. Der Wert kann nicht negativ sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> , ruft die-Methode Daten aus dem Cache und nicht aus der zugrunde liegenden Datenbank ab. Wenn der Cache abläuft, ruft <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> die-Methode Daten aus der zugrunde liegenden Datenbank ab und speichert die Daten dann erneut.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement speichert Daten automatisch <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> zwischen, wenn die `true` -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> auf festgelegt ist und die-Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten vor dem Cache Eintrag speichert. wird verworfen. Der Wert 0 gibt einen unendlich langen Cache an.  
  
 Das Verhalten des Caches wird durch eine Kombination aus der Dauer und der <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft bestimmt. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft auf den <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> -Wert festgelegt <xref:System.Web.UI.WebControls.SqlDataSource> ist, speichert die Daten beim ersten Datenabruf Vorgang zwischen und speichert Sie im Arbeitsspeicher, für den maximal die von <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> der-Eigenschaft angegebene Zeitspanne. Die Daten werden möglicherweise vor der Dauer freigegeben, wenn der Arbeitsspeicher erforderlich ist. Der Cache wird dann während des nächsten Vorgangs aktualisiert. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft auf den <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> -Wert festgelegt ist, speichert das Datenquellen-Steuerelement Daten beim ersten Datenabruf Vorgang zwischen, setzt aber das Zeitfenster, in dem der Cache für jeden nachfolgenden Vorgang enthalten ist, zurück. Der Cache läuft ab, wenn keine Aktivität für eine Zeit vorhanden ist, die gleich dem <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Wert seit dem letzten <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Vorgang ist.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement kann Daten nur zwischenspeichern, <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> wenn es sich im-Modus befindet. Eine <xref:System.NotSupportedException> -Ausnahme wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode ausgelöst, <xref:System.Web.UI.WebControls.SqlDataSource> wenn das-Steuerelement <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> auf den Wert festgelegt ist und Caching ebenfalls aktiviert ist.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Abruf der Daten durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank in Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden, wobei das Zwischenspeichern von Daten aktiviert ist. Die <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> ist auf 20 Sekunden festgelegt, und die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft wird standardmäßig <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> auf den Wert festgelegt, sodass Benutzer dieser Seite alle 20 Sekunden neue Daten sehen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Cacheablaufverhalten ab, das in Kombination mit der Dauer das Verhalten des vom Datenquellen-Steuerelement verwendeten Caches beschreibt.</summary>
        <value>Einer der <see cref="T:System.Web.UI.DataSourceCacheExpiry" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> , ruft die-Methode Daten aus dem Cache und nicht aus der zugrunde liegenden Datenbank ab. Wenn der Cache abläuft, ruft <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> die-Methode Daten aus der zugrunde liegenden Datenbank ab und speichert die Daten dann erneut.  
  
 Das Verhalten des Caches wird durch eine Kombination der <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> -und- <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Einstellungen festgelegt. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft auf den <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> -Wert festgelegt <xref:System.Web.UI.WebControls.SqlDataSource> ist, speichert die Daten beim ersten Datenabruf Vorgang, speichert Sie für den von der <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> -Eigenschaft angegebenen Zeitraum im Arbeitsspeicher und verwirft ihn nach dem Zeitpunkt abgelaufen. Der Cache wird dann während des nächsten Vorgangs aktualisiert. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft auf den <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> -Wert festgelegt ist, speichert das Datenquellen-Steuerelement Daten beim ersten Datenabruf Vorgang zwischen, setzt aber das Zeitfenster, in dem der Cache für jeden nachfolgenden Vorgang enthalten ist, zurück. Der Cache läuft ab, wenn keine Aktivität für eine Zeit vorhanden ist, die gleich dem <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Wert seit dem letzten <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Vorgang ist.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement kann Daten nur dann zwischen <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> speichern, wenn im-Modus. Eine <xref:System.NotSupportedException> -Ausnahme wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode ausgelöst, <xref:System.Web.UI.WebControls.SqlDataSource> wenn das-Steuerelement <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> auf den Wert festgelegt ist und Caching ebenfalls aktiviert ist.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Abruf der Daten durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank in Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden, wobei das Zwischenspeichern von Daten aktiviert ist. Da die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft auf den <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> -Wert festgelegt ist, werden den Benutzern keine neuen Daten <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> angezeigt, auch wenn der Wert 20 Sekunden beträgt. Die zwischengespeicherten Daten werden nur aktualisiert, wenn seit dem letzten Laden der Seite keine Aktivität mehr als 20 Sekunden auf der Seite vorhanden ist.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Schlüsselabhängigkeit ab, die mit sämtlichen vom Datenquellen-Steuerelement erstellten Datencacheobjekten verknüpft ist, oder legt diese fest. Alle Cacheobjekte laufen explizit ab, wenn der Schlüssel abläuft.</summary>
        <value>Ein Schlüssel, der alle von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> erstellten Cacheobjekte angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> , ruft die-Methode Daten aus dem Cache und nicht aus der zugrunde liegenden Datenbank ab. Wenn der Cache abläuft, ruft <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> die-Methode Daten aus der zugrunde liegenden Datenbank ab und speichert die Daten dann erneut.  
  
 Sie können die <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> -Eigenschaft festlegen, um eine Abhängigkeit zwischen allen Cache Einträgen zu erstellen, die <xref:System.Web.UI.WebControls.SqlDataSource> vom-Steuerelement und dem-Schlüssel erstellt werden. Alle Cache Einträge können jederzeit Programm gesteuert ablaufen, indem der Schlüssel abläuft.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement kann Daten nur dann zwischen <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> speichern, wenn im-Modus. Eine <xref:System.NotSupportedException> -Ausnahme wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode ausgelöst, <xref:System.Web.UI.WebControls.SqlDataSource> wenn das-Steuerelement <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> auf den Wert festgelegt ist und Caching ebenfalls aktiviert ist.  
  
 Für jede Kombination der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>Eigenschaften, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>und <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> wird ein eindeutiger Cache Eintrag erstellt. Mehrere <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelemente können dieselben Cache Einträge in Szenarios verwenden, in denen die Steuerelemente dieselben Daten aus derselben zugrunde liegenden Datenbank laden.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Abruf der Daten durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Datenabrufvorgang abgebrochen werden soll, wenn einer der in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />-Auflistung enthaltenen Parameter mit <see langword="null" /> ausgewertet wird, oder legt diesen Wert fest.</summary>
        <value><see langword="true" />, wenn ein Datenabrufvorgang abgebrochen werden soll, wenn ein in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />-Auflistung enthaltener Parameter mit <see langword="null" /> ausgewertet wird, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> der Eigenschaft wird im Ansichts Zustand gespeichert.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, wie das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement Aktualisierungs- und Löschvorgänge ausführt, wenn die Daten einer Zeile in der zugrunde liegenden Datenbank während der Vorgangsausführung geändert werden, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.ConflictOptions" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaft bestimmt, ob Parameter für alte und neue Werte auf die `Update` -Methode angewendet werden. Wenn der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> von der-Eigenschaft angegebene Befehl z. b. ein <xref:System.Data.DataTable> -Objekt mit den Spalten `Name` und `Number` zurückgibt <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> und die-Eigenschaft auf <xref:System.Web.UI.ConflictOptions.OverwriteChanges> den-Wert festgelegt ist, werden Parameter für erstellt. und für `Number` die`Update`-Methode. `Name` Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> -Wert festgelegt ist, werden `Name`Parameter `Number`für `original_Name`,, `original_Number`und erstellt. (Der genaue Name der Parameter für die ursprünglichen Werte hängt von der <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> -Eigenschaft ab.) Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement bestimmt dann `Update` , ob die in der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft angegebene Methode über Parameter verfügt, die mit identisch sind.  
  
 Die Parallelitäts Steuerung ist ein Verfahren, mit dem Datenspeicher steuern, wie Daten im Speicher gelesen und geändert werden, wenn mehrere Clients auf dieselben Daten zugreifen und diese bearbeiten. Beispielsweise liest ein Client Daten und zeigt Sie einem Benutzer an, während ein anderer Client dieselben Daten liest und Sie einem anderen Benutzer präsentiert. Wenn beide Benutzer die Daten aktualisieren und an den Datenspeicher senden, kann ein unerwartetes Ergebnis auftreten, weil beide Clients möglicherweise unterschiedliche Werte für die gleichen Daten aktualisieren. Dies gilt als Konflikt. Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaft auf <xref:System.Web.UI.ConflictOptions.CompareAllValues> den-Wert `Update` festlegen, kann die-Methode die alten und neuen Werte mit der ursprünglichen Datenquelle vergleichen, um Konflikte zu erkennen und ggf. zu behandeln.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die für den ADO.NET-Anbieter spezifische Zeichenfolge ab, die das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement für die Verbindung zu einer zugrunde liegenden Datenbank verwendet, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine .NET Framework Datenanbieter spezifische Zeichenfolge, die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> von verwendet wird, um eine Verbindung mit der SQL-Datenbank herzustellen, die Sie darstellt. Der Standardwert ist eine leere Zeichenfolge ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement kann mit einer Vielzahl von ADO.NET-Anbietern verwendet werden, und die Syntax der Verbindungs Zeichenfolge, die zum Herstellen einer Verbindung mit einer zugrunde liegenden Datenquelle verwendet wird, ist spezifisch für den Anbieter.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Wenn Sie ein Steuerelement konfigurieren, legen Sie <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> die-Eigenschaft auf den Typ der Datenbank fest ( <xref:System.Data.SqlClient?displayProperty=nameWithType>der Standardwert ist), <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> und Sie legen die-Eigenschaft auf eine Verbindungs Zeichenfolge fest, die Informationen enthält, die zum Herstellen einer Verbindung erforderlich sind. in die Datenbank. Der Inhalt einer Verbindungs Zeichenfolge unterscheidet sich abhängig vom Typ der Datenbank, auf die das Datenquellen Steuerelement zugreift. Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement benötigt z. b. einen Servernamen, einen Datenbanknamen (Katalog) und Informationen zum Authentifizieren des Benutzers beim Herstellen einer Verbindung mit einem SQL Server. Informationen zum Inhalt von Verbindungs Zeichenfolgen finden Sie unter <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> der-Eigenschaft <xref:System.Data.SqlClient.SqlConnection> für die <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> -Klasse, <xref:System.Data.OracleClient.OracleConnection> -Eigenschaft <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> für die- <xref:System.Data.OleDb.OleDbConnection> Klasse,-Eigenschaft <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> für die-Klasse oder im -Eigenschaft für <xref:System.Data.Odbc.OdbcConnection> die-Klasse.  
  
 Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft ändern, <xref:System.Web.UI.IDataSource.DataSourceChanged> wird das-Ereignis ausgelöst, wodurch alle an das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement gebundenen Steuerelemente erneut gebunden werden.  
  
> [!IMPORTANT]
>  Weitere Informationen zum Speichern einer Verbindungs Zeichenfolge [finden Sie unter Gewusst wie: Sichern von Verbindungs Zeichenfolgen bei Verwendung](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)von Datenquellen-Steuerelementen  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft festgelegt wird, um eine Verbindung mit einer Microsoft SQL Server Datenbank <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> herzustellen und die <xref:System.Web.UI.WebControls.GridView> Ergebnisse der-Eigenschaft in einem-Steuerelement anzuzeigen. Im zweiten Codebeispiel wird ein komplexeres Szenario veranschaulicht, in <xref:System.Web.UI.WebControls.SqlDataSource> dem ein Steuerelement verwendet wird, um Daten in einer Kenn Wort geschützten Microsoft Access-Datenbank anzuzeigen und zu aktualisieren. In jedem Fall wird das `connectionStrings` -Element der Datei "Web. config" zuerst angezeigt, gefolgt von der ASP.NET-Seite, <xref:System.Web.UI.WebControls.SqlDataSource> die das-Steuerelement enthält.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft festgelegt wird, um eine Verbindung mit einer SQL Server Datenbank <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> herzustellen und die <xref:System.Web.UI.WebControls.GridView> Ergebnisse der-Eigenschaft in einem-Steuerelement anzuzeigen.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird ein komplexeres Szenario veranschaulicht als im vorangehenden Codebeispiel, <xref:System.Web.UI.WebControls.SqlDataSource> in dem ein-Steuerelement verwendet wird, um Daten in einer Kenn Wort geschützten Access-Datenbank anzuzeigen und zu aktualisieren. Da mit Access verwendet <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> <xref:System.Data.OleDb> <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> wird, wird die-Eigenschaft auf den-Anbieter festgelegt, und die-Eigenschaft wird auf eine geeignete Verbindungs Zeichenfolge für eine UNC-Shared Access-Datenbank festgelegt. <xref:System.Web.UI.WebControls.SqlDataSource> Ein <xref:System.Web.UI.WebControls.GridView> -Steuerelement zeigt Aufträge mit Versanddaten an. Sie können eine Bestellung aktualisieren, indem Sie das entsprechende Kontrollkästchen aktivieren und dann auf die Schaltfläche **Aktualisieren** klicken.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält nur zur Veranschaulichung ein Kennwort im nur-Text-Modus. In einer Produktionsanwendung müssen Verbindungs Zeichenfolgen, die Kenn Wörter enthalten, verschlüsselt werden. Weitere Informationen finden Sie unter [Protecting Connection Information (Schützen von Verbindungsinformationen)](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der Datenquellenansicht.</param>
        <summary>Erstellt ein Objekt für die Datenquellenansicht, das dem Datenquellen-Steuerelement zugeordnet ist.</summary>
        <returns>Eine <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, die der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Von der <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse abgeleitete Klassen können die <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> -Methode überschreiben, um stark typisierte Datenquellen Sicht-Objekte zurückzugeben.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Datenabrufmodus ab, mit dem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement Daten abruft, oder legt diesen fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />-Werte. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> der-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Datenabruf Modus gibt an, <xref:System.Web.UI.WebControls.SqlDataSource> wie ein-Steuerelement Daten aus der zugrunde liegenden Datenbank abruft.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> -Wert festgelegt ist, werden Daten <xref:System.Data.DataSet> in ein-Objekt geladen und im Arbeitsspeicher auf dem Server gespeichert. Dies ermöglicht Szenarien, in denen Steuerelemente der Benutzer <xref:System.Web.UI.WebControls.GridView>Oberfläche wie z. b. Sortier-, Filter-und Pagingfunktionen bieten.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> -Wert festgelegt ist, werden die <xref:System.Data.IDataReader> Daten von einem-Objekt abgerufen, bei dem es sich um einen schreibgeschützten Vorwärts Cursor handelt. Der spezifische Objekttyp <xref:System.Data.IDataReader> hängt von dem von der <xref:System.Web.UI.WebControls.SqlDataSource> verwendeten NET-Datenanbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaft identifiziert wird. Standardmäßig verwendet das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement den-Anbieter für Microsoft SQL Server <xref:System.Data.SqlClient?displayProperty=nameWithType>,, und der Daten Reader ist <xref:System.Data.SqlClient.SqlDataReader> ein-Objekt.  
  
 Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft ändern, <xref:System.Web.UI.IDataSource.DataSourceChanged> wird das-Ereignis ausgelöst und bewirkt, <xref:System.Web.UI.WebControls.SqlDataSource> dass alle Steuerelemente, die an gebunden sind, erneut gebunden werden.  
  
 Der Wert <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> der Eigenschaft wird im Ansichts Zustand gespeichert.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> auf den Wert für ein Szenario <xref:System.Web.UI.WebControls.ListBox> mit einem-Steuerelement festgelegt wird, das keine Sortierung, Auslagerung und Filterung erfordert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />-Eigenschaft entspricht keinem der im <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> angegebenen Werte.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />-SQL-Zeichenfolge und allen Parametern, die in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />-Auflistung vorhanden sind, einen Löschvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der Zeilen darstellt, die aus der zugrunde liegenden Datenbank gelöscht wurden.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bevor der Löschvorgang ausgeführt wird, wird <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> die-Methode aufgerufen, um <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem Löschvorgang eine Vorverarbeitung auszuführen.  
  
 Nachdem der Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode wird für den programmgesteuerten Zugriff `Delete` auf die-Methode bereitgestellt. Wenn das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, ruft das Daten gebundene Steuerelement automatisch die **Delete** -Methode auf.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> die-Methode <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist. Zum Ausführen des Vorgangs erstellt das <xref:System.Web.UI.WebControls.SqlDataSourceView> ein <xref:System.Data.Common.DbCommand> -Objekt unter Verwendung <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> des Texts und der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> zugehörigen Werte und führt dann das <xref:System.Data.Common.DbCommand> -Objekt für die zugrunde liegende Datenbank aus.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text zum Löschen einer Bestellung aus der Northwind-Datenbank festgelegt wird. Zunächst werden die Daten aus der Tabelle Orders abgerufen und in einem <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt. Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> -Eigenschaft muss explizit deklariert und die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode aufgerufen werden, wenn Daten gebundene Steuer <xref:System.Web.UI.WebControls.DropDownList> Elemente verwendet werden, z. b. (im <xref:System.Web.UI.WebControls.GridView> Gegensatz <xref:System.Web.UI.WebControls.DetailsView>zu anderen Steuerelementen wie und, die automatisch das -Parameter und ruft <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> die-Methode für ein Datenquellen-Steuerelement auf.) In diesem Beispiel wird das <xref:System.Web.UI.WebControls.Button.OnClick%2A> -Ereignis an den privaten `OnDelete` Ereignishandler delegiert, der explizit die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode des- <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements aufruft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zum Löschen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zum Löschen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur dar und wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode verwendet. <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>  
  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt die Syntax des Parameters auch vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`die Syntax des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> -Eigenschaft kann eine SQL-Zeichenfolge oder der Name einer gespeicherten Prozedur sein, wenn die Datenbank gespeicherte Prozeduren unterstützt.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Aus Sicherheitsgründen wird die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> -Eigenschaft nicht im Ansichts Zustand gespeichert. Da es möglich ist, den Inhalt des Ansichts Zustands auf dem Client zu decodieren, kann das Speichern sensibler Informationen über die Datenbankstruktur im Ansichts Zustand zu einem Sicherheitsrisiko bei der Offenlegung von Informationen führen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text so festgelegt wird, dass eine Bestellung aus der Tabelle "Northwind database Orders" gelöscht wird. Daten werden aus der Tabelle Orders abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt. Das <xref:System.Web.UI.WebControls.GridView> rendert automatisch eine **Lösch** Schaltfläche, wenn <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> die `true`-Eigenschaft auf festgelegt ist. Außerdem füllt das <xref:System.Web.UI.WebControls.GridView> Steuerelement beim Klicken auf die Schaltfläche **Löschen** automatisch die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Auflistung auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode auf. Da in diesem Codebeispiel Daten gelöscht werden, wird ein Ereignishandler hinzugefügt, der versucht, die Datenbank vor dem Ausführen des <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Vorgangs auf dem Datenträger zu sichern.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Löschvorgang abgeschlossen ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> das-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Löschvorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />-Eigenschaft des dem <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekts verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> -Eigenschaft eine parametrisierte SQL-Abfrage enthält <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> , enthält die <xref:System.Web.UI.WebControls.Parameter> -Auflistung alle-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
> [!NOTE]
>  Stellen Sie sicher, <xref:System.Web.UI.WebControls.BoundField> dass keine Steuerelemente in dem Daten gebundenen Steuerelement, das <xref:System.Web.UI.WebControls.SqlDataSource> Sie an das Steuerelement binden, Namen aufweisen, <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> die mit beliebigen Parameternamen in der Auflistung identisch sind. Parameter mit dem gleichen Namen wie gebundene Felder werden vom SQL-Befehl ausgeschlossen, und der Fehler "Parameter wurde nicht bereitgestellt" ist möglicherweise aufgetreten.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> Wert festgelegt ist, werden die Parameter sowohl für den alten als auch für die neuen Werte der Daten erstellt. Die Parameter für die alten Werte werden entsprechend der <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> -Eigenschaft benannt.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType> - <xref:System.Data.Odbc?displayProperty=nameWithType> und-Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType> -Anbieter, der der standardmäßige ADO.NET-Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> für das-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit dem Platzhalter in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> -Eigenschaft ab <xref:System.Web.UI.WebControls.SqlDataSourceView> , die im-Objekt enthalten ist, das <xref:System.Web.UI.WebControls.SqlDataSource> dem-Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Text zum Löschen einer Bestellung aus der Northwind-Datenbank festgelegt wird. Zunächst werden die Daten aus der Tabelle Orders abgerufen und in einem <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt. Sie müssen die- <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Eigenschaft explizit deklarieren <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> und die-Methode aufzurufen, wenn Sie Daten <xref:System.Web.UI.WebControls.DropDownList> gebundene Steuerelemente verwenden, z. <xref:System.Web.UI.WebControls.GridView> b <xref:System.Web.UI.WebControls.DetailsView>. (im Gegensatz zu anderen Steuerelementen wie und, die automatisch die Parameter Auffüllen für <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> ein Datenquellen-Steuerelement aufzurufen). In diesem Beispiel wird das <xref:System.Web.UI.WebControls.Button.OnClick%2A> -Ereignis an den privaten `OnDelete` Ereignishandler delegiert, der explizit die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> -Methode des- <xref:System.Web.UI.WebControls.SqlDataSource> Steuer Elements aufruft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Löschvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> das-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um <xref:System.Web.UI.WebControls.SqlDataSource> die Parameterwerte zu ändern, bevor das-Steuerelement den Löschvorgang ausführt.  
  
 Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den Vorgang nicht direkt abbrechen, indem Sie <xref:System.Data.Common.DbCommand.Cancel%2A> die-Methode <xref:System.Data.Common.DbCommand> für das-Objekt aufrufen, <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> das durch das-Objekt verfügbar gemacht wird. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> des-Objekts `true`auf festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie das <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> -Ereignis behandelt wird, das <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> vor dem Auftreten eines-Vorgangs ausgelöst wird. Da in diesem Beispiel Daten aus der Northwind-Datenbank gelöscht <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> werden, wird ein-Handler hinzugefügt, um zu versuchen, die <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Datenbank auf dem Datenträger zu sichern, bevor der Vorgang ausgeführt wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob für das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement die Zwischenspeicherung von Daten aktiviert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn die Zwischenspeicherung von Daten für das Datenquellen-Steuerelement aktiviert ist, andernfalls <see langword="false" />. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement unterstützt das Zwischenspeichern von Daten Während die Daten zwischengespeichert werden <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> , ruft die-Methode Daten aus dem Cache und nicht aus der zugrunde liegenden Datenbank ab. Wenn der Cache abläuft, ruft <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> die-Methode Daten aus der zugrunde liegenden Datenbank ab und speichert die Daten dann erneut.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement speichert Daten automatisch <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> zwischen, wenn die `true` -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> auf festgelegt ist und die-Eigenschaft auf einen Wert größer als 0 festgelegt ist. damit wird angegeben, wie viele Sekunden der Cache Daten vor dem Abrufen eines-Objekts speichert. neuer Satz.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Abruf der Daten durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank in Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden, wobei das Zwischenspeichern von Daten aktiviert ist. Die <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> -Eigenschaft ist auf `true` festgelegt <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> , und wird auf 20 Sekunden festgelegt. Da die <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> -Eigenschaft standardmäßig auf <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> das Feld festgelegt wird, sehen Benutzer dieser Seite alle 20 Sekunden neue Daten.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />-Eigenschaft wird auf <see langword="true" /> festgelegt, wenn die Zwischenspeicherung nicht von <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> unterstützt wird.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Filterausdruck ab, der angewendet wird, wenn die <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode aufgerufen wird, oder legt diesen fest.</summary>
        <value>Eine Zeichenfolge, die einen Filterausdruck darstellt, der angewendet wird, wenn Daten mithilfe der <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />-Methode abgerufen werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschafts Wert ist ein Formatzeichen folgen Ausdruck (eine Zeichenfolge, <xref:System.String.Format%2A?displayProperty=nameWithType> die von der-Methode verarbeitet wird) <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> , der die Werte in der-Auflistung für alle in der Zeichenfolge enthaltenen Ersetzungs Parameter verwendet. Die Filter Ausdruckssyntax ist die gleiche Syntax, <xref:System.Data.DataView.RowFilter%2A> die von der-Eigenschaft akzeptiert wird, da der Filter Ausdruck auf die <xref:System.Data.DataView.RowFilter%2A> -Eigenschaft des <xref:System.Data.DataView> -Objekts angewendet wird, das beim Ausführen der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode zurückgegeben wird. Weitere Informationen finden Sie unter <xref:System.Data.DataColumn.Expression%2A>.  
  
 Wenn Sie der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Auflistung Parameter hinzufügen, können Sie auch Format Zeichenfolgen-Platzhalter einschließen `"{0}")` (z. b. im Ausdruck, um Parameterwerte zu ersetzen. Die Platzhalter werden nach dem Index des-Parameters in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Auflistung ersetzt. Wenn ein Objekt in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Auflistung ist `null`, wird das Objekt durch eine leere Zeichenfolge ersetzt.  
  
 Sie können Parameter in die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft einschließen. Wenn der-Parameter eine Zeichenfolge oder ein Zeichentyp ist, müssen Sie den-Parameter in einfache Anführungszeichen einschließen. Anführungszeichen sind nicht erforderlich, wenn es sich bei dem Parameter um einen numerischen Typ handelt. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Auflistung enthält die Parameter, die für die Platzhalter ausgewertet werden, die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> in der-Eigenschaft gefunden werden.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement unterstützt das Filtern von <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> Daten nur im-Modus.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und mithilfe einer <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Zeichenfolge und <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> der-Auflistung gefiltert werden. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft wird jedes Mal angewendet <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> , wenn die-Methode ausgeführt wird, um Daten abzurufen. In diesem Beispiel <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> enthält ein Platzhalter für einen Filter Parameter, der in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Auflistung enthalten ist. Außerdem ist der Filter-Parameter ein <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das an die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> -Eigenschaft des <xref:System.Web.UI.WebControls.DropDownList> -Steuer Elements gebunden ist. Da die <xref:System.Web.UI.WebControls.DropDownList> - <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> Eigenschaft des-Steuer Elements `true`auf festgelegt ist, bewirkt jede Änderung <xref:System.Web.UI.WebControls.DropDownList> in der Auswahl für das-Steuerelement, dass die Seite Informationen <xref:System.Web.UI.WebControls.GridView> an den Server zurücksendet und das-Steuerelement erneut an die Datenquelle gebunden wird. Steuern Sie mit dem neuen Filter.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Die <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />-Eigenschaft wurde festgelegt und <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> befindet sich im <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />-Modus.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Filtervorgang auf.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Validierungs Vorgänge für Filter Parameterwerte <xref:System.Web.UI.WebControls.SqlDataSource> auszuführen, bevor das-Steuerelement einen Filter Vorgang ausführt. Sie <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> können die-Methode abbrechen, indem <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Sie die- <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> Eigenschaft des `true`-Objekts auf festlegen. Das-Ereignis wird nur ausgelöst, <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> wenn die-Eigenschaft festgelegt ist.  
  
 Das <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> -Ereignis delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> das-Ereignis <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Parametern ab, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />-Zeichenfolge zugeordnet sind.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> mit einer Reihe von Parametern, die beliebigen Parameterplatzhaltern in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />-Eigenschaft zugeordnet sind.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Auflistung sind mit allen Parametern verknüpft, die in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft angegeben sind. Die Parameter Platzhalter, die in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft angegeben sind, werden bei Aufruf der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> - <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Methode anhand von Order to Parameter-Objekten in der-Auflistung abgeglichen.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> -Eigenschaft ab <xref:System.Web.UI.WebControls.SqlDataSourceView> , die im-Objekt enthalten ist, das <xref:System.Web.UI.WebControls.SqlDataSource> dem-Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank abgerufen und mithilfe der <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> - <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Eigenschaft und der-Eigenschaft gefiltert werden. Die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements wird immer <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> dann angewendet, wenn die-Methode ausgeführt wird, um Daten abzurufen. In diesem Beispiel enthält die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -Eigenschaft einen Platzhalter für einen Filter Parameter, der in der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Auflistung enthalten ist. Außerdem ist der Filter-Parameter ein <xref:System.Web.UI.WebControls.ControlParameter> -Objekt, das an die <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> -Eigenschaft des <xref:System.Web.UI.WebControls.DropDownList> -Steuer Elements gebunden ist. Da für <xref:System.Web.UI.WebControls.DropDownList> das-Steuer <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> Element die- `true`Eigenschaft auf festgelegt ist <xref:System.Web.UI.WebControls.DropDownList> , wird durch jede Änderung in der Auswahl die Seite an den Server <xref:System.Web.UI.WebControls.GridView> zurückgesendet, und das Steuerelement wird an das Datenquellen-Steuerelement erneut gebunden. neuer Filter.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das <see cref="T:System.Data.Common.DbProviderFactory" />-Objekt zurück, das dem von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />-Eigenschaft bezeichneten ADO.NET-Anbieter zugeordnet ist.</summary>
        <returns>Eine <see cref="T:System.Data.Common.DbProviderFactory" />, die den bezeichneten ADO.NET-Anbieter bezeichnet, andernfalls eine Instanz von <see cref="N:System.Data.SqlClient" /> (wenn kein Anbieter festgelegt wurde).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Common.DbProviderFactory> -Eigenschaft wird <xref:System.Web.UI.WebControls.SqlDataSource> vom-Steuerelement verwendet, um die richtigen ADO.net Connection-, Command-und Parameter-Objekte bei der Interaktion mit einer Datenbank zu erstellen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Der Name der abzurufenden Ansicht. Da die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> nur eine Ansicht unterstützt, wird <paramref name="viewName" /> ignoriert.</param>
        <summary>Ruft die benannte Datenquellenansicht ab, die dem Datenquellen-Steuerelement zugeordnet ist.</summary>
        <returns>Die <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> mit dem Namen "Tabelle", die der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zugeordnet ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement unterstützt nur eine Datenquellen Sicht. Wie bei allen Datenquellen Sicht-Objekten definiert <xref:System.Web.UI.WebControls.SqlDataSourceView> das-Objekt, das dem Datenquellen-Steuerelement zugeordnet ist, seine Funktionen, führt alle Aufgaben aus, die zum Abrufen von Daten aus der zugrunde liegenden Datenbank erforderlich sind, und führt Vorgänge aus, wie z. b. die Sortierung. Einfügen, löschen und aktualisieren.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="viewName" /> ist <see langword="null" /> oder hat einen anderen Wert als <c>Table</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft eine Auflistung von Namen ab, die die Liste der Ansichtsobjekte darstellt, die dem <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zugeordnet sind.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" />, die die Namen der Ansichten enthält, die der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zugeordnet sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement unterstützt nur eine Ansicht der zugrunde liegenden `"Table"`Daten mit dem Namen. Die <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> -Methode gibt eine Auflistung mit einem einzelnen Element dieses Einsichts namens zurück.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />-SQL-Zeichenfolge und allen Parametern, die in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />-Auflistung vorhanden sind, einen Einfügevorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der in die zugrunde liegenden Datenbank eingefügten Zeilen darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bevor der INSERT-Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor dem <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Vorgang eine Vorverarbeitung auszuführen. Um einen Einfügevorgang auszuführen <xref:System.Web.UI.WebControls.SqlDataSourceView> , erstellt das <xref:System.Data.Common.DbCommand> -Objekt ein <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> -Objekt mit dem <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Text und den zugehörigen Eigenschaften und <xref:System.Data.Common.DbCommand> führt dann das-Objekt für die zugrunde liegende Datenbank aus.  
  
 Nachdem der Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode wird für den programmgesteuerten Zugriff `Insert` auf die-Methode bereitgestellt. Wenn das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement einem Daten gebundenen Steuerelement zugeordnet ist, ruft das Daten gebundene Steuerelement automatisch die `Insert` -Methode auf.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> die-Methode <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource> -Steuer Elements und einer einfachen Web Forms Seite in eine Datenbank eingefügt werden. Die aktuellen Daten in der Datentabelle werden im <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie <xref:System.Web.UI.WebControls.TextBox> Werte in die Steuerelemente eingeben und dann auf die Schaltfläche **Einfügen** klicken. Wenn auf die Schaltfläche **Einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, und <xref:System.Web.UI.WebControls.DropDownList> anschließend wird aktualisiert.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das eine Benutzereingabe akzeptiert, bei der es sich um eine potenzielle Sicherheitsbedrohung handelt und Werte ohne Validierung in Parameter eingefügt werden, was auch eine potenzielle Sicherheitsbedrohung darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  In diesem Beispiel wird gezeigt, wie die deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zum Einfügen von Daten in die zugrunde liegende Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zum Einfügen von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt entweder eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur dar und wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode verwendet. <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>  
  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der-Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`der Platzhalter des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Kann eine SQL-Zeichenfolge oder der Name einer gespeicherten Prozedur sein, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Diese Eigenschaft delegiert an die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Aus Sicherheitsgründen wird die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> -Eigenschaft nicht im Ansichts Zustand gespeichert. Da es möglich ist, den Inhalt des Ansichts Zustands auf dem Client zu decodieren, kann das Speichern sensibler Informationen über die Datenbankstruktur im Ansichts Zustand zu einem Sicherheitsrisiko bei der Offenlegung von Informationen führen.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource> -Steuer Elements und einer einfachen Web Forms Seite in eine Datenbank eingefügt werden. Im zweiten Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden und wie ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verwendet wird, um die <xref:System.Web.UI.WebControls.GridView> Details einer ausgewählten Zeile im-Steuerelement anzuzeigen und um neue Datensätze einzufügen.  
  
> [!NOTE]
>  In diesen Beispielen wird gezeigt, wie deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource> -Steuer Elements und einer einfachen Web Forms Seite in eine Datenbank eingefügt werden. Die aktuellen Daten in der Datentabelle werden im <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie <xref:System.Web.UI.WebControls.TextBox> Werte in die Steuerelemente eingeben und dann auf die Schaltfläche **Einfügen** klicken. Wenn auf die Schaltfläche **Einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, <xref:System.Web.UI.WebControls.DropDownList> und das Steuerelement wird aktualisiert.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung, und Werte werden ohne Validierung in Parameter eingefügt, was auch eine potenzielle Sicherheitsbedrohung darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden. Außerdem wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verwendet wird <xref:System.Web.UI.WebControls.GridView> , um die Details einer ausgewählten Zeile im-Steuerelement und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt, und die ausgewählte Zeile <xref:System.Web.UI.WebControls.GridView> des <xref:System.Web.UI.WebControls.DetailsView> wird ebenfalls im-Steuerelement angezeigt. Das <xref:System.Web.UI.WebControls.GridView> - <xref:System.Web.UI.WebControls.DetailsView> Steuerelement und das-Steuerelement verwenden unterschiedliche Datenquellen <xref:System.Web.UI.WebControls.GridView> -Steuer <xref:System.Web.UI.WebControls.DetailsView> Elemente; das <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> , das dem zugeordnet ist, verfügt über die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -und-Eigenschaften, die sicherstellen, dass die ausgewählte gestellte.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView> -Steuer Elements <xref:System.Web.UI.WebControls.DetailsView> klicken, wird eine andere Benutzeroberfläche angezeigt, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, <xref:System.Web.UI.WebControls.DetailsView> füllt <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> die Auflistung automatisch mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter von einem beliebigen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> -Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem <xref:System.Web.UI.WebControls.DetailsView> die Daten vom-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> -Ereignis zu behandeln, der Wert des Primärschlüssels der eingefügten Zeile wird <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> angezeigt, und die-Methode des <xref:System.Web.UI.WebControls.GridView> das Steuerelement wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus einer Microsoft SQL Server Datenbank abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden. Außerdem wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verwendet wird, um die Details einer ausgewählten Zeile in der <xref:System.Web.UI.WebControls.GridView> und als Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
 <xref:System.Web.UI.WebControls.GridView> Das<xref:System.Web.UI.WebControls.DetailsView> -Steuerelement zeigt eine Gruppe von Daten an, und zeigt die Details für eine bestimmte Zeile an. Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView> -Steuer Elements <xref:System.Web.UI.WebControls.DetailsView> klicken, wird eine andere Benutzeroberfläche angezeigt, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Der Name der gespeicherten Prozedur wird in der <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> -Eigenschaft festgelegt und als gespeicherte Prozedur identifiziert, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> indem die- <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> Eigenschaft auf den-Wert festgelegt wird.  
  
 <xref:System.Web.UI.WebControls.DetailsView> Nachdem die Daten vom-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> -Ereignishandler aufgerufen <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> , um das-Ereignis zu behandeln, der Wert des Primärschlüssels der eingefügten <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Zeile <xref:System.Web.UI.WebControls.GridView> wird angezeigt, und die-Methode des das Steuerelement wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Einfügevorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> das-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein INSERT-Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden und wie ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verwendet wird, um die Details <xref:System.Web.UI.WebControls.GridView> einer ausgewählten Zeile in der und als ein Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
> [!NOTE]
>  In diesem Beispiel wird gezeigt, wie die deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt, und die ausgewählte Zeile <xref:System.Web.UI.WebControls.GridView> des <xref:System.Web.UI.WebControls.DetailsView> wird ebenfalls im-Steuerelement angezeigt. Das <xref:System.Web.UI.WebControls.GridView> - <xref:System.Web.UI.WebControls.DetailsView> Steuerelement und das-Steuerelement verwenden unterschiedliche Datenquellen <xref:System.Web.UI.WebControls.GridView> -Steuer <xref:System.Web.UI.WebControls.DetailsView> Elemente; das <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> , das dem zugeordnet ist, verfügt über die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -und-Eigenschaften, die sicherstellen, dass die ausgewählte gestellte.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView> -Steuer Elements <xref:System.Web.UI.WebControls.DetailsView> klicken, wird eine andere Benutzeroberfläche angezeigt, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, <xref:System.Web.UI.WebControls.DetailsView> füllt <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> die Auflistung automatisch mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter von einem beliebigen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für das <xref:System.Web.UI.WebControls.TemplateField> -Objekt ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem <xref:System.Web.UI.WebControls.DetailsView> die Daten vom-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> -Ereignis zu behandeln, der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> , und die-Methode des <xref:System.Web.UI.WebControls.GridView> das Steuerelement wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Einfügevorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> das-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um <xref:System.Web.UI.WebControls.SqlDataSource> die Parameterwerte zu ändern, bevor das-Steuerelement den Einfügevorgang ausführt. Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie den Vorgang nicht direkt abbrechen, indem Sie <xref:System.Data.Common.DbCommand.Cancel%2A> die-Methode <xref:System.Data.Common.DbCommand> für das-Objekt aufrufen, <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> das von der-Eigenschaft verfügbar gemacht wird. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> des-Objekts `true`auf festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus Microsoft SQL Server abgerufen und in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt werden und wie ein <xref:System.Web.UI.WebControls.DetailsView> -Steuerelement verwendet wird, um die Details <xref:System.Web.UI.WebControls.GridView> einer ausgewählten Zeile in der und als ein Formular zum Einfügen neuer Datensätze anzuzeigen.  
  
> [!NOTE]
>  In diesem Beispiel wird gezeigt, wie die deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Zunächst werden die Daten im <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt, und die ausgewählte Zeile <xref:System.Web.UI.WebControls.GridView> des <xref:System.Web.UI.WebControls.DetailsView> wird ebenfalls im-Steuerelement angezeigt. Das <xref:System.Web.UI.WebControls.GridView> - <xref:System.Web.UI.WebControls.DetailsView> Steuerelement und das-Steuerelement verwenden unterschiedliche Datenquellen <xref:System.Web.UI.WebControls.GridView> -Steuer <xref:System.Web.UI.WebControls.DetailsView> Elemente; das <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> , das dem zugeordnet ist, verfügt über die <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> -und-Eigenschaften, die sicherstellen, dass die ausgewählte gestellte.  
  
 Wenn Sie auf die automatisch generierte Schaltfläche **Einfügen** des <xref:System.Web.UI.WebControls.DetailsView> -Steuer Elements <xref:System.Web.UI.WebControls.DetailsView> klicken, wird eine andere Benutzeroberfläche angezeigt, die zum Einfügen eines neuen Datensatzes verwendet wird. Im Beispiel wird eine gespeicherte Prozedur verwendet, um Datensätze einzufügen, und gibt den Primärschlüssel der eingefügten Zeile zurück. Wenn Sie einen Datensatz einfügen, <xref:System.Web.UI.WebControls.DetailsView> füllt <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> die Auflistung automatisch mit Werten aus den gebundenen Spalten auf und ruft die <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> -Methode auf. Der <xref:System.Web.UI.WebControls.DetailsView> kann die richtigen Parameter von einem beliebigen <xref:System.Web.UI.WebControls.BoundField> -Objekt und einen Parameter für die <xref:System.Web.UI.WebControls.TemplateField> ableiten, wenn die ASP.net-bidirektionale Daten Bindungs Syntax verwendet wird. In diesem Beispiel wird ein zusätzlicher Parameter im <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> -Ereignishandler hinzugefügt, um den Primärschlüssel zu verarbeiten, der von der gespeicherten Prozedur zurückgegeben wird.  
  
 Nachdem <xref:System.Web.UI.WebControls.DetailsView> die Daten vom-Steuerelement in die Datenbank eingefügt wurden, wird der <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Ereignishandler aufgerufen, um das <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> -Ereignis zu behandeln, der Wert des Primärschlüssels der eingefügten Zeile wird angezeigt `DataBind` , und die-Methode des <xref:System.Web.UI.WebControls.GridView> das Steuerelement wird explizit aufgerufen, um die Daten zu aktualisieren.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />-Eigenschaft des dem <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekts verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> -Eigenschaft ab <xref:System.Web.UI.WebControls.SqlDataSourceView> , die im-Objekt enthalten ist, das <xref:System.Web.UI.WebControls.SqlDataSource> dem-Steuerelement zugeordnet ist.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> -Eigenschaft eine parametrisierte SQL-Abfrage enthält <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> , enthält die <xref:System.Web.UI.WebControls.Parameter> -Auflistung alle-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType> - <xref:System.Data.Odbc?displayProperty=nameWithType> und-Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType> -Anbieter, der der standardmäßige ADO.NET-Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> für das-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource> -Steuer Elements und einer einfachen Web Forms Seite in eine Datenbank eingefügt werden. Die aktuellen Daten in der Datentabelle werden im <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement angezeigt. Sie können neue Datensätze hinzufügen, indem Sie <xref:System.Web.UI.WebControls.TextBox> Werte in die Steuerelemente eingeben und dann auf die Schaltfläche **Einfügen** klicken. Wenn auf die Schaltfläche **Einfügen** geklickt wird, werden die angegebenen Werte in die Datenbank eingefügt, <xref:System.Web.UI.WebControls.DropDownList> und das Steuerelement wird aktualisiert.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung, und Werte werden ohne Validierung in Parameter eingefügt, was auch eine potenzielle Sicherheitsbedrohung darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  In diesem Beispiel wird gezeigt, wie die deklarative Syntax für den Datenzugriff verwendet wird. Informationen zum Zugreifen auf Daten mithilfe von Code anstelle von Markup finden Sie unter [zugreifen auf Daten in Visual Studio](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Ein Objekt, das den Zustand von <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> darstellt.</param>
        <summary>Lädt den Zustand der beizubehaltenden Eigenschaften im <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> -Methode wird verwendet, um den zuvor gespeicherten Ansichts Zustand <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements zu laden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Formatzeichenfolge ab, die auf die Namen aller Parameter angewendet wird, die an die <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />-Methode oder an die <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />-Methode übergeben werden, oder legt diese Formatzeichenfolge fest.</summary>
        <value>Eine Zeichenfolge, die eine Formatzeichenfolge darstellt, die auf die Namen aller an die <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />-Methode oder die <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />-Methode übergebenen <paramref name="oldValues" />-Parameter angewendet wird. Der Standardwert ist "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Format Zeichenfolge wird nur auf Primärschlüssel angewendet, z. b. die, `DataKeyNames` die durch die-Eigenschaft des zugeordneten Daten gebundenen Steuer Elements identifiziert werden, oder in <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> DELETE-und Update-Szenarios, bei denen die-Eigenschaft auf <xref:System.Web.UI.ConflictOptions.CompareAllValues>festgelegtistder Wert und ein Satz `oldValues` von werden an die entsprechende Daten Methode übermittelt. In diesem Fall wird die Format Zeichenfolge auf jeden Parameternamen in der `oldValues` Auflistung angewendet.  
  
 Zwei häufige Szenarien, in denen Sie die <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> -Eigenschaft ändern können, lauten wie folgt:  
  
-   , Um bei Updates zwischen alten und neuen Werten zu unterscheiden. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> -Eigenschaft auf den <xref:System.Web.UI.ConflictOptions.CompareAllValues> -Wert festgelegt ist, werden die Parameter für die ursprünglichen und die neuen <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Werte der Auflistung hinzugefügt. Ohne die Formatierungs Zeichenfolge werden für jedes Datenfeld zwei Parameter mit demselben Namen erstellt. Durch Ändern des Namens des ursprünglichen value-Parameters können Sie die Daten mit der ursprünglichen Datenquelle vergleichen, um Konflikte zu erkennen und Schlüsselwerte zu vergleichen.  
  
-   Einige visuelle Designer implementieren ein bestimmtes Benennungs Schema für die ursprünglichen Werte und Schlüssel.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Fügt einen <see cref="E:System.Web.UI.Page.LoadComplete" />-Ereignishandler zum <see cref="T:System.Web.UI.Page" />-Steuerelement hinzu, das das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement enthält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Ereignishandler, der vom <xref:System.Web.UI.WebControls.SqlDataSource> -Objekt hinzugefügt wird, aktualisiert die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> -und- <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Werte. Wenn die Werte aktualisiert werden, wird <xref:System.Web.UI.IDataSource.DataSourceChanged> das-Ereignis ausgelöst, wodurch alle an das <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement gebundenen Steuerelemente erneut gebunden werden.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des .NET Framework-Datenanbieters ab, mit dem das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement eine Bindung zu einer zugrunde liegenden Datenquelle herstellt, oder legt diesen Namen fest.</summary>
        <value>Der Name des von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> verwendeten Datenanbieters, andernfalls der ADO.NET-Anbieter für Microsoft SQL Server (wenn kein Anbieter festgelegt wurde). Standardmäßig wird der ADO.NET-Anbieter für Microsoft SQL Server verwendet.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die .NET Framework umfasst die folgenden Datenanbieter:  
  
-   Der <xref:System.Data.SqlClient?displayProperty=nameWithType> Anbieter ist die Standard .NET Framework Datenanbieter für SQL Server.  
  
-   Der <xref:System.Data.OleDb?displayProperty=nameWithType> Anbieter ist der .NET Framework Datenanbieter für OLE DB.  
  
-   Der <xref:System.Data.Odbc?displayProperty=nameWithType> Anbieter ist der .NET Framework Datenanbieter für ODBC.  
  
-   Der <xref:System.Data.OracleClient?displayProperty=nameWithType> Anbieter ist der .NET Framework Datenanbieter für Oracle.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaft wird nie auf den Namen eines nicht verwalteten ADO.NET-Anbieters festgelegt, `MSDAORA`z. b. Weitere Informationen finden Sie unter [Auswählen von Daten mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)Element.  
  
 Wenn Sie die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> -Eigenschaft ändern, <xref:System.Web.UI.IDataSource.DataSourceChanged> wird das-Ereignis ausgelöst und bewirkt, <xref:System.Web.UI.WebControls.SqlDataSource> dass alle Steuerelemente, die an gebunden sind, erneut gebunden werden.  
  
 Eine Liste der verfügbaren Anbieter wird im `DbProviderFactories` -unter Abschnitt `system.data` des-Abschnitts der Datei "Machine. config" angegeben.  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Der erste Code veranschaulicht, wie eine Verbindung mit einer SQL Server-Datenbank mithilfe der Standard .NET Framework Datenanbieter für SQL Server <xref:System.Web.UI.WebControls.SqlDataSource> für das- <xref:System.Data.SqlClient?displayProperty=nameWithType>Steuerelement, der hergestellt wird. Im zweiten Codebeispiel wird veranschaulicht, wie eine Verbindung mit einer ODBC-Datenbank mithilfe der .NET Framework Datenanbieter für ODBC, dem <xref:System.Data.Odbc?displayProperty=nameWithType>hergestellt wird.  
  
 Im folgenden Codebeispiel <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Data.SqlClient?displayProperty=nameWithType>wird veranschaulicht, wie mit dem Standarddaten Anbieter für das-Steuerelement eine Verbindung mit einer SQL Server-Datenbank hergestellt wird. Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Eigenschaft nicht explizit festgelegt wird, wird der Standardanbieter verwendet. Die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft ist Anbieter spezifisch.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 Das folgende Codebeispiel, das funktionell identisch mit dem vorangehenden Codebeispiel ist, veranschaulicht das Herstellen einer Verbindung mit einer ODBC-Datenbank mithilfe der .NET Framework Datenanbieter für ODBC <xref:System.Data.Odbc?displayProperty=nameWithType>, der. Die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft wird auf den Namen eines ODBC-Datenquellen namens (DSN) festgelegt, der verwendet wird, um eine Verbindung mit der ODBC-Datenbank herzustellen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Speichert den aktuellen Ansichtszustand des <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelements.</summary>
        <returns>Ein Objekt, das den gespeicherten Zustand von <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> enthält.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Ein <see cref="T:System.Web.UI.DataSourceSelectArguments" />-Objekt, das zum Anfordern von Datenvorgängen verwendet wird, die über allgemeine Vorgänge zum Datenabruf hinausgehen.</param>
        <summary>Ruft Daten aus der zugrunde liegenden Datenbank mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />-SQL-Zeichenfolge und aller Parameter in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />-Auflistung ab.</summary>
        <returns>Eine <see cref="T:System.Collections.IEnumerable" />-Liste mit Datenzeilen.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode wird automatisch während der <xref:System.Web.UI.Control.PreRender> Phase des Lebenszyklus der Seite aufgerufen. Sie wird durch Daten gebundene Steuerelemente aufgerufen, die über die <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> -Eigenschaft an ein-Steuerelement angefügt wurden.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode gibt ein <xref:System.Data.DataView> -Objekt zurück <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> , wenn die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> auf den-Wert festgelegt ist. Die <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Methode gibt ein <xref:System.Data.IDataReader> -Objekt zurück <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> , wenn die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> auf den-Wert festgelegt ist. Schließen Sie <xref:System.Data.IDataReader> das Objekt, wenn Sie mit dem Lesen der Daten fertig sind.  
  
 Bevor der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor dem <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Vorgang beliebige Verarbeitungsvorgänge auszuführen.  
  
 Nachdem der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Selected> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> festgelegt ist und Caching aktiviert ist <xref:System.Web.UI.WebControls.SqlDataSource> , ruft das-Objektdaten aus ab und speichert Daten im Cache <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> während des Vorgangs. Der Cache wird basierend auf dem zwischen Speicherungs Verhalten, das durch die Kombination der <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> -Eigenschaft und der- <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Eigenschaft angegeben wird, erstellt, verworfen oder aktualisiert.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Datenabruf durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> -Eigenschaft auf <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> festgelegt ist <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> und eine-Eigenschaft angegeben wurde, wird <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> der Filter Ausdruck mit allen angegebenen Eigenschaften ausgewertet, und der resultierende Filter wird auf die Liste der Daten während des <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>Vorgang.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> die-Methode <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist. Um einen Datenabruf Vorgang auszuführen, erstellt <xref:System.Web.UI.WebControls.SqlDataSourceView> das ein <xref:System.Data.Common.DbCommand> -Objekt mithilfe des <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Texts und der zugehörigen <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Werte und führt dann das <xref:System.Data.Common.DbCommand> -Objekt für die zugrunde liegende Datenbank aus.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 In den folgenden Beispielen wird gezeigt, wie die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode Programm gesteuert aufgerufen und Werte basierend auf dem Ergebnis der Abfrage festgelegt werden. Das folgende Beispiel zeigt den deklarativen Code für die websteuer Elemente.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 Im folgenden Beispiel wird gezeigt, wie die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode Programm gesteuert aufgerufen wird. Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement gibt eine ganze Zahl zurück. Der Wert der ganzen Zahl wird verwendet, um den Text eines <xref:System.Web.UI.WebControls.Label> -Steuer Elements festzulegen und zu bestimmen, ob ein <xref:System.Web.UI.WebControls.HyperLink> -Steuerelement angezeigt werden soll.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekt kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zum Abrufen von Daten aus der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge oder der Name einer gespeicherten Prozedur mit der die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> Daten abruft.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> -Eigenschaft stellt eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur dar und wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode verwendet, um Daten aus einer SQL Server Datenbank abzurufen. Wenn Sie im SELECT-Befehl ein Sternchen (*) verwenden, um alle Spalten auszuwählen, und wenn Sie die automatische Codegenerierung verwenden, um Aktualisierungs-oder Löschvorgänge auszuführen, stellen Sie sicher, dass keine Spalten Leerzeichen enthalten.  
  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der-Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`der Platzhalter des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Bei <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> der-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Aus Sicherheitsgründen wird die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> -Eigenschaft nicht im Ansichts Zustand gespeichert. Da es möglich ist, den Inhalt des Ansichts Zustands auf dem Client zu decodieren, kann das Speichern sensibler Informationen über die Datenbankstruktur im Ansichts Zustand zu einem Sicherheitsrisiko bei der Offenlegung von Informationen führen.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf eine einfache SQL-Abfrage festgelegt wird, um Daten aus einer ODBC-kompatiblen Datenbank abzurufen <xref:System.Web.UI.WebControls.GridView> und in einem-Steuerelement anzuzeigen. Im zweiten Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur und die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> -Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> -Wert festgelegt wird, um Daten aus einer Microsoft SQL Server Datenbank abzurufen <xref:System.Web.UI.WebControls.DropDownList> und in einem-Steuerelement anzuzeigen.  
  
 In beiden Beispielen muss die <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> -Methode nicht explizit aufgerufen werden, da die Daten gebundenen Steuerelemente, die über die <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> -Eigenschaft an das Datenquellen Steuerelement angefügt werden, <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> die-Methode automatisch während des <xref:System.Web.UI.Control.PreRender> Phase:  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf eine einfache SQL-Abfrage festgelegt wird, um Daten aus einer ODBC-kompatiblen Datenbank abzurufen <xref:System.Web.UI.WebControls.GridView> und in einem-Steuerelement anzuzeigen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur und die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> -Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> -Wert festgelegt wird, um Daten aus einer SQL Server Datenbank abzurufen <xref:System.Web.UI.WebControls.DropDownList> und in einem-Steuerelement anzuzeigen. Bei <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> der-Eigenschaft kann es sich um eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">Verwenden von Parametern mit dem SqlDataSource-Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />-Eigenschaft eine SQL-Abfrage oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie der <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Text auf den Namen einer gespeicherten Prozedur und die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> -Eigenschaft auf den <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> -Wert festgelegt wird, um Daten aus einer Microsoft SQL Server Datenbank abzurufen und in einem <xref:System.Web.UI.WebControls.DropDownList> Steuerelement.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Datenabrufvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Selected> das-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Datenabruf Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Datenabrufvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> das-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um <xref:System.Web.UI.WebControls.SqlDataSource> die Parameterwerte zu ändern, bevor das-Steuerelement den Select-Vorgang ausführt. Die SELECT-Argumente sind in dem <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />-Eigenschaft des dem <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Objekts verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> -Eigenschaft eine parametrisierte SQL-Abfrage enthält <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> , enthält die <xref:System.Web.UI.WebControls.Parameter> -Auflistung alle-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Abhängig vom ADO.NET-Anbieter kann die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Auflistung von Bedeutung sein. Die <xref:System.Data.OleDb?displayProperty=nameWithType> - <xref:System.Data.Odbc?displayProperty=nameWithType> und-Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType> -Anbieter, der der standardmäßige ADO.NET-Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> für das-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> -Eigenschaft ab <xref:System.Web.UI.WebControls.SqlDataSourceView> , die im-Objekt enthalten ist, das <xref:System.Web.UI.WebControls.SqlDataSource> dem-Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten aus der Northwind-Datenbank in Microsoft SQL Server abgerufen werden <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> , indem die-Eigenschaft auf eine SQL-Abfrage festgelegt wird. Die SQL-Abfrage ist parametrisiert, und der Platzhalter <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> in der-Eigenschaft wird <xref:System.Web.UI.WebControls.ControlParameter> mit dem-Objekt verglichen, <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> das der Auflistung hinzugefügt wird. Das <xref:System.Web.UI.WebControls.DropDownList> -Steuerelement, <xref:System.Web.UI.WebControls.ControlParameter> an das das-Steuerelement gebunden ist, fungiert als Filter für das <xref:System.Web.UI.WebControls.ListBox> , was im-Steuerelement angezeigt wird.  
  
 Informationen zu anderen Typen von Parametern, die Sie verwenden können, <xref:System.Web.UI.WebControls.Parameter> finden Sie in der Übersicht über die-Klasse.  
  
> [!NOTE]
>  Da der-Parameter in einer WHERE-Klausel verwendet wird, ist die <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Verwendung der-Eigenschaft im Codebeispiel funktionell äquivalent zur Verwendung <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> der <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> -Eigenschaft und der-Eigenschaft.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines Parameters für eine gespeicherte Prozedur ab, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist, oder legt diesen Namen fest.</summary>
        <value>Der Name eines Parameters für eine gespeicherte Prozedur, mit der abgerufene Daten sortiert werden, sofern der Abruf mit einer gespeicherten Prozedur erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> -Eigenschaft wird nur ausgewertet, wenn der SQL-Befehl, der <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> in der-Eigenschaft enthalten ist, der Name einer gespeicherten Prozedur ist. Wenn in diesem Fall die <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> -Eigenschaft festgelegt wird, enthält Sie den Namen eines Parameters, der zum Sortieren der Ergebnisse der gespeicherten Prozedur verwendet wird.  
  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> -Eigenschaft festgelegt ist, wird Sie der <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> -Eigenschaft vorangestellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine durch Semikolons getrennte Zeichenfolge ab, die die für die Microsoft SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt, oder legt diese fest.</summary>
        <value>Eine Zeichenfolge, die die für die SQL Server-Cacheabhängigkeit zu verwendenden Datenbanken und Tabellen angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement unterstützt eine optionale Ablauf Richtlinie <xref:System.Web.Caching.SqlCacheDependency> , die auf dem-Objekt für den Daten Cache basiert (der Dienst muss für den Datenbankserver konfiguriert werden).  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Zeichenfolge identifiziert Datenbanken und Tabellen entsprechend dem gleichen Format, das von der `@ Page` -Direktive verwendet wird, wobei der erste Teil der Zeichenfolge eine Verbindungs Zeichenfolge zu einer Microsoft SQL Server Datenbank ist, gefolgt von einem Doppelpunkt Trennzeichen und schließlich der Name der Datenbanktabelle (z `"connectionstring1:table1"`. b.). Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Eigenschaft von mehr als einer Tabelle abhängt, werden die Paare der Verbindungs Zeichenfolge und der Tabellennamen durch Semikolons ( `"connectionstring1:table1";connectionstring2:table2"`z. b.) getrennt.  
  
> [!IMPORTANT]
>  Wenn Sie einen Client Identitätswechsel unter der Microsoft Windows-Authentifizierung verwenden, werden die Daten zwischengespeichert, wenn der erste Benutzer auf die Daten zugreift. Wenn ein anderer Benutzer die gleichen Daten anfordert, werden die Daten aus dem Cache abgerufen. Die Daten werden nicht durch einen weiteren Daten Bank Abruf abgerufen, um den Zugriff des Benutzers auf die Daten zu überprüfen. Wenn Sie davon ausgehen, dass mehr als ein Benutzer auf die Daten zugreifen muss und jeder Abruf der Daten durch die Sicherheits Konfigurationen für die Datenbank überprüft werden soll, sollten Sie die Zwischenspeicherung nicht verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine SQL Server Cache Abhängigkeit erstellt und die <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource> eines-Steuer Elements festgelegt wird. In diesem Beispiel wird die Datenbank alle 120 Sekunden abgerufen. Wenn sich die Daten in der Tabelle Northwind Traders Employees während dieser Zeit ändern, werden alle Daten, die vom <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zwischengespeichert und <xref:System.Web.UI.WebControls.GridView> vom- <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement angezeigt werden, beim nächsten Abruf der Datenbank vom-Steuerelement aktualisiert.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verfolgt Änderungen des Ansichtszustands für das <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement, sodass die Änderungen im <see cref="T:System.Web.UI.StateBag" />-Objekt für das Steuerelement gespeichert werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> -Methode wird überschrieben, um den Startpunkt zu markieren, um mit dem Nachverfolgen und Speichern von Änderungen am Steuerelement als Teil des Ansichts Zustands des Steuer Elements zu beginnen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Führt mithilfe der <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />-SQL-Zeichenfolge und allen Parametern, die in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />-Auflistung vorhanden sind, einen Aktualisierungsvorgang aus.</summary>
        <returns>Ein Wert, der die Anzahl der aktualisierten Zeilen in der zugrunde liegenden Datenbank darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> -Methode wird automatisch von den <xref:System.Web.UI.WebControls.GridView>Steuer <xref:System.Web.UI.WebControls.DetailsView>Elementen, <xref:System.Web.UI.WebControls.FormView> und während des Postbacks aufgerufen, wenn die Daten geändert wurden. Bei Daten, die in anderen Steuerelementen geändert wurden, <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> kann die-Methode während des <xref:System.Windows.Forms.Form.Load> -Ereignisses explizit für Postbacks aufgerufen werden.  
  
 Bevor der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> -Vorgang ausgeführt wird, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Updating> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um die Werte der Parameter zu überprüfen und vor einem <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Vorgang eine Vorverarbeitung auszuführen.  
  
 Nachdem der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Vorgang abgeschlossen wurde, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> wird die-Methode aufgerufen, <xref:System.Web.UI.WebControls.SqlDataSource.Updated> um das-Ereignis zu erhöhen. Sie können dieses Ereignis behandeln, um alle Rückgabewerte und Fehlercodes zu überprüfen und Nachbearbeitung auszuführen.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> -Methode delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> die-Methode <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist. Zum Ausführen eines Aktualisierungs Vorgangs erstellt <xref:System.Web.UI.WebControls.SqlDataSourceView> das ein <xref:System.Data.Common.DbCommand> -Objekt mit <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> dem Text und den <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> zugehörigen Eigenschaften und führt dann das <xref:System.Data.Common.DbCommand> -Objekt für die zugrunde liegende Datenbank aus.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Updating> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> Steuerelement zum Anzeigen von Daten <xref:System.Web.UI.WebControls.DropDownList> in einem Steuerelement und zum Aktualisieren von Daten verwendet wird, wenn auf die Schaltfläche **senden** geklickt wird Im zweiten Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer Microsoft SQL Server-Datenbank <xref:System.Web.UI.WebControls.DropDownList> in einem-Steuerelement abgerufen werden <xref:System.Web.UI.WebControls.TextBox> , und den Datensatz mit einem-Steuerelement aktualisieren.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement verwendet wird, <xref:System.Web.UI.WebControls.DropDownList> um Daten in einem Steuerelement anzuzeigen und Daten zu aktualisieren, wenn auf die Schaltfläche **senden** geklickt wird Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft wird mit einer parametrisierten SQL-Anweisung festgelegt <xref:System.Web.UI.WebControls.ControlParameter> , und der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> -Auflistung werden zwei Parameter hinzugefügt. Wenn Sie **** auf die Schaltfläche "senden <xref:System.Web.UI.WebControls.Button.OnClick%2A> " klicken, wird das Ereignis <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> behandelt, um die Methode explizit aufzurufen.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer SQL Server-Datenbank <xref:System.Web.UI.WebControls.DropDownList> in einem-Steuerelement abgerufen werden <xref:System.Web.UI.WebControls.TextBox> , und den Datensatz mit einem-Steuerelement aktualisieren. Das Beispiel zeigt, wie Sie mithilfe eines <xref:System.Data.Common.DbTransaction> -Objekts einen Transaktionskontext hinzufügen können <xref:System.Web.UI.WebControls.SqlDataSource> , wenn Sie das-Steuerelement zum Aktualisieren von Daten verwenden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> kann keine Verbindung mit der zugrunde liegenden Datenquelle herstellen.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die SQL-Zeichenfolge ab, die vom <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelement zum Aktualisieren von Daten in der zugrunde liegenden Datenbank verwendet wird, oder legt diese Zeichenfolge fest.</summary>
        <value>Eine SQL-Zeichenfolge, die von der <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> zum Aktualisieren von Daten verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt eine SQL-Abfrage oder den Namen einer gespeicherten Prozedur dar und wird von der <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> -Methode verwendet. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>  
  
 Da die jeweiligen Datenbankprodukte verschiedene SQL-Varianten verwenden, hängt die Syntax der SQL-Zeichenfolge vom derzeit verwendeten ADO.NET-Anbieter ab, der durch die <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>-Eigenschaft identifiziert wird. Wenn die SQL-Zeichenfolge eine parametrisierte Abfrage oder ein parametrisierter Befehl ist, hängt der Platzhalter des Parameters ebenfalls vom verwendeten ADO.NET-Anbieter ab. Wenn der Anbieter <xref:System.Data.SqlClient?displayProperty=nameWithType>z. b. der-Standardanbieter für die <xref:System.Web.UI.WebControls.SqlDataSource> -Klasse ist, ist `'@parameterName'`der Platzhalter des-Parameters. Wenn der Anbieter jedoch auf <xref:System.Data.Odbc?displayProperty=nameWithType> oder <xref:System.Data.OleDb?displayProperty=nameWithType>festgelegt ist, ist `'?'`der Platzhalter des-Parameters. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Bei <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> der-Eigenschaft kann es sich um eine SQL-Zeichenfolge oder den Namen einer gespeicherten Prozedur handeln, wenn die Datenquelle gespeicherte Prozeduren unterstützt.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Aus Sicherheitsgründen wird die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft nicht im Ansichts Zustand gespeichert. Da es möglich ist, den Inhalt des Ansichts Zustands auf dem Client zu decodieren, kann das Speichern sensibler Informationen über die Datenbankstruktur im Ansichts Zustand zu einem Sicherheitsrisiko bei der Offenlegung von Informationen führen.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Dieser Abschnitt enthält zwei Codebeispiele. Im ersten Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements festgelegt und Daten in einer Microsoft SQL Server <xref:System.Web.UI.WebControls.GridView> -Datenbank mithilfe des-Steuer Elements aktualisiert werden. Im zweiten Codebeispiel wird veranschaulicht, wie Daten in einer ODBC-Datenbank mithilfe <xref:System.Web.UI.WebControls.GridView> des-Steuer Elements aktualisiert werden.  
  
 Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSource> des-Steuer Elements festgelegt und Daten in einer SQL Server <xref:System.Web.UI.WebControls.GridView> -Datenbank mithilfe des-Steuer Elements aktualisiert werden. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> <xref:System.Web.UI.WebControls.BoundField> <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> **** <xref:System.Web.UI.WebControls.GridView> Füllt automatisch die-Auflistung auf, leitet die Parameter aus den-Objekten ab und ruft die-Methode auf, wenn der Aktualisierungs Link für die bearbeitet ausgewählt ist. <xref:System.Web.UI.WebControls.GridView> Dieses Beispiel enthält auch einige Nachbearbeitung: Nachdem ein Datensatz aktualisiert wurde, wird eine e-Mail-Benachrichtigung gesendet.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 Das folgende Codebeispiel, das funktionell mit dem vorangehenden Codebeispiel identisch ist, veranschaulicht, wie Daten in einer ODBC-Datenbank mithilfe <xref:System.Web.UI.WebControls.GridView> des-Steuer Elements aktualisiert werden. Der <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> wird auf den ADO.NET-Anbieter für ODBC festgelegt <xref:System.Data.Odbc?displayProperty=nameWithType>, und die <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> -Eigenschaft wird auf den Namen eines ODBC-Datenquellen namens (DSN) festgelegt.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Text in der <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />-Eigenschaft eine SQL-Anweisung oder der Name einer gespeicherten Prozedur ist, oder legt diesen Wert fest.</summary>
        <value>Einer der <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />-Werte. Der Standardwert ist der <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />-Wert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> -Eigenschaft delegiert an <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> die-Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceView> des-Objekts, das dem <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement zugeordnet ist.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn ein Aktualisierungsvorgang abgeschlossen wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Updated> das-Ereignis, um die Werte der Ausgabeparameter zu überprüfen, nachdem ein Aktualisierungs Vorgang abgeschlossen wurde. Die Ausgabeparameter sind über das <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> -Objekt verfügbar, das dem Ereignis zugeordnet ist.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Daten angezeigt und aktualisiert werden, die aus einer ODBC-Datenbank <xref:System.Web.UI.WebControls.GridView> in einem-Steuerelement abgerufen werden. Nachdem ein Datensatz erfolgreich aktualisiert wurde, wird <xref:System.Web.UI.WebControls.SqlDataSource.Updated> das Ereignis von einem Ereignishandler behandelt, um einen nach Verarbeitungsschritt auszuführen, bei dem eine e-Mail-Benachrichtigung gesendet wird.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Parameterauflistung mit den Parametern ab, die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />-Eigenschaft des dem <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />-Steuerelement zugeordneten <see cref="T:System.Web.UI.WebControls.SqlDataSource" />-Steuerelements verwendet werden.</summary>
        <value>Eine <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, die die von der <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />-Eigenschaft verwendeten Parameter enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> -Eigenschaft eine parametrisierte SQL-Abfrage enthält <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> , enthält die <xref:System.Web.UI.WebControls.Parameter> -Auflistung alle-Objekte, die den Parameter Platzhaltern in der SQL-Zeichenfolge entsprechen.  
  
 Parameter Namen können von der <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> -Eigenschaft beeinflusst werden, insbesondere dann, wenn der Name einen Primärschlüssel identifiziert, z. b. einen Schlüssel, der mit der `DataKeyNames` -Eigenschaft des Daten gebundenen Steuer Elements angegeben wurde, <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> oder in DELETE-und Update-Szenarien, in denen die die-Eigenschaft wird auf <xref:System.Web.UI.ConflictOptions.CompareAllValues> den-Wert festgelegt `oldValues` , und ein Satz von wird an die entsprechende Daten Methode übermittelt. In diesem Fall wird die Format Zeichenfolge auf jeden Parameternamen in der `oldValues` Auflistung angewendet.  
  
 Die Reihenfolge der Parameter in der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung ist möglicherweise wichtig, abhängig vom ADO.NET-Anbieter. Die <xref:System.Data.OleDb?displayProperty=nameWithType> - <xref:System.Data.Odbc?displayProperty=nameWithType> und-Anbieter ordnen die Parameter in der Auflistung entsprechend der Reihenfolge zu, in der die Parameter in der parametrisierten SQL-Abfrage angezeigt werden. Der <xref:System.Data.SqlClient?displayProperty=nameWithType> -Anbieter, der der standardmäßige ADO.NET-Anbieter <xref:System.Web.UI.WebControls.SqlDataSource> für das-Steuerelement ist, ordnet die Parameter in der Auflistung zu, indem der Name des Parameters mit einem Platzhalter Alias in der SQL-Abfrage abgeglichen wird. Weitere Informationen über parametrisierte SQL-Abfragen und-Befehle finden [Sie unter Verwenden von Parametern mit dem SqlDataSource-Steuer](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)Element.  
  
 Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> -Eigenschaft ruft die <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> -Eigenschaft ab <xref:System.Web.UI.WebControls.SqlDataSourceView> , die im-Objekt enthalten ist, das <xref:System.Web.UI.WebControls.SqlDataSource> dem-Steuerelement zugeordnet ist.  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie ein <xref:System.Web.UI.WebControls.SqlDataSource> -Steuerelement verwendet wird, <xref:System.Web.UI.WebControls.DropDownList> um Daten in einem Steuerelement anzuzeigen und Daten zu aktualisieren, wenn auf die Schaltfläche **senden** geklickt wird Die <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> wird mit einer parametrisierten SQL-Anweisung festgelegt <xref:System.Web.UI.WebControls.ControlParameter> , und der <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Auflistung werden zwei Parameter hinzugefügt. Wenn Sie **** auf die Schaltfläche "senden <xref:System.Web.UI.WebControls.Button.OnClick%2A> " klicken, wird das Ereignis <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> behandelt, um die Methode explizit aufzurufen.  
  
> [!IMPORTANT]
>  Dieses Beispiel enthält ein Textfeld, das Benutzereingaben akzeptiert. Dies ist eine potenzielle Sicherheitsbedrohung, und Werte werden ohne Validierung in Parameter eingefügt, was auch eine potenzielle Sicherheitsbedrohung darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt vor einem Aktualisierungsvorgang ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Behandeln Sie <xref:System.Web.UI.WebControls.SqlDataSource.Updating> das-Ereignis, um zusätzliche Initialisierungs Vorgänge auszuführen, die für Ihre Anwendung spezifisch sind, um die Werte von Parametern zu überprüfen oder um <xref:System.Web.UI.WebControls.SqlDataSource> die Parameterwerte zu ändern, bevor das-Steuerelement den Aktualisierungs Vorgang ausführt. Die Verbindung mit der zugrunde liegenden Datenquelle ist noch nicht geöffnet, wenn der Ereignishandlerdelegat aufgerufen wird. Daher können Sie <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> den Daten Bank Vorgang nicht direkt abbrechen, indem Sie die <xref:System.Data.Common.DbCommand.Cancel%2A> - <xref:System.Data.Common.DbCommand> Methode für das-Objekt aufrufen <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> , das durch das-Objekt verfügbar gemacht wird. Sie können den Daten Bank Vorgang jedoch abbrechen, indem Sie die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> -Eigenschaft <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> von auf `true`festlegen.  
  
 Weitere Informationen zum Behandeln von Ereignissen finden Sie unter [behandeln und Auslösen von Ereignissen](~/docs/standard/events/index.md).  
  
> [!IMPORTANT]
>  Werte werden ohne Validierung in Parameter eingefügt, was ein potenzielles Sicherheitsrisiko darstellt. Verwenden Sie <xref:System.Web.UI.WebControls.SqlDataSource.Updating> das-Ereignis, um Parameterwerte vor dem Ausführen der Abfrage zu überprüfen. Weitere Informationen finden Sie unter [Übersicht über Skriptangriffe](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie Sie Daten anzeigen, die aus einer Microsoft SQL Server-Datenbank <xref:System.Web.UI.WebControls.DropDownList> in einem-Steuerelement abgerufen werden <xref:System.Web.UI.WebControls.TextBox> , und den Datensatz mit einem-Steuerelement aktualisieren. Das Beispiel zeigt, wie Sie mithilfe eines <xref:System.Data.Common.DbTransaction> -Objekts einen Transaktionskontext hinzufügen können <xref:System.Web.UI.WebControls.SqlDataSource> , wenn Sie das-Steuerelement zum Aktualisieren von Daten verwenden.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">Datengebundene Webserversteuerelemente</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">Übersicht über das SqlDataSource-Webserver Steuerelement</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET Seiten Lebenszyklus (Übersicht)</related>
      </Docs>
    </Member>
  </Members>
</Type>
