<Type Name="IsolatedStorageFile" FullName="System.IO.IsolatedStorage.IsolatedStorageFile">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9fce2a24bdba71b171b57bfe2a14d7b78672e4aa" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30420964" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class IsolatedStorageFile : System.IO.IsolatedStorage.IsolatedStorage, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit IsolatedStorageFile extends System.IO.IsolatedStorage.IsolatedStorage implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IO.IsolatedStorage.IsolatedStorageFile" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class IsolatedStorageFile&#xA;Inherits IsolatedStorage&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class IsolatedStorageFile sealed : System::IO::IsolatedStorage::IsolatedStorage, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.IsolatedStorage.IsolatedStorage</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Bereich des isolierten Speicherbereichs dar, der Dateien und Verzeichnisse enthält.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Objekt entspricht einer bestimmten isolierten Speicherbereichs, Dateien, in denen dargestellt, indem <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Objekte vorhanden sind. Anwendungen können isolierte Speicherung verwenden, um Daten in ihren eigenen isolierten Teil im Dateisystem zu speichern, ohne einen bestimmten Pfad innerhalb des Dateisystems angeben zu müssen. Da isolierte Speicher auf bestimmte Assemblys beschränkt werden, die meisten anderen verwalteter Code wird möglicherweise nicht für den Code Datenzugriff (hochgradig vertrauenswürdig verwalteten Code und Verwaltungstools können von anderen Assemblys auf Speicher zugreifen). Nicht verwalteter Code kann alle isolierten Speicher zugreifen.  
  
 Weitere Informationen finden Sie unter [isolierten Speicher](~/docs/standard/io/isolated-storage.md).  
  
 Dieser Typ implementiert die <xref:System.IDisposable> Schnittstelle. Wenn Sie mithilfe des Typs abgeschlossen haben, sollten Sie es entweder direkt oder indirekt freigeben. Aufrufen, um den Typ direkt zu verwerfen, dessen <xref:System.IDisposable.Dispose%2A> Methode in einer `try` / `catch` Block. Um es indirekt freizugeben, verwenden Sie ein Sprachkonstrukt z. B. `using` (in c#) oder `Using` (in Visual Basic). Weitere Informationen finden Sie im Abschnitt "Verwenden eines Objekts, implementiert IDisposable" in der <xref:System.IDisposable> Thema zur Schnittstelle.  
  
> [!IMPORTANT]
>  Isolierte Speicherung ist nicht für [!INCLUDE[win8_appname_long](~/includes/win8-appname-long-md.md)]-Apps verfügbar. Verwenden Sie stattdessen die zum Speichern von lokalen Daten und Dateien in der `Windows.Storage`-API enthaltenen Anwendungsdatenklassen in den [!INCLUDE[wrt](~/includes/wrt-md.md)]-Namespaces. Weitere Informationen finden Sie im Windows Developer Center unter [Anwendungsdaten](http://go.microsoft.com/fwlink/?LinkId=229175) .  
  
   
  
## Examples  
 Das folgende Codebeispiel zeigt das Erstellen von Dateien und Verzeichnissen in einem isolierten Speicher. Zunächst wird ein Speicher, der vom Benutzer, Domäne und Assembly isoliert ist abgerufen und platziert die `isoStore` Variable. Die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory%2A> Methode wird aufgerufen, um das Erstellen von Verzeichnissen und zwei Instanzen der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> Klasse Dateien in diese Verzeichnisse erstellen.  
  
 [!code-csharp[Conceptual.IsolatedStorage#1](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.isolatedstorage/cs/source.cs#1)]
 [!code-vb[Conceptual.IsolatedStorage#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.isolatedstorage/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AvailableFreeSpace">
      <MemberSignature Language="C#" Value="public override long AvailableFreeSpace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 AvailableFreeSpace" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.AvailableFreeSpace" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AvailableFreeSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long AvailableFreeSpace { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den verfügbaren freien Speicherplatz für den isolierten Speicher darstellt.</summary>
        <value>Der verfügbare freie Speicherplatz für isolierten Speicher in Bytes.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wird geschlossen.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Schließt einen Speicher, der zuvor mit <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)" />, <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" /> oder <see cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" /> geöffnet wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Codebeispiel zeigt, wie Sie die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.Close%2A>-Methode verwenden. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#10)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#10)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Kopiert eine vorhandene Datei in eine neue Datei.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFile(string sourceFileName, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Der Name der zu kopierenden Datei.</param>
        <param name="destinationFileName">Der Name der Zieldatei. Dies darf kein Verzeichnis und keine vorhandene Datei sein.</param>
        <summary>Kopiert eine vorhandene Datei in eine neue Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceFileName` und `destinationFileName` müssen andere Dateinamen angeben. Verwenden der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile%28System.String%2CSystem.String%2CSystem.Boolean%29?displayProperty=nameWithType> -methodenüberladung, um eine vorhandene Datei überschrieben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.  
  
 - oder -   
  
 <paramref name="destinationFileName" /> ist vorhanden.  
  
 - oder -   
  
 Ein E/A-Fehler ist aufgetreten.</exception>
      </Docs>
    </Member>
    <Member MemberName="CopyFile">
      <MemberSignature Language="C#" Value="public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyFile(string sourceFileName, string destinationFileName, bool overwrite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.CopyFile(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyFile (sourceFileName As String, destinationFileName As String, overwrite As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyFile(System::String ^ sourceFileName, System::String ^ destinationFileName, bool overwrite);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
        <Parameter Name="overwrite" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Der Name der zu kopierenden Datei.</param>
        <param name="destinationFileName">Der Name der Zieldatei. Dabei darf es sich nicht um ein Verzeichnis handeln.</param>
        <param name="overwrite">
          <see langword="true" />, wenn die Zieldatei überschrieben werden kann, andernfalls <see langword="false" />.</param>
        <summary>Kopiert eine vorhandene Datei in eine neue Datei. Optional wird eine vorhandene Datei überschrieben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceFileName` und `destinationFileName` können den gleichen Namen haben, wenn `overwrite` ist `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.  
  
 - oder -   
  
 Ein E/A-Fehler ist aufgetreten.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateDirectory">
      <MemberSignature Language="C#" Value="public void CreateDirectory (string dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CreateDirectory(string dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CreateDirectory (dir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CreateDirectory(System::String ^ dir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dir">Der relative Pfad des Verzeichnisses, das im Gültigkeitsbereich des isolierten Speichers erstellt werden soll.</param>
        <summary>Erstellt ein Verzeichnis im Gültigkeitsbereich des isolierten Speichers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das erstellte Verzeichnis enthält anfänglich keine Dateien. Wenn das Verzeichnis bereits vorhanden ist, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory%2A> Methodenrückgabe ohne ein neues Verzeichnis erstellen. Die [Vorgehensweise: Erstellen von Dateien und Verzeichnissen in isoliertem Speicher](~/docs/standard/io/how-to-create-files-and-directories-in-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory%2A> Methode  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CreateDirectory%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#7)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#7)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der aktuelle Code verfügt nicht über ausreichende Berechtigungen für das Erstellen eines Verzeichnisses für isolierte Speicher.</exception>
        <exception cref="T:System.ArgumentNullException">Der Verzeichnispfad ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für den Zugriff auf den Gültigkeitsbereich des isolierten Speichers.</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateFile">
      <MemberSignature Language="C#" Value="public System.IO.IsolatedStorage.IsolatedStorageFileStream CreateFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.IsolatedStorage.IsolatedStorageFileStream CreateFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.CreateFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateFile (path As String) As IsolatedStorageFileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::IsolatedStorage::IsolatedStorageFileStream ^ CreateFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der relative Pfad der zu erstellenden Datei.</param>
        <summary>Erstellt eine Datei im isolierten Speicher.</summary>
        <returns>Eine neue Datei im isolierten Speicher.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.IO.IsolatedStorage.IsolatedStorageFile%29?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis in <paramref name="path" /> ist nicht vorhanden.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentSize">
      <MemberSignature Language="C#" Value="public override ulong CurrentSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 CurrentSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CurrentSize As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::UInt64 CurrentSize { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die aktuelle Größe des isolierten Speichers ab.</summary>
        <value>Die Gesamtzahl der Bytes im Speicher, die derzeit im Gültigkeitsbereich des isolierten Speichers verwendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die Gesamtverwendung aller Dateien und Verzeichnisse innerhalb des isolierten Speicherbereichs dar.  
  
 Die aktuelle Größe kann genau für Geschäfte bestimmt werden, das ein Roamingbenutzerprofil beteiligt sind. Da servergespeicherte Profile sind oft auf mehrere Clientcomputer zwischengespeichert und später mit einem Server synchronisiert, Kontingente nicht erzwungen werden, für diese Speicher und die aktuelle Größe wird nicht gemeldet.  
  
 Die [wie: Vorhersehen von Out-of-Space-Bedingungen bei isoliertem Speicher](~/docs/standard/io/how-to-anticipate-out-of-space-conditions-with-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.CurrentSize%2A> Eigenschaft. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#5)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#5)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft ist nicht verfügbar. Der aktuelle Speicher hat einen Roaming-Gültigkeitsbereich oder ist nicht geöffnet.</exception>
        <exception cref="T:System.ObjectDisposedException">Die aktuelle Objektgröße ist nicht definiert.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteDirectory">
      <MemberSignature Language="C#" Value="public void DeleteDirectory (string dir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteDirectory(string dir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteDirectory (dir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteDirectory(System::String ^ dir);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dir">Der relative Pfad des Verzeichnisses, das im Gültigkeitsbereich des isolierten Speichers gelöscht werden soll.</param>
        <summary>Löscht ein Verzeichnis im Gültigkeitsbereich des isolierten Speichers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein Verzeichnis muss leer sein, bevor sie gelöscht werden. Das gelöschte Verzeichnis kann nicht wiederhergestellt werden, einmal gelöscht.  
  
 Die [Vorgehensweise: Löschen von Dateien und Verzeichnissen in isoliertem Speicher](~/docs/standard/io/how-to-delete-files-and-directories-in-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteDirectory%2A> Methode.  
  
   
  
## Examples  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#8)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#8)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Das Verzeichnis konnte nicht gelöscht werden.</exception>
        <exception cref="T:System.ArgumentNullException">Der Verzeichnispfad war <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für den Zugriff auf den Gültigkeitsbereich des isolierten Speichers.</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DeleteFile">
      <MemberSignature Language="C#" Value="public void DeleteFile (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DeleteFile(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DeleteFile (file As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DeleteFile(System::String ^ file);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file">Der relative Pfad der Datei, die im Gültigkeitsbereich des isolierten Speichers gelöscht werden soll.</param>
        <summary>Löscht eine Datei im Gültigkeitsbereich des isolierten Speichers.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die gelöschte Datei kann nicht wiederhergestellt werden, einmal gelöscht.  
  
 Die [Vorgehensweise: Löschen von Dateien und Verzeichnissen in isoliertem Speicher](~/docs/standard/io/how-to-delete-files-and-directories-in-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.DeleteFile%2A> Methode, um eine Anzahl von Dateien im isolierten Speicher zu löschen.  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#6)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#6)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Die Zieldatei ist offen, oder der Pfad ist falsch.</exception>
        <exception cref="T:System.ArgumentNullException">Der Dateipfad ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für den Zugriff auf Dateien im Gültigkeitsbereich isolierten Speichers.</permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DirectoryExists">
      <MemberSignature Language="C#" Value="public bool DirectoryExists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool DirectoryExists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.DirectoryExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DirectoryExists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool DirectoryExists(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der zu testende Pfad.</param>
        <summary>Bestimmt, ob der angegebene Pfad auf ein vorhandenes Verzeichnis im isolierten Speicher verweist.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="path" /> auf ein vorhandenes Verzeichnis im isolierten Speicher verweist und nicht <see langword="null" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wird geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle vom <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" /> verwendeten Ressourcen frei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie `Dispose` auf, wenn Sie <xref:System.IO.IsolatedStorage.IsolatedStorageFile> nicht mehr benötigen. Die `Dispose`-Methode bewirkt, dass <xref:System.IO.IsolatedStorage.IsolatedStorageFile> nicht mehr verwendet werden kann. Nach dem Aufruf `Dispose`, müssen Sie alle Verweise auf Freigeben der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> , damit der Garbage Collector den Arbeitsspeicher freigeben kann, <xref:System.IO.IsolatedStorage.IsolatedStorageFile> belegt wurde.  
  
> [!NOTE]
>  Rufen Sie immer Dispose auf, bevor Sie den letzten Verweis auf Freigeben der <xref:System.IO.IsolatedStorage.IsolatedStorageFile>. Andernfalls, die Ressourcen der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> ist mit bleiben reserviert, bis die Garbage Collection-Aufrufe der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream> des Objekts <xref:System.Object.Finalize%2A> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird eine isolierte Speicherdatei öffnet, verwendet, um Informationen in einen Stream schreiben, schließt die Datei und verwendet dann die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.Dispose%2A> Methode, um alle Ressourcen freizugeben.  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#10)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#10)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FileExists">
      <MemberSignature Language="C#" Value="public bool FileExists (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileExists(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.FileExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileExists (path As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileExists(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad und der Dateiname, die getestet werden sollen.</param>
        <summary>Bestimmt, ob der angegebene Pfad auf eine vorhandene Datei im isolierten Speicher verweist.</summary>
        <returns>
          <see langword="true" />, wenn <paramref name="path" /> auf eine vorhandene Datei im isolierten Speicher verweist und nicht <see langword="null" /> ist, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wird geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~IsolatedStorageFile ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!IsolatedStorageFile ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt einem Objekt Gelegenheit zu dem Versuch, Ressourcen freizugeben und andere Bereinigungen durchzuführen, bevor es von der Garbage Collection freigegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCreationTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetCreationTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetCreationTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetCreationTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCreationTime (path As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetCreationTime(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zur Datei oder zum Verzeichnis, für die bzw. für das die Informationen über Erstellungsdatum und -zeitpunkt abgerufen werden sollen.</param>
        <summary>Gibt das Erstellungsdatum und den Erstellungszeitpunkt der angegebenen Datei bzw. des angegebenen Verzeichnisses zurück.</summary>
        <returns>Das Erstellungsdatum und der Erstellungszeitpunkt für die angegebene Datei bzw. das angegebene Verzeichnis. Dieser Wert wird in Ortszeit angegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die vom Pfad beschriebene Datei nicht vorhanden ist, gibt diese Methode 0:00 Uhr, 1. Januar 1601 n. Chr. zurück. (C.E.) Coordinated Universal Time (UTC), in die lokale Zeit angepasst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), besteht nur aus Leerraum oder enthält mindestens eines der von der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode definierten ungültigen Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDirectoryNames">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Listet die Verzeichnisse am Stamm eines isolierten Speichers auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDirectoryNames">
      <MemberSignature Language="C#" Value="public string[] GetDirectoryNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDirectoryNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDirectoryNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Listet die Verzeichnisse am Stamm eines isolierten Speichers auf.</summary>
        <returns>Ein Array von relativen Pfaden der Verzeichnisse am Stamm des isolierten Speichers. Ein Array der Länge 0 (null) gibt an, dass keine Verzeichnisse am Stamm vorhanden sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames%28System.String%29?displayProperty=nameWithType> Methode mit "*" für das Suchmuster angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wird geschlossen.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Aufrufer verfügt nicht über die Berechtigung, Verzeichnisse aufzulisten.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Mindestens ein Verzeichnis wird nicht gefunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDirectoryNames">
      <MemberSignature Language="C#" Value="public string[] GetDirectoryNames (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetDirectoryNames(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDirectoryNames (searchPattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetDirectoryNames(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">Ein Suchmuster. Es werden Platzhalter sowohl für Einzelzeichen ("?") als auch für mehrere Zeichen ("*") unterstützt.</param>
        <summary>Listet die Verzeichnisse im Gültigkeitsbereich eines isolierten Speichers auf, die mit dem angegebenen Suchmuster übereinstimmen.</summary>
        <returns>Ein Array der relativen Pfade von Verzeichnissen im Gültigkeitsbereich des isolierten Speichers, die mit <paramref name="searchPattern" /> übereinstimmen. Ein Array der Länge 0 (null) gibt an, dass keine übereinstimmenden Verzeichnisse vorhanden sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Platzhalterzeichen muss nur in dem letzten Element einer `searchPattern`. Z. B. "directory1 / * usw.\*" eine gültige Suchzeichenfolge, ist aber "\*usw. \* /Verzeichnis" nicht.  
  
 Die `searchPattern` "Projekt\Daten *", erhalten alle Unterverzeichnisse von Projekt mit Daten im Gültigkeitsbereich isolierten Speichers. Die `searchPattern` "\*" gibt alle Verzeichnisse im Stammverzeichnis zurück. Vollständige Beschreibung der Zeichenfolge der Suchkriterien finden Sie unter der <xref:System.IO.Directory> Klasse.  
  
 Informationen zum Abrufen von Dateinamen, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames%2A> Methode.  
  
 Die [wie: Suchen von vorhandenen Dateien und Verzeichnissen in isoliertem Speicher](~/docs/standard/io/how-to-find-existing-files-and-directories-in-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#16)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#16)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wird geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.UnauthorizedAccessException">Aufrufer verfügt nicht über die Berechtigung, von <paramref name="searchPattern" /> aufgelöste Verzeichnisse aufzulisten.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis bzw. die Verzeichnisse, die von <paramref name="searchPattern" /> angegeben werden, werden nicht gefunden.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerator GetEnumerator (System.IO.IsolatedStorage.IsolatedStorageScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerator GetEnumerator(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator(System.IO.IsolatedStorage.IsolatedStorageScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEnumerator (scope As IsolatedStorageScope) As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerator ^ GetEnumerator(System::IO::IsolatedStorage::IsolatedStorageScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
      </Parameters>
      <Docs>
        <param name="scope">Stellt den <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" /> dar, für den isolierte Speicher zurückgegeben werden sollen. Es werden nur die <see langword="User" />-Kombinationen <see langword="User|Roaming" /> und <see langword="IsolatedStorageScope" /> unterstützt.</param>
        <summary>Ruft den Enumerator für die <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />-Speicher im Gültigkeitsbereich eines isolierten Speichers ab.</summary>
        <returns>Enumerator für die <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFile" />-Speicher im angegebenen Gültigkeitsbereich eines isolierten Speichers.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die [wie: Auflisten von Speichern für isolierten Speicher](~/docs/standard/io/how-to-enumerate-stores-for-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetEnumerator%2A> Methode.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFileNames">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Listet die Dateinamen am Stamm eines isolierten Speichers auf.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFileNames">
      <MemberSignature Language="C#" Value="public string[] GetFileNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetFileNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFileNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Listet die Dateinamen am Stamm eines isolierten Speichers auf.</summary>
        <returns>Ein Array von relativen Pfaden der Dateien am Stamm des isolierten Speichers.  Ein Array der Länge 0 (null) gibt an, dass keine Dateien am Stamm vorhanden sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames%28System.String%29?displayProperty=nameWithType> Methode mit "*" für das Suchmuster angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Dateipfade vom isolierten Speicherstamm können nicht bestimmt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetFileNames">
      <MemberSignature Language="C#" Value="public string[] GetFileNames (string searchPattern);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetFileNames(string searchPattern) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFileNames (searchPattern As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFileNames(System::String ^ searchPattern);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="searchPattern" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchPattern">Ein Suchmuster. Es werden Platzhalter sowohl für Einzelzeichen ("?") als auch für mehrere Zeichen ("*") unterstützt.</param>
        <summary>Ruft die Dateinamen ab, die einem Suchmuster entsprechen.</summary>
        <returns>Ein Array der relativen Pfade von Dateien im Gültigkeitsbereich des isolierten Speichers, die mit <paramref name="searchPattern" /> übereinstimmen. Ein Array der Länge 0 (null) gibt an, dass keine übereinstimmenden Dateien vorhanden sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `searchPattern` "Projekt\Daten * .txt", erhalten alle ".txt" Dateien mit Daten im Projektverzeichnis von des isolierten Speicherbereichs ab. Vollständige Beschreibung der Muster Suchzeichenfolgen finden Sie unter <xref:System.IO.Directory?displayProperty=nameWithType>.  
  
 Informationen zum Verzeichnisnamen suchen, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetDirectoryNames%2A> Methode.  
  
 Die [wie: Suchen von vorhandenen Dateien und Verzeichnissen in isoliertem Speicher](~/docs/standard/io/how-to-find-existing-files-and-directories-in-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames%2A> Methode.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetFileNames%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#16)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#16)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="searchPattern" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Der von <paramref name="searchPattern" /> angegebene Dateipfad kann nicht gefunden werden.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetLastAccessTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetLastAccessTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetLastAccessTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastAccessTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastAccessTime (path As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetLastAccessTime(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zur Datei oder zum Verzeichnis, für die bzw. für das die Informationen über Datum und Zeitpunkt des letzten Zugriffs abgerufen werden sollen.</param>
        <summary>Gibt das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
        <returns>Das Datum und die Uhrzeit des letzten Zugriffs auf die angegebene Datei bzw. das angegebene Verzeichnis. Dieser Wert wird in Ortszeit angegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Datei von beschrieben `path` ist nicht vorhanden, diese Methode gibt 0:00 Uhr, 1. Januar 1601 n. Chr. (C.E.) Coordinated Universal Time (UTC), in die lokale Zeit angepasst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), besteht nur aus Leerraum oder enthält mindestens eines der von der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode definierten ungültigen Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteTime">
      <MemberSignature Language="C#" Value="public DateTimeOffset GetLastWriteTime (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTimeOffset GetLastWriteTime(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetLastWriteTime(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastWriteTime (path As String) As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTimeOffset GetLastWriteTime(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zur Datei oder zum Verzeichnis, für die bzw. für das die Informationen über Datum und Zeitpunkt des letzten Schreibvorgangs abgerufen werden sollen.</param>
        <summary>Gibt das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis zurück.</summary>
        <returns>Das Datum und die Uhrzeit des letzten Schreibvorgangs in die angegebene Datei bzw. das angegebene Verzeichnis. Dieser Wert wird in Ortszeit angegeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Datei von beschrieben `path` ist nicht vorhanden, diese Methode gibt 0:00 Uhr, 1. Januar 1601 n. Chr. (C.E.) Coordinated Universal Time (UTC), in die lokale Zeit angepasst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist eine Zeichenfolge der Länge 0 (null), besteht nur aus Leerraum oder enthält mindestens eines der von der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode definierten ungültigen Zeichen.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetMachineStoreForApplication">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineStoreForApplication () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetMachineStoreForApplication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft computerbezogenen isolierten Speicher für die Identität der Anwendung des aufrufenden Codes ab.</summary>
        <returns>Ein Objekt, das dem Gültigkeitsbereich des isolierten Speichers entspricht, der auf der Identität der Anwendung des aufrufenden Codes basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Assemblys, die einer Anwendung zugeordnete verwenden denselben isolierten Speicher, bei Verwendung dieser Methode.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForApplication%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#18)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#18)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Die Anwendungsidentität des Aufrufers konnte nicht bestimmt werden.  
  
 - oder -   
  
 Die gewährte Berechtigung für die Anwendungsdomäne konnte nicht festgelegt werden.  
  
 - oder -   
  
 Ein isolierter Speicherort kann nicht initialisiert werden.</exception>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMachineStoreForAssembly">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineStoreForAssembly () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetMachineStoreForAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft computerbezogenen isolierten Speicher für die Identität der Assembly des aufrufenden Codes ab.</summary>
        <returns>Ein Objekt, das dem Gültigkeitsbereich des isolierten Speichers entspricht, der auf der Identität der Assembly des aufrufenden Codes basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Immer die gleiche Assembly in verschiedenen Anwendungen verwendet denselben isolierten Speicher, bei Verwendung dieser Methode.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForAssembly%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#19](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#19)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#19)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#19)]  
  
> [!NOTE]
>  Verschiedene Assemblys immer innerhalb der gleichen Anwendungsdomäne ausgeführt haben unterschiedliche isolierte Speicher.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.</exception>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMachineStoreForDomain">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetMachineStoreForDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMachineStoreForDomain () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetMachineStoreForDomain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft computerbezogenen isolierten Speicher für die Anwendungsdomänen- und Assemblyidentität ab.</summary>
        <returns>Ein Objekt, das dem <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" /> entspricht, der auf einer Kombination der Identitäten von Anwendungsdomäne und Assembly basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der gleiche Assemblycode verwendet verschiedene isolierter Speicher, wenn im Kontext der verschiedenen Anwendungen verwendet.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetMachineStoreForDomain%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#20](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#20)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#20](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#20)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#20](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#20)]  
  
 Verschiedene Assemblys immer innerhalb der gleichen Anwendungsdomäne ausgeführt haben unterschiedliche isolierte Speicher.  
  
> [!NOTE]
>  <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A> Gibt zurück, eine <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt ohne Kontingent an, wenn die Anwendungsdomäne, in dem die Assembly installiert ist, keine <xref:System.Security.Permissions.IsolatedStorageFilePermission>. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#10)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#10)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Fehler beim Öffnen des Speichers.  
  
 - oder -   
  
 Die angegebene Assembly verfügt nicht über ausreichende Berechtigungen für das Erstellen isolierter Speicher.  
  
 - oder -   
  
 Die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 Ein isolierter Speicherort kann nicht initialisiert werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPermission">
      <MemberSignature Language="C#" Value="protected override System.Security.Permissions.IsolatedStoragePermission GetPermission (System.Security.PermissionSet ps);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Security.Permissions.IsolatedStoragePermission GetPermission(class System.Security.PermissionSet ps) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetPermission(System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetPermission (ps As PermissionSet) As IsolatedStoragePermission" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Security::Permissions::IsolatedStoragePermission ^ GetPermission(System::Security::PermissionSet ^ ps);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Permissions.IsolatedStoragePermission</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ps" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="ps">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetStore">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft den isolierten Speicher ab, der der angegebenen Anwendungsdomäne, den Assemblybeweisobjekten und dem Gültigkeitsbereich des isolierten Speichers zugeordnet ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, object applicationIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetStore(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope, object applicationIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStore (scope As IsolatedStorageScope, applicationIdentity As Object) As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetStore(System::IO::IsolatedStorage::IsolatedStorageScope scope, System::Object ^ applicationIdentity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        <Parameter Name="applicationIdentity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der Enumerationswerte.</param>
        <param name="applicationIdentity">Ein Objekt, das den Beweis für die Identität der Anwendung enthält.</param>
        <summary>Ruft den isolierten Speicher ab, der der angegebenen Anwendungsidentität entspricht.</summary>
        <returns>Ein Objekt, das die Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wenn die `scope` Parameter ist <xref:System.IO.IsolatedStorage.IsolatedStorageScope.Application?displayProperty=nameWithType> , die die Anwendungsdomäne, in dem die Assembly installiert ist, hat aber keinen <xref:System.Security.Permissions.IsolatedStorageFilePermission>, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode zurückgegeben wird ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> Objekt ohne Kontingent. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="applicationIdentity" />-Identität wurde nicht übergeben.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scope" /> ist ungültig.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Enumerationswert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Application" />, aber die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da der <see cref="P:System.AppDomain.ActivationContext" /> für die aktuelle Anwendungsdomäne <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Domain" />, aber die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Assembly" />, aber die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      </Docs>
    </Member>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type applicationEvidenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetStore(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope, class System.Type applicationEvidenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStore (scope As IsolatedStorageScope, applicationEvidenceType As Type) As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetStore(System::IO::IsolatedStorage::IsolatedStorageScope scope, Type ^ applicationEvidenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        <Parameter Name="applicationEvidenceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der Enumerationswerte.</param>
        <param name="applicationEvidenceType">Ein Objekt, das die Anwendungsidentität enthält.</param>
        <summary>Ruft isolierten Speicher ab, der dem Isolationsbereich und dem Anwendungsidentitätsobjekt entspricht.</summary>
        <returns>Ein Objekt, das die Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wenn die `scope` Parameter ist <xref:System.IO.IsolatedStorage.IsolatedStorageScope.Application> , die die Anwendungsdomäne, in dem die Assembly installiert ist, hat aber keinen <xref:System.Security.Permissions.IsolatedStorageFilePermission>, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode zurückgegeben wird ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> Objekt ohne Kontingent. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="applicationEvidence" />-Identität wurde nicht übergeben.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scope" /> ist ungültig.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Enumerationswert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Application" />, aber die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da der <see cref="P:System.AppDomain.ActivationContext" /> für die aktuelle Anwendungsdomäne <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Domain" />, aber die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Assembly" />, aber die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      </Docs>
    </Member>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, object domainIdentity, object assemblyIdentity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetStore(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope, object domainIdentity, object assemblyIdentity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStore (scope As IsolatedStorageScope, domainIdentity As Object, assemblyIdentity As Object) As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetStore(System::IO::IsolatedStorage::IsolatedStorageScope scope, System::Object ^ domainIdentity, System::Object ^ assemblyIdentity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        <Parameter Name="domainIdentity" Type="System.Object" />
        <Parameter Name="assemblyIdentity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der Enumerationswerte.</param>
        <param name="domainIdentity">Ein Objekt, das den Beweis für die Identität der Anwendungsdomäne enthält.</param>
        <param name="assemblyIdentity">Ein Objekt, das den Beweis für die Identität der Codeassembly enthält.</param>
        <summary>Ruft den isolierten Speicher ab, der der angegebenen Anwendungsdomäne und den Assemblybeweisobjekten zugeordnet ist.</summary>
        <returns>Ein Objekt, das die Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Form der `GetStore` eignet sich am besten für administrative Code, der einen Speicher zu öffnen, als handele es sich um eine andere Assembly muss. Der Speicher wird für den bereitgestellten Beweisen und nicht für die derzeit ausgeführte Assembly geöffnet.  
  
> [!NOTE]
>  Wenn die `scope` Parameter ist <xref:System.IO.IsolatedStorage.IsolatedStorageScope.Domain> , die die Anwendungsdomäne, in dem die Assembly installiert ist, hat aber keinen <xref:System.Security.Permissions.IsolatedStorageFilePermission>, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode zurückgegeben wird ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> Objekt ohne Kontingent. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.ArgumentNullException">Weder <paramref name="domainIdentity" /> noch <paramref name="assemblyIdentity" /> wurde übergeben. Dies überprüft, ob der richtige Konstruktor verwendet wird.  
  
 - oder -   
  
 Entweder <paramref name="domainIdentity" /> oder <paramref name="assemblyIdentity" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scope" /> ist ungültig.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Enumerationswert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Application" />, aber die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da der <see cref="P:System.AppDomain.ActivationContext" /> für die aktuelle Anwendungsdomäne <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Domain" />, aber die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Assembly" />, aber die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      </Docs>
    </Member>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, Type domainEvidenceType, Type assemblyEvidenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetStore(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope, class System.Type domainEvidenceType, class System.Type assemblyEvidenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStore (scope As IsolatedStorageScope, domainEvidenceType As Type, assemblyEvidenceType As Type) As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetStore(System::IO::IsolatedStorage::IsolatedStorageScope scope, Type ^ domainEvidenceType, Type ^ assemblyEvidenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        <Parameter Name="domainEvidenceType" Type="System.Type" />
        <Parameter Name="assemblyEvidenceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der Enumerationswerte.</param>
        <param name="domainEvidenceType">Der Typ von <see cref="T:System.Security.Policy.Evidence" />, der aus der Liste von <see cref="T:System.Security.Policy.Evidence" /> in der Domäne der aufrufenden Anwendung ausgewählt werden kann. <see langword="null" /> ermöglicht dem <see cref="T:System.IO.IsolatedStorage.IsolatedStorage" />-Objekt das Auswählen des Beweises.</param>
        <param name="assemblyEvidenceType">Der Typ von <see cref="T:System.Security.Policy.Evidence" />, der aus der Liste von <see cref="T:System.Security.Policy.Evidence" /> in der Domäne der aufrufenden Anwendung ausgewählt werden kann. <see langword="null" /> ermöglicht dem <see cref="T:System.IO.IsolatedStorage.IsolatedStorage" />-Objekt das Auswählen des Beweises.</param>
        <summary>Ruft den isolierten Speicher entsprechend dem Gültigkeitsbereich des isolierten Speichers ab, wenn der Typ des Beweises der Anwendungsdomäne und der Assembly angegeben wird.</summary>
        <returns>Ein Objekt, das die Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die Überladung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> am wahrscheinlichsten von Anwendungscode aufgerufen werden.  
  
 Diese Überladung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> öffnet einen isolierten Speicher für die Beweistypen, die übergeben werden.  
  
> [!NOTE]
>  Wenn die `scope` Parameter ist <xref:System.IO.IsolatedStorage.IsolatedStorageScope.Domain> , die die Anwendungsdomäne, in dem die Assembly installiert ist, hat aber keinen <xref:System.Security.Permissions.IsolatedStorageFilePermission>, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode zurückgegeben wird ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> Objekt ohne Kontingent. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#15)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#15)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scope" /> ist ungültig.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der bereitgestellte Beweistyp fehlt in der Liste der Assemblybeweise.  
  
 - oder -   
  
 Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Enumerationswert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Application" />, aber die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da der <see cref="P:System.AppDomain.ActivationContext" /> für die aktuelle Anwendungsdomäne <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Domain" />, aber die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Assembly" />, aber die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      </Docs>
    </Member>
    <Member MemberName="GetStore">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetStore (System.IO.IsolatedStorage.IsolatedStorageScope scope, System.Security.Policy.Evidence domainEvidence, Type domainEvidenceType, System.Security.Policy.Evidence assemblyEvidence, Type assemblyEvidenceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetStore(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope, class System.Security.Policy.Evidence domainEvidence, class System.Type domainEvidenceType, class System.Security.Policy.Evidence assemblyEvidence, class System.Type assemblyEvidenceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore(System.IO.IsolatedStorage.IsolatedStorageScope,System.Security.Policy.Evidence,System.Type,System.Security.Policy.Evidence,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetStore (scope As IsolatedStorageScope, domainEvidence As Evidence, domainEvidenceType As Type, assemblyEvidence As Evidence, assemblyEvidenceType As Type) As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetStore(System::IO::IsolatedStorage::IsolatedStorageScope scope, System::Security::Policy::Evidence ^ domainEvidence, Type ^ domainEvidenceType, System::Security::Policy::Evidence ^ assemblyEvidence, Type ^ assemblyEvidenceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        <Parameter Name="domainEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="domainEvidenceType" Type="System.Type" />
        <Parameter Name="assemblyEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="assemblyEvidenceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der Enumerationswerte.</param>
        <param name="domainEvidence">Ein Objekt, das die Identität der Anwendungsdomäne enthält.</param>
        <param name="domainEvidenceType">Der Typ der Identität, der aus dem Beweis der Anwendungsdomäne ausgewählt werden soll.</param>
        <param name="assemblyEvidence">Ein Objekt, das die Identität der Codeassembly enthält.</param>
        <param name="assemblyEvidenceType">Der Typ der Identität, der aus dem Assemblybeweis für Anwendungscode ausgewählt werden soll.</param>
        <summary>Ruft den isolierten Speicher ab, der der angegebenen Anwendungsdomäne und den Assemblybeweisobjekten und -typen zugeordnet ist.</summary>
        <returns>Ein Objekt, das die Parameter darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Wenn die `scope` Parameter ist <xref:System.IO.IsolatedStorage.IsolatedStorageScope.Domain> , die die Anwendungsdomäne, in dem die Assembly installiert ist, hat aber keinen <xref:System.Security.Permissions.IsolatedStorageFilePermission>, die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetStore%2A> Methode zurückgegeben wird ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> Objekt ohne Kontingent. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel ruft Speicher basierend auf dem Verleger Beweis ab.  
  
 [!code-csharp[System.IO.IsolatedStorage.GetStore#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.GetStore/CS/source.cs#1)]
 [!code-vb[System.IO.IsolatedStorage.GetStore#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.GetStore/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.ArgumentNullException">Die <paramref name="domainEvidence" />-Identität oder die <paramref name="assemblyEvidence" />-Identität wurde nicht übergeben.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="scope" /> ist ungültig.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Enumerationswert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Application" />, aber die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da der <see cref="P:System.AppDomain.ActivationContext" /> für die aktuelle Anwendungsdomäne <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Domain" />, aber die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.  
  
 - oder -   
  
 <paramref name="scope" /> enthält den Wert <see cref="F:System.IO.IsolatedStorage.IsolatedStorageScope.Assembly" />, aber die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
        <altmember cref="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      </Docs>
    </Member>
    <Member MemberName="GetUserStoreForApplication">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserStoreForApplication () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetUserStoreForApplication();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft benutzerbezogenen isolierten Speicher für die Identität der Anwendung des aufrufenden Codes ab.</summary>
        <returns>Ein Objekt, das dem Gültigkeitsbereich des isolierten Speichers entspricht, der auf der Identität der Assembly des aufrufenden Codes basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Assemblys, die einer Anwendung zugeordnete verwenden denselben isolierten Speicher, bei Verwendung dieser Methode. Diese Methode kann nur verwendet werden, wenn die Anwendungsidentität - beispielsweise bestimmt werden kann bei die Anwendung, die über die ClickOnce-Bereitstellung veröffentlicht wird, oder eine Silverlight-basierte Anwendung ist verwendet werden. Wenn Sie versuchen, diese Methode außerhalb ein ClickOnce- oder ein Silverlight-basierten Anwendung verwenden, erhalten Sie eine <xref:System.IO.IsolatedStorage.IsolatedStorageException> Ausnahme, da die Identität des Aufrufers nicht bestimmt werden kann.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForApplication%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#21](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#21)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#21)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#21)]  
  
 In diesem Code wird die `applicationIdentity` -Parameter für `GetStore(IsolatedStorageScope scope, Object applicationIdentity)` ist `null`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 Die Anwendungsidentität des Aufrufers kann nicht bestimmt werden, da die <see cref="P:System.AppDomain.ActivationContext" />-Eigenschaft <see langword="null" /> zurückgegeben hat.  
  
 - oder -   
  
 Die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetUserStoreForAssembly">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserStoreForAssembly () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetUserStoreForAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft benutzerbezogenen isolierten Speicher für die Identität der Assembly des aufrufenden Codes ab.</summary>
        <returns>Ein Objekt, das dem Gültigkeitsbereich des isolierten Speichers entspricht, der auf der Identität der Assembly des aufrufenden Codes basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Immer die gleiche Assembly in verschiedenen Anwendungen verwendet denselben isolierten Speicher, bei Verwendung dieser Methode.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForAssembly%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#22](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#22)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#22)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#22)]  
  
> [!NOTE]
>  Verschiedene Assemblys immer innerhalb der gleichen Anwendungsdomäne ausgeführt haben unterschiedliche isolierte Speicher.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 Die Berechtigungen für die aufrufende Assembly können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AssemblyIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetUserStoreForDomain">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForDomain ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForDomain() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserStoreForDomain () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetUserStoreForDomain();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft benutzerbezogenen isolierten Speicher für die Anwendungsdomänen- und Assemblyidentität ab.</summary>
        <returns>Ein Objekt, das dem <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" /> entspricht, der auf einer Kombination der Identitäten von Anwendungsdomäne und Assembly basiert.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der gleiche Assemblycode verwendet verschiedene isolierter Speicher, wenn im Kontext der verschiedenen Anwendungen verwendet.  
  
 <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A> ist funktionell gleichwertig mit den folgenden Code:  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#23](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/remarks.cpp#23)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/remarks.cs#23)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/remarks.vb#23)]  
  
 Verschiedene Assemblys immer innerhalb der gleichen Anwendungsdomäne ausgeführt haben unterschiedliche isolierte Speicher.  
  
> [!NOTE]
>  <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A> Gibt zurück, eine <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt ohne ein Kontingent, wenn die Anwendungsdomäne, in dem die Assembly installiert ist, keine <xref:System.Security.Permissions.IsolatedStorageFilePermission>. Später versucht, Sie erstellen ein <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt unter Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> -Objekt, das nicht über ein Kontingent verfügt schlagen mit eine <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForDomain%2A> Methode. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#10)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#10)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Es wurde keine ausreichende Berechtigung für den isolierten Speicher gewährt.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Fehler beim Öffnen des Speichers.  
  
 - oder -   
  
 Die angegebene Assembly verfügt nicht über ausreichende Berechtigungen für das Erstellen isolierter Speicher.  
  
 - oder -   
  
 Ein isolierter Speicherort kann nicht initialisiert werden.  
  
 - oder -   
  
 Die Berechtigungen für die Anwendungsdomäne können nicht bestimmt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.DomainIsolationByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetUserStoreForSite">
      <MemberSignature Language="C#" Value="public static System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForSite ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.IO.IsolatedStorage.IsolatedStorageFile GetUserStoreForSite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.GetUserStoreForSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUserStoreForSite () As IsolatedStorageFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::IO::IsolatedStorage::IsolatedStorageFile ^ GetUserStoreForSite();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFile</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ruft einen isolierten Speicher mit benutzerbezogenem Gültigkeitsbereich für die Verwendung durch Anwendungen in einer virtuellen Hostdomäne ab.</summary>
        <returns>Die isolierte Speicherdatei, die dem Gültigkeitsbereich des isolierten Speichers auf Grundlage der Anwendungsidentität des aufrufenden Codes entspricht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird nur in Silverlight-basierten Anwendungen unterstützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncreaseQuotaTo">
      <MemberSignature Language="C#" Value="public override bool IncreaseQuotaTo (long newQuotaSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IncreaseQuotaTo(int64 newQuotaSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IncreaseQuotaTo (newQuotaSize As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IncreaseQuotaTo(long newQuotaSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newQuotaSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="newQuotaSize">Die angeforderte Größe in Bytes.</param>
        <summary>Ermöglicht es einer Anwendung, explizit eine größere Kontingentgröße in Bytes anzufordern.</summary>
        <returns>
          <see langword="true" />, wenn das neue Kontingent akzeptiert wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A> Methode ermöglicht einer Anwendung, die eine größere Kontingentgröße in Bytes explizit anfordern. Die neue Kontingentgröße darf nicht kleiner als die aktuelle Kontingentgröße sein, da nur Kontingent erhöht sind zulässig.  
  
 Wenn die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A> Methode wird aufgerufen, isolierte Speicher Aufrufe der <xref:System.AppDomainManager.CheckSecuritySettings%2A> Methode.  
  
 Richtlinienentscheidungen können durch Erstellen einer benutzerdefinierten implementiert <xref:System.AppDomainManager> -Objekt, das überschreibt die <xref:System.AppDomainManager.CheckSecuritySettings%2A> Methode, damit das Objekt basierend auf richtlinienentscheidungen ausführen kann ein <xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState> Objekt.  
  
 Es ist keine benutzerdefinierte <xref:System.AppDomainManager> Objekt Kontingent erhöhen wird die Anforderung abgelehnt, da die standardmäßige Implementierung für <xref:System.AppDomainManager.CheckSecuritySettings%2A> gibt `false`.  
  
 Derzeit ist keiner der Hosts in .NET Framework diese Anpassung bereit, sodass <xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A> gibt immer `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="newQuotaSize" /> ist kleiner als die aktuelle Kontingentgröße.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="newQuotaSize" /> ist kleiner als 0 (null) oder kleiner oder gleich der aktuellen Kontingentgröße.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.NotSupportedException">Der aktuelle Bereich ist nicht für einen Anwendungsbenutzer.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der isolierte Speicher aktiviert ist.</summary>
        <value>
          <see langword="true" /> in allen Fällen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Isolierte Speicherung für vollständige .NET Framework-Clientanwendungen ist immer aktiviert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumSize">
      <MemberSignature Language="C#" Value="public override ulong MaximumSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int64 MaximumSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaximumSize As ULong" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::UInt64 MaximumSize { System::UInt64 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der die maximal verfügbare Größe für den isolierten Speicher in den vom Kontingent festgelegten Grenzen darstellt.</summary>
        <value>Die Höchstgrenze des Speicherplatzes für die isolierte Speicherung in Bytes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Anzahl der Bytes, die verfügbar ist durch das vom Administrator festgelegten isolierten Speicher-Kontingent beschränkt. Kontingent wird in der Sicherheitsrichtlinie auf Grundlage des Beweises konfiguriert, damit der gleiche Code ein anderes Kontingent empfangen kann, wenn es mit anderen Beweis ausgeführt wird. Erhalten beispielsweise eine Anwendung, die lokal ausgeführt wird und auch aus einer Freigabe in einem Intranet würde wahrscheinlich unterschiedliche Kontingente.  
  
 Die [wie: Vorhersehen von Out-of-Space-Bedingungen bei isoliertem Speicher](~/docs/standard/io/how-to-anticipate-out-of-space-conditions-with-isolated-storage.md) Beispiel veranschaulicht die Verwendung von der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize%2A> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die <xref:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize%2A> Eigenschaft. Den vollständigen Kontext dieses Beispiels, finden Sie unter der <xref:System.IO.IsolatedStorage.IsolatedStorageFile> (Übersicht).  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#5)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#5)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Eigenschaft ist nicht verfügbar. <see cref="P:System.IO.IsolatedStorage.IsolatedStorageFile.MaximumSize" /> kann ohne einen von der Erstellung der Assembly gelieferten Beweis nicht bestimmt werden. Der Beweis konnte beim Erstellen des Objekts nicht bestimmt werden.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Ein isolierter Speicherfehler trat auf.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveDirectory">
      <MemberSignature Language="C#" Value="public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveDirectory(string sourceDirectoryName, string destinationDirectoryName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveDirectory(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveDirectory (sourceDirectoryName As String, destinationDirectoryName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveDirectory(System::String ^ sourceDirectoryName, System::String ^ destinationDirectoryName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceDirectoryName" Type="System.String" />
        <Parameter Name="destinationDirectoryName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceDirectoryName">Der Name des zu verschiebenden Verzeichnisses.</param>
        <param name="destinationDirectoryName">Der Pfad zum neuen Speicherort für <c>sourceDirectoryName</c>. Dabei darf es sich nicht um den Pfad zu einem vorhandenen Verzeichnis handeln.</param>
        <summary>Verschiebt das angegebene Verzeichnis und dessen Inhalt an einen neuen Speicherort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `sourceFileName` und `destinationFileName` müssen verschiedene Verzeichnisnamen angeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">
          <paramref name="sourceDirectoryName" /> existiert nicht.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.  
  
 - oder -   
  
 <paramref name="destinationDirectoryName" /> ist bereits vorhanden.  
  
 - oder -   
  
 <paramref name="sourceDirectoryName" /> und <paramref name="destinationDirectoryName" /> verweisen auf dasselbe Verzeichnis.</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveFile">
      <MemberSignature Language="C#" Value="public void MoveFile (string sourceFileName, string destinationFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveFile(string sourceFileName, string destinationFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.MoveFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveFile (sourceFileName As String, destinationFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveFile(System::String ^ sourceFileName, System::String ^ destinationFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFileName" Type="System.String" />
        <Parameter Name="destinationFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sourceFileName">Der Name der zu verschiebenden Datei.</param>
        <param name="destinationFileName">Der Pfad zum neuen Speicherort für die Datei. Wenn ein Dateiname im Pfad enthalten ist, weist die verschobene Datei den betreffenden Namen auf.</param>
        <summary>Verschiebt eine angegebene Datei an einen neuen Speicherort und ermöglicht das Angeben eines neuen Dateinamens (optional).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode löst keine Ausnahme aus, wenn `sourceFileName` und `destinationFileName` sind identisch.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist eine leere Zeichenfolge, enthält nur Leerzeichen oder enthält mindestens ein ungültiges Zeichen gemäß der Definition der <see cref="M:System.IO.Path.GetInvalidPathChars" />-Methode.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sourceFileName" /> oder <paramref name="destinationFileName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <paramref name="sourceFileName" /> wurde nicht gefunden.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Öffnet eine Datei mit der angegebenen Freigabeoption und der angegebenen Zugriffsoption.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile(string path, valuetype System.IO.FileMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile (path As String, mode As FileMode) As IsolatedStorageFileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::IsolatedStorage::IsolatedStorageFileStream ^ OpenFile(System::String ^ path, System::IO::FileMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
      </Parameters>
      <Docs>
        <param name="path">Der relative Pfad der Datei innerhalb des isolierten Speichers.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, wie die Datei geöffnet werden soll.</param>
        <summary>Öffnet eine Datei im angegebenen Modus.</summary>
        <returns>Eine Datei, die im angegebenen Modus mit Lese-/Schreibzugriff geöffnet wird und keine Freigabe aufweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.IsolatedStorage.IsolatedStorageFile%29?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis in <paramref name="path" /> ist nicht vorhanden.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Es wurde keine Datei gefunden, und <paramref name="mode" /> ist auf <see cref="F:System.IO.FileMode.Open" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode, System.IO.FileAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile (path As String, mode As FileMode, access As FileAccess) As IsolatedStorageFileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::IsolatedStorage::IsolatedStorageFileStream ^ OpenFile(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
      </Parameters>
      <Docs>
        <param name="path">Der relative Pfad der Datei innerhalb des isolierten Speichers.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, wie die Datei geöffnet werden soll.</param>
        <param name="access">Einer der Enumerationswerte, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder Lese-/Schreibzugriff geöffnet wird.</param>
        <summary>Öffnet eine Datei im angegebenen Modus mit dem angegebenen Lese-/Schreibzugriff.</summary>
        <returns>Eine Datei, die im angegebenen Modus mit dem angegebenen Zugriff geöffnet wird und keine Freigabe aufweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.IsolatedStorage.IsolatedStorageFile%29?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis in <paramref name="path" /> ist nicht vorhanden.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Es wurde keine Datei gefunden, und <paramref name="mode" /> ist auf <see cref="F:System.IO.FileMode.Open" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="OpenFile">
      <MemberSignature Language="C#" Value="public System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile (string path, System.IO.FileMode mode, System.IO.FileAccess access, System.IO.FileShare share);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IO.IsolatedStorage.IsolatedStorageFileStream OpenFile(string path, valuetype System.IO.FileMode mode, valuetype System.IO.FileAccess access, valuetype System.IO.FileShare share) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.OpenFile(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)" />
      <MemberSignature Language="VB.NET" Value="Public Function OpenFile (path As String, mode As FileMode, access As FileAccess, share As FileShare) As IsolatedStorageFileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IO::IsolatedStorage::IsolatedStorageFileStream ^ OpenFile(System::String ^ path, System::IO::FileMode mode, System::IO::FileAccess access, System::IO::FileShare share);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.IsolatedStorage.IsolatedStorageFileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="mode" Type="System.IO.FileMode" />
        <Parameter Name="access" Type="System.IO.FileAccess" />
        <Parameter Name="share" Type="System.IO.FileShare" />
      </Parameters>
      <Docs>
        <param name="path">Der relative Pfad der Datei innerhalb des isolierten Speichers.</param>
        <param name="mode">Einer der Enumerationswerte, der angibt, wie die Datei geöffnet oder erstellt werden soll.</param>
        <param name="access">Einer der Enumerationswerte, der angibt, ob die Datei mit Lesezugriff, Schreibzugriff oder Lese-/Schreibzugriff geöffnet wird.</param>
        <param name="share">Eine bitweise Kombination von Enumerationswerten, die den Zugriffstyp angeben, der für andere <see cref="T:System.IO.IsolatedStorage.IsolatedStorageFileStream" />-Objekte für diese Datei festgelegt ist.</param>
        <summary>Öffnet eine Datei im angegebenen Modus mit dem angegebenen Lese-/Schreibzugriff und der angegebenen Freigabeberechtigung.</summary>
        <returns>Eine Datei, die im angegebenen Modus mit dem angegebenen Zugriff und den angegebenen Freigabeoptionen geöffnet wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode entspricht der Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFileStream.%23ctor%28System.String%2CSystem.IO.FileMode%2CSystem.IO.FileAccess%2CSystem.IO.FileShare%2CSystem.IO.IsolatedStorage.IsolatedStorageFile%29?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> ist ungültig.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.IO.DirectoryNotFoundException">Das Verzeichnis in <paramref name="path" /> ist nicht vorhanden.</exception>
        <exception cref="T:System.IO.FileNotFoundException">Es wurde keine Datei gefunden, und <paramref name="mode" /> ist auf <see cref="M:System.IO.FileInfo.Open(System.IO.FileMode)" /> festgelegt.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="Quota">
      <MemberSignature Language="C#" Value="public override long Quota { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 Quota" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.Quota" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Quota As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long Quota { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den maximal verfügbaren Speicherplatz für den isolierten Speicher darstellt.</summary>
        <value>Die Höchstgrenze des Speicherplatzes für die isolierte Speicherung in Bytes.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.  
  
 - oder -   
  
 Isolierter Speicher ist deaktiviert.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Entfernt den Gültigkeitsbereich des isolierten Speichers mit dem gesamten Inhalt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Entfernt den Gültigkeitsbereich des isolierten Speichers mit dem gesamten Inhalt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Diese Methode löscht den gesamten Gültigkeitsbereich und alle enthaltenen Verzeichnisse und Dateien.  
  
 Wenn keines der Verzeichnisse oder Dateien in den Speicher verwendet werden, für den Speicher entfernen fehlschlägt und der Speicher wird zum Löschen ausgewählt. Nachfolgende so ändern Sie den Store Auslösen einer <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird mit der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.Remove%2A> Methode, um die Datei im isolierten Speicher zu löschen, nachdem dessen Inhalt geleert wurde. Die [Vorgehensweise: Löschen von Speichern im isolierten Speicher](~/docs/standard/io/how-to-delete-stores-in-isolated-storage.md) Beispiel zeigt auch die Verwendung der <xref:System.IO.IsolatedStorage.IsolatedStorageFile.Remove%2A> Methode.  
  
 [!code-cpp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CPP/source.cpp#16)]
 [!code-csharp[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/CS/source.cs#16)]
 [!code-vb[System.IO.IsolatedStorage.IsolatedStorage#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.IsolatedStorage.IsolatedStorage/VB/source.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher kann nicht gelöscht werden.</exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public static void Remove (System.IO.IsolatedStorage.IsolatedStorageScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Remove(valuetype System.IO.IsolatedStorage.IsolatedStorageScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.IsolatedStorage.IsolatedStorageFile.Remove(System.IO.IsolatedStorage.IsolatedStorageScope)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Remove (scope As IsolatedStorageScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Remove(System::IO::IsolatedStorage::IsolatedStorageScope scope);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
      </Parameters>
      <Docs>
        <param name="scope">Eine bitweise Kombination der <see cref="T:System.IO.IsolatedStorage.IsolatedStorageScope" />-Werte.</param>
        <summary>Entfernt den angegebenen Gültigkeitsbereich des isolierten Speichers für alle Identitäten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!CAUTION]
>  Diese Methode löscht den gesamten Gültigkeitsbereich und alle enthaltenen Verzeichnisse und Dateien.  
  
 Wenn keines der Verzeichnisse oder Dateien in den Speicher verwendet werden, für den Speicher entfernen fehlschlägt und der Speicher wird zum Löschen ausgewählt. Nachfolgende so ändern Sie den Store Auslösen einer <xref:System.IO.IsolatedStorage.IsolatedStorageException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher kann nicht entfernt werden.</exception>
        <permission cref="T:System.Security.Permissions.IsolatedStorageFilePermission">für mit dem isolierten Speicher. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.IsolatedStorageContainment.AdministerIsolatedStorageByUser" /></permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />. Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></permission>
      </Docs>
    </Member>
    <Member MemberName="UsedSize">
      <MemberSignature Language="C#" Value="public override long UsedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 UsedSize" />
      <MemberSignature Language="DocId" Value="P:System.IO.IsolatedStorage.IsolatedStorageFile.UsedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UsedSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long UsedSize { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.IsolatedStorage</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der den verwendeten Speicherplatz für den isolierten Speicher darstellt.</summary>
        <value>Der verwendete Speicherplatz für den isolierten Speicher (in Bytes).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Der isolierte Speicher wurde geschlossen.</exception>
        <exception cref="T:System.IO.IsolatedStorage.IsolatedStorageException">Der isolierte Speicher wurde entfernt.</exception>
        <exception cref="T:System.ObjectDisposedException">Der isolierte Speicher wurde freigegeben.</exception>
      </Docs>
    </Member>
  </Members>
</Type>