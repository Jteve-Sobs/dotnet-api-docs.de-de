<Type Name="IRouteConstraint" FullName="System.Web.Routing.IRouteConstraint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f997b9e2a77231d56f669896d747d55886a68594" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48663551" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRouteConstraint" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRouteConstraint" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.IRouteConstraint" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRouteConstraint" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRouteConstraint" />
  <TypeSignature Language="F#" Value="type IRouteConstraint = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Definiert den Vertrag, den eine Klasse implementieren muss, um zu überprüfen, ob ein URL-Parameterwert für eine Einschränkung gültig ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie eine Einschränkung für URL-Parameter in einer Routendefinition einschließen, müssen Sie die Einschränkung darstellen, als Zeichenfolge oder als ein Objekt, implementiert die <xref:System.Web.Routing.IRouteConstraint> Schnittstelle. Wenn die Einschränkung auf eine Zeichenfolge ist, wird es als regulärer Ausdruck behandelt. Erstellen Sie eine Klasse, die implementiert <xref:System.Web.Routing.IRouteConstraint> Wenn Sie die Überprüfungslogik leicht als regulärer Ausdruck darstellen können nicht. Sie fügen die Validierungslogik in den <xref:System.Web.Routing.IRouteConstraint.Match%2A> Methode.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
  </Docs>
  <Members>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public bool Match (System.Web.HttpContextBase httpContext, System.Web.Routing.Route route, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Match(class System.Web.HttpContextBase httpContext, class System.Web.Routing.Route route, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.IRouteConstraint.Match(System.Web.HttpContextBase,System.Web.Routing.Route,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Match(System::Web::HttpContextBase ^ httpContext, System::Web::Routing::Route ^ route, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberSignature Language="F#" Value="abstract member Match : System.Web.HttpContextBase * System.Web.Routing.Route * string * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteDirection -&gt; bool" Usage="iRouteConstraint.Match (httpContext, route, parameterName, values, routeDirection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="route" Type="System.Web.Routing.Route" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">Ein Objekt, das Informationen zur HTTP-Anforderung kapselt.</param>
        <param name="route">Das Objekt, zu dem diese Einschränkung gehört.</param>
        <param name="parameterName">Der Name des Parameters, der überprüft wird.</param>
        <param name="values">Ein Objekt, das die Parameter für die URL enthält.</param>
        <param name="routeDirection">Ein Objekt, das angibt, ob die Einschränkungsüberprüfung durchgeführt wird, wenn eine eingehende Anforderung verarbeitet oder eine URL generiert wird.</param>
        <summary>Bestimmt, ob der URL-Parameter einen gültigen Wert für diese Einschränkung enthält.</summary>
        <returns>
          <see langword="true" />, wenn der URL-Parameter einen gültigen Wert enthält, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden die <xref:System.Web.Routing.IRouteConstraint.Match%2A> Methode, um Validierungslogik für die Einschränkung hinzufügen. Diese Methode wird vom routing-Framework aufgerufen, wenn eine eingehende Anforderung verarbeitet wird und wenn eine URL erstellt wird. Sie können das aktuelle Szenario bestimmen, anhand der `routeDirection` Parameter.  
  
 Wenn eine Anforderung verarbeitet wird, bestimmt das routing-Framework, ob die Muster und die Werte der eingehenden Anforderung die Muster und die Einschränkungen der Route übereinstimmen. Wenn eine URL erstellt wird, zeigt das routing Framework bestimmt, ob die Werte, wenn angegeben die <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> Methode wird aufgerufen, mit dem Muster und die Einschränkungen der Route übereinstimmen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
      </Docs>
    </Member>
  </Members>
</Type>