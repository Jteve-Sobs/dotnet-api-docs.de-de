<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1b9f80d0c710558ebe142d686dae5a47ffb42216" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78774055" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Eigenschaften und Methoden, mit denen definiert wird, wie eine URL einer physischen Datei zugeordnet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Sie übergeben eine Instanz von <xref:System.Web.Routing.PageRouteHandler> an den <xref:System.Web.Routing.Route>-Konstruktor, um eine URL einer physischen Datei zuzuordnen. Das <xref:System.Web.Routing.PageRouteHandler>-Objekt gibt den virtuellen Pfad der physischen Datei an und bestimmt, ob Autorisierungs Regeln für die physische URL überprüft werden.

 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der physischen Datei für dieses <see cref="P:System.Web.Routing.RouteData.Route" />-Objekt. Die Datei muss sich in der aktuellen Anwendung befinden. Daher muss der Pfad mit einer Tilde (~) beginnen.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn Sie diesen Konstruktor verwenden, wird die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft auf `true`festgelegt.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="virtualPath" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge oder beginnt nicht mit "~/".</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der physischen Datei dieses <see cref="P:System.Web.Routing.RouteData.Route" />-Objekts. Die Datei muss sich in der aktuellen Anwendung befinden. Daher muss der Pfad mit einer Tilde (~) beginnen.</param>
        <param name="checkPhysicalUrlAccess">Wenn diese Eigenschaft auf <see langword="false" /> festgelegt ist, werden Autorisierungsregeln auf die Anforderungs-URL und nicht auf die URL der physischen Seite angewendet. Wenn diese Eigenschaft auf <see langword="true" /> festgelegt ist, werden Autorisierungsregeln sowohl auf die Anforderungs-URL als auch auf die URL der physischen Seite angewendet.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Web.Routing.PageRouteHandler" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Standardmäßig ist die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft `true`. Wenn Sie Autorisierungs Regeln sowohl auf die URL der physischen Seite als auch auf die Routen-URL anwenden möchten, können Sie den <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29>-Konstruktor anstelle dieses Konstruktors verwenden.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="virtualPath" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge oder beginnt nicht mit "~/".</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob Autorisierungsregeln auf die URL der physischen Datei angewendet werden.</summary>
        <value><see langword="true" />, wenn die Autorisierung für die URL der physischen Datei ausgeführt wird, die der Route zugeordnet ist, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie können die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft festlegen, wenn Sie den <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29>-Konstruktor verwenden.

 Der Wert der <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft bestimmt, ob das <xref:System.Web.Routing.PageRouteHandler> Objekt Sicherheits Berechtigungen nur für die Routen-URL oder sowohl für die physische Seite als auch für die Routen-URL prüft.

 Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft auf `true` (der Standardwert) festgelegt ist, muss ein Benutzer über die Berechtigung zum Zugriff auf die Routen-URL und die physische URL verfügen. Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft auf `false`festgelegt ist, benötigt ein Benutzer nur die Berechtigung für den Zugriff auf die Routen-URL, und die Berechtigungen für die physische URL werden nicht geprüft.

 Berechtigungen werden in der Datei "Web. config" definiert, wie im folgenden Beispiel gezeigt:

```
<configuration>
  <location path="categoriespage.aspx">
    <system.web>
      <authorization>
        <allow roles="admin"/>
        <deny users="*"/>
      </authorization>
    </system.web>
  </location>
  <location path="category">
    <system.web>
      <authorization>
        <allow users="*"/>
      </authorization>
    </system.web>
  </location>
</configuration>
```

 Für eine Anforderungs-URL, die `Category/food/show` nach dem Domänen Namen enthält und das Routen-URL-Muster `Category/{action}/{categoryName}` und die physische Seite "categoriespage. aspx" lautet, wendet [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] die im vorherigen Beispiel definierten Berechtigungen auf eine der folgenden Arten an:

-   Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft `false`ist, wird allen Benutzern der Zugriff gewährt, da allen Benutzern der Zugriff auf das URL-Muster erteilt wird, das mit `category`beginnt.

-   Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>-Eigenschaft `true`ist, wird nur `admin` Benutzern der Zugriff gewährt. Alle Benutzer haben Zugriff auf das URL-Muster, das mit `category`beginnt, aber nur `admin` Benutzer haben Zugriff auf die physische Seite "categoriespage. aspx".

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetHttpHandler (requestContext As RequestContext) As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Ein Objekt, das Informationen über die Anforderung kapselt.</param>
        <summary>Gibt das Objekt zurück, das die Anforderung verarbeitet.</summary>
        <returns>Das Objekt, das die Anforderung verarbeitet.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="requestContext" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSubstitutedVirtualPath (requestContext As RequestContext) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Ein Objekt, das Informationen über die Anforderung kapselt.</param>
        <summary>Gibt den virtuellen Pfad der physischen Datei für die Route zurück, nachdem auf alle Ersetzungsparameter Ersetzungen angewendet wurden.</summary>
        <returns>Die URL der physischen Datei, die aus einer Route generiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Wenn der <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> Wert keine Ersatz Parameter enthält, gibt die <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A>-Methode denselben Wert wie die <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>-Eigenschaft zurück.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der Parameter <paramref name="requestContext" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Pfad der Webseite ab, die dieser Route zugeordnet ist.</summary>
        <value>Die URL der Webseite, bevor auf Ersetzungsparameter Ersetzungen angewendet wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Sie legen die <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>-Eigenschaft im <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>-Konstruktor oder im <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>-Konstruktor fest.

 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/cc668201(v=vs.100)">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Gewusst wie: Definieren von Routen für Web Forms Anwendungen</related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dd329551(v=vs.140)">Exemplarische Vorgehensweise: Verwenden des ASP.NET-Routings in einer Web Forms Anwendung</related>
      </Docs>
    </Member>
  </Members>
</Type>
