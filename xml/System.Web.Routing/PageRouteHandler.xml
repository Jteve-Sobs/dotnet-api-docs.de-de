<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02b77523e989609d168d7078124ce031549531a3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51914356" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Stellt Eigenschaften und Methoden, mit denen definiert wird, wie eine URL einer physischen Datei zugeordnet wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Übergeben Sie eine Instanz des <xref:System.Web.Routing.PageRouteHandler> auf die <xref:System.Web.Routing.Route> Konstruktor, um eine URL einer physischen Datei zugeordnet. Die <xref:System.Web.Routing.PageRouteHandler> Objekt gibt an, der virtuelle Pfad der physischen Datei, und bestimmt, ob Autorisierungsregeln für die physische URL aktiviert ist.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Routing.PageRouteHandler" />-Klasse.</summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der physischen Datei für dieses <see cref="P:System.Web.Routing.RouteData.Route" />-Objekt. Die Datei muss sich in der aktuellen Anwendung befinden. Daher muss der Pfad mit einer Tilde (~) beginnen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Routing.PageRouteHandler" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie diesen Konstruktor, verwenden die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> -Eigenschaftensatz auf `true`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="virtualPath" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge oder beginnt nicht mit "~/".</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">Der virtuelle Pfad der physischen Datei dieses <see cref="P:System.Web.Routing.RouteData.Route" />-Objekts. Die Datei muss sich in der aktuellen Anwendung befinden. Daher muss der Pfad mit einer Tilde (~) beginnen.</param>
        <param name="checkPhysicalUrlAccess">Wenn diese Eigenschaft auf <see langword="false" /> festgelegt ist, werden Autorisierungsregeln auf die Anforderungs-URL und nicht auf die URL der physischen Seite angewendet. Wenn diese Eigenschaft auf <see langword="true" /> festgelegt ist, werden Autorisierungsregeln sowohl auf die Anforderungs-URL als auch auf die URL der physischen Seite angewendet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.Routing.PageRouteHandler" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> Eigenschaft `true`. Aus diesem Grund sollten Sie Autorisierungsregeln, die Routen-URL und auf die URL der physischen Seite angewendet werden soll, können Sie die <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> Konstruktor anstelle dieses Konstruktors.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="virtualPath" />-Parameter ist <see langword="null" /> oder eine leere Zeichenfolge oder beginnt nicht mit "~/".</exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob Autorisierungsregeln auf die URL der physischen Datei angewendet werden.</summary>
        <value><see langword="true" />, wenn die Autorisierung für die URL der physischen Datei ausgeführt wird, die der Route zugeordnet ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können festlegen, die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> Eigenschaft bei der Verwendung der <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> Konstruktor.  
  
 Der Wert des der <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> Eigenschaft bestimmt, ob die <xref:System.Web.Routing.PageRouteHandler> Objekt überprüft die Sicherheitsberechtigungen, die nur für die Routen-URL oder für die physische Seite und die Routen-URL.  
  
 Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> -Eigenschaftensatz auf `true` (Dies ist der Standardwert), ein Benutzer muss über die Berechtigung Zugriff auf die Routen-URL und die physische URL. Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> -Eigenschaftensatz auf `false`, benötigt ein Benutzer nur die Berechtigung auf die Routen-URL und -Berechtigungen für die physische URL nicht überprüft.  
  
 Berechtigungen werden in der Datei "Web.config" definiert, wie im folgenden Beispiel gezeigt:  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 Für eine Anforderungs-URL, die enthält `Category/food/show` hinter dem Domänennamen, wenn das Muster der Routen-URL ist `Category/{action}/{categoryName}` und die physische Seite ist "Categoriespage.aspx", [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] wendet die Berechtigungen, die im vorherigen Beispiel in einer der folgenden Methoden definiert:  
  
-   Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> Eigenschaft `false`, allen Benutzern der Zugriff gewährt werden, da allen Benutzern Zugriff gewährt hat, das URL-Muster, die mit beginnt `category`.  
  
-   Wenn die <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> Eigenschaft `true`, nur `admin` Benutzern der Zugriff gewährt werden. Alle Benutzer haben Zugriff auf das URL-Muster, die mit beginnt `category`, aber nur `admin` Benutzer haben Zugriff auf die physische Seite Categoriespage.aspx.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Ein Objekt, das Informationen über die Anforderung kapselt.</param>
        <summary>Gibt das Objekt zurück, das die Anforderung verarbeitet.</summary>
        <returns>Das Objekt, das die Anforderung verarbeitet.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">Ein Objekt, das Informationen über die Anforderung kapselt.</param>
        <summary>Gibt den virtuellen Pfad der physischen Datei für die Route zurück, nachdem auf alle Ersetzungsparameter Ersetzungen angewendet wurden.</summary>
        <returns>Die URL der physischen Datei, die aus einer Route generiert wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> Wert enthält keine Ersetzungsparameter der <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> Methode gibt den gleichen Wert wie die <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Der <paramref name="requestContext" />-Parameter ist <see langword="null" />.</exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den virtuellen Pfad der Webseite ab, die dieser Route zugeordnet ist.</summary>
        <value>Die URL der Webseite, bevor auf Ersetzungsparameter Ersetzungen angewendet wurden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Festlegen der <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> -Eigenschaft in der <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> Konstruktor oder in der <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a">ASP.NET-Routing</related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678">Vorgehensweise: Definieren von Routen für Web Forms-Anwendungen</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c">Exemplarische Vorgehensweise: Verwenden von ASP.NET-ROUTING in einer Web Forms-Anwendung</related>
      </Docs>
    </Member>
  </Members>
</Type>