<Type Name="LocalVariableInfo" FullName="System.Reflection.LocalVariableInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ddae4631083682deea704d0bcc3093582505f8ca" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69276296" /></Metadata><TypeSignature Language="C#" Value="public class LocalVariableInfo" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit LocalVariableInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.LocalVariableInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class LocalVariableInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class LocalVariableInfo" />
  <TypeSignature Language="F#" Value="type LocalVariableInfo = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="822ab-101">Ermittelt die Attribute einer lokalen Variablen und stellt Zugriff auf die Metadaten der lokalen Variablen bereit.</span><span class="sxs-lookup"><span data-stu-id="822ab-101">Discovers the attributes of a local variable and provides access to local variable metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="822ab-102">Verwenden Sie die <xref:System.Reflection.MethodBody.LocalVariables%2A?displayProperty=nameWithType> -Eigenschaft, um eine Liste der lokalen Variablen in einer Methode zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="822ab-102">To get a list of local variables in a method, use the <xref:System.Reflection.MethodBody.LocalVariables%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="822ab-103">Verwenden Sie <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> die-Methode, <xref:System.Reflection.MethodBody> um den <xref:System.Reflection.MethodInfo> für ein-Objekt abzurufen.</span><span class="sxs-lookup"><span data-stu-id="822ab-103">Use the <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method to obtain the <xref:System.Reflection.MethodBody> for a <xref:System.Reflection.MethodInfo> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="822ab-104">Lokale Variablennamen werden in den Metadaten nicht beibehalten.</span><span class="sxs-lookup"><span data-stu-id="822ab-104">Local variable names are not persisted in metadata.</span></span> <span data-ttu-id="822ab-105">In der Microsoft Intermediate Language (MSIL) erfolgt der Zugriff auf lokale Variablen über ihre Position in der lokalen Variablen Signatur.</span><span class="sxs-lookup"><span data-stu-id="822ab-105">In Microsoft intermediate language (MSIL), local variables are accessed by their position in the local variable signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="822ab-106">Im folgenden Beispiel wird eine Testmethode mit `MethodBodyExample`dem Namen definiert und ihre lokalen Variablen Informationen angezeigt.</span><span class="sxs-lookup"><span data-stu-id="822ab-106">The following example defines a test method named `MethodBodyExample`, and displays its local variable information.</span></span> <span data-ttu-id="822ab-107">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A> -Methode wird verwendet, um <xref:System.Reflection.MethodBody> ein-Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="822ab-107">The <xref:System.Reflection.MethodBase.GetMethodBody%2A> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="822ab-108">Die <xref:System.Reflection.MethodBody.LocalVariables%2A> -Eigenschaft wird dann verwendet, um eine Liste <xref:System.Reflection.LocalVariableInfo> von-Objekten abzurufen und deren Typen und Index Reihenfolge anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="822ab-108">The <xref:System.Reflection.MethodBody.LocalVariables%2A> property is then used to obtain a list of <xref:System.Reflection.LocalVariableInfo> objects and to display their types and index order.</span></span>  
  
 <span data-ttu-id="822ab-109">Dieses Codebeispiel ist Teil eines größeren Beispiels, das für die <xref:System.Reflection.MethodBody> -Klasse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="822ab-109">This code example is part of a larger example provided for the <xref:System.Reflection.MethodBody> class.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#3](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#3)]
[!code-csharp[MethodBody#3](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#3)]
[!code-vb[MethodBody#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#3)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#6](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#6)]
[!code-csharp[MethodBody#6](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#6)]
[!code-vb[MethodBody#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Reflection.MethodBody.LocalVariables" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LocalVariableInfo ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.LocalVariableInfo.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LocalVariableInfo();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="822ab-110">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.LocalVariableInfo" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="822ab-110">Initializes a new instance of the <see cref="T:System.Reflection.LocalVariableInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="822ab-111">Dieser Konstruktor wird von abgeleiteten Klassen während der Erstellung von <xref:System.Reflection.LocalVariableInfo> -Objekten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="822ab-111">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.LocalVariableInfo> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPinned">
      <MemberSignature Language="C#" Value="public virtual bool IsPinned { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinned" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.LocalVariableInfo.IsPinned" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPinned As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPinned { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinned : bool" Usage="System.Reflection.LocalVariableInfo.IsPinned" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="822ab-112">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob das Objekt, auf das die lokale Variable verweist, im Arbeitsspeicher fixiert ist.</span><span class="sxs-lookup"><span data-stu-id="822ab-112">Gets a <see cref="T:System.Boolean" /> value that indicates whether the object referred to by the local variable is pinned in memory.</span></span></summary>
        <value><span data-ttu-id="822ab-113"><see langword="true" />, wenn das Objekt, auf das die Variable verweist, im Arbeitsspeicher fixiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="822ab-113"><see langword="true" /> if the object referred to by the variable is pinned in memory; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="822ab-114">In unsicherem Code muss ein Objekt fixiert werden, bevor ein nicht verwalteter Zeiger darauf verweisen kann.</span><span class="sxs-lookup"><span data-stu-id="822ab-114">In unsafe code, an object must be pinned before it can be referred to by an unmanaged pointer.</span></span> <span data-ttu-id="822ab-115">Obwohl das Objekt, auf das verwiesen wird, fixiert ist, kann es nicht von Garbage Collection verschoben werden.</span><span class="sxs-lookup"><span data-stu-id="822ab-115">While the referenced object is pinned, it cannot be moved by garbage collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalIndex">
      <MemberSignature Language="C#" Value="public virtual int LocalIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LocalIndex" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.LocalVariableInfo.LocalIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int LocalIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalIndex : int" Usage="System.Reflection.LocalVariableInfo.LocalIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="822ab-116">Ruft den Index der lokalen Variablen innerhalb des Methodentexts ab.</span><span class="sxs-lookup"><span data-stu-id="822ab-116">Gets the index of the local variable within the method body.</span></span></summary>
        <value><span data-ttu-id="822ab-117">Ein ganzzahliger Wert, der die Reihenfolge der Deklaration der lokalen Variablen innerhalb des Methodentexts darstellt.</span><span class="sxs-lookup"><span data-stu-id="822ab-117">An integer value that represents the order of declaration of the local variable within the method body.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="822ab-118">Index Nummern werden lokalen Variablen in der Reihenfolge zugewiesen, in der Sie deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="822ab-118">Index numbers are assigned to local variables in the order in which they are declared.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalType">
      <MemberSignature Language="C#" Value="public virtual Type LocalType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type LocalType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.LocalVariableInfo.LocalType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LocalType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ LocalType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalType : Type" Usage="System.Reflection.LocalVariableInfo.LocalType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="822ab-119">Ruft den Typ der lokalen Variablen ab.</span><span class="sxs-lookup"><span data-stu-id="822ab-119">Gets the type of the local variable.</span></span></summary>
        <value><span data-ttu-id="822ab-120">Der Typ der lokalen Variablen.</span><span class="sxs-lookup"><span data-stu-id="822ab-120">The type of the local variable.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.LocalVariableInfo.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="localVariableInfo.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="822ab-121">Gibt eine für den Benutzer lesbare Zeichenfolge zurück, die die lokale Variable beschreibt.</span><span class="sxs-lookup"><span data-stu-id="822ab-121">Returns a user-readable string that describes the local variable.</span></span></summary>
        <returns><span data-ttu-id="822ab-122">Eine Zeichenfolge, die Informationen zu der lokalen Variablen anzeigt, einschließlich des Typnamens, des Index, und des Status hinsichtlich der Fixierung im Arbeitsspeicher.</span><span class="sxs-lookup"><span data-stu-id="822ab-122">A string that displays information about the local variable, including the type name, index, and pinned status.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
