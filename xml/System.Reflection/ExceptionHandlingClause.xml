<Type Name="ExceptionHandlingClause" FullName="System.Reflection.ExceptionHandlingClause">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f74cdce8e6867c91a1b8b6dbb7f0909e4f9f9879" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78817761" /></Metadata><TypeSignature Language="C#" Value="public class ExceptionHandlingClause" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ExceptionHandlingClause extends System.Object" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ExceptionHandlingClause" />
  <TypeSignature Language="VB.NET" Value="Public Class ExceptionHandlingClause" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandlingClause" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type ExceptionHandlingClause = class" />
  <TypeSignature Language="C#" Value="public sealed class ExceptionHandlingClause" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionHandlingClause extends System.Object" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionHandlingClause" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionHandlingClause sealed" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi beforefieldinit ExceptionHandlingClause extends System.Object" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="6bdfd-101">Stellt eine Klausel in einem strukturierten Ausnahmebehandlungsblock dar.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-101">Represents a clause in a structured exception-handling block.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bdfd-102">Die <xref:System.Reflection.ExceptionHandlingClause>-Klasse stellt Informationen über die Klauseln in einer `try`...`catch`...`finally`</span><span class="sxs-lookup"><span data-stu-id="6bdfd-102">The <xref:System.Reflection.ExceptionHandlingClause> class provides information about the clauses in a `try`…`catch`…`finally`</span></span> <span data-ttu-id="6bdfd-103">Block (`Try`...`Catch`...`Finally`</span><span class="sxs-lookup"><span data-stu-id="6bdfd-103">block (`Try`…`Catch`…`Finally`</span></span> <span data-ttu-id="6bdfd-104">in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-104">in Visual Basic).</span></span> <span data-ttu-id="6bdfd-105">Zum Abrufen einer Liste der Klauseln zur Ausnahmebehandlung in einer Methode rufen Sie einen <xref:System.Reflection.MethodInfo> ab, der die Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-105">To get a list of exception-handling clauses in a method, obtain a <xref:System.Reflection.MethodInfo> that represents the method.</span></span> <span data-ttu-id="6bdfd-106">Verwenden Sie die <xref:System.Reflection.MethodBase.GetMethodBody%2A>-Methode, um ein <xref:System.Reflection.MethodBody> Objekt zu erhalten, und verwenden Sie dann die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft, um die Liste der Klauseln abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-106">Use the <xref:System.Reflection.MethodBase.GetMethodBody%2A> method to obtain a <xref:System.Reflection.MethodBody> object, and then use the <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property to get the list of clauses.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-107">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-107">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-108">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-108">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-109">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-109">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-110">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-110">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-111">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-111">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-112">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-112">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
 <span data-ttu-id="6bdfd-113">Sie können "Ildasm. exe" verwenden, um die MSIL für das kompilierte Codebeispiel zu untersuchen, um zu sehen, wie die Offsets und Längen berechnet werden.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-113">You can use Ildasm.exe to examine the MSIL for the compiled code example, to see how the offsets and lengths are calculated.</span></span>  
  
  
 <span data-ttu-id="6bdfd-114">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-114">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.MethodBody" />
    <altmember cref="P:System.Reflection.MethodBody.ExceptionHandlingClauses" />
    <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExceptionHandlingClause ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExceptionHandlingClause();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bdfd-115">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.ExceptionHandlingClause" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-115">Initializes a new instance of the <see cref="T:System.Reflection.ExceptionHandlingClause" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bdfd-116">Dieser Konstruktor wird von abgeleiteten Klassen während der Erstellung von <xref:System.Reflection.ExceptionHandlingClause> Objekten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-116">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.ExceptionHandlingClause> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchType">
      <MemberSignature Language="C#" Value="public virtual Type CatchType { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type CatchType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CatchType As Type" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ CatchType { Type ^ get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.CatchType : Type" Usage="System.Reflection.ExceptionHandlingClause.CatchType" />
      <MemberSignature Language="C#" Value="public Type CatchType { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CatchType As Type" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ CatchType { Type ^ get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-117">Ruft den Typ der von dieser Klausel behandelten Ausnahme ab.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-117">Gets the type of exception handled by this clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-118">Ein <see cref="T:System.Type" />-Objekt, das diesen Typ der von dieser Klausel behandelten Ausnahme darstellt, oder <see langword="null" />, wenn die <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" />-Eigenschaft <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> oder <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" /> ist.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-118">A <see cref="T:System.Type" /> object that represents that type of exception handled by this clause, or <see langword="null" /> if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property is <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> or <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Finally" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-119">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-119">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-120">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-120">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-121">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-121">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-122">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-122">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-123">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-123">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-124">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-124">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
   
  
 <span data-ttu-id="6bdfd-125">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-125">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6bdfd-126">Ungültige Verwendung der Eigenschaft für den aktuellen Zustand des Objekts.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-126">Invalid use of property for the object's current state.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="FilterOffset">
      <MemberSignature Language="C#" Value="public virtual int FilterOffset { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 FilterOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FilterOffset As Integer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int FilterOffset { int get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.FilterOffset : int" Usage="System.Reflection.ExceptionHandlingClause.FilterOffset" />
      <MemberSignature Language="C#" Value="public int FilterOffset { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterOffset As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int FilterOffset { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-127">Ruft den Offset des vom Benutzer angegebenen Filtercodes innerhalb des Methodentexts ab (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-127">Gets the offset within the method body, in bytes, of the user-supplied filter code.</span></span></summary>
        <value><span data-ttu-id="6bdfd-128">Der Offset des vom Benutzer angegebenen Filtercodes innerhalb des Methodentexts (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-128">The offset within the method body, in bytes, of the user-supplied filter code.</span></span> <span data-ttu-id="6bdfd-129">Der Wert dieser Eigenschaft hat keine Bedeutung, wenn die <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" />-Eigenschaft einen anderen Wert als <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" /> hat.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-129">The value of this property has no meaning if the <see cref="P:System.Reflection.ExceptionHandlingClause.Flags" /> property has any value other than <see cref="F:System.Reflection.ExceptionHandlingClauseOptions.Filter" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bdfd-130">Eine Filter Klausel enthält eine Microsoft Intermediate Language (MSIL), die bestimmt, ob eine Ausnahme von dieser Klausel behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-130">A filter clause contains user-suppliedMicrosoft intermediate language (MSIL) that determines whether an exception is handled by this clause.</span></span> <span data-ttu-id="6bdfd-131">Beispielsweise ist jede-Klausel, die das Visual Basic `When`-Schlüsselwort enthält, eine <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType>-Klausel.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-131">For example, any clause containing the Visual Basic `When` keyword is a <xref:System.Reflection.ExceptionHandlingClauseOptions.Filter?displayProperty=nameWithType> clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-132">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-132">Working with exception-handling clauses requires a thorough understanding of metadata and MSIL instruction formats.</span></span> <span data-ttu-id="6bdfd-133">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-133">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-134">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-134">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="6bdfd-135">Der Offset kann nicht abgerufen werden, da die Klausel zur Ausnahmebehandlung kein Filter ist.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-135">Cannot get the offset because the exception handling clause is not a filter.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ExceptionHandlingClauseOptions Flags { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ExceptionHandlingClauseOptions Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Flags As ExceptionHandlingClauseOptions" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::ExceptionHandlingClauseOptions Flags { System::Reflection::ExceptionHandlingClauseOptions get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.ExceptionHandlingClauseOptions" Usage="System.Reflection.ExceptionHandlingClause.Flags" />
      <MemberSignature Language="C#" Value="public System.Reflection.ExceptionHandlingClauseOptions Flags { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As ExceptionHandlingClauseOptions" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ExceptionHandlingClauseOptions Flags { System::Reflection::ExceptionHandlingClauseOptions get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ExceptionHandlingClauseOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-136">Ruft einen Wert ab, der angibt, ob diese Klausel zur Ausnahmebehandlung eine finally-Klausel, eine nach Typ gefilterte Klausel oder eine nach Benutzer gefilterte Klausel ist.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-136">Gets a value indicating whether this exception-handling clause is a finally clause, a type-filtered clause, or a user-filtered clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-137">Ein <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" />-Wert, der angibt, welche Art von Aktion von dieser Klausel ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-137">An <see cref="T:System.Reflection.ExceptionHandlingClauseOptions" /> value that indicates what kind of action this clause performs.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-138">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-138">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-139">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-139">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-140">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-140">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-141">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-141">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-142">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-142">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-143">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-143">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
  
 <span data-ttu-id="6bdfd-144">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-144">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.ExceptionHandlingClauseOptions" />
      </Docs>
    </Member>
    <Member MemberName="HandlerLength">
      <MemberSignature Language="C#" Value="public virtual int HandlerLength { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerLength As Integer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerLength { int get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.HandlerLength : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerLength" />
      <MemberSignature Language="C#" Value="public int HandlerLength { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerLength As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HandlerLength { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-145">Ruft die Länge des Texts dieser Klausel zur Ausnahmebehandlung ab (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-145">Gets the length, in bytes, of the body of this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-146">Eine ganze Zahl, die die Länge der MSIL darstellt, die den Text dieser Klausel zur Ausnahmebehandlung bildet (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-146">An integer that represents the length, in bytes, of the MSIL that forms the body of this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-147">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-147">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-148">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-148">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-149">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-149">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-150">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-150">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-151">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-151">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-152">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-152">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
  
 <span data-ttu-id="6bdfd-153">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-153">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandlerOffset">
      <MemberSignature Language="C#" Value="public virtual int HandlerOffset { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 HandlerOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HandlerOffset As Integer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int HandlerOffset { int get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.HandlerOffset : int" Usage="System.Reflection.ExceptionHandlingClause.HandlerOffset" />
      <MemberSignature Language="C#" Value="public int HandlerOffset { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HandlerOffset As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int HandlerOffset { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-154">Ruft den Offset dieser Klausel zur Ausnahmebehandlung innerhalb des Methodentexts ab (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-154">Gets the offset within the method body, in bytes, of this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-155">Eine ganze Zahl, die den Offset dieser Klausel zur Ausnahmebehandlung innerhalb des Methodentexts darstellt (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-155">An integer that represents the offset within the method body, in bytes, of this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-156">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-156">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-157">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-157">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-158">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-158">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-159">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-159">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-160">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-160">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-161">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-161">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
  
 <span data-ttu-id="6bdfd-162">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-162">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.ExceptionHandlingClause.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="exceptionHandlingClause.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6bdfd-163">Eine Zeichenfolgendarstellung der Klausel zur Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-163">A string representation of the exception-handling clause.</span></span></summary>
        <returns><span data-ttu-id="6bdfd-164">Eine Zeichenfolge, die entsprechende Eigenschaftswerte für den Filterklauseltyp auflistet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-164">A string that lists appropriate property values for the filter clause type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryLength">
      <MemberSignature Language="C#" Value="public virtual int TryLength { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryLength" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryLength As Integer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryLength { int get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.TryLength : int" Usage="System.Reflection.ExceptionHandlingClause.TryLength" />
      <MemberSignature Language="C#" Value="public int TryLength { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TryLength As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TryLength { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-165">Die Gesamtlänge des try-Blocks, der diese Klausel zur Ausnahmebehandlung einschließt (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-165">The total length, in bytes, of the try block that includes this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-166">Die Gesamtlänge des try-Blocks, der diese Klausel zur Ausnahmebehandlung einschließt (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-166">The total length, in bytes, of the try block that includes this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6bdfd-167">Eine ganze Zahl, die die Gesamtlänge des try-Blocks in Bytes darstellt, der diese Klausel zur Ausnahmebehandlung einschließt.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-167">An integer that represents the total length, in bytes, of the try block that includes this exception-handling clause.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-168">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-168">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-169">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-169">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-170">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-170">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-171">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-171">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-172">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-172">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-173">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-173">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
  
 <span data-ttu-id="6bdfd-174">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-174">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryOffset">
      <MemberSignature Language="C#" Value="public virtual int TryOffset { get; }" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TryOffset" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TryOffset As Integer" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int TryOffset { int get(); };" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.TryOffset : int" Usage="System.Reflection.ExceptionHandlingClause.TryOffset" />
      <MemberSignature Language="C#" Value="public int TryOffset { get; }" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TryOffset As Integer" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TryOffset { int get(); };" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6bdfd-175">Der Offset des diese Klausel zur Ausnahmebehandlung einschließenden try-Blocks innerhalb der Methode (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-175">The offset within the method, in bytes, of the try block that includes this exception-handling clause.</span></span></summary>
        <value><span data-ttu-id="6bdfd-176">Eine ganze Zahl, die den Offset des diese Klausel zur Ausnahmebehandlung einschließenden try-Blocks innerhalb der Methode darstellt (in Byte).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-176">An integer that represents the offset within the method, in bytes, of the try block that includes this exception-handling clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="6bdfd-177">Die Verwendung von Klauseln für die Ausnahmebehandlung erfordert ein umfassendes Verständnis von Metadaten und MSIL-Anweisungs Formaten (Microsoft Intermediate Language).</span><span class="sxs-lookup"><span data-stu-id="6bdfd-177">Working with exception-handling clauses requires a thorough understanding of metadata and Microsoft intermediate language (MSIL) instruction formats.</span></span> <span data-ttu-id="6bdfd-178">Informationen finden Sie in der Common Language Infrastructure-Dokumentation (CLI), insbesondere "Partition II: Metadata Definition and Semantics" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="6bdfd-178">Information can be found in the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="6bdfd-179">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-179">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6bdfd-180">Das folgende Codebeispiel definiert eine Testmethode mit dem Namen `MethodBodyExample`und zeigt die Informationen zu den lokalen Variablen und die Ausnahmebehandlung an.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-180">The following code example defines a test method named `MethodBodyExample`, and displays its local variable information and exception-handling clauses.</span></span> <span data-ttu-id="6bdfd-181">Die <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType>-Methode wird verwendet, um ein <xref:System.Reflection.MethodBody> Objekt für die Testmethode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-181">The <xref:System.Reflection.MethodBase.GetMethodBody%2A?displayProperty=nameWithType> method is used to obtain a <xref:System.Reflection.MethodBody> object for the test method.</span></span> <span data-ttu-id="6bdfd-182">Die <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A>-Eigenschaft wird zum Abrufen einer Liste von <xref:System.Reflection.ExceptionHandlingClause> Objekten und zum Anzeigen ihrer Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-182">The <xref:System.Reflection.MethodBody.ExceptionHandlingClauses%2A> property is used to obtain a list of <xref:System.Reflection.ExceptionHandlingClause> objects and display their properties.</span></span>  
  
  
 <span data-ttu-id="6bdfd-183">Dieser Code ist Teil eines größeren Beispiels, das sich im Thema <xref:System.Reflection.MethodBody>-Klasse befindet.</span><span class="sxs-lookup"><span data-stu-id="6bdfd-183">This code is part of a larger example located in the <xref:System.Reflection.MethodBody> class topic.</span></span>  
  
 [!code-cpp[MethodBody#2](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#2)]
 [!code-csharp[MethodBody#2](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#2)]
 [!code-vb[MethodBody#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#2)]  
[!code-cpp[MethodBody#4](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#4)]
[!code-csharp[MethodBody#4](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#4)]
[!code-vb[MethodBody#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#4)]  
[!code-cpp[MethodBody#5](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#5)]
[!code-csharp[MethodBody#5](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#5)]
[!code-vb[MethodBody#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#5)]  
[!code-cpp[MethodBody#7](~/samples/snippets/cpp/VS_Snippets_CLR/MethodBody/cpp/source.cpp#7)]
[!code-csharp[MethodBody#7](~/samples/snippets/csharp/VS_Snippets_CLR/MethodBody/CS/source.cs#7)]
[!code-vb[MethodBody#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/MethodBody/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
