<Type Name="TypeFilter" FullName="System.Reflection.TypeFilter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="246df59303ccaf6d3c08703643d80d1c8492c496" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39800623" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate bool TypeFilter(Type m, object filterCriteria);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed TypeFilter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.TypeFilter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function TypeFilter(m As Type, filterCriteria As Object) As Boolean " />
  <TypeSignature Language="C++ CLI" Value="public delegate bool TypeFilter(Type ^ m, System::Object ^ filterCriteria);" />
  <TypeSignature Language="F#" Value="type TypeFilter = delegate of Type * obj -&gt; bool" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="m" Type="System.Type" />
    <Parameter Name="filterCriteria" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Boolean</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="m">
      <span data-ttu-id="50500-101">Das <see langword="Type" />-Objekt, auf das der Filter angewendet wird.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50500-101">The <see langword="Type" /> object to which the filter is applied.</span>
      </span>
    </param>
    <param name="filterCriteria">
      <span data-ttu-id="50500-102">Ein beliebiges, zum Filtern der Liste verwendetes Objekt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50500-102">An arbitrary object used to filter the list.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="50500-103">Filtert die Klassen, die in einem Array aus <see cref="T:System.Type" />-Objekten dargestellt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50500-103">Filters the classes represented in an array of <see cref="T:System.Type" /> objects.</span>
      </span>
    </summary>
    <returns>
      <span data-ttu-id="50500-104">
        <see langword="true" />, um den <see cref="T:System.Type" /> in die gefilterte Liste aufzunehmen; andernfalls <see langword="false" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="50500-104">
          <see langword="true" /> to include the <see cref="T:System.Type" /> in the filtered list; otherwise <see langword="false" />.</span>
      </span>
    </returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="50500-105">Die `TypeFilter` Delegat wird verwendet, um eine Liste von Klassen zu filtern.</span><span class="sxs-lookup"><span data-stu-id="50500-105">The `TypeFilter` delegate is used to filter a list of classes.</span></span> <span data-ttu-id="50500-106">Verwenden sie insbesondere zum Filtern der Klassen dargestellt, in ein Array von <xref:System.Type> Objekte.</span><span class="sxs-lookup"><span data-stu-id="50500-106">Specifically, you use it to filter the classes represented in an array of <xref:System.Type> objects.</span></span> <span data-ttu-id="50500-107">Die <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> Methode, die dieser Delegat verwendet, um die Liste der Schnittstellen zu filtern, die zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="50500-107">The <xref:System.Type.FindInterfaces%2A?displayProperty=nameWithType> method uses this delegate to filter the list of interfaces that it returns.</span></span> <span data-ttu-id="50500-108">Alle abgeleiteten Klassen von <xref:System.Delegate> und <xref:System.MulticastDelegate> verfügt über einen Konstruktor und ein `DynamicInvoke` Methode.</span><span class="sxs-lookup"><span data-stu-id="50500-108">Every derived class of <xref:System.Delegate> and <xref:System.MulticastDelegate> has a constructor and a `DynamicInvoke` method.</span></span> <span data-ttu-id="50500-109">Finden Sie im Visual C++-Codebeispiel, in der die Beschreibung für `Delegate`.</span><span class="sxs-lookup"><span data-stu-id="50500-109">See the Visual C++ code example given in the description for `Delegate`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="50500-110">Dieses Beispiel zeigt, wie Sie die Definition einer Methode die <xref:System.Reflection.TypeFilter> Delegaten Prototyp können Sie mithilfe von Reflektion gefiltert oder eine Teilmenge der übereinstimmende Einträge zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="50500-110">This example shows how to define a method matching the <xref:System.Reflection.TypeFilter> delegate prototype allowing you to use reflection to filter or return a subset of matching entries.</span></span>  
  
 [!code-vb[Typefilter#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/TypeFilter/VB/Typefilter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)" />
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Delegate" />
    <altmember cref="T:System.MulticastDelegate" />
  </Docs>
</Type>