<Type Name="Assembly" FullName="System.Reflection.Assembly">
  <TypeSignature Language="C#" Value="public abstract class Assembly : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._Assembly, System.Runtime.Serialization.ISerializable, System.Security.IEvidenceFactory" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Assembly extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._Assembly, class System.Runtime.Serialization.ISerializable, class System.Security.IEvidenceFactory" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Assembly" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Assembly&#xA;Implements _Assembly, ICustomAttributeProvider, IEvidenceFactory, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Assembly abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_Assembly, System::Runtime::Serialization::ISerializable, System::Security::IEvidenceFactory" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._Assembly</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Security.IEvidenceFactory</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._Assembly))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9922-101">Stellt eine Assembly dar, die ein wiederverwendbarer, in verschiedenen Versionen einsetzbarer und selbstbeschreibender Baustein einer Anwendung der Common Language Runtime (CLR) ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-101">Represents an assembly, which is a reusable, versionable, and self-describing building block of a common language runtime application.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-102">Verwenden der <xref:System.Reflection.Assembly> Klasse zum Laden von Assemblys, um die Metadaten und der Bestandteile Teile der Assemblys, die in Assemblys enthaltenen Typen zu ermitteln, und klicken Sie zum Erstellen von Instanzen dieser Typen zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="d9922-102">Use the <xref:System.Reflection.Assembly> class to load assemblies, to explore the metadata and constituent parts of assemblies, to discover the types contained in assemblies, and to create instances of those types.</span></span>  
  
 <span data-ttu-id="d9922-103">Ein Array von abzurufenden <xref:System.Reflection.Assembly> Objekte, die derzeit die Assemblys darstellen geladen in eine Anwendungsdomäne (z. B. die Standardanwendungsdomäne eines einfachen Projekts), verwenden die <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-103">To get an array of <xref:System.Reflection.Assembly> objects representing the assemblies currently loaded into an application domain (for example, the default application domain of a simple project), use the <xref:System.AppDomain.GetAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d9922-104">Laden Sie Assemblys dynamisch, die <xref:System.Reflection.Assembly> Klasse bietet die folgenden statischen Methoden (`Shared` Methoden in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d9922-104">To load assemblies dynamically, the <xref:System.Reflection.Assembly> class provides the following static methods (`Shared` methods in Visual Basic).</span></span> <span data-ttu-id="d9922-105">Assemblys werden in die Anwendungsdomäne, in dem der Ladevorgang, geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-105">Assemblies are loaded into the application domain where the load operation occurs.</span></span>  
  
-   <span data-ttu-id="d9922-106">Die empfohlene Methode zum Laden von Assemblys ist die Verwendung der <xref:System.AppDomain.Load%2A> -Methode, die identifiziert die Assembly, die mit ihrem Anzeigenamen geladen wird (z. B. "" System.Windows.Forms ", Version = 2.0.0.0, Culture = Neutral, PublicKeyToken = b77a5c561934e089").</span><span class="sxs-lookup"><span data-stu-id="d9922-106">The recommended way to load assemblies is to use the <xref:System.AppDomain.Load%2A> method, which identifies the assembly to be loaded by its display name (for example, "System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089").</span></span> <span data-ttu-id="d9922-107">Die Suche nach der Assembly folgt den Regeln, die in beschriebenen [so sucht Common Language Runtime nach Assemblys](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-107">The search for the assembly follows the rules described in [How the Runtime Locates Assemblies](~/docs/framework/deployment/how-the-runtime-locates-assemblies.md).</span></span>  
  
-   <span data-ttu-id="d9922-108">Die <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> und <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden ermöglichen es Ihnen, eine Assembly für die Reflektion, jedoch nicht für Ausführung geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-108">The <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods enable you to load an assembly for reflection, but not for execution.</span></span> <span data-ttu-id="d9922-109">Beispielsweise kann eine Assembly, die eine 64-Bit-Plattform konzipiert ist durch Code untersucht werden, die auf einer 32-Bit-Plattform ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-109">For example, an assembly that targets a 64-bit platform can be examined by code that is running on a 32-bit platform.</span></span>  
  
-   <span data-ttu-id="d9922-110">Die <xref:System.Reflection.Assembly.LoadFile%2A> und <xref:System.Reflection.Assembly.LoadFrom%2A> Methoden für die seltenen Fälle, in dem eine Assembly durch Pfad angegebenen muss, bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-110">The <xref:System.Reflection.Assembly.LoadFile%2A> and <xref:System.Reflection.Assembly.LoadFrom%2A> methods are provided for rare scenarios in which an assembly must be identified by path.</span></span>  
  
 <span data-ttu-id="d9922-111">Zum Abrufen einer <xref:System.Reflection.Assembly> Objekt für die derzeit ausgeführte Assembly verwendet die <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-111">To get an <xref:System.Reflection.Assembly> object for the currently executing assembly, use the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method.</span></span>  
  
 <span data-ttu-id="d9922-112">Viele Elemente der der <xref:System.Reflection.Assembly> -Klasse enthalten Informationen zu einer Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-112">Many members of the <xref:System.Reflection.Assembly> class provide information about an assembly.</span></span> <span data-ttu-id="d9922-113">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="d9922-113">For example:</span></span>  
  
-   <span data-ttu-id="d9922-114">Die <xref:System.Reflection.Assembly.GetName%2A> Methode gibt ein <xref:System.Reflection.AssemblyName> Objekt, das Zugriff auf die Teile des Anzeigenamens der Assembly bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-114">The <xref:System.Reflection.Assembly.GetName%2A> method returns an <xref:System.Reflection.AssemblyName> object that provides access to the parts of the assembly display name.</span></span>  
  
-   <span data-ttu-id="d9922-115">Die <xref:System.Reflection.Assembly.GetCustomAttributes%2A> Methode listet die Attribute, die auf die Assembly angewendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-115">The <xref:System.Reflection.Assembly.GetCustomAttributes%2A> method lists the attributes applied to the assembly.</span></span>  
  
-   <span data-ttu-id="d9922-116">Die <xref:System.Reflection.Assembly.GetFiles%2A> -Methode bietet Zugriff auf die Dateien in das Assemblymanifest.</span><span class="sxs-lookup"><span data-stu-id="d9922-116">The <xref:System.Reflection.Assembly.GetFiles%2A> method provides access to the files in the assembly manifest.</span></span>  
  
-   <span data-ttu-id="d9922-117">Die <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> Methode enthält die Namen der Ressourcen im Assemblymanifest.</span><span class="sxs-lookup"><span data-stu-id="d9922-117">The <xref:System.Reflection.Assembly.GetManifestResourceNames%2A> method provides the names of the resources in the assembly manifest.</span></span>  
  
 <span data-ttu-id="d9922-118">Die <xref:System.Reflection.Assembly.GetTypes%2A> Methode listet alle Typen in der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-118">The <xref:System.Reflection.Assembly.GetTypes%2A> method lists all the types in the assembly.</span></span> <span data-ttu-id="d9922-119">Die <xref:System.Reflection.Assembly.GetExportedTypes%2A> Methode führt die Objekttypen auf, die für Aufrufer außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-119">The <xref:System.Reflection.Assembly.GetExportedTypes%2A> method lists the types that are visible to callers outside the assembly.</span></span> <span data-ttu-id="d9922-120">Die <xref:System.Reflection.Assembly.GetType%2A> Methode kann verwendet werden, um für einen bestimmten Typ in der Assembly zu suchen.</span><span class="sxs-lookup"><span data-stu-id="d9922-120">The <xref:System.Reflection.Assembly.GetType%2A> method can be used to search for a particular type in the assembly.</span></span> <span data-ttu-id="d9922-121">Die <xref:System.Reflection.Assembly.CreateInstance%2A> Methode kann verwendet werden, um suchen und Erstellen von Instanzen von Typen in der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-121">The <xref:System.Reflection.Assembly.CreateInstance%2A> method can be used to search for and create instances of types in the assembly.</span></span>  
  
 <span data-ttu-id="d9922-122">Weitere Informationen zu Assemblys finden Sie im Abschnitt "Anwendung Domänen und Assemblys" in der [Anwendungsdomänen](~/docs/framework/app-domains/application-domains.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="d9922-122">For more information on assemblies, see the "Application Domains and Assemblies" section in the [Application Domains](~/docs/framework/app-domains/application-domains.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-123">Im folgenden Codebeispiel wird veranschaulicht, die aktuell ausgeführte Assembly zu erhalten, erstellen Sie eine Instanz eines Typs, die in dieser Assembly enthalten sind und Aufrufen einer der Methoden des Typs mit spätem Binden.</span><span class="sxs-lookup"><span data-stu-id="d9922-123">The following code example shows how to obtain the currently executing assembly, create an instance of a type contained in that assembly, and invoke one of the type's methods with late binding.</span></span> <span data-ttu-id="d9922-124">Zu diesem Zweck das Codebeispiel definiert eine Klasse namens `Example`, mit einer Methode namens `SampleMethod`.</span><span class="sxs-lookup"><span data-stu-id="d9922-124">For this purpose, the code example defines a class named `Example`, with a method named `SampleMethod`.</span></span> <span data-ttu-id="d9922-125">Der Konstruktor der Klasse akzeptiert eine ganze Zahl, die verwendet wird, um den Rückgabewert der Methode zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="d9922-125">The constructor of the class accepts an integer, which is used to compute the return value of the method.</span></span>  
  
 <span data-ttu-id="d9922-126">Das Codebeispiel zeigt auch die Verwendung von der <xref:System.Reflection.Assembly.GetName%2A> Methode zum Abrufen einer <xref:System.Reflection.AssemblyName> -Objekt, das zum Analysieren der vollständige Name der Assembly verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-126">The code example also demonstrates the use of the <xref:System.Reflection.Assembly.GetName%2A> method to obtain an <xref:System.Reflection.AssemblyName> object that can be used to parse the full name of the assembly.</span></span> <span data-ttu-id="d9922-127">Das Beispiel zeigt die Versionsnummer der Assembly, die <xref:System.Reflection.Assembly.CodeBase%2A> -Eigenschaft, und die <xref:System.Reflection.Assembly.EntryPoint%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-127">The example displays the version number of the assembly, the <xref:System.Reflection.Assembly.CodeBase%2A> property, and the <xref:System.Reflection.Assembly.EntryPoint%2A> property.</span></span>  
  
 [!code-cpp[AssemblyClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyClass/cpp/source.cpp#1)]
 [!code-csharp[AssemblyClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyClass/cs/source.cs#1)]
 [!code-vb[AssemblyClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyClass/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="d9922-128">für volle Vertrauenswürdigkeit für erben.</span><span class="sxs-lookup"><span data-stu-id="d9922-128">for full trust for inheritors.</span></span> <span data-ttu-id="d9922-129">Diese Klasse kann nicht von teilweise vertrauenswürdigem Code nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-129">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="d9922-130">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="d9922-130">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.AppDomain" />
    <altmember cref="T:System.Reflection.AssemblyName" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Assembly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Assembly();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-131">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.Assembly" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d9922-131">Initializes a new instance of the <see cref="T:System.Reflection.Assembly" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-132">Dieser Konstruktor wird von abgeleiteten Klassen aufgerufen, während der Erstellung der <xref:System.Reflection.Assembly> Objekte.</span><span class="sxs-lookup"><span data-stu-id="d9922-132">This constructor is invoked by derived classes during the construction of <xref:System.Reflection.Assembly> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public virtual string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.CodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-133">Ruft den ursprünglich angegebenen Speicherort der Assembly ab, z. B. in einem <see cref="T:System.Reflection.AssemblyName" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d9922-133">Gets the location of the assembly as specified originally, for example, in an <see cref="T:System.Reflection.AssemblyName" /> object.</span></span></summary>
        <value><span data-ttu-id="d9922-134">Der Speicherort der Assembly, der ursprünglich angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-134">The location of the assembly as specified originally.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-135">Verwenden Sie zum Abrufen des absoluten Pfads der geladenen Datei Manifest enthält die <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> Eigenschaft stattdessen.</span><span class="sxs-lookup"><span data-stu-id="d9922-135">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 <span data-ttu-id="d9922-136">Wenn die Assembly als Bytearray geladen wurde, verwenden Sie eine Überladung der <xref:System.Reflection.Assembly.Load%2A> Methode, die ein Array von Bytes enthält, diese Eigenschaft gibt den Speicherort der der Aufrufer der Methode, die nicht den Speicherort der geladenen Assembly zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-136">If the assembly was loaded as a byte array, using an overload of the <xref:System.Reflection.Assembly.Load%2A> method that takes an array of bytes, this property returns the location of the caller of the method, not the location of the loaded assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-137">Im folgenden Beispiel wird die <xref:System.Reflection.Assembly.CodeBase%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-137">The following example uses the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/codebase1.cpp#1)]
 [!code-csharp[System.Reflection.Assembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/codebase1.cs#1)]
 [!code-vb[System.Reflection.Assembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/codebase1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-138">für den Zugriff auf den Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-138">for access to the path.</span></span> <span data-ttu-id="d9922-139">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-139">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-140">Sucht einen Typ aus dieser Assembly und erstellt mithilfe der Systemaktivierung eine Instanz dieses Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-140">Locates a type from this assembly and creates an instance of it using the system activator.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="d9922-141">Der <see cref="P:System.Type.FullName" /> des zu suchenden Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-141">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <summary><span data-ttu-id="d9922-142">Sucht den angegebenen Typ aus dieser Assembly unter Berücksichtigung der Groß- und Kleinschreibung und erstellt mithilfe der Systemaktivierung eine Instanz dieses Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-142">Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="d9922-143">Eine Instanz des angegebenen Typs, der mit dem Standardkonstruktor erstellt wurde; oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-143">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="d9922-144">Der Typ wird mit dem Standardbinder aufgelöst, ohne Kultur- oder Aktivierungsattribute anzugeben, und mit <see cref="T:System.Reflection.BindingFlags" /> auf <see langword="Public" /> oder <see langword="Instance" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="d9922-144">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-145">Wenn die Laufzeit nicht gefunden wird `typeName` in der <xref:System.Reflection.Assembly> Instanz gibt `null` anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="d9922-145">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="d9922-146">Dies kann mehrere Ursachen haben:</span><span class="sxs-lookup"><span data-stu-id="d9922-146">This might happen because:</span></span>  
  
-   <span data-ttu-id="d9922-147">Sie noch nicht den vollqualifizierten Namen des Typs angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-147">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="d9922-148">Sie haben den voll qualifizierten Typnamen angegeben, aber ihre Anfrage entspricht nicht des Typs die Groß-/Kleinschreibung <xref:System.Type.FullName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-148">You've specified the fully qualified type name, but its case doesn’t match the case of the type's <xref:System.Type.FullName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d9922-149">Einen Vergleich Groß-/Kleinschreibung `typeName` rufen Sie mit der vollständigen Namen des Typs, der <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> überladen, und geben Sie `true` für die `ignoreCase` Argument.</span><span class="sxs-lookup"><span data-stu-id="d9922-149">For a case-insensitive comparison of `typeName` with the type's full name, call the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specify `true` for the `ignoreCase` argument.</span></span>  
  
-   <span data-ttu-id="d9922-150">Der Typ ist nicht vorhanden, in der aktuellen <xref:System.Reflection.Assembly> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d9922-150">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-151">Das folgende Beispiel definiert eine `Person` Klasse und ruft die <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> Methode, um sie zu instanziieren.</span><span class="sxs-lookup"><span data-stu-id="d9922-151">The following example defines a `Person` class and calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance1.cs#1)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-152"><paramref name="typeName" /> ist eine leere Zeichenfolge ("") oder eine Zeichenfolge, die mit einem Null-Zeichen beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-152"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="d9922-153">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-153">-or-</span></span>  
  
 <span data-ttu-id="d9922-154">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-154">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-155"><paramref name="typeName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-155"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d9922-156">Es wurde kein übereinstimmender Konstruktor gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-156">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-157"><paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-157"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-158"><paramref name="typeName" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-158"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-159">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-159">-or-</span></span>  
  
 <span data-ttu-id="d9922-160">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-160">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-161"><paramref name="typeName" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-161"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-162">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-162">-or-</span></span>  
  
 <span data-ttu-id="d9922-163"><paramref name="typeName" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-163"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-164">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-164">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-165">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-165">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public object CreateInstance (string typeName, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateInstance (typeName As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="d9922-166">Der <see cref="P:System.Type.FullName" /> des zu suchenden Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-166">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d9922-167"><see langword="true" />, um die Groß- und Kleinschreibung des Typnamens zu ignorieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-167"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9922-168">Sucht den angegebenen Typ aus dieser Assembly, unter wahlweiser Berücksichtigung der Groß- und Kleinschreibung, und erstellt mithilfe der Systemaktivierung eine Instanz dieses Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-168">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</span></span></summary>
        <returns><span data-ttu-id="d9922-169">Eine Instanz des angegebenen Typs, der mit dem Standardkonstruktor erstellt wurde; oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-169">An instance of the specified type created with the default constructor; or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="d9922-170">Der Typ wird mit dem Standardbinder aufgelöst, ohne Kultur- oder Aktivierungsattribute anzugeben, und mit <see cref="T:System.Reflection.BindingFlags" /> auf <see langword="Public" /> oder <see langword="Instance" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="d9922-170">The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags" /> set to <see langword="Public" /> or <see langword="Instance" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-171">Wenn die Laufzeit nicht gefunden wird `typeName` in der <xref:System.Reflection.Assembly> Instanz gibt `null` anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="d9922-171">If the runtime is unable to find `typeName` in the <xref:System.Reflection.Assembly> instance, it returns `null` instead of throwing an exception.</span></span> <span data-ttu-id="d9922-172">Dies kann mehrere Ursachen haben:</span><span class="sxs-lookup"><span data-stu-id="d9922-172">This might happen because:</span></span>  
  
-   <span data-ttu-id="d9922-173">Sie noch nicht den vollqualifizierten Namen des Typs angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-173">You haven't specified the fully qualified name of the type.</span></span>  
  
-   <span data-ttu-id="d9922-174">Der Typ ist nicht vorhanden, in der aktuellen <xref:System.Reflection.Assembly> Instanz.</span><span class="sxs-lookup"><span data-stu-id="d9922-174">The type doesn’t exist in the current <xref:System.Reflection.Assembly> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-175">Das folgende Beispiel definiert eine `Person` Klasse.</span><span class="sxs-lookup"><span data-stu-id="d9922-175">The following example defines a `Person` class.</span></span> <span data-ttu-id="d9922-176">Er ruft dann die <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> -Methode instanziieren, aber da die Groß-/Kleinschreibung von der `typeName` Argument entspricht nicht dem Typ <xref:System.Type.FullName%2A> -Eigenschaft, die Methode gibt `null`.</span><span class="sxs-lookup"><span data-stu-id="d9922-176">It then calls the <xref:System.Reflection.Assembly.CreateInstance%28System.String%29> method to instantiate it, but because the casing of the `typeName` argument doesn’t match that of the type's <xref:System.Type.FullName%2A> property, the method returns `null`.</span></span> <span data-ttu-id="d9922-177">Wenn das Beispiel übergibt die gleiche Zeichenfolge, die die <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> überladen und gibt an, dass der Vergleich Groß-/Kleinschreibung, sollten die `Person` Klasse gefunden wird, und ein `Person` Objekt erfolgreich instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-177">When the example passes the same string to the <xref:System.Reflection.Assembly.CreateInstance%28System.String%2CSystem.Boolean%29> overload and specifies that the comparison should be case-insensitive, the `Person` class is found, and a `Person` object is successfully instantiated.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/cs/createinstance2.cs#2)]
 [!code-vb[System.Reflection.Assembly.CreateInstance#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.createinstance/vb/createinstance2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-178"><paramref name="typeName" /> ist eine leere Zeichenfolge ("") oder eine Zeichenfolge, die mit einem Null-Zeichen beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-178"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="d9922-179">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-179">-or-</span></span>  
  
 <span data-ttu-id="d9922-180">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-180">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d9922-181">Es wurde kein übereinstimmender Konstruktor gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-181">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-182"><paramref name="typeName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-182"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-183"><paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-183"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-184"><paramref name="typeName" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-184"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-185">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-185">-or-</span></span>  
  
 <span data-ttu-id="d9922-186">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-186">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-187"><paramref name="typeName" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-187"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-188">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-188">-or-</span></span>  
  
 <span data-ttu-id="d9922-189"><paramref name="typeName" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-189"><paramref name="typeName" /> requires a dependent assembly that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-190">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-190">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-191">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-191">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public virtual object CreateInstance (string typeName, bool ignoreCase, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, object[] args, System.Globalization.CultureInfo culture, object[] activationAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object CreateInstance(string typeName, bool ignoreCase, valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.Binder binder, object[] args, class System.Globalization.CultureInfo culture, object[] activationAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ CreateInstance(System::String ^ typeName, bool ignoreCase, System::Reflection::BindingFlags bindingAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ args, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::Object ^&gt; ^ activationAttributes);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="args" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="activationAttributes" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="d9922-192">Der <see cref="P:System.Type.FullName" /> des zu suchenden Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-192">The <see cref="P:System.Type.FullName" /> of the type to locate.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d9922-193"><see langword="true" />, um die Groß- und Kleinschreibung des Typnamens zu ignorieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-193"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <param name="bindingAttr"><span data-ttu-id="d9922-194">Eine Bitmaske, die sich auf die Ausführung der Suche auswirkt.</span><span class="sxs-lookup"><span data-stu-id="d9922-194">A bitmask that affects the way in which the search is conducted.</span></span> <span data-ttu-id="d9922-195">Der Wert ist eine Kombination von Bitflags aus <see cref="T:System.Reflection.BindingFlags" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-195">The value is a combination of bit flags from <see cref="T:System.Reflection.BindingFlags" />.</span></span></param>
        <param name="binder"><span data-ttu-id="d9922-196">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see langword="MemberInfo" />-Objekten über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="d9922-196">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects via reflection.</span></span> <span data-ttu-id="d9922-197">Wenn der <c>Binder</c> <see langword="null" /> ist, wird der Standardbinder verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-197">If <c>binder</c> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="args"><span data-ttu-id="d9922-198">Ein Array, das die an den Konstruktor zu übergebenden Argumente enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-198">An array that contains the arguments to be passed to the constructor.</span></span> <span data-ttu-id="d9922-199">Dieses Array von Argumenten muss bezüglich Anzahl, Reihenfolge und Typ mit den Parametern des aufzurufenden Konstruktors übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="d9922-199">This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="d9922-200">Wenn der Standardkonstruktor gewünscht ist, muss <c>args</c> ein leeres Array oder <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="d9922-200">If the default constructor is desired, <c>args</c> must be an empty array or <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="d9922-201">Eine Instanz von <see langword="CultureInfo" /> für die Steuerung der Umwandlung von Typen.</span><span class="sxs-lookup"><span data-stu-id="d9922-201">An instance of <see langword="CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="d9922-202">Wenn dies <see langword="null" /> ist, wird die <see langword="CultureInfo" /> des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-202">If this is <see langword="null" />, the <see langword="CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="d9922-203">(Dies ist z. B. erforderlich, um einen <see langword="String" />, der 1000 darstellt, in einen <see langword="Double" />-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.)</span><span class="sxs-lookup"><span data-stu-id="d9922-203">(This is necessary to convert a <see langword="String" /> that represents 1000 to a <see langword="Double" /> value, for example, since 1000 is represented differently by different cultures.)</span></span></param>
        <param name="activationAttributes"><span data-ttu-id="d9922-204">Ein Array mit einem oder mehreren Attributen, die an der Aktivierung beteiligt sein können.</span><span class="sxs-lookup"><span data-stu-id="d9922-204">An array of one or more attributes that can participate in activation.</span></span> <span data-ttu-id="d9922-205">Üblicherweise ein Array, das ein einzelnes <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" />-Objekt enthält, das die zum Aktivieren eines Remoteobjekts erforderliche URL angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-205">Typically, an array that contains a single <see cref="T:System.Runtime.Remoting.Activation.UrlAttribute" /> object that specifies the URL that is required to activate a remote object.</span></span>  <span data-ttu-id="d9922-206">Der Parameter ist vom Client aktivierten Objekten zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="d9922-206">This parameter is related to client-activated objects.</span></span> <span data-ttu-id="d9922-207">Die Clientaktivierung ist eine veraltete Technologie, die zum Zweck der Abwärtskompatibilität mit vorhandenen Anwendungen beibehalten, jedoch nicht für die Neuentwicklung empfohlen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-207">Client activation is a legacy technology that is retained for backward compatibility but is not recommended for new development.</span></span> <span data-ttu-id="d9922-208">Für verteilte Anwendungen sollte stattdessen Windows Communication Foundation verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-208">Distributed applications should instead use Windows Communication Foundation.</span></span></param>
        <summary><span data-ttu-id="d9922-209">Sucht den angegebenen Typ aus dieser Assembly und erstellt mithilfe der Systemaktivierung eine Instanz dieses Typs. Hierbei ist die Berücksichtigung der Groß- und Kleinschreibung optional und Kultur, Argumente, Bindungs- und Aktivierungsattribute sind angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-209">Locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</span></span></summary>
        <returns><span data-ttu-id="d9922-210">Eine Instanz des angegebenen Typs oder <see langword="null" />, wenn <paramref name="typeName" /> nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-210">An instance of the specified type, or <see langword="null" /> if <paramref name="typeName" /> is not found.</span></span> <span data-ttu-id="d9922-211">Die angegebenen Argumente werden verwendet, um den Typ aufzulösen und den Konstruktor zu binden, der verwendet wird, um die Instanz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-211">The supplied arguments are used to resolve the type, and to bind the constructor that is used to create the instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-212"><paramref name="typeName" /> ist eine leere Zeichenfolge ("") oder eine Zeichenfolge, die mit einem Null-Zeichen beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-212"><paramref name="typeName" /> is an empty string ("") or a string beginning with a null character.</span></span>  
  
 <span data-ttu-id="d9922-213">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-213">-or-</span></span>  
  
 <span data-ttu-id="d9922-214">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-214">The current assembly was loaded into the reflection-only context.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-215"><paramref name="typeName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-215"><paramref name="typeName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="d9922-216">Es wurde kein übereinstimmender Konstruktor gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-216">No matching constructor was found.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9922-217">Ein nicht leeres Array von Aktivierungsattributen wird an einen Typ übergeben, der nicht von <see cref="T:System.MarshalByRefObject" /> erbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-217">A non-empty activation attributes array is passed to a type that does not inherit from <see cref="T:System.MarshalByRefObject" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-218"><paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-218"><paramref name="typeName" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-219"><paramref name="typeName" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-219"><paramref name="typeName" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-220">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-220">-or-</span></span>  
  
 <span data-ttu-id="d9922-221">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="typeName" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-221">The current assembly was loaded into the reflection-only context, and <paramref name="typeName" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-222"><paramref name="typeName" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-222"><paramref name="typeName" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-223">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-223">-or-</span></span>  
  
 <span data-ttu-id="d9922-224"><paramref name="typeName" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-224"><paramref name="typeName" /> requires a dependent assembly which that was compiled for a version of the runtime that is later than the currently loaded version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-225">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-225">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-226">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-226">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-227">So erstellen eine Instanz eines Delegaten.</span><span class="sxs-lookup"><span data-stu-id="d9922-227">to create an instance of a delegate.</span></span> <span data-ttu-id="d9922-228">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="d9922-228">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="CreateQualifiedName">
      <MemberSignature Language="C#" Value="public static string CreateQualifiedName (string assemblyName, string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CreateQualifiedName(string assemblyName, string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.CreateQualifiedName(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateQualifiedName (assemblyName As String, typeName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CreateQualifiedName(System::String ^ assemblyName, System::String ^ typeName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName"><span data-ttu-id="d9922-229">Der Anzeigename einer Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-229">The display name of an assembly.</span></span></param>
        <param name="typeName"><span data-ttu-id="d9922-230">Der vollständige Name eines Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-230">The full name of a type.</span></span></param>
        <summary><span data-ttu-id="d9922-231">Erstellt den Namen eines Typs, der durch den Anzeigenamen der zugehörigen Assembly gekennzeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-231">Creates the name of a type qualified by the display name of its assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-232">Der vollständige Name des Typs, der durch den Anzeigenamen der Assembly gekennzeichnet ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-232">The full name of the type qualified by the display name of the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-233">Das Format der zurückgegebenen Zeichenfolge ist:</span><span class="sxs-lookup"><span data-stu-id="d9922-233">The format of the returned string is:</span></span>  
  
 <span data-ttu-id="d9922-234">\<FullTypeName>, \<AssemblyDisplayName></span><span class="sxs-lookup"><span data-stu-id="d9922-234">\<FullTypeName>, \<AssemblyDisplayName></span></span>  
  
 <span data-ttu-id="d9922-235">Finden Sie unter <xref:System.Reflection.AssemblyName> eine Beschreibung des Formats des Anzeigenamens einer Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-235">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 <span data-ttu-id="d9922-236">Um Änderungen in der common Language Runtime-Versionen zu unterstützen, verwenden Sie den qualifizierten Namen selbst zu erstellen, anstatt diese Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-236">To accommodate changes in versions of the common language runtime, use this method rather than constructing the qualified name yourself.</span></span>  <span data-ttu-id="d9922-237">Informationen zu vollqualifizierten Assemblynamen finden Sie unter <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-237">For information about qualified assembly names, see <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-238">Ruft eine Sammlung ab, die die benutzerdefinierten Attribute dieser Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-238">Gets a collection that contains this assembly's custom attributes.</span></span></summary>
        <value><span data-ttu-id="d9922-239">Eine Sammlung, die die benutzerdefinierten Attribute dieser Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-239">A collection that contains this assembly's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-240">Ruft eine Auflistung der Typen ab, die in dieser Assembly definiert sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-240">Gets a collection of the types defined in this assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-241">Eine Sammlung der Typen, die in dieser Assembly definiert sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-241">A collection of the types defined in this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-242">Die <xref:System.Reflection.Assembly.DefinedTypes%2A> Eigenschaft ist vergleichbar mit der <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> -Methode, außer dass die <xref:System.Reflection.Assembly.DefinedTypes%2A> Eigenschaft gibt eine Auflistung von <xref:System.Reflection.TypeInfo> Objekte, und die <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> Methode gibt ein Array von <xref:System.Type> Objekte.</span><span class="sxs-lookup"><span data-stu-id="d9922-242">The <xref:System.Reflection.Assembly.DefinedTypes%2A> property is comparable to the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method, except that the <xref:System.Reflection.Assembly.DefinedTypes%2A> property returns a collection of <xref:System.Reflection.TypeInfo> objects, and the <xref:System.Reflection.Assembly.GetTypes%2A?displayProperty=nameWithType> method returns an array of <xref:System.Type> objects.</span></span>  
  
 <span data-ttu-id="d9922-243">Das zurückgegebene Array enthält geschachtelte Typen.</span><span class="sxs-lookup"><span data-stu-id="d9922-243">The returned array includes nested types.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Assembly.GetTypes" />
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EntryPoint</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-244">Ruft den Einstiegspunkt dieser Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-244">Gets the entry point of this assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-245">Ein Objekt, das den Einstiegspunkt dieser Assembly darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-245">An object that represents the entry point of this assembly.</span></span> <span data-ttu-id="d9922-246">Wenn kein Einstiegspunkt gefunden wird, z. B. weil die Assembly eine DLL ist, wird <see langword="null" /> zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-246">If no entry point is found (for example, the assembly is a DLL), <see langword="null" /> is returned.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="d9922-247">Das Objekt, das mit dieser Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-247">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="d9922-248">Bestimmt, ob diese Assembly und das angegebene Objekt gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-248">Determines whether this assembly and the specified object are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="d9922-249"><see langword="true" />, wenn <paramref name="o" /> gleich dieser Instanz ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-249"><see langword="true" /> if <paramref name="o" /> is equal to this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-250">Die <xref:System.Reflection.Assembly.Equals%2A> Methode führt eine Überprüfen auf Verweisgleichheit, um zu bestimmen, ob die aktuelle Instanz und `o` gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-250">The <xref:System.Reflection.Assembly.Equals%2A> method performs a test for reference equality to determine whether the current instance and `o` are equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public virtual string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.EscapedCodeBase</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-251">Ruft den URI einschließlich Escapezeichen ab, der die CodeBase darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-251">Gets the URI, including escape characters, that represents the codebase.</span></span></summary>
        <value><span data-ttu-id="d9922-252">Ein URI mit Escapezeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-252">A URI with escape characters.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-253">für den Zugriff auf den Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-253">for access to the path.</span></span> <span data-ttu-id="d9922-254">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-254">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public virtual System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Evidence</InterfaceMember>
        <InterfaceMember>P:System.Security.IEvidenceFactory.Evidence</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-255">Ruft den Beweis für diese Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-255">Gets the evidence for this assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-256">Der Beweis für diese Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-256">The evidence for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-257">Den Beweis bilden die Informationen, die der Sicherheitsrichtlinie als Eingaben für Entscheidungen dienen, z. B., welche Berechtigungen einem Code erteilt werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-257">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-258">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-258">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-259">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-259">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="ExportedTypes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;Type&gt; ExportedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; ExportedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ExportedTypes As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ ExportedTypes { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-260">Ruft eine Auflistung der in dieser Assembly definierten öffentlichen Typen ab, die außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-260">Gets a collection of the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-261">Eine Sammlung der in dieser Assembly definierten öffentlichen Typen, die außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-261">A collection of the public types defined in this assembly that are visible outside the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public virtual string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.FullName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-262">Ruft den Anzeigenamen der Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-262">Gets the display name of the assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-263">Der Anzeigename der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-263">The display name of the assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-264">Finden Sie unter <xref:System.Reflection.AssemblyName> eine Beschreibung des Formats des Anzeigenamens einer Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-264">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-265">Schreiben von Code zum Analysieren von Anzeigenamen suchen wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="d9922-265">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="d9922-266">Stattdessen übergeben Sie den Namen, der die <xref:System.Reflection.AssemblyName.%23ctor%2A> -Konstruktor, der analysiert, und füllt die entsprechenden Felder der neuen <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="d9922-266">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="d9922-267">In .NET Framework, Version 2.0 Prozessorarchitektur Assemblyidentität hinzugefügt und kann als Teil der Assembly-Zeichenfolgen angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-267">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d9922-268">Ist jedoch nicht in die zurückgegebene Zeichenfolge enthalten die <xref:System.Reflection.Assembly.FullName%2A> Eigenschaft, aus Gründen der Kompatibilität.</span><span class="sxs-lookup"><span data-stu-id="d9922-268">However, it is not included in the string returned by the <xref:System.Reflection.Assembly.FullName%2A> property, for compatibility reasons.</span></span> <span data-ttu-id="d9922-269">Siehe <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-269">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-270">Das folgende Beispiel ruft den Anzeigenamen der aktuell ausgeführten Assembly und der Anzeigename der Assembly, enthält die <xref:System.Int32> Typ (`int` in c# `Integer` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="d9922-270">The following example retrieves the display name of the currently executing assembly, and the display name of the assembly that contains the <xref:System.Int32> type (`int` in C#, `Integer` in Visual Basic).</span></span>  
  
 [!code-cpp[Assembly.FullName#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.FullName/CPP/Example.cpp#1)]
 [!code-csharp[Assembly.FullName#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.FullName/CS/Example.cs#1)]
 [!code-vb[Assembly.FullName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.FullName/VB/Example.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetAssembly (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetAssembly(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetAssembly(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetAssembly(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d9922-271">Ein Objekt, das einen Typ in der Assembly darstellt, die zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-271">An object representing a type in the assembly that will be returned.</span></span></param>
        <summary><span data-ttu-id="d9922-272">Ruft die derzeit geladene Assembly ab, in der der angegebene Typ definiert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-272">Gets the currently loaded assembly in which the specified type is defined.</span></span></summary>
        <returns><span data-ttu-id="d9922-273">Die Assembly, in der der angegebene Typ definiert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-273">The assembly in which the specified type is defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-274">Beim Aufrufen dieser Methode entspricht, die Abrufen des Werts der <xref:System.Type.Assembly?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-274">Calling this method is equivalent to retrieving the value of the  <xref:System.Type.Assembly?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d9922-275">Allerdings die <xref:System.Type.Assembly?displayProperty=nameWithType> Eigenschaft in der Regel eine bessere Leistung bietet.</span><span class="sxs-lookup"><span data-stu-id="d9922-275">However, the <xref:System.Type.Assembly?displayProperty=nameWithType> property typically offers superior performance.</span></span>  
  
 <span data-ttu-id="d9922-276">Um diese Methode aufrufen, benötigen Sie ein <xref:System.Type> -Objekt, das bedeutet, dass die Assembly, in dem die Klasse definiert ist, bereits geladen sein muss.</span><span class="sxs-lookup"><span data-stu-id="d9922-276">In order to call this method, you must have a <xref:System.Type> object, which means that the assembly in which the class is defined must already be loaded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-277">Das folgende Beispiel ruft die Assembly mit dem <xref:System.Int32> geben und dessen Name und Dateispeicherort angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d9922-277">The following example retrieves the assembly that contains the <xref:System.Int32> type and displays its name and file location.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/GetAssembly1.cpp#12)]
 [!code-csharp[System.Reflection.Assembly#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/GetAssembly1.cs#12)]
 [!code-vb[System.Reflection.Assembly#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/GetAssembly1.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-278"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-278"><paramref name="type" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-279">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-279">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-280">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-280">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCallingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetCallingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetCallingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCallingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetCallingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetCallingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-281">Gibt die <see cref="T:System.Reflection.Assembly" /> der Methode zurück, die die derzeit ausgeführte Methode aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="d9922-281">Returns the <see cref="T:System.Reflection.Assembly" /> of the method that invoked the currently executing method.</span></span></summary>
        <returns><span data-ttu-id="d9922-282">Das <see langword="Assembly" />-Objekt der Methode, die die derzeit ausgeführte Methode aufgerufen hat.</span><span class="sxs-lookup"><span data-stu-id="d9922-282">The <see langword="Assembly" /> object of the method that invoked the currently executing method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-283">Wenn die Methode aufgerufen wird, die die <xref:System.Reflection.Assembly.GetCallingAssembly%2A> Methode vom Just-in-Time (JIT)-Compiler Inline erweitert wird, oder wenn ihr Aufrufer Inline erweitert wird, der Assembly, die zurückgegebene <xref:System.Reflection.Assembly.GetCallingAssembly%2A> unerwartet abweichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-283">If the method that calls the <xref:System.Reflection.Assembly.GetCallingAssembly%2A> method is expanded inline by the just-in-time (JIT) compiler, or if its caller is expanded inline, the assembly that is returned by <xref:System.Reflection.Assembly.GetCallingAssembly%2A> may differ unexpectedly.</span></span> <span data-ttu-id="d9922-284">Betrachten Sie beispielsweise die folgenden Methoden und Assemblys:</span><span class="sxs-lookup"><span data-stu-id="d9922-284">For example, consider the following methods and assemblies:</span></span>  
  
-   <span data-ttu-id="d9922-285">Methode `M1` in der Assembly `A1` Aufrufe <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-285">Method `M1` in assembly `A1` calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
-   <span data-ttu-id="d9922-286">Methode `M2` in der Assembly `A2` Aufrufe `M1`.</span><span class="sxs-lookup"><span data-stu-id="d9922-286">Method `M2` in assembly `A2` calls `M1`.</span></span>  
  
-   <span data-ttu-id="d9922-287">Methode `M3` in der Assembly `A3` Aufrufe `M2`.</span><span class="sxs-lookup"><span data-stu-id="d9922-287">Method `M3` in assembly `A3` calls `M2`.</span></span>  
  
 <span data-ttu-id="d9922-288">Wenn `M1` ist nicht inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> gibt `A2`.</span><span class="sxs-lookup"><span data-stu-id="d9922-288">When `M1` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="d9922-289">Wenn `M1` inline erweitert wird, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> gibt `A3`.</span><span class="sxs-lookup"><span data-stu-id="d9922-289">When `M1` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span> <span data-ttu-id="d9922-290">Auf ähnliche Weise, dass bei `M2` ist nicht inline, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> gibt `A2`.</span><span class="sxs-lookup"><span data-stu-id="d9922-290">Similarly, when `M2` is not inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A2`.</span></span> <span data-ttu-id="d9922-291">Wenn `M2` inline erweitert wird, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> gibt `A3`.</span><span class="sxs-lookup"><span data-stu-id="d9922-291">When `M2` is inlined, <xref:System.Reflection.Assembly.GetCallingAssembly%2A> returns `A3`.</span></span>  
  
 <span data-ttu-id="d9922-292">Dieser Effekt tritt auch auf, wenn `M1` wird als ein Endeaufruf aus `M2`, oder wenn `M2` wird als ein Endeaufruf aus `M3`.</span><span class="sxs-lookup"><span data-stu-id="d9922-292">This effect also occurs when `M1` executes as a tail call from `M2`, or when `M2` executes as a tail call from `M3`.</span></span> <span data-ttu-id="d9922-293">Sie können verhindern, dass den JIT-Compiler von inlining der Methode, die aufgerufen <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, durch Anwenden der <xref:System.Runtime.CompilerServices.MethodImplAttribute> -Attribut mit der <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> Flag, aber es gibt keinen ähnlichen Mechanismus zum Verhindern von Endeaufrufen.</span><span class="sxs-lookup"><span data-stu-id="d9922-293">You can prevent the JIT compiler from inlining the method that calls <xref:System.Reflection.Assembly.GetCallingAssembly%2A>, by applying the <xref:System.Runtime.CompilerServices.MethodImplAttribute> attribute with the <xref:System.Runtime.CompilerServices.MethodImplOptions.NoInlining?displayProperty=nameWithType> flag, but there is no similar mechanism for preventing tail calls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-294">Im folgende Beispiel ruft die aufrufende Assembly der aktuellen Methode ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-294">The following example gets the calling assembly of the current method.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/getcallingassembly1.cpp#4)]
 [!code-csharp[System.Reflection.Assembly#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/getcallingassembly1.cs#4)]
 [!code-vb[System.Reflection.Assembly#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/getcallingassembly1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-295">Ruft die benutzerdefinierten Attribute für diese Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-295">Gets the custom attributes for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="d9922-296">Dieses Argument wird für Objekte vom Typ <see cref="T:System.Reflection.Assembly" /> ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-296">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="d9922-297">Ruft alle benutzerdefinierten Attribute für diese Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-297">Gets all the custom attributes for this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-298">Ein Array, das die benutzerdefinierten Attribute für diese Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-298">An array that contains the custom attributes for this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-299">Diese Methode implementiert die entsprechende <xref:System.Reflection.ICustomAttributeProvider> -Schnittstellenmethode.</span><span class="sxs-lookup"><span data-stu-id="d9922-299">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="d9922-300">Aus diesem Grund die `inherit` Parameter muss angegeben werden, obwohl er ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-300">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="d9922-301">Ein Pseudo-Attribut gibt an Bits für die Core-Metadaten, die festgelegt werden muss, wenn das Attribut vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-301">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="d9922-302">Im Gegensatz zu einem benutzerdefinierten Attribut, das erweitert der Metadaten für einen Typ und wird zusammen mit dem Typ gespeichert, eine Pseudo-Attribut ändert die Metadaten für den Typ und anschließend verworfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-302">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="d9922-303">Einige der resultierenden Bits kann mit vorhandenen Reflektions-APIs zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-303">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="d9922-304">In der folgenden Tabelle werden zusammengefasst, die unterschiedliche Pseudo-Attribute und die Accessoren für die Bits, die bei der Reflektion verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-304">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="d9922-305">Pseudo-Attribut</span><span class="sxs-lookup"><span data-stu-id="d9922-305">Pseudo-Attribute</span></span>|<span data-ttu-id="d9922-306">Metadaten-Bits</span><span class="sxs-lookup"><span data-stu-id="d9922-306">Metadata Bits</span></span>|<span data-ttu-id="d9922-307">Reflektion Zugriffsmethode</span><span class="sxs-lookup"><span data-stu-id="d9922-307">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="d9922-308">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-308">DllImportAttribute</span></span>|<span data-ttu-id="d9922-309">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="d9922-309">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="d9922-310">DLL-Namen</span><span class="sxs-lookup"><span data-stu-id="d9922-310">DLL name</span></span>|<span data-ttu-id="d9922-311">Kein Accessor für PInvokeMap für normale Methode/globale Methodenattribute.</span><span class="sxs-lookup"><span data-stu-id="d9922-311">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="d9922-312">Kein Accessor für DLL-Namen.</span><span class="sxs-lookup"><span data-stu-id="d9922-312">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="d9922-313">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-313">GuidAttribute</span></span>|<span data-ttu-id="d9922-314">Gespeichert als echte benutzerdefinierte Attribut.</span><span class="sxs-lookup"><span data-stu-id="d9922-314">Stored as a real custom attribute.</span></span>|<span data-ttu-id="d9922-315">Zugriff auf als echte benutzerdefinierte Attribut.</span><span class="sxs-lookup"><span data-stu-id="d9922-315">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="d9922-316">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-316">ComImportAttribute</span></span>|<span data-ttu-id="d9922-317">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="d9922-317">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="d9922-318">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="d9922-318">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="d9922-319">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-319">SerializableAttribute</span></span>|<span data-ttu-id="d9922-320">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="d9922-320">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="d9922-321">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="d9922-321">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="d9922-322">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-322">NonSerializedAttribute</span></span>|<span data-ttu-id="d9922-323">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="d9922-323">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="d9922-324">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="d9922-324">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="d9922-325">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-325">MethodImplAttribute</span></span>|<span data-ttu-id="d9922-326">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="d9922-326">CorMethodImpl</span></span>|<span data-ttu-id="d9922-327">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d9922-327">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="d9922-328">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d9922-328">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="d9922-329">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-329">MarshalAsAttribute</span></span>|<span data-ttu-id="d9922-330">Verschiedene Bits.</span><span class="sxs-lookup"><span data-stu-id="d9922-330">Various bits.</span></span>|<span data-ttu-id="d9922-331">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-331">No accessor.</span></span>|  
|<span data-ttu-id="d9922-332">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-332">PreserveSigAttribute</span></span>|<span data-ttu-id="d9922-333">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="d9922-333">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="d9922-334">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d9922-334">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="d9922-335">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d9922-335">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="d9922-336">InAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-336">InAttribute</span></span>|<span data-ttu-id="d9922-337">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="d9922-337">CorParamAttr.pdIn</span></span>|<span data-ttu-id="d9922-338">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="d9922-338">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="d9922-339">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-339">OutAttribute</span></span>|<span data-ttu-id="d9922-340">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="d9922-340">CorParamAttr.pdOut</span></span>|<span data-ttu-id="d9922-341">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="d9922-341">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="d9922-342">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-342">StructLayoutAttribute</span></span>|<span data-ttu-id="d9922-343">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d9922-343">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="d9922-344">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d9922-344">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="d9922-345">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="d9922-345">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="d9922-346">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d9922-346">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="d9922-347">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="d9922-347">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="d9922-348">Packen von Klassen.</span><span class="sxs-lookup"><span data-stu-id="d9922-348">Class packing.</span></span>|<span data-ttu-id="d9922-349">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d9922-349">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="d9922-350">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d9922-350">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="d9922-351">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="d9922-351">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="d9922-352">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d9922-352">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="d9922-353">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="d9922-353">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="d9922-354">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-354">No accessor.</span></span>|  
|<span data-ttu-id="d9922-355">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-355">FieldOffsetAttribute</span></span>|<span data-ttu-id="d9922-356">Feld Offset.</span><span class="sxs-lookup"><span data-stu-id="d9922-356">Field offset.</span></span>|<span data-ttu-id="d9922-357">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-357">No accessor.</span></span>|  
|<span data-ttu-id="d9922-358">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-358">AssemblyLoadAttribute</span></span>|<span data-ttu-id="d9922-359">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="d9922-359">CorAssemblyFlags</span></span>|<span data-ttu-id="d9922-360">Kein Accessor oder Enumerator.</span><span class="sxs-lookup"><span data-stu-id="d9922-360">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-361">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-361">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-362">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-362">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public virtual object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="d9922-363">Der Typ, für den die benutzerdefinierten Attribute zurückzugeben sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-363">The type for which the custom attributes are to be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="d9922-364">Dieses Argument wird für Objekte vom Typ <see cref="T:System.Reflection.Assembly" /> ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-364">This argument is ignored for objects of type <see cref="T:System.Reflection.Assembly" />.</span></span></param>
        <summary><span data-ttu-id="d9922-365">Ruft die benutzerdefinierten Attribute für diese Assembly ab, wie durch den Typ angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-365">Gets the custom attributes for this assembly as specified by type.</span></span></summary>
        <returns><span data-ttu-id="d9922-366">Ein Array, das die benutzerdefinierten Attribute für diese Assembly enthält, wie durch <paramref name="attributeType" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-366">An array that contains the custom attributes for this assembly as specified by <paramref name="attributeType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-367">Diese Methode implementiert die entsprechende <xref:System.Reflection.ICustomAttributeProvider> -Schnittstellenmethode.</span><span class="sxs-lookup"><span data-stu-id="d9922-367">This method implements the corresponding <xref:System.Reflection.ICustomAttributeProvider> interface method.</span></span> <span data-ttu-id="d9922-368">Aus diesem Grund die `inherit` Parameter muss angegeben werden, obwohl er ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-368">Therefore, the `inherit` parameter must be specified even though it is ignored.</span></span>  
  
 <span data-ttu-id="d9922-369">Ein Pseudo-Attribut gibt an Bits für die Core-Metadaten, die festgelegt werden muss, wenn das Attribut vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-369">A pseudo-attribute indicates bits of the core metadata that must be set when the attribute is present.</span></span> <span data-ttu-id="d9922-370">Im Gegensatz zu einem benutzerdefinierten Attribut, das erweitert der Metadaten für einen Typ und wird zusammen mit dem Typ gespeichert, eine Pseudo-Attribut ändert die Metadaten für den Typ und anschließend verworfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-370">Unlike a custom attribute that extends the metadata for a type and is saved along with the type, a pseudo-attribute modifies the metadata for the type and then is discarded.</span></span> <span data-ttu-id="d9922-371">Einige der resultierenden Bits kann mit vorhandenen Reflektions-APIs zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-371">Some of the resulting bits cannot be accessed using existing reflection APIs.</span></span>  
  
 <span data-ttu-id="d9922-372">In der folgenden Tabelle werden zusammengefasst, die unterschiedliche Pseudo-Attribute und die Accessoren für die Bits, die bei der Reflektion verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-372">The following table summarizes the different pseudo-attributes and the accessors for the bits that are available in reflection.</span></span>  
  
|<span data-ttu-id="d9922-373">Pseudo-Attribut</span><span class="sxs-lookup"><span data-stu-id="d9922-373">Pseudo-Attribute</span></span>|<span data-ttu-id="d9922-374">Metadaten-Bits</span><span class="sxs-lookup"><span data-stu-id="d9922-374">Metadata Bits</span></span>|<span data-ttu-id="d9922-375">Reflektion Zugriffsmethode</span><span class="sxs-lookup"><span data-stu-id="d9922-375">Reflection Accessor</span></span>|  
|-----------------------|-------------------|-------------------------|  
|<span data-ttu-id="d9922-376">DllImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-376">DllImportAttribute</span></span>|<span data-ttu-id="d9922-377">CorPInvokeMap</span><span class="sxs-lookup"><span data-stu-id="d9922-377">CorPInvokeMap</span></span><br /><br /> <span data-ttu-id="d9922-378">DLL-Namen</span><span class="sxs-lookup"><span data-stu-id="d9922-378">DLL name</span></span>|<span data-ttu-id="d9922-379">Kein Accessor für PInvokeMap für normale Methode/globale Methodenattribute.</span><span class="sxs-lookup"><span data-stu-id="d9922-379">No accessor for PInvokeMap for ordinary method/global method attributes.</span></span><br /><br /> <span data-ttu-id="d9922-380">Kein Accessor für DLL-Namen.</span><span class="sxs-lookup"><span data-stu-id="d9922-380">No accessor for DLL name.</span></span>|  
|<span data-ttu-id="d9922-381">GuidAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-381">GuidAttribute</span></span>|<span data-ttu-id="d9922-382">Gespeichert als echte benutzerdefinierte Attribut.</span><span class="sxs-lookup"><span data-stu-id="d9922-382">Stored as a real custom attribute.</span></span>|<span data-ttu-id="d9922-383">Zugriff auf als echte benutzerdefinierte Attribut.</span><span class="sxs-lookup"><span data-stu-id="d9922-383">Accessed as a real custom attribute.</span></span>|  
|<span data-ttu-id="d9922-384">ComImportAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-384">ComImportAttribute</span></span>|<span data-ttu-id="d9922-385">CorTypeAttr.tdImport</span><span class="sxs-lookup"><span data-stu-id="d9922-385">CorTypeAttr.tdImport</span></span>|<span data-ttu-id="d9922-386">Type.Attributes.Import</span><span class="sxs-lookup"><span data-stu-id="d9922-386">Type.Attributes.Import</span></span>|  
|<span data-ttu-id="d9922-387">SerializableAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-387">SerializableAttribute</span></span>|<span data-ttu-id="d9922-388">CorTypeAttr.tdSerializable</span><span class="sxs-lookup"><span data-stu-id="d9922-388">CorTypeAttr.tdSerializable</span></span>|<span data-ttu-id="d9922-389">Type.Attributes.Serializable</span><span class="sxs-lookup"><span data-stu-id="d9922-389">Type.Attributes.Serializable</span></span>|  
|<span data-ttu-id="d9922-390">NonSerializedAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-390">NonSerializedAttribute</span></span>|<span data-ttu-id="d9922-391">CorFieldAttr.fdNotSerialized</span><span class="sxs-lookup"><span data-stu-id="d9922-391">CorFieldAttr.fdNotSerialized</span></span>|<span data-ttu-id="d9922-392">FieldInfo.Attributes.NotSerialized</span><span class="sxs-lookup"><span data-stu-id="d9922-392">FieldInfo.Attributes.NotSerialized</span></span>|  
|<span data-ttu-id="d9922-393">MethodImplAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-393">MethodImplAttribute</span></span>|<span data-ttu-id="d9922-394">CorMethodImpl</span><span class="sxs-lookup"><span data-stu-id="d9922-394">CorMethodImpl</span></span>|<span data-ttu-id="d9922-395">MethodInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d9922-395">MethodInfo.GetMethodImplementationFlags()</span></span><br /><br /> <span data-ttu-id="d9922-396">ConstructorInfo.GetMethodImplementationFlags()</span><span class="sxs-lookup"><span data-stu-id="d9922-396">ConstructorInfo.GetMethodImplementationFlags()</span></span>|  
|<span data-ttu-id="d9922-397">MarshalAsAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-397">MarshalAsAttribute</span></span>|<span data-ttu-id="d9922-398">Verschiedene Bits.</span><span class="sxs-lookup"><span data-stu-id="d9922-398">Various bits.</span></span>|<span data-ttu-id="d9922-399">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-399">No accessor.</span></span>|  
|<span data-ttu-id="d9922-400">PreserveSigAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-400">PreserveSigAttribute</span></span>|<span data-ttu-id="d9922-401">CorMethodImpl.miOLE</span><span class="sxs-lookup"><span data-stu-id="d9922-401">CorMethodImpl.miOLE</span></span>|<span data-ttu-id="d9922-402">MethodInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d9922-402">MethodInfo.GetMethodImplementationFlags().OLE</span></span><br /><br /> <span data-ttu-id="d9922-403">ConstructorInfo.GetMethodImplementationFlags().OLE</span><span class="sxs-lookup"><span data-stu-id="d9922-403">ConstructorInfo.GetMethodImplementationFlags().OLE</span></span>|  
|<span data-ttu-id="d9922-404">InAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-404">InAttribute</span></span>|<span data-ttu-id="d9922-405">CorParamAttr.pdIn</span><span class="sxs-lookup"><span data-stu-id="d9922-405">CorParamAttr.pdIn</span></span>|<span data-ttu-id="d9922-406">ParameterInfo.Attributes.In</span><span class="sxs-lookup"><span data-stu-id="d9922-406">ParameterInfo.Attributes.In</span></span>|  
|<span data-ttu-id="d9922-407">OutAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-407">OutAttribute</span></span>|<span data-ttu-id="d9922-408">CorParamAttr.pdOut</span><span class="sxs-lookup"><span data-stu-id="d9922-408">CorParamAttr.pdOut</span></span>|<span data-ttu-id="d9922-409">ParameterInfo.Attributes.Out</span><span class="sxs-lookup"><span data-stu-id="d9922-409">ParameterInfo.Attributes.Out</span></span>|  
|<span data-ttu-id="d9922-410">StructLayoutAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-410">StructLayoutAttribute</span></span>|<span data-ttu-id="d9922-411">CorTypeAttr.tdLayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d9922-411">CorTypeAttr.tdLayoutSequential</span></span><br /><br /> <span data-ttu-id="d9922-412">CorTypeAttr.tdExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d9922-412">CorTypeAttr.tdExplicitLayout</span></span><br /><br /> <span data-ttu-id="d9922-413">CorTypeAttr.tdAnsiClass</span><span class="sxs-lookup"><span data-stu-id="d9922-413">CorTypeAttr.tdAnsiClass</span></span><br /><br /> <span data-ttu-id="d9922-414">CorTypeAttr.tdUnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d9922-414">CorTypeAttr.tdUnicodeClass</span></span><br /><br /> <span data-ttu-id="d9922-415">CorTypeAttr.tdAutoClass</span><span class="sxs-lookup"><span data-stu-id="d9922-415">CorTypeAttr.tdAutoClass</span></span><br /><br /> <span data-ttu-id="d9922-416">Packen von Klassen.</span><span class="sxs-lookup"><span data-stu-id="d9922-416">Class packing.</span></span>|<span data-ttu-id="d9922-417">Type.Attributes.LayoutSequential</span><span class="sxs-lookup"><span data-stu-id="d9922-417">Type.Attributes.LayoutSequential</span></span><br /><br /> <span data-ttu-id="d9922-418">Type.Attributes.ExplicitLayout</span><span class="sxs-lookup"><span data-stu-id="d9922-418">Type.Attributes.ExplicitLayout</span></span><br /><br /> <span data-ttu-id="d9922-419">Type.Attributes.AnsiClass</span><span class="sxs-lookup"><span data-stu-id="d9922-419">Type.Attributes.AnsiClass</span></span><br /><br /> <span data-ttu-id="d9922-420">Type.Attributes.UnicodeClass</span><span class="sxs-lookup"><span data-stu-id="d9922-420">Type.Attributes.UnicodeClass</span></span><br /><br /> <span data-ttu-id="d9922-421">Type.Attributes.AutoClass</span><span class="sxs-lookup"><span data-stu-id="d9922-421">Type.Attributes.AutoClass</span></span><br /><br /> <span data-ttu-id="d9922-422">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-422">No accessor.</span></span>|  
|<span data-ttu-id="d9922-423">FieldOffsetAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-423">FieldOffsetAttribute</span></span>|<span data-ttu-id="d9922-424">Feld Offset.</span><span class="sxs-lookup"><span data-stu-id="d9922-424">Field offset.</span></span>|<span data-ttu-id="d9922-425">Nicht über einen Accessor.</span><span class="sxs-lookup"><span data-stu-id="d9922-425">No accessor.</span></span>|  
|<span data-ttu-id="d9922-426">AssemblyLoadAttribute</span><span class="sxs-lookup"><span data-stu-id="d9922-426">AssemblyLoadAttribute</span></span>|<span data-ttu-id="d9922-427">CorAssemblyFlags</span><span class="sxs-lookup"><span data-stu-id="d9922-427">CorAssemblyFlags</span></span>|<span data-ttu-id="d9922-428">Kein Accessor oder Enumerator.</span><span class="sxs-lookup"><span data-stu-id="d9922-428">No accessor or enumerator.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-429"><paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-429"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-430"><paramref name="attributeType" /> ist kein Laufzeittyp.</span><span class="sxs-lookup"><span data-stu-id="d9922-430"><paramref name="attributeType" /> is not a runtime type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-431">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-431">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-432">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-432">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-433">Gibt Informationen zu den Attributen zurück, die auf den aktuellen <see cref="T:System.Reflection.Assembly" /> angewendet wurden. Diese sind als <see cref="T:System.Reflection.CustomAttributeData" />-Objekte ausgedrückt.</span><span class="sxs-lookup"><span data-stu-id="d9922-433">Returns information about the attributes that have been applied to the current <see cref="T:System.Reflection.Assembly" />, expressed as <see cref="T:System.Reflection.CustomAttributeData" /> objects.</span></span></summary>
        <returns><span data-ttu-id="d9922-434">Eine generische Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Objekten, die Daten zu den Attributen darstellen, die auf die aktuelle Assembly angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="d9922-434">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-435">Verwenden Sie diese Methode, um die benutzerdefinierten Attribute des Codes in den ReflectionOnly Kontext, in Fällen zu untersuchen, in dem die benutzerdefinierten Attribute selbst im Code definiert werden, die in den reflektionsbezogenen Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-435">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="d9922-436">Methoden wie <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> und <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> kann nicht in solchen Fällen verwendet werden, da sie Instanzen der Attribute erstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-436">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="d9922-437">Code in den ReflectionOnly Kontext kann nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-437">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="d9922-438">Weitere Informationen und Beispielcode, finden Sie unter der <xref:System.Reflection.CustomAttributeData> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d9922-438">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEntryAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetEntryAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetEntryAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetEntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEntryAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetEntryAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-439">Ruft den in der Standardanwendungsdomäne ausführbaren Prozess ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-439">Gets the process executable in the default application domain.</span></span> <span data-ttu-id="d9922-440">In anderen Anwendungsdomänen ist dies die erste ausführbare Datei, die von <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-440">In other application domains, this is the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="d9922-441">Die Assembly, die der in der Standardanwendungsdomäne ausführbare Prozess ist, oder die erste ausführbare Datei, die von <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" /> ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-441">The assembly that is the process executable in the default application domain, or the first executable that was executed by <see cref="M:System.AppDomain.ExecuteAssembly(System.String)" />.</span></span> <span data-ttu-id="d9922-442">Kann <see langword="null" /> zurückgeben, wenn der Aufruf aus nicht verwaltetem Code erfolgt.</span><span class="sxs-lookup"><span data-stu-id="d9922-442">Can return <see langword="null" /> when called from unmanaged code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-443">Die <xref:System.Reflection.Assembly.GetEntryAssembly%2A> Methodenrückgabewert können `null` bei eine verwaltete Assembly aus einer nicht verwalteten Anwendung geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-443">The <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method can return `null` when a managed assembly has been loaded from an unmanaged application.</span></span> <span data-ttu-id="d9922-444">Wenn eine nicht verwaltete Anwendung eine Instanz einer COM-Komponente geschrieben in c# ist ein Aufruf erstellt z. B. die <xref:System.Reflection.Assembly.GetEntryAssembly%2A> Methode von der Komponente in c# gibt null zurück, da der Einstiegspunkt für den Prozess nicht verwalteten Code anstatt in eine verwaltete Assembly wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-444">For example, if an unmanaged application creates an instance of a COM component written in C#, a call to the <xref:System.Reflection.Assembly.GetEntryAssembly%2A> method from the C# component returns null, because the entry point for the process was unmanaged code rather than a managed assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExecutingAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly GetExecutingAssembly ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly GetExecutingAssembly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExecutingAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetExecutingAssembly () As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ GetExecutingAssembly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-445">Ruft die Assembly ab, die den derzeit ausgeführten Code enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-445">Gets the assembly that contains the code that is currently executing.</span></span></summary>
        <returns><span data-ttu-id="d9922-446">Die Assembly, die den derzeit ausgeführten Code enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-446">The assembly that contains the code that is currently executing.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-447">Aus Gründen der Leistung sollten Sie diese Methode aufrufen, nur, wenn Sie zur Entwurfszeit nicht wissen, welche Assembly gerade ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-447">For performance reasons, you should call this method only when you do not know at design time what assembly is currently executing.</span></span> <span data-ttu-id="d9922-448">Die empfohlene Methode zum Abrufen einer <xref:System.Reflection.Assembly> -Objekt, das die aktuelle Assembly darstellt, ist die Verwendung der <xref:System.Type.Assembly%2A?displayProperty=nameWithType> Eigenschaft eines Typs in der Assembly gefunden, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="d9922-448">The recommended way to retrieve an <xref:System.Reflection.Assembly> object that represents the current assembly is to use the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property of a type found in the assembly, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/assembly1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/assembly1.vb#1)]  
  
 <span data-ttu-id="d9922-449">Verwenden Sie zum Abrufen der Assemblys, die die Methode enthält, die den derzeit ausgeführten Code aufgerufen <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-449">To get the assembly that contains the method that called the currently executing code, use <xref:System.Reflection.Assembly.GetCallingAssembly%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-450">Im folgenden Beispiel wird die <xref:System.Type.Assembly%2A?displayProperty=nameWithType> -Eigenschaft zum Abrufen der aktuell ausgeführten Assembly basierend auf einen Typ in dieser Assembly enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-450">The following example uses the <xref:System.Type.Assembly%2A?displayProperty=nameWithType> property to get the currently executing assembly based on a type contained in that assembly.</span></span> <span data-ttu-id="d9922-451">Ruft auch die <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> Methode, um anzuzeigen, dass es gibt ein <xref:System.Reflection.Assembly> Objekt, das derselben Assembly darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-451">It also calls the <xref:System.Reflection.Assembly.GetExecutingAssembly%2A> method to show that it returns an <xref:System.Reflection.Assembly> object that represents the same assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cpp/getexecutingassembly1.cpp#5)]
 [!code-csharp[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/cs/getexecutingassembly1.cs#5)]
 [!code-vb[System.Reflection.Assembly.GetExecutingAssembly#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.getexecutingassembly/vb/getexecutingassembly1.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetExportedTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-452">Ruft die in dieser Assembly definierten öffentlichen Typen ab, die außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-452">Gets the public types defined in this assembly that are visible outside the assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-453">Ein Array, das die in dieser Assembly definierten Typen darstellt, die außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-453">An array that represents the types defined in this assembly that are visible outside the assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-454">Die einzigen Typen, die außerhalb der Assembly sichtbar sind öffentliche Typen und öffentliche Typen, die in anderen öffentlichen Typen geschachtelt.</span><span class="sxs-lookup"><span data-stu-id="d9922-454">The only types visible outside an assembly are public types and public types nested within other public types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-455">Im folgenden Codebeispiel definiert eine Reihe von Klassen mit verschiedenen Zugriffsebenen und Aufrufe <xref:System.Reflection.Assembly.GetExportedTypes%2A> um diejenigen anzuzeigen, die außerhalb der Assembly sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-455">The following code sample defines a number of classes with various access levels, and calls <xref:System.Reflection.Assembly.GetExportedTypes%2A> to display the ones that are visible from outside the assembly.</span></span>  
  
 [!code-cpp[Assembly.GetExportedTypes#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.GetExportedTypes/CPP/source.cpp#1)]
 [!code-csharp[Assembly.GetExportedTypes#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.GetExportedTypes/CS/source.cs#1)]
 [!code-vb[Assembly.GetExportedTypes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.GetExportedTypes/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9922-456">Die Assembly ist eine dynamische Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-456">The assembly is a dynamic assembly.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-457">Eine abhängige Assembly konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-457">Unable to load a dependent assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFile(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-458">Der Name der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-458">The name of the specified file.</span></span> <span data-ttu-id="d9922-459">Der Pfad zur Datei darf nicht enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="d9922-459">Do not include the path to the file.</span></span></param>
        <summary><span data-ttu-id="d9922-460">Ruft einen <see cref="T:System.IO.FileStream" /> für die angegebene Datei in der Dateitabelle des Manifests dieser Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-460">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-461">Ein Datenstrom, der die angegebene Datei enthält, oder <see langword="null" />, wenn die Datei nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-461">A stream that contains the specified file, or <see langword="null" /> if the file is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-462">Diese Methode funktioniert für sowohl öffentliche und private Ressourcendateien.</span><span class="sxs-lookup"><span data-stu-id="d9922-462">This method works on both public and private resource files.</span></span>  
  
 <span data-ttu-id="d9922-463">Die `name` darf keinen der Pfad zur Datei enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-463">The `name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-464">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-464">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-465">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-465">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-466">Der <paramref name="name" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-466">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-467"><paramref name="name" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-467"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-468"><paramref name="name" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-468"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-469">für den Zugriff auf den Pfad und zum Lesen der angegebenen Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-469">for access to the path and for reading the specified file.</span></span> <span data-ttu-id="d9922-470">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> und <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d9922-470">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /> and <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFiles">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-471">Ruft die Dateien in der Dateitabelle eines Assemblymanifests ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-471">Gets the files in the file table of an assembly manifest.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles () As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-472">Ruft die Dateien in der Dateitabelle eines Assemblymanifests ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-472">Gets the files in the file table of an assembly manifest.</span></span></summary>
        <returns><span data-ttu-id="d9922-473">Ein Array von Streams, die die Dateien enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-473">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-474">Diese Methode funktioniert auf öffentliche und private Ressourcendateien.</span><span class="sxs-lookup"><span data-stu-id="d9922-474">This method works on public and private resource files.</span></span>  
  
 <span data-ttu-id="d9922-475">Diese Überladung entspricht dem Aufrufen der <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> Überladung und Angeben von `false`.</span><span class="sxs-lookup"><span data-stu-id="d9922-475">This overload is equivalent to calling the <xref:System.Reflection.Assembly.GetFiles%28System.Boolean%29> overload and specifying `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-476">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-476">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-477">Eine Datei wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-477">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="d9922-478">Eine Datei war keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-478">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public virtual System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d9922-479"><see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-479"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9922-480">Ruft die Dateien in der Dateitabelle eines Assemblymanifests ab und gibt an, ob Ressourcenmodule eingebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d9922-480">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="d9922-481">Ein Array von Streams, die die Dateien enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-481">An array of streams that contain the files.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-482">Diese Methode funktioniert auf öffentliche und private Ressourcendateien.</span><span class="sxs-lookup"><span data-stu-id="d9922-482">This method works on public and private resource files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-483">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-483">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-484">Eine Datei wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-484">A file was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="d9922-485">Eine Datei war keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-485">A file was not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetForwardedTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetForwardedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetForwardedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetForwardedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetForwardedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetForwardedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-486">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-486">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="d9922-487">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-487">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLoadedModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-488">Ruft alle geladenen Module ab, die Bestandteil dieser Assembly sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-488">Gets all the loaded modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetLoadedModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLoadedModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-489">Ruft alle geladenen Module ab, die Bestandteil dieser Assembly sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-489">Gets all the loaded modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-490">Ein Array von Modulen.</span><span class="sxs-lookup"><span data-stu-id="d9922-490">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d9922-491"><see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-491"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9922-492">Ruft alle geladenen Module ab, die Bestandteil dieser Assembly sind, und gibt an, ob Ressourcenmodule eingebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d9922-492">Gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="d9922-493">Ein Array von Modulen.</span><span class="sxs-lookup"><span data-stu-id="d9922-493">An array of modules.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName"><span data-ttu-id="d9922-494">Der Ressourcenname unter Berücksichtigung der Groß- und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="d9922-494">The case-sensitive name of the resource.</span></span></param>
        <summary><span data-ttu-id="d9922-495">Gibt Informationen darüber zurück, wie die angegebene Ressource beibehalten wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-495">Returns information about how the given resource has been persisted.</span></span></summary>
        <returns><span data-ttu-id="d9922-496">Ein Objekt, das Informationen zur Topologie der Ressource enthält, oder <see langword="null" />, falls die Ressource nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-496">An object that is populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-497">Ressourceninformationen wird nur zurückgegeben, wenn die Ressource an den Aufrufer sichtbar ist, oder der Aufrufer hat <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d9922-497">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-498"><paramref name="resourceName" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-498"><paramref name="resourceName" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-499">Der <paramref name="resourceName" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-499">The <paramref name="resourceName" /> parameter is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-500">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-500">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-501">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-501">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public virtual string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-502">Gibt die Namen aller Ressourcen in dieser Assembly zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-502">Returns the names of all the resources in this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-503">Ein Array, das die Namen sämtlicher Ressourcen enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-503">An array that contains the names of all the resources.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-504">Sie können jeden Ressourcennamen im zurückgegebenen Array von dieser Methode wie folgt verwenden:</span><span class="sxs-lookup"><span data-stu-id="d9922-504">You can use each resource name in the array returned by this method as follows:</span></span>  
  
-   <span data-ttu-id="d9922-505">Sie können den Namen der Ressource zum Übergeben der <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> Methode, um weitere Informationen über diese Ressource zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-505">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceInfo%2A> method to get additional information about the resource.</span></span>  
  
-   <span data-ttu-id="d9922-506">Wenn der Name eine binäre RESOURCES-Datei bezeichnet, können Sie das Entfernen von Resources-Dateierweiterung und übergeben Sie sie an der <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> Konstruktor zum Instanziieren des Ressourcen-Managers.</span><span class="sxs-lookup"><span data-stu-id="d9922-506">If the name identifies a binary .resources file, you can remove its .resources file extension and pass it to the <xref:System.Resources.ResourceManager.%23ctor%28System.String%2CSystem.Reflection.Assembly%29?displayProperty=nameWithType> constructor to instantiate the resource manager.</span></span>  
  
-   <span data-ttu-id="d9922-507">Können Sie den Namen der Ressource zum Übergeben der <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Methode zum Abrufen einer <xref:System.IO.Stream> -Objekt, das Sie dann zu übergeben, können die <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="d9922-507">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceReader.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
-   <span data-ttu-id="d9922-508">Können Sie den Namen der Ressource zum Übergeben der <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> Methode zum Abrufen einer <xref:System.IO.Stream> -Objekt, das Sie dann zu übergeben, können die <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="d9922-508">You can pass the resource name to the <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> method to retrieve a <xref:System.IO.Stream> object that you can then pass to the <xref:System.Resources.ResourceSet.%23ctor%28System.IO.Stream%29?displayProperty=nameWithType> constructor.</span></span>  
  
 <span data-ttu-id="d9922-509">Ressourceninformationen wird nur zurückgegeben, wenn die Ressource an den Aufrufer sichtbar ist, oder der Aufrufer hat <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d9922-509">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-510">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-510">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-511">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-511">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-512">Lädt die angegebene Manifestressource aus dieser Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-512">Loads the specified manifest resource from this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-513">Der Name der angeforderten Manifestressource unter Berücksichtigung der Groß- und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="d9922-513">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="d9922-514">Lädt die angegebene Manifestressource aus dieser Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-514">Loads the specified manifest resource from this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-515">Die Manifestressource oder <see langword="null" />, wenn während des Kompilierens keine Ressourcen angegeben wurden oder wenn die Ressource für den Aufrufer nicht sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-515">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-516">Eine Manifestressource wird eine Ressource (z. B. eine Bilddatei), die in der Assembly zum Zeitpunkt der Kompilierung eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-516">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="d9922-517">Weitere Informationen zu Manifestressourcen, finden Sie unter [Grundlagen von Microsoft .NET Framework-Ressource](http://go.microsoft.com/fwlink/?LinkId=204554) in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9922-517">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="d9922-518">Ressourceninformationen wird nur zurückgegeben, wenn die Ressource an den Aufrufer sichtbar ist, oder der Aufrufer hat <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d9922-518">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-519">Diese Methode gibt `null` Wenn eine private Ressource in einer anderen Assembly zugegriffen wird und der Aufrufer verfügt nicht über <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="d9922-519">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="d9922-520">Wenn das Manifest eine Ressourcendatei listet <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> gibt ein <xref:System.IO.Stream> Objekt, selbst wenn zum Zeitpunkt die Ressourcendatei auf dem Datenträger gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-520">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="d9922-521">Wenn die Ressourcendatei nicht gefunden wird, gibt die Übergabe der resultierende <xref:System.IO.Stream> -Objekt an die <xref:System.Resources.ResourceReader> Konstruktor veranlasst, dass ein <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-521">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-522">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-522">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-523">Der <paramref name="name" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-523">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d9922-524">Fangen Sie in [.NET für Windows Store-Apps](http://go.microsoft.com/fwlink/?LinkID=247912) oder der [portablen Klassenbibliothek](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) stattdessen die Basisklassenausnahme <see cref="T:System.IO.IOException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-524">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d9922-525">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-525">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-526"><paramref name="name" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-526"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-527"><paramref name="name" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-527"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d9922-528">Die Ressourcenlänge überschreitet <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-528">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-529">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-529">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-530">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-530">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public virtual System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="d9922-531">Der Typ, dessen Namespace verwendet wird, um den Gültigkeitsbereich des Manifestressourcennamens festzulegen.</span><span class="sxs-lookup"><span data-stu-id="d9922-531">The type whose namespace is used to scope the manifest resource name.</span></span></param>
        <param name="name"><span data-ttu-id="d9922-532">Der Name der angeforderten Manifestressource unter Berücksichtigung der Groß- und Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="d9922-532">The case-sensitive name of the manifest resource being requested.</span></span></param>
        <summary><span data-ttu-id="d9922-533">Lädt die angegebene Manifestressource, deren Gültigkeitsbereich durch den Namespace des angegebenen Typs festgelegt ist, aus dieser Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-533">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-534">Die Manifestressource oder <see langword="null" />, wenn während des Kompilierens keine Ressourcen angegeben wurden oder wenn die Ressource für den Aufrufer nicht sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-534">The manifest resource; or <see langword="null" /> if no resources were specified during compilation or if the resource is not visible to the caller.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-535">Angenommen, für der vollständige Namen angegeben `type` "MyNameSpace.MyClasses lautet" und `name` ist "Net", diese Methode sucht nach einer Ressource MyNameSpace.NET "" überladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-535">For example, if the full name specified for `type` is "MyNameSpace.MyClasses" and `name` is "Net", this method overload searches for a resource named "MyNameSpace.Net".</span></span>  
  
 <span data-ttu-id="d9922-536">Eine Manifestressource wird eine Ressource (z. B. eine Bilddatei), die in der Assembly zum Zeitpunkt der Kompilierung eingebettet ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-536">A manifest resource is a resource (such as an image file) that is embedded in the assembly at compile time.</span></span> <span data-ttu-id="d9922-537">Weitere Informationen zu Manifestressourcen, finden Sie unter [Grundlagen von Microsoft .NET Framework-Ressource](http://go.microsoft.com/fwlink/?LinkId=204554) in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="d9922-537">For more information about manifest resources, see [Microsoft .NET Framework Resource Basics](http://go.microsoft.com/fwlink/?LinkId=204554) in the MSDN Library.</span></span>  
  
 <span data-ttu-id="d9922-538">Ressourceninformationen wird nur zurückgegeben, wenn die Ressource an den Aufrufer sichtbar ist, oder der Aufrufer hat <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="d9922-538">Resource information is returned only if the resource is visible to the caller, or the caller has <xref:System.Security.Permissions.ReflectionPermission>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-539">Diese Methode gibt `null` Wenn eine private Ressource in einer anderen Assembly zugegriffen wird und der Aufrufer verfügt nicht über <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> Flag.</span><span class="sxs-lookup"><span data-stu-id="d9922-539">This method returns `null` if a private resource in another assembly is accessed and the caller does not have <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess?displayProperty=nameWithType> flag.</span></span>  
  
 <span data-ttu-id="d9922-540">Wenn das Manifest eine Ressourcendatei listet <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> gibt ein <xref:System.IO.Stream> Objekt, selbst wenn zum Zeitpunkt die Ressourcendatei auf dem Datenträger gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-540">If the assembly manifest lists a resource file, <xref:System.Reflection.Assembly.GetManifestResourceStream%2A> returns a <xref:System.IO.Stream> object even if the resource file cannot be found on disk at the time.</span></span> <span data-ttu-id="d9922-541">Wenn die Ressourcendatei nicht gefunden wird, gibt die Übergabe der resultierende <xref:System.IO.Stream> -Objekt an die <xref:System.Resources.ResourceReader> Konstruktor veranlasst, dass ein <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-541">If the resource file is not found, passing the resulting <xref:System.IO.Stream> object to the <xref:System.Resources.ResourceReader> constructor causes an <xref:System.ArgumentException>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-542">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-542">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-543">Der <paramref name="name" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-543">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-544">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-544">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-545"><paramref name="name" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-545"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-546"><paramref name="name" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-546"><paramref name="name" /> is not a valid assembly.</span></span></exception>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="d9922-547">Die Ressourcenlänge überschreitet <see cref="F:System.Int64.MaxValue" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-547">Resource length is greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="d9922-548">Beim Aufrufen spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-548">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="d9922-549">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="d9922-549">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.GetManifestResourceNames" />
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModule(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-550">Der Name des Moduls, das angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-550">The name of the module being requested.</span></span></param>
        <summary><span data-ttu-id="d9922-551">Ruft das angegebene Modul in dieser Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-551">Gets the specified module in this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-552">Das angeforderte Modul oder <see langword="null" />, wenn das Modul nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-552">The module being requested, or <see langword="null" /> if the module is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-553">Diese Methode funktioniert auf Dateinamen.</span><span class="sxs-lookup"><span data-stu-id="d9922-553">This method works on file names.</span></span>  
  
 <span data-ttu-id="d9922-554">Klassen in der `Reflection.Emit` Namespace geben den Bereichsnamen für ein dynamisches Modul.</span><span class="sxs-lookup"><span data-stu-id="d9922-554">Classes in the `Reflection.Emit` namespace emit the scope name for a dynamic module.</span></span> <span data-ttu-id="d9922-555">Der Bereichsname kann bestimmt werden, indem Sie die <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-555">The scope name can be determined by the <xref:System.Reflection.Module.ScopeName%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="d9922-556">Übergeben Sie die Art des Moduls soll `Assembly.GetModule`.</span><span class="sxs-lookup"><span data-stu-id="d9922-556">Pass the kind of module you want to `Assembly.GetModule`.</span></span> <span data-ttu-id="d9922-557">Z. B. Wenn Sie das Modul möchten, die das Assemblymanifest enthält, übergeben Sie den Bereichsnamen des Moduls, das `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="d9922-557">For example, if you want the module that contains the assembly manifest, pass the scope name of the module to `GetModule`.</span></span> <span data-ttu-id="d9922-558">Andernfalls übergeben Sie den Dateinamen des Moduls.</span><span class="sxs-lookup"><span data-stu-id="d9922-558">Otherwise, pass the file name of the module.</span></span> <span data-ttu-id="d9922-559">Assemblys geladen werden, indem Sie eine der der `Load` Methoden, die einem Byte []-Parameter verfügen, haben nur ein Modul, und das Manifestmodul.</span><span class="sxs-lookup"><span data-stu-id="d9922-559">Assemblies loaded by one of the `Load` methods that have a byte[] parameter have only one module, and that is the manifest module.</span></span> <span data-ttu-id="d9922-560">Suchen Sie immer diese Module, die mit der Bereichsname.</span><span class="sxs-lookup"><span data-stu-id="d9922-560">Always seek these modules using the scope name.</span></span>  
  
 <span data-ttu-id="d9922-561">Ein Typ abgerufen werden kann, aus einem bestimmten Modul mit <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-561">A type can be retrieved from a specific module using <xref:System.Reflection.Module.GetType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d9922-562">Aufrufen von `Module.GetType` für das Modul mit dem Manifest wird nicht initiiert eine Suche für die gesamte Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-562">Calling `Module.GetType` on the module containing the manifest will not initiate a search of the entire assembly.</span></span> <span data-ttu-id="d9922-563">Zum Abrufen eines Typs aus einer Assembly, unabhängig davon, welches Modul ist, rufen Sie <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-563">To retrieve a type from an assembly, regardless of which module it is in, you must call <xref:System.Reflection.Assembly.GetType%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-564">Der <paramref name="name" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-564">The <paramref name="name" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-565">Der <paramref name="name" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-565">The <paramref name="name" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-566">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-566">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-567"><paramref name="name" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-567"><paramref name="name" /> was not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-568"><paramref name="name" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-568"><paramref name="name" /> is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetModules">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-569">Ruft alle Module ab, die Bestandteil dieser Assembly sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-569">Gets all the modules that are part of this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public System.Reflection.Module[] GetModules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModules () As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-570">Ruft alle Module ab, die Bestandteil dieser Assembly sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-570">Gets all the modules that are part of this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-571">Ein Array von Modulen.</span><span class="sxs-lookup"><span data-stu-id="d9922-571">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-572">Diese Methode funktioniert auf öffentliche und private Ressourcendateien.</span><span class="sxs-lookup"><span data-stu-id="d9922-572">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-573">Module müssen mit den Dateinamenerweiterungen ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-573">Modules must be emitted with file name extensions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-574">Das folgende Beispiel zeigt den Namen des Moduls im zurückgegebenen Array, das das Assemblymanifest enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-574">The following example displays the name of the module in the returned array that contains the assembly manifest.</span></span>  
  
 [!code-cpp[Classic Assembly.GetModules Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Assembly.GetModules Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/CS/source.cs#1)]
 [!code-vb[Classic Assembly.GetModules Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Assembly.GetModules Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-575">Das zu ladende Modul gibt keine Dateierweiterung an.</span><span class="sxs-lookup"><span data-stu-id="d9922-575">The module to be loaded does not specify a file name extension.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="d9922-576"><see langword="true" />, wenn Ressourcenmodule eingebunden werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-576"><see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9922-577">Ruft alle Module ab, die Bestandteil dieser Assembly sind, und gibt an, ob Ressourcenmodule eingebunden werden sollen.</span><span class="sxs-lookup"><span data-stu-id="d9922-577">Gets all the modules that are part of this assembly, specifying whether to include resource modules.</span></span></summary>
        <returns><span data-ttu-id="d9922-578">Ein Array von Modulen.</span><span class="sxs-lookup"><span data-stu-id="d9922-578">An array of modules.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-579">Diese Methode funktioniert auf öffentliche und private Ressourcendateien.</span><span class="sxs-lookup"><span data-stu-id="d9922-579">This method works on public and private resource files.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-580">Module müssen mit den Dateinamenerweiterungen ausgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-580">Modules must be emitted with file name extensions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetName">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-581">Ruft einen <see cref="T:System.Reflection.AssemblyName" /> für diese Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-581">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName () As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-582">Ruft einen <see cref="T:System.Reflection.AssemblyName" /> für diese Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-582">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-583">Ein Objekt, das den vollständig analysierten Anzeigenamen für diese Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-583">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-584">für den Zugriff auf den Pfad der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-584">for access to the path of the assembly.</span></span> <span data-ttu-id="d9922-585">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-585">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="d9922-586"><see langword="true" />, um die <see cref="P:System.Reflection.Assembly.CodeBase" /> auf den Speicherort der Assembly festzulegen, nachdem sie verborgen kopiert wurde. <see langword="false" />, um die <see cref="P:System.Reflection.Assembly.CodeBase" /> auf den ursprünglichen Speicherort festzulegen.</span><span class="sxs-lookup"><span data-stu-id="d9922-586"><see langword="true" /> to set the <see cref="P:System.Reflection.Assembly.CodeBase" /> to the location of the assembly after it was shadow copied; <see langword="false" /> to set <see cref="P:System.Reflection.Assembly.CodeBase" /> to the original location.</span></span></param>
        <summary><span data-ttu-id="d9922-587">Ruft einen <see cref="T:System.Reflection.AssemblyName" /> für diese Assembly ab und legt die CodeBase fest, wie in <paramref name="copiedName" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-587">Gets an <see cref="T:System.Reflection.AssemblyName" /> for this assembly, setting the codebase as specified by <paramref name="copiedName" />.</span></span></summary>
        <returns><span data-ttu-id="d9922-588">Ein Objekt, das den vollständig analysierten Anzeigenamen für diese Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-588">An object that contains the fully parsed display name for this assembly.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-589">für den Zugriff auf den Pfad der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-589">for access to the path of the assembly.</span></span> <span data-ttu-id="d9922-590">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-590">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="d9922-591">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-591">The object to be populated with serialization information.</span></span></param>
        <param name="context"><span data-ttu-id="d9922-592">Der Zielkontext der Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="d9922-592">The destination context of the serialization.</span></span></param>
        <summary><span data-ttu-id="d9922-593">Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Instanziieren dieser Assembly benötigt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-593">Gets serialization information with all of the data needed to reinstantiate this assembly.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-594"><paramref name="info" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-594"><paramref name="info" /> is <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d9922-595">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="d9922-595">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d9922-596">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-596">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-597">Ruft die <see cref="T:System.Reflection.AssemblyName" />-Objekte für alle Assemblys ab, auf die diese Assembly verweist.</span><span class="sxs-lookup"><span data-stu-id="d9922-597">Gets the <see cref="T:System.Reflection.AssemblyName" /> objects for all the assemblies referenced by this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-598">Ein Array, das die vollständig analysierten Anzeigenamen aller mit Verweisen von dieser Assembly versehenen Assemblys enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-598">An array that contains the fully parsed display names of all the assemblies referenced by this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9922-599">Beginnend mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], die <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> Eigenschaft ein <xref:System.Reflection.AssemblyName> Objekt, das von dieser Methode zurückgegeben wird, ist <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> Wenn ist kein Hashalgorithmus für die Assembly verwiesen wird oder nicht der Hashalgorithmus der Assembly, auf die verwiesen wird gekennzeichnet durch die <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="d9922-599">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by this method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="d9922-600">In früheren Versionen von .NET Framework die <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> zurückgegebene Eigenschaft <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in dieser Situation.</span><span class="sxs-lookup"><span data-stu-id="d9922-600">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-601">Im folgenden Codebeispiel wird das Aufrufen der <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-601">The following code example demonstrates calling the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A> method.</span></span> <span data-ttu-id="d9922-602">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels für die <xref:System.Reflection.Assembly> Klasse.</span><span class="sxs-lookup"><span data-stu-id="d9922-602">This code example is part of a larger example provided for the <xref:System.Reflection.Assembly> class.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-603">Ruft die Satellitenassembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-603">Gets the satellite assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="d9922-604">Die angegebene Kultur.</span><span class="sxs-lookup"><span data-stu-id="d9922-604">The specified culture.</span></span></param>
        <summary><span data-ttu-id="d9922-605">Ruft die Satellitenassembly für die angegebene Kultur ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-605">Gets the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="d9922-606">Die angegebene Satellitenassembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-606">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-607">Satellitenassemblys enthalten lokalisierte Ressourcen, unterscheidet der hauptanwendung Assemblys, bei die enthalten nicht lokalisierbaren ausführbaren Code sowie Ressourcen für eine bestimmte Kultur, die als Standardkultur bzw. neutrale Kultur dienen.</span><span class="sxs-lookup"><span data-stu-id="d9922-607">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="d9922-608">Rufen Sie diese Methode, um die aktuelle Assemblyversion zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="d9922-608">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-609"><paramref name="culture" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-609"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-610">Die Assembly wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-610">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-611">Die Satellitenassembly mit einem übereinstimmenden Dateinamen wurde gefunden, aber <see langword="CultureInfo" /> stimmt nicht mit der angegebenen Kultur überein.</span><span class="sxs-lookup"><span data-stu-id="d9922-611">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="d9922-612">Die Satellitenassembly ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-612">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture"><span data-ttu-id="d9922-613">Die angegebene Kultur.</span><span class="sxs-lookup"><span data-stu-id="d9922-613">The specified culture.</span></span></param>
        <param name="version"><span data-ttu-id="d9922-614">Die Version der Satellitenassembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-614">The version of the satellite assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-615">Ruft die angegebene Version der Satellitenassembly für die angegebene Kultur ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-615">Gets the specified version of the satellite assembly for the specified culture.</span></span></summary>
        <returns><span data-ttu-id="d9922-616">Die angegebene Satellitenassembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-616">The specified satellite assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-617">Satellitenassemblys enthalten lokalisierte Ressourcen, unterscheidet der hauptanwendung Assemblys, bei die enthalten nicht lokalisierbaren ausführbaren Code sowie Ressourcen für eine bestimmte Kultur, die als Standardkultur bzw. neutrale Kultur dienen.</span><span class="sxs-lookup"><span data-stu-id="d9922-617">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="d9922-618">Rufen Sie die <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> Überladung mit Ihrer aktuellen Assemblyversion.</span><span class="sxs-lookup"><span data-stu-id="d9922-618">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 <span data-ttu-id="d9922-619">Wenn `version` ist `null`, die aktuelle Assemblyversion wird verwendet, wenn die Ressource und die Hauptassemblys signiert sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-619">If `version` is `null`, the current assembly version is used if both the resource and main assemblies are signed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-620"><paramref name="culture" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-620"><paramref name="culture" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-621">Die Satellitenassembly mit einem übereinstimmenden Dateinamen wurde gefunden, aber <see langword="CultureInfo" /> bzw. die Version stimmt nicht mit der angegebenen Kultur bzw. Version überein.</span><span class="sxs-lookup"><span data-stu-id="d9922-621">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-622">Die Assembly wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-622">The assembly cannot be found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException"><span data-ttu-id="d9922-623">Die Satellitenassembly ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-623">The satellite assembly is not a valid assembly.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-624">Ruft das <see cref="T:System.Type" />-Objekt ab, das den angegebenen Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-624">Gets the <see cref="T:System.Type" /> object that represents the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-625">Der vollständige Name des Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-625">The full name of the type.</span></span></param>
        <summary><span data-ttu-id="d9922-626">Ruft das <see cref="T:System.Type" />-Objekt mit dem angegebenen Namen aus der Assemblyinstanz ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-626">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance.</span></span></summary>
        <returns><span data-ttu-id="d9922-627">Ein Objekt, das die angegebene Klasse darstellt, oder <see langword="null" />, wenn die Klasse nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-627">An object that represents the specified class, or <see langword="null" /> if the class is not found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-628">Diese Methode sucht nur die aktuelle Assemblyinstanz.</span><span class="sxs-lookup"><span data-stu-id="d9922-628">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d9922-629">Die `name` Parameter enthält den Namespace, jedoch nicht die Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-629">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d9922-630">Um andere Assemblys für einen Typ zu suchen, verwenden die <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> methodenüberladung, die optional einen Anzeigenamen für die Assembly im Rahmen des Typnamens enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-630">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-631">Wenn der Typ an einer anderen Assembly weitergeleitet wurde, ist es immer noch von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-631">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d9922-632">Informationen zum Weiterleiten von Typen finden Sie unter [Typweiterleitung in der Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-632">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-633">Das folgende Beispiel definiert eine abstrakte `MeansOfTransportation` -Klasse in der `Transportation` Namespace.</span><span class="sxs-lookup"><span data-stu-id="d9922-633">The following example defines an abstract `MeansOfTransportation` class in the `Transportation` namespace.</span></span> <span data-ttu-id="d9922-634">Ruft die <xref:System.Reflection.Assembly.GetType%28System.String%29> Methode zum Abrufen seiner <xref:System.Type> -Objekt, ruft der <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> ein Array der abzurufenden Methode <xref:System.Reflection.PropertyInfo> Objekte, die die Eigenschaften des Typs darstellen, und zeigt dann die Informationen für des Typs abstrakte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="d9922-634">It calls the <xref:System.Reflection.Assembly.GetType%28System.String%29> method to retrieve its <xref:System.Type> object, calls the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.PropertyInfo> objects that represent the type's properties, and then displays information on the type's abstract properties.</span></span> <span data-ttu-id="d9922-635">Beachten Sie, dass der Aufruf der <xref:System.Reflection.Assembly.GetType%28System.String%29> Methode verwendet den vollqualifizierten Typnamen (d. h., dessen Namespace zusammen mit der Typname).</span><span class="sxs-lookup"><span data-stu-id="d9922-635">Note that the call to the <xref:System.Reflection.Assembly.GetType%28System.String%29> method uses the type's fully qualified name (that is, its namespace along with its type name).</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.GetType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.gettype/cs/gettype1.cs#1)]
 [!code-vb[System.Reflection.Assembly.GetType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.gettype/vb/gettype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-636"><paramref name="name" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d9922-636"><paramref name="name" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-637"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-637"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-638"><paramref name="name" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-638"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d9922-639">Fangen Sie in [.NET für Windows Store-Apps](http://go.microsoft.com/fwlink/?LinkID=247912) oder der [portablen Klassenbibliothek](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) stattdessen die Basisklassenausnahme <see cref="T:System.IO.IOException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-639">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
<span data-ttu-id="d9922-640"></para>
          </block>
          <paramref name="name" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-640"></para>
  </block>
 <paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-641">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-641">-or-</span></span>  

<span data-ttu-id="d9922-642">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="name" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-642">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-643"><paramref name="name" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-643"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-644">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-644">-or-</span></span>  
  
 <span data-ttu-id="d9922-645"><paramref name="name" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-645"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-646">Der vollständige Name des Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-646">The full name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="d9922-647"><see langword="true" />, damit eine Ausnahme ausgelöst wird, wenn der Typ nicht gefunden wurde. <see langword="false" />, damit <see langword="null" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-647"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="d9922-648">Ruft das <see cref="T:System.Type" />-Objekt mit dem angegebenen Namen in der Assemblyinstanz ab und löst optional eine Ausnahme aus, wenn der Typ nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-648">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="d9922-649">Ein Objekt, das die angegebene Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-649">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-650">Diese Methode sucht nur die aktuelle Assemblyinstanz.</span><span class="sxs-lookup"><span data-stu-id="d9922-650">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d9922-651">Die `name` Parameter enthält den Namespace, jedoch nicht die Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-651">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d9922-652">Um andere Assemblys für einen Typ zu suchen, verwenden die <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> methodenüberladung, die optional einen Anzeigenamen für die Assembly im Rahmen des Typnamens enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-652">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-653">Wenn der Typ an einer anderen Assembly weitergeleitet wurde, ist es immer noch von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-653">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d9922-654">Informationen zum Weiterleiten von Typen finden Sie unter [Typweiterleitung in der Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-654">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d9922-655">Die `throwOnError` Parameter wirkt sich nur auf was geschieht, wenn der Typ nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-655">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="d9922-656">Dies beeinflusst keine andere Ausnahmen, die möglicherweise ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-656">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="d9922-657">Insbesondere, wenn der Typ gefunden wird, kann nicht geladen werden kann <xref:System.TypeLoadException> kann ausgelöst werden, selbst wenn `throwOnError` ist `false`.</span><span class="sxs-lookup"><span data-stu-id="d9922-657">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-658"><paramref name="name" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d9922-658"><paramref name="name" /> is invalid.</span></span>  
  
 <span data-ttu-id="d9922-659">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-659">-or-</span></span>  
  
 <span data-ttu-id="d9922-660">Die Länge von <paramref name="name" /> überschreitet 1024 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-660">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-661"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-661"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d9922-662"><paramref name="throwOnError" /> ist <see langword="true" />, und der Typ wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-662"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-663"><paramref name="name" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-663"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-664"><paramref name="name" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-664"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-665">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-665">-or-</span></span>  
  
 <span data-ttu-id="d9922-666">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="name" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-666">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-667"><paramref name="name" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-667"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-668">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-668">-or-</span></span>  
  
 <span data-ttu-id="d9922-669"><paramref name="name" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-669"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d9922-670">Der vollständige Name des Typs.</span><span class="sxs-lookup"><span data-stu-id="d9922-670">The full name of the type.</span></span></param>
        <param name="throwOnError">
          <span data-ttu-id="d9922-671"><see langword="true" />, damit eine Ausnahme ausgelöst wird, wenn der Typ nicht gefunden wurde. <see langword="false" />, damit <see langword="null" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-671"><see langword="true" /> to throw an exception if the type is not found; <see langword="false" /> to return <see langword="null" />.</span></span></param>
        <param name="ignoreCase">
          <span data-ttu-id="d9922-672"><see langword="true" />, um die Groß- und Kleinschreibung des Typnamens zu ignorieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-672"><see langword="true" /> to ignore the case of the type name; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="d9922-673">Ruft das <see cref="T:System.Type" />-Objekt mit dem angegebenen Namen in der Assemblyinstanz ab, wobei optional die Groß- und Kleinschreibung unberücksichtigt bleiben und optional eine Ausnahme ausgelöst werden kann, wenn der Typ nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-673">Gets the <see cref="T:System.Type" /> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</span></span></summary>
        <returns><span data-ttu-id="d9922-674">Ein Objekt, das die angegebene Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-674">An object that represents the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-675">Diese Methode sucht nur die aktuelle Assemblyinstanz.</span><span class="sxs-lookup"><span data-stu-id="d9922-675">This method only searches the current assembly instance.</span></span> <span data-ttu-id="d9922-676">Die `name` Parameter enthält den Namespace, jedoch nicht die Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-676">The `name` parameter includes the namespace but not the assembly.</span></span> <span data-ttu-id="d9922-677">Um andere Assemblys für einen Typ zu suchen, verwenden die <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> methodenüberladung, die optional einen Anzeigenamen für die Assembly im Rahmen des Typnamens enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-677">To search other assemblies for a type, use the <xref:System.Type.GetType%28System.String%29?displayProperty=nameWithType> method overload, which can optionally include an assembly display name as part of the type name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-678">Wenn der Typ an einer anderen Assembly weitergeleitet wurde, ist es immer noch von dieser Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-678">If the type has been forwarded to another assembly, it is still returned by this method.</span></span> <span data-ttu-id="d9922-679">Informationen zum Weiterleiten von Typen finden Sie unter [Typweiterleitung in der Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-679">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d9922-680">Die `throwOnError` Parameter wirkt sich nur auf was geschieht, wenn der Typ nicht gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-680">The `throwOnError` parameter only affects what happens when the type is not found.</span></span> <span data-ttu-id="d9922-681">Dies beeinflusst keine andere Ausnahmen, die möglicherweise ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-681">It does not affect any other exceptions that might be thrown.</span></span> <span data-ttu-id="d9922-682">Insbesondere, wenn der Typ gefunden wird, kann nicht geladen werden kann <xref:System.TypeLoadException> kann ausgelöst werden, selbst wenn `throwOnError` ist `false`.</span><span class="sxs-lookup"><span data-stu-id="d9922-682">In particular, if the type is found but cannot be loaded, <xref:System.TypeLoadException> can be thrown even if `throwOnError` is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-683"><paramref name="name" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="d9922-683"><paramref name="name" /> is invalid.</span></span>  
  
 <span data-ttu-id="d9922-684">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-684">-or-</span></span>  
  
 <span data-ttu-id="d9922-685">Die Länge von <paramref name="name" /> überschreitet 1024 Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-685">The length of <paramref name="name" /> exceeds 1024 characters.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-686"><paramref name="name" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-686"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.TypeLoadException">
          <span data-ttu-id="d9922-687"><paramref name="throwOnError" /> ist <see langword="true" />, und der Typ wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-687"><paramref name="throwOnError" /> is <see langword="true" />, and the type cannot be found.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-688"><paramref name="name" /> erfordert eine abhängige Assembly, die nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-688"><paramref name="name" /> requires a dependent assembly that could not be found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-689"><paramref name="name" /> erfordert eine abhängige Assembly, die gefunden wurde, aber nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-689"><paramref name="name" /> requires a dependent assembly that was found but could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-690">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-690">-or-</span></span>  
  
 <span data-ttu-id="d9922-691">Die aktuelle Assembly wurde in den reflektionsbezogenen Kontext geladen, und <paramref name="name" /> erfordert eine abhängige Assembly, die nicht vorab geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-691">The current assembly was loaded into the reflection-only context, and <paramref name="name" /> requires a dependent assembly that was not preloaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-692"><paramref name="name" /> erfordert eine abhängige Assembly, die Datei ist jedoch keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-692"><paramref name="name" /> requires a dependent assembly, but the file is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-693">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-693">-or-</span></span>  
  
 <span data-ttu-id="d9922-694"><paramref name="name" /> erfordert eine abhängige Assembly, die für eine Version der Laufzeit kompiliert wurde, die höher als die derzeit geladene Version ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-694"><paramref name="name" /> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypes">
      <MemberSignature Language="C#" Value="public virtual Type[] GetTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.GetTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetTypes();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetTypes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-695">Ruft die in dieser Assembly definierten Typen ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-695">Gets the types defined in this assembly.</span></span></summary>
        <returns><span data-ttu-id="d9922-696">Ein Array, das alle in dieser Assembly definierten Typen enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-696">An array that contains all the types that are defined in this assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-697">Das zurückgegebene Array enthält geschachtelte Typen.</span><span class="sxs-lookup"><span data-stu-id="d9922-697">The returned array includes nested types.</span></span>  
  
 <span data-ttu-id="d9922-698">Wenn die <xref:System.Reflection.Assembly.GetTypes%2A> Methode für eine Assembly und einen Typ aufgerufen wird, Assembly einem Typ in einer Assembly abhängig ist, die nicht geladen wurde (beispielsweise, wenn es von einem Typ in der zweiten Assembly abgeleitet), eine <xref:System.Reflection.ReflectionTypeLoadException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-698">If the <xref:System.Reflection.Assembly.GetTypes%2A> method is called on an assembly and a type in that assembly is dependent on a type in an assembly that has not been loaded (for example, if it derives from a type in the second assembly), a <xref:System.Reflection.ReflectionTypeLoadException> is thrown.</span></span> <span data-ttu-id="d9922-699">Dies kann z. B. der Fall sein, wenn die erste Assembly mit geladen wurde die <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> oder <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden und die zweite Assembly nicht geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-699">For example, this can happen if the first assembly was loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> or <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods, and the second assembly was not loaded.</span></span> <span data-ttu-id="d9922-700">Es auch möglich, mit Assemblys geladen, mit der <xref:System.Reflection.Assembly.Load%2A> und <xref:System.Reflection.Assembly.LoadFile%2A> Methoden, wenn die zweite Assembly gefunden, wenn werden kann die <xref:System.Reflection.Assembly.GetTypes%2A> -Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-700">It can also happen with assemblies loaded using the <xref:System.Reflection.Assembly.Load%2A> and <xref:System.Reflection.Assembly.LoadFile%2A> methods if the second assembly cannot be located when the <xref:System.Reflection.Assembly.GetTypes%2A> method is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-701">Wenn Sie ein Typ an einer anderen Assembly weitergeleitet wurde, ist es nicht im zurückgegebenen Array enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-701">If a type has been forwarded to another assembly, it is not included in the returned array.</span></span> <span data-ttu-id="d9922-702">Informationen zum Weiterleiten von Typen finden Sie unter [Typweiterleitung in der Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-702">For information on type forwarding, see [Type Forwarding in the Common Language Runtime](~/docs/framework/app-domains/type-forwarding-in-the-common-language-runtime.md).</span></span>  
  
 <span data-ttu-id="d9922-703">Abrufen eine Auflistung von <xref:System.Reflection.TypeInfo> Objekte anstelle eines Arrays mit <xref:System.Type> Objekte, verwenden die <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-703">To retrieve a collection of <xref:System.Reflection.TypeInfo> objects instead of an array of <xref:System.Type> objects, use the <xref:System.Reflection.Assembly.DefinedTypes%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-704">Das folgende Beispiel zeigt eine Methode für einen Typ in der angegebenen Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-704">The following example displays parameters of one method on a type in the specified assembly.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.ReflectionTypeLoadException"><span data-ttu-id="d9922-705">Die Assembly enthält einen oder mehrere Typen, die nicht geladen werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-705">The assembly contains one or more types that cannot be loaded.</span></span> <span data-ttu-id="d9922-706">Das von der <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" />-Eigenschaft dieser Ausnahme zurückgegebene Array enthält ein <see cref="T:System.Type" />-Objekt für jeden Typ, der geladen wurde, und <see langword="null" /> für jeden Typ, der nicht geladen werden konnte. Die <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" />-Eigenschaft enthält hingegen eine Ausnahme für jeden Typ, der nicht geladen werden konnte.</span><span class="sxs-lookup"><span data-stu-id="d9922-706">The array returned by the <see cref="P:System.Reflection.ReflectionTypeLoadException.Types" /> property of this exception contains a <see cref="T:System.Type" /> object for each type that was loaded and <see langword="null" /> for each type that could not be loaded, while the <see cref="P:System.Reflection.ReflectionTypeLoadException.LoaderExceptions" /> property contains an exception for each type that could not be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public virtual bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-707">Ruft einen Wert ab, der angibt, ob die Assembly aus dem globalen Assemblycache geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-707">Gets a value indicating whether the assembly was loaded from the global assembly cache.</span></span></summary>
        <value>
          <span data-ttu-id="d9922-708"><see langword="true" />, wenn die Assembly aus dem globalen Assemblycache geladen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-708"><see langword="true" /> if the assembly was loaded from the global assembly cache; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public virtual long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-709">Ruft den Hostkontext ab, mit dem die Assembly geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-709">Gets the host context with which the assembly was loaded.</span></span></summary>
        <value><span data-ttu-id="d9922-710">Ein <see cref="T:System.Int64" />-Wert, der den Hostkontext angibt, mit dem die Assembly geladen wurde, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d9922-710">An <see cref="T:System.Int64" /> value that indicates the host context with which the assembly was loaded, if any.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public virtual string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-711">Ruft eine Zeichenfolge ab, die die Version der CLR darstellt, die in der Datei mit dem Manifest gespeichert wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-711">Gets a string representing the version of the common language runtime (CLR) saved in the file containing the manifest.</span></span></summary>
        <value><span data-ttu-id="d9922-712">Der CLR-Versionsordnername.</span><span class="sxs-lookup"><span data-stu-id="d9922-712">The CLR version folder name.</span></span> <span data-ttu-id="d9922-713">Dies ist kein vollständiger Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-713">This is not a full path.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-714">Beispielsweise wäre der Wert für .NET Framework, Version 1.1 v1.1.4322.</span><span class="sxs-lookup"><span data-stu-id="d9922-714">For example, the value for the .NET Framework version 1.1 would be v1.1.4322.</span></span> <span data-ttu-id="d9922-715">Die Binärdateien für die jeweilige Version würden im Pfad WINDIR%\Microsoft.NET\Framework\v1.1.4322 befinden.</span><span class="sxs-lookup"><span data-stu-id="d9922-715">The binary files for that version would be located in the path %windir%\Microsoft.NET\Framework\v1.1.4322.</span></span>  
  
 <span data-ttu-id="d9922-716">Standardmäßig <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> festgelegt ist, auf die Version der CLR verwendet, um die Assembly zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-716">By default, <xref:System.Reflection.Assembly.ImageRuntimeVersion%2A> is set to the version of the CLR used to build the assembly.</span></span> <span data-ttu-id="d9922-717">Aber kann es in einen anderen Wert zum Zeitpunkt der Kompilierung festgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="d9922-717">However, it might have been set to another value at compile time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public virtual bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="d9922-718">Der Typ des Attributs, das für diese Assembly überprüft werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-718">The type of the attribute to be checked for this assembly.</span></span></param>
        <param name="inherit"><span data-ttu-id="d9922-719">Dieses Argument wird für Objekte dieses Typs ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-719">This argument is ignored for objects of this type.</span></span></param>
        <summary><span data-ttu-id="d9922-720">Gibt an, ob ein angegebenes Attribut für die Assembly übernommen worden ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-720">Indicates whether or not a specified attribute has been applied to the assembly.</span></span></summary>
        <returns>
          <span data-ttu-id="d9922-721"><see langword="true" />, wenn das Attribut für die Assembly übernommen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-721"><see langword="true" /> if the attribute has been applied to the assembly; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d9922-722">Wendet im folgenden Codebeispiel wird die <xref:System.Reflection.AssemblyTitleAttribute> Attribut auf eine Assembly <xref:System.Reflection.Assembly.IsDefined%2A> , um anzugeben, ob es angewendet wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-722">The following code example applies the <xref:System.Reflection.AssemblyTitleAttribute> attribute to an assembly and then uses <xref:System.Reflection.Assembly.IsDefined%2A> to indicate whether it was applied.</span></span> <span data-ttu-id="d9922-723">Er überprüft auch ein Attribut, das nicht angewendet wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-723">It also tests an attribute that was not applied.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/CS/isdefined.cs#1)]
 [!code-vb[System.Reflection.Assembly.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.isdefined/VB/isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-724"><paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-724"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-725"><paramref name="attributeType" /> verwendet einen ungültigen Typ.</span><span class="sxs-lookup"><span data-stu-id="d9922-725"><paramref name="attributeType" /> uses an invalid type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public virtual bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-726">Ruft einen Wert ab, der angibt, ob die aktuelle Assembly dynamisch im aktuellen Prozess mithilfe der Reflektionsausgabe generiert wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-726">Gets a value that indicates whether the current assembly was generated dynamically in the current process by using reflection emit.</span></span></summary>
        <value>
          <span data-ttu-id="d9922-727"><see langword="true" />, wenn die aktuelle Assembly dynamisch im aktuellen Prozess generiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-727"><see langword="true" /> if the current assembly was generated dynamically in the current process; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-728">Dynamische Assemblys werden von der abgeleiteten Klasse dargestellt <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="d9922-728">Dynamic assemblies are represented by the derived class <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span>  
  
 <span data-ttu-id="d9922-729">Es ist nicht dynamisch, wenn eine dynamische Assembly auf dem Datenträger, die gespeicherte Assembly gespeichert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-729">When a dynamic assembly is saved to disk, the saved assembly is not dynamic.</span></span> <span data-ttu-id="d9922-730">Wenn die gespeicherte Assembly in eine andere Anwendungsdomäne oder einen Prozess geladen wird die <xref:System.Reflection.Assembly.IsDynamic%2A> -Eigenschaft gibt `false`.</span><span class="sxs-lookup"><span data-stu-id="d9922-730">If the saved assembly is loaded into another application domain or process, the <xref:System.Reflection.Assembly.IsDynamic%2A> property returns `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFullyTrusted">
      <MemberSignature Language="C#" Value="public bool IsFullyTrusted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFullyTrusted" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.IsFullyTrusted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFullyTrusted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFullyTrusted { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-731">Ruft einen Wert ab, der angibt, ob die aktuelle Assembly mit voller Vertrauenswürdigkeit geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-731">Gets a value that indicates whether the current assembly is loaded with full trust.</span></span></summary>
        <value>
          <span data-ttu-id="d9922-732"><see langword="true" />, wenn die aktuelle Assembly mit voller Vertrauenswürdigkeit geladen wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-732"><see langword="true" /> if the current assembly is loaded with full trust; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Load">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-733">Lädt eine Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-733">Loads an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="d9922-734">Ein Bytearray, das ein COFF-Image mit einer ausgegebenen Assembly ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-734">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-735">Lädt die Assembly mit einem COFF (Common Object File Format)-Image, das eine ausgegebene Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-735">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="d9922-736">Die Assembly wird in die Anwendungsdomäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-736">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="d9922-737">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-737">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-738">Die Vertrauensebene einer Assembly, die geladen wird, mit dieser Methode wird die Vertrauensebene der aufrufenden Assembly identisch.</span><span class="sxs-lookup"><span data-stu-id="d9922-738">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="d9922-739">Um eine Assembly aus einem Bytearray mit der Vertrauensebene der Anwendungsdomäne zu laden, verwenden die <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-739">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="d9922-740">Weitere Informationen zur Verwendung von Beweisen mit Überladungen von der <xref:System.Reflection.Assembly.Load%2A> Methode, die Bytearrays, finden Sie unter der <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-740">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="d9922-741">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-741">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-742">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-742">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-743">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-743">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-744">Beachten Sie, dass die Überladung dieser Methode erstellt immer eine neue <xref:System.Reflection.Assembly> Objekt mit einem eigenen Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="d9922-744">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-745"><paramref name="rawAssembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-745"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-746"><paramref name="rawAssembly" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-746"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-747">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-747">-or-</span></span>  
  
 <span data-ttu-id="d9922-748">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-748">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="d9922-749">Das Objekt, das die zu ladende Assembly beschreibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-749">The object that describes the assembly to be loaded.</span></span></param>
        <summary><span data-ttu-id="d9922-750">Lädt eine Assembly bei Angabe von <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-750">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span></summary>
        <returns><span data-ttu-id="d9922-751">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-751">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-752"><xref:System.IO.FileLoadException> wird ausgelöst, wenn `assemblyRef` vollen Assemblynamens und die erste Assembly, die den einfachen Namen entspricht, hat eine andere Version, Kultur oder Token des öffentlichen Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-752"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d9922-753">Das Ladeprogramm weiter nicht prüfen von anderen Assemblys, die den einfachen Namen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-753">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-754">Verwenden Sie keine <xref:System.Reflection.AssemblyName> nur mit der <xref:System.Reflection.AssemblyName.CodeBase%2A> Eigenschaftensatz.</span><span class="sxs-lookup"><span data-stu-id="d9922-754">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="d9922-755">Die <xref:System.Reflection.AssemblyName.CodeBase%2A> -Eigenschaft nicht übergibt alle Elemente der Assemblyidentität (z. B. Name oder Version), also laden tritt nicht auf gemäß Laden von Identity-Regeln, wie von der Sie erwarten die <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-755">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d9922-756">Stattdessen wird die Assembly geladen LoadFrom-Regeln verwenden.</span><span class="sxs-lookup"><span data-stu-id="d9922-756">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="d9922-757">Informationen zu den Nachteilen der Verwendung der LoadFrom-Kontext finden Sie unter der <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> methodenüberladung oder [Best Practices für das Laden der Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-757">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="d9922-758">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-758">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-759">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-759">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-760">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-760">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-761">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-761">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-762">Beweise, die als Argument an die <xref:System.Reflection.Assembly.Load%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-762">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-763">Bei Verwendung von einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis wird von der aufrufenden Assembly geerbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-763">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d9922-764">Dies gilt für .NET Framework, Version 1.1 Service Pack 1 (SP1) und nachfolgenden Versionen.</span><span class="sxs-lookup"><span data-stu-id="d9922-764">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d9922-765">In .NET Framework, Version 1.0 und 1.1-Version ohne Service Pack 1, bei der Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-765">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d9922-766">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-766">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-767">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-767">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-768">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-768">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d9922-769">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-769">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-770">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-770">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-771">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-771">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-772">Wenn beide die <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> Eigenschaft festgelegt werden, der erste Versuch zum Laden der Assembly verwendet den Anzeigenamen (einschließlich der Version, Kultur und So weiter, wie vom die <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="d9922-772">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="d9922-773">Wenn die Datei nicht gefunden wird, <xref:System.Reflection.AssemblyName.CodeBase%2A> wird verwendet, um nach der Assembly zu suchen.</span><span class="sxs-lookup"><span data-stu-id="d9922-773">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="d9922-774">Wenn die Assembly gefunden wird, mithilfe von <xref:System.Reflection.AssemblyName.CodeBase%2A>, der Anzeigenamen der Assembly abgeglichen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-774">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="d9922-775">Wenn die Übereinstimmung fehlschlägt, eine <xref:System.IO.FileLoadException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-775">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-776">Im folgenden Beispiel wird ein <xref:System.Reflection.AssemblyName> -Objekt und verwendet sie zum Laden der `sysglobal.dll` Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-776">The following example instantiates an <xref:System.Reflection.AssemblyName> object and uses it to load the `sysglobal.dll` assembly.</span></span> <span data-ttu-id="d9922-777">Das Beispiel zeigt anschließend den vollständigen Namen der Assembly aneinander gehängt öffentlicher Typen.</span><span class="sxs-lookup"><span data-stu-id="d9922-777">The example then displays the full name of the assembly's public types.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/Load2.cs#2)]
 [!code-vb[System.Reflection.Assembly.Load#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/Load2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-778"><paramref name="assemblyRef" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-778"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-779"><paramref name="assemblyRef" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-779"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>  
 <span data-ttu-id="d9922-780">Fangen Sie in [.NET für Windows Store-Apps](http://go.microsoft.com/fwlink/?LinkID=247912) oder der [portablen Klassenbibliothek](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md) stattdessen die Basisklassenausnahme <see cref="T:System.IO.IOException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-780">In the [.NET for Windows Store apps](http://go.microsoft.com/fwlink/?LinkID=247912) or the [Portable Class Library](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md), catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="d9922-781">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-781">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-782"><paramref name="assemblyRef" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-782"><paramref name="assemblyRef" /> is not a valid assembly.</span></span> <span data-ttu-id="d9922-783">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-783">-or-</span></span>  
  
 <span data-ttu-id="d9922-784">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyRef" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-784">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-785">für den Zugriff zum Lesen aus einer Datei oder eines Verzeichnisses und für den Zugriff auf die Informationen in den Pfad selbst.</span><span class="sxs-lookup"><span data-stu-id="d9922-785">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="d9922-786">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-786">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-787">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-787">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-788">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-788">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-789">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-789">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="d9922-790">Die Langform des Assemblynamens.</span><span class="sxs-lookup"><span data-stu-id="d9922-790">The long form of the assembly name.</span></span></param>
        <summary><span data-ttu-id="d9922-791">Lädt eine Assembly, wenn die Langform des Namens angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-791">Loads an assembly given the long form of its name.</span></span></summary>
        <returns><span data-ttu-id="d9922-792">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-792">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-793">Die Langform des Assemblynamens einer besteht aus den einfachen Namen (z. B. "System" für die Assembly "System.dll") zusammen mit der Version, Kultur, Token des öffentlichen Schlüssels und optional die Prozessorarchitektur.</span><span class="sxs-lookup"><span data-stu-id="d9922-793">The long form of an assembly name consists of its simple name (such as "System" for the System.dll assembly) along with its version, culture, public key token, and optionally its processor architecture.</span></span> <span data-ttu-id="d9922-794">Entspricht der Assembly aneinander gehängt <xref:System.Reflection.Assembly.FullName%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-794">It corresponds to the assembly's <xref:System.Reflection.Assembly.FullName%2A> property.</span></span> <span data-ttu-id="d9922-795">Das folgende Beispiel veranschaulicht die Verwendung eines langen namens zum Laden der Assembly "System.dll" für .NET Framework 4.</span><span class="sxs-lookup"><span data-stu-id="d9922-795">The following example illustrates the use of a long name to load the System.dll assembly for the .NET Framework 4.</span></span>  
  
 [!code-csharp[System.Reflection.Assembly.Load#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.assembly.load/cs/load1.cs#1)]
 [!code-vb[System.Reflection.Assembly.Load#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.assembly.load/vb/load1.vb#1)]  
  
 <span data-ttu-id="d9922-796"><xref:System.IO.FileLoadException> wird ausgelöst, wenn `assemblyString` vollen Assemblynamens und die erste Assembly, die den einfachen Namen entspricht, hat eine andere Version, Kultur oder Token des öffentlichen Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-796"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d9922-797">Das Ladeprogramm weiter nicht prüfen von anderen Assemblys, die den einfachen Namen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-797">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="d9922-798">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-798">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-799">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-799">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-800">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-800">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-801">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-801">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-802">Beweise, die als Argument an die <xref:System.Reflection.Assembly.Load%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-802">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-803">Bei Verwendung von einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis wird von der aufrufenden Assembly geerbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-803">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d9922-804">Dies gilt für .NET Framework, Version 1.1 Service Pack 1 (SP1) und nachfolgenden Versionen.</span><span class="sxs-lookup"><span data-stu-id="d9922-804">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d9922-805">In .NET Framework, Version 1.0 und 1.1-Version ohne Service Pack 1, bei der Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-805">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d9922-806">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-806">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-807">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-807">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-808">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-808">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d9922-809">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-809">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-810">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-810">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-811">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-811">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-812">In .NET Framework, Version 2.0 Prozessorarchitektur Assemblyidentität hinzugefügt und kann als Teil der Assembly-Zeichenfolgen angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-812">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d9922-813">Z. B. "ProcessorArchitecture = Msil".</span><span class="sxs-lookup"><span data-stu-id="d9922-813">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="d9922-814">Allerdings ist die empfohlene Methode zum Angeben von Namen einer Assembly erstellen ein <xref:System.Reflection.AssemblyName> -Objekt und übergibt ihn dann an eine entsprechende Überladung der <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-814">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d9922-815">Siehe <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-815">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-816">Im folgenden Beispiel lädt eine Assembly bei Angabe des vollqualifizierten Namens und führt die Objekttypen, die in der angegebenen Assembly enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-816">The following example loads an assembly given its fully qualified name, and lists all the types contained in the specified assembly.</span></span> <span data-ttu-id="d9922-817">Für dieses Codebeispiel ausführen müssen Sie den vollqualifizierten Assemblynamen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-817">For this code example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="d9922-818">Informationen zur Vorgehensweise zum Abrufen der vollqualifizierte Assemblyname finden Sie unter [Assemblynamen](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-818">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
 [!code-cpp[assembly.load1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Assembly.Load1/CPP/load1.cpp#1)]
 [!code-csharp[assembly.load1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Assembly.Load1/CS/load1.cs#1)]
 [!code-vb[assembly.load1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Assembly.Load1/VB/load1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-819"><paramref name="assemblyString" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-819"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-820"><paramref name="assemblyString" /> ist eine Zeichenfolge mit der Länge 0 (null).</span><span class="sxs-lookup"><span data-stu-id="d9922-820"><paramref name="assemblyString" /> is a zero-length string.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-821"><paramref name="assemblyString" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-821"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-822">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-822">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-823"><paramref name="assemblyString" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-823"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-824">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-824">-or-</span></span>  
  
 <span data-ttu-id="d9922-825">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyString" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-825">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-826">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-826">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-827">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-827">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Reflection.AssemblyName" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="d9922-828">Ein Bytearray, das ein COFF-Image mit einer ausgegebenen Assembly ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-828">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="d9922-829">Ein Bytearray, das die Rohdatenbytes enthält, die die Symbole für die Assembly darstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-829">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-830">Lädt die Assembly mit einem COFF-Image (Common Object File Format), das eine ausgegebene Assembly und optional Symbole für die Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-830">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols for the assembly.</span></span> <span data-ttu-id="d9922-831">Die Assembly wird in die Anwendungsdomäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-831">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="d9922-832">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-832">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-833">Die Vertrauensebene einer Assembly, die geladen wird, mit dieser Methode wird die Vertrauensebene der aufrufenden Assembly identisch.</span><span class="sxs-lookup"><span data-stu-id="d9922-833">The trust level of an assembly that is loaded by using this method is the same as the trust level of the calling assembly.</span></span> <span data-ttu-id="d9922-834">Um eine Assembly aus einem Bytearray mit der Vertrauensebene der Anwendungsdomäne zu laden, verwenden die <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-834">To load an assembly from a byte array with the trust level of the application domain, use the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.SecurityContextSource%29> method overload.</span></span> <span data-ttu-id="d9922-835">Weitere Informationen zur Verwendung von Beweisen mit Überladungen von der <xref:System.Reflection.Assembly.Load%2A> Methode, die Bytearrays, finden Sie unter der <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-835">For more information about the use of evidence with overloads of the <xref:System.Reflection.Assembly.Load%2A> method that take byte arrays, see the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%2CSystem.Byte%5B%5D%2CSystem.Security.Policy.Evidence%29> method overload.</span></span>  
  
 <span data-ttu-id="d9922-836">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-836">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-837">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-837">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-838">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-838">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-839">Beachten Sie, dass die Überladung dieser Methode erstellt immer eine neue <xref:System.Reflection.Assembly> Objekt mit einem eigenen Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="d9922-839">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-840"><paramref name="rawAssembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-840"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-841"><paramref name="rawAssembly" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-841"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-842">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-842">-or-</span></span>  
  
 <span data-ttu-id="d9922-843">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-843">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (System.Reflection.AssemblyName assemblyRef, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(class System.Reflection.AssemblyName assemblyRef, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Reflection.AssemblyName,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyRef As AssemblyName, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::Reflection::AssemblyName ^ assemblyRef, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyRef"><span data-ttu-id="d9922-844">Das Objekt, das die zu ladende Assembly beschreibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-844">The object that describes the assembly to be loaded.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="d9922-845">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-845">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-846">Lädt eine Assembly bei Angabe von <see cref="T:System.Reflection.AssemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-846">Loads an assembly given its <see cref="T:System.Reflection.AssemblyName" />.</span></span> <span data-ttu-id="d9922-847">Die Assembly wird mithilfe des bereitgestellten Beweises in die Domäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-847">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="d9922-848">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-848">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-849"><xref:System.IO.FileLoadException> wird ausgelöst, wenn `assemblyRef` vollen Assemblynamens und die erste Assembly, die den einfachen Namen entspricht, hat eine andere Version, Kultur oder Token des öffentlichen Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-849"><xref:System.IO.FileLoadException> is thrown if `assemblyRef` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d9922-850">Das Ladeprogramm weiter nicht prüfen von anderen Assemblys, die den einfachen Namen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-850">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-851">Verwenden Sie keine <xref:System.Reflection.AssemblyName> nur mit der <xref:System.Reflection.AssemblyName.CodeBase%2A> Eigenschaftensatz.</span><span class="sxs-lookup"><span data-stu-id="d9922-851">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="d9922-852">Die <xref:System.Reflection.AssemblyName.CodeBase%2A> -Eigenschaft nicht übergibt alle Elemente der Assemblyidentität (z. B. Name oder Version), also laden tritt nicht auf gemäß Laden von Identity-Regeln, wie von der Sie erwarten die <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-852">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d9922-853">Stattdessen wird die Assembly geladen LoadFrom-Regeln verwenden.</span><span class="sxs-lookup"><span data-stu-id="d9922-853">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="d9922-854">Informationen zu den Nachteilen der Verwendung der LoadFrom-Kontext finden Sie unter der <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> methodenüberladung oder [Best Practices für das Laden der Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-854">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
 <span data-ttu-id="d9922-855">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-855">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-856">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-856">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-857">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-857">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-858">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-858">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-859">Beweise, die als Argument an die <xref:System.Reflection.Assembly.Load%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-859">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-860">Bei Verwendung von einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis wird von der aufrufenden Assembly geerbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-860">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d9922-861">Dies gilt für .NET Framework, Version 1.1 Service Pack 1 (SP1) und nachfolgenden Versionen.</span><span class="sxs-lookup"><span data-stu-id="d9922-861">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d9922-862">In .NET Framework, Version 1.0 und 1.1-Version ohne Service Pack 1, bei der Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-862">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d9922-863">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-863">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-864">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-864">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-865">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-865">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d9922-866">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-866">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-867">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-867">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-868">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-868">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-869">Wenn beide die <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> Eigenschaft und die <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> Eigenschaft festgelegt werden, der erste Versuch zum Laden der Assembly verwendet den Anzeigenamen (einschließlich der Version, Kultur und So weiter, wie vom die <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> Eigenschaft).</span><span class="sxs-lookup"><span data-stu-id="d9922-869">If both the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property and the <xref:System.Reflection.AssemblyName.CodeBase%2A?displayProperty=nameWithType> property are set, the first attempt to load the assembly uses the display name (including version, culture, and so on, as returned by the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property).</span></span> <span data-ttu-id="d9922-870">Wenn die Datei nicht gefunden wird, <xref:System.Reflection.AssemblyName.CodeBase%2A> wird verwendet, um nach der Assembly zu suchen.</span><span class="sxs-lookup"><span data-stu-id="d9922-870">If the file is not found, <xref:System.Reflection.AssemblyName.CodeBase%2A> is used to search for the assembly.</span></span> <span data-ttu-id="d9922-871">Wenn die Assembly gefunden wird, mithilfe von <xref:System.Reflection.AssemblyName.CodeBase%2A>, der Anzeigenamen der Assembly abgeglichen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-871">If the assembly is found using <xref:System.Reflection.AssemblyName.CodeBase%2A>, the display name is matched against the assembly.</span></span> <span data-ttu-id="d9922-872">Wenn die Übereinstimmung fehlschlägt, eine <xref:System.IO.FileLoadException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-872">If the match fails, a <xref:System.IO.FileLoadException> is thrown.</span></span>  
  
 <span data-ttu-id="d9922-873">Beim Aufrufen der <xref:System.Reflection.Assembly.Load%2A> Methode mehr als einmal in der gleichen Assembly jedoch einen anderen Beweis angegeben, die common Language Runtime keine auslöst eine <xref:System.IO.FileLoadException> , da die Gleichheit und Integrität der anderen Beweisspezifikationen werden können bestimmt.</span><span class="sxs-lookup"><span data-stu-id="d9922-873">If you call the <xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d9922-874">Der Nachweis, der zunächst erfolgreich ist der Beweis, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-874">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-875"><paramref name="assemblyRef" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-875"><paramref name="assemblyRef" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-876"><paramref name="assemblyRef" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-876"><paramref name="assemblyRef" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-877"><paramref name="assemblyRef" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-877"><paramref name="assemblyRef" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-878">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-878">-or-</span></span>  
  
 <span data-ttu-id="d9922-879">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyRef" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-879">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyRef" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-880">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-880">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-881">für den Zugriff zum Lesen aus einer Datei oder eines Verzeichnisses und für den Zugriff auf die Informationen in den Pfad selbst.</span><span class="sxs-lookup"><span data-stu-id="d9922-881">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="d9922-882">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-882">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-883">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-883">for reading a URI that does not begin with "file://".</span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-884">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-884">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-885">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-885">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (string assemblyString, System.Security.Policy.Evidence assemblySecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(string assemblyString, class System.Security.Policy.Evidence assemblySecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (assemblyString As String, assemblySecurity As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(System::String ^ assemblyString, System::Security::Policy::Evidence ^ assemblySecurity);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
        <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="d9922-886">Der Anzeigename der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-886">The display name of the assembly.</span></span></param>
        <param name="assemblySecurity"><span data-ttu-id="d9922-887">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-887">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-888">Lädt eine Assembly bei Angabe des Anzeigenamens, wobei die Assembly unter Verwendung der bereitgestellten Beweise in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-888">Loads an assembly given its display name, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="d9922-889">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-889">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-890"><xref:System.IO.FileLoadException> wird ausgelöst, wenn `assemblyString` vollen Assemblynamens und die erste Assembly, die den einfachen Namen entspricht, hat eine andere Version, Kultur oder Token des öffentlichen Schlüssels angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-890"><xref:System.IO.FileLoadException> is thrown if `assemblyString` specifies the full assembly name, and the first assembly that matches the simple name has a different version, culture, or public key token.</span></span> <span data-ttu-id="d9922-891">Das Ladeprogramm weiter nicht prüfen von anderen Assemblys, die den einfachen Namen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-891">The loader does not continue probing for other assemblies that match the simple name.</span></span>  
  
 <span data-ttu-id="d9922-892">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-892">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-893">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-893">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-894">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-894">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-895">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-895">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-896">Beweise, die als Argument an die <xref:System.Reflection.Assembly.Load%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-896">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-897">Bei Verwendung von einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis wird von der aufrufenden Assembly geerbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-897">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d9922-898">Dies gilt für .NET Framework, Version 1.1 Service Pack 1 (SP1) und nachfolgenden Versionen.</span><span class="sxs-lookup"><span data-stu-id="d9922-898">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d9922-899">In .NET Framework, Version 1.0 und 1.1-Version ohne Service Pack 1, bei der Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-899">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d9922-900">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-900">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-901">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-901">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-902">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-902">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 <span data-ttu-id="d9922-903">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-903">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-904">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-904">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-905">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-905">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-906">Wenn Sie diese Methode mehrmals für dieselbe Assembly jedoch einen anderen Beweis angegebenen aufrufen, die common Language Runtime löst eine <xref:System.IO.FileLoadException> , da die Gleichheit und Integrität der anderen Beweis-Spezifikationen nicht bestimmt werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-906">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d9922-907">Der Nachweis, der zunächst erfolgreich ist der Beweis, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-907">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="d9922-908">In .NET Framework, Version 2.0 Prozessorarchitektur Assemblyidentität hinzugefügt und kann als Teil der Assembly-Zeichenfolgen angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-908">In the .NET Framework version 2.0, processor architecture is added to assembly identity, and can be specified as part of assembly name strings.</span></span> <span data-ttu-id="d9922-909">Z. B. "ProcessorArchitecture = Msil".</span><span class="sxs-lookup"><span data-stu-id="d9922-909">For example, "ProcessorArchitecture=msil".</span></span> <span data-ttu-id="d9922-910">Allerdings ist die empfohlene Methode zum Angeben von Namen einer Assembly erstellen ein <xref:System.Reflection.AssemblyName> -Objekt und übergibt ihn dann an eine entsprechende Überladung der <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-910">However, the recommended way to specify an assembly name is to create an <xref:System.Reflection.AssemblyName> object and pass it to an appropriate overload of the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="d9922-911">Siehe <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-911">See <xref:System.Reflection.AssemblyName.ProcessorArchitecture%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-912"><paramref name="assemblyString" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-912"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-913"><paramref name="assemblyString" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-913"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-914"><paramref name="assemblyString" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-914"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-915">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-915">-or-</span></span>  
  
 <span data-ttu-id="d9922-916">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyString" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-916">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-917">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-917">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-918">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-918">-or-</span></span>  
  
 <span data-ttu-id="d9922-919">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-919">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-920">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-920">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-921">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-921">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Load (rawAssembly As Byte(), rawSymbolStore As Byte(), securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="d9922-922">Ein Bytearray, das ein COFF-Image mit einer ausgegebenen Assembly ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-922">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="d9922-923">Ein Bytearray, das die Rohdatenbytes enthält, die die Symbole für die Assembly darstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-923">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="d9922-924">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-924">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-925">Lädt die Assembly mit einem COFF-Image (Common Object File Format), das eine ausgegebene Assembly und optional Symbole sowie einen Beweis für die Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-925">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and evidence for the assembly.</span></span> <span data-ttu-id="d9922-926">Die Assembly wird in die Anwendungsdomäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-926">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="d9922-927">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-927">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-928">Die Assembly wird mithilfe des bereitgestellten Beweises in die Domäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-928">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span> <span data-ttu-id="d9922-929">Die Rohdatenbytes, die die Symbole für die Assembly darstellen, werden ebenfalls geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-929">The raw bytes representing the symbols for the assembly are also loaded.</span></span>  
  
 <span data-ttu-id="d9922-930">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-930">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-931">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-931">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-932">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-932">When you use a <xref:System.Reflection.Assembly.Load%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-933">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-933">When you use a <xref:System.Reflection.Assembly.Load%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-934">Beweise, die als Argument an die <xref:System.Reflection.Assembly.Load%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-934">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.Load%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-935">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis wird von der aufrufenden Assembly geerbt.</span><span class="sxs-lookup"><span data-stu-id="d9922-935">When you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is inherited from the calling assembly.</span></span> <span data-ttu-id="d9922-936">Dies gilt für .NET Framework, Version 1.1 Service Pack 1 (SP1) und nachfolgenden Versionen.</span><span class="sxs-lookup"><span data-stu-id="d9922-936">This applies to the .NET Framework version 1.1 Service Pack 1 (SP1) and subsequent releases.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="d9922-937">In .NET Framework, Version 1.0 und 1.1-Version ohne Service Pack 1, bei der Verwendung einer <xref:System.Reflection.Assembly.Load%2A> methodenüberladung mit einem `Byte[]` Parameter zum Laden eines COFF-Image Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-937">In the .NET Framework version 1.0 and in version 1.1 without SP1, when you use a <xref:System.Reflection.Assembly.Load%2A> method overload with a `Byte[]` parameter to load a COFF image, evidence is combined.</span></span> <span data-ttu-id="d9922-938">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-938">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-939">Bei Verwendung einer <xref:System.Reflection.Assembly.Load%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-939">When you use a <xref:System.Reflection.Assembly.Load%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-940">Von der aufrufenden Assembly und vom COFF-Image Beweise werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-940">Evidence of the calling assembly and evidence of the COFF image are ignored.</span></span>  
  
 <span data-ttu-id="d9922-941">Reflektieren ausführbaren C++-Dateien lösen möglicherweise einen <xref:System.BadImageFormatException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-941">Reflecting on C++ executable files might throw a <xref:System.BadImageFormatException>.</span></span> <span data-ttu-id="d9922-942">Dies wurde höchstwahrscheinlich durch die C++-Compiler die Umsetzungsadressen Striping verursacht oder die `.reloc` Abschnitt aus der ausführbaren Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-942">This is most likely caused by the C++ compiler stripping the relocation addresses or the `.reloc` section from your executable file.</span></span> <span data-ttu-id="d9922-943">Beibehalten der `.reloc` Adresse für die ausführbare Datei mit C++, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-943">To preserve the `.reloc` address for your C++ executable file, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-944">Beim Aufrufen der [\], Byte\<xref:System.Reflection.Assembly.Load%2A >-Methode mehr als einmal in der gleichen Assembly jedoch einen anderen Beweis angegeben, die common Language Runtime keine auslöst ein <xref:System.IO.FileLoadException> da die Gleichheit und Integrität der anderen Beweisspezifikationen können nicht ermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-944">If you call the [\], Byte\<xref:System.Reflection.Assembly.Load%2A> method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d9922-945">Der Nachweis, der zunächst erfolgreich ist der Beweis, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-945">The evidence that first succeeds is the evidence that is used.</span></span>  
  
 <span data-ttu-id="d9922-946">Beachten Sie, dass die Überladung dieser Methode erstellt immer eine neue <xref:System.Reflection.Assembly> Objekt mit einem eigenen Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="d9922-946">Note that this method overload always creates a new <xref:System.Reflection.Assembly> object with its own mapping.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-947"><paramref name="rawAssembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-947"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-948"><paramref name="rawAssembly" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-948"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-949">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-949">-or-</span></span>  
  
 <span data-ttu-id="d9922-950">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-950">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-951">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-951">An assembly or module was loaded twice with two different evidences.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9922-952"><paramref name="securityEvidence" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-952"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span>  <span data-ttu-id="d9922-953">Die CAS-Legacyrichtlinie ist standardmäßig in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] nicht aktiviert. Wenn sie nicht aktiviert ist, muss <paramref name="securityEvidence" /> <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="d9922-953">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-954">für die Fähigkeit, die Beweise angeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-954">for the ability to supply evidence.</span></span> <span data-ttu-id="d9922-955">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-955">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" />.</span></span> <span data-ttu-id="d9922-956">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-956">Security action: <see cref="F:System.Security.Permissions.SecurityAction.Demand" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly Load (byte[] rawAssembly, byte[] rawSymbolStore, System.Security.SecurityContextSource securityContextSource);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly Load(unsigned int8[] rawAssembly, unsigned int8[] rawSymbolStore, valuetype System.Security.SecurityContextSource securityContextSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.Load(System.Byte[],System.Byte[],System.Security.SecurityContextSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ Load(cli::array &lt;System::Byte&gt; ^ rawAssembly, cli::array &lt;System::Byte&gt; ^ rawSymbolStore, System::Security::SecurityContextSource securityContextSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="d9922-957">Ein Bytearray, das ein COFF-Image mit einer ausgegebenen Assembly ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-957">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="d9922-958">Ein Bytearray, das die Rohdatenbytes enthält, die die Symbole für die Assembly darstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-958">A byte array that contains the raw bytes representing the symbols for the assembly.</span></span></param>
        <param name="securityContextSource"><span data-ttu-id="d9922-959">Die Quelle des Sicherheitskontexts.</span><span class="sxs-lookup"><span data-stu-id="d9922-959">The source of the security context.</span></span></param>
        <summary><span data-ttu-id="d9922-960">Lädt die Assembly mit einem COFF-Image (Common Object File Format), das eine ausgegebene Assembly und optional Symbole enthält und die Quelle für den Sicherheitskontext angibt.</span><span class="sxs-lookup"><span data-stu-id="d9922-960">Loads the assembly with a common object file format (COFF)-based image containing an emitted assembly, optionally including symbols and specifying the source for the security context.</span></span> <span data-ttu-id="d9922-961">Die Assembly wird in die Anwendungsdomäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-961">The assembly is loaded into the application domain of the caller.</span></span></summary>
        <returns><span data-ttu-id="d9922-962">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-962">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-963">Die Assembly wird in die Anwendungsdomäne des Aufrufers verwendet die angegebene Quelle für den Sicherheitskontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-963">The assembly is loaded into the application domain of the caller using the specified source for the security context.</span></span> <span data-ttu-id="d9922-964">Wenn `rawSymbolStore` angegeben wurde, das die Rohdatenbytes, die die Symbole für die Assembly darstellen, werden ebenfalls geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-964">If `rawSymbolStore` was specified, the raw bytes that represent the symbols for the assembly are also loaded.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-965"><paramref name="rawAssembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-965"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-966"><paramref name="rawAssembly" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-966"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-967">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-967">-or-</span></span>  
  
 <span data-ttu-id="d9922-968"><paramref name="rawAssembly" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-968"><paramref name="rawAssembly" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="d9922-969">Der Wert von <paramref name="securityContextSource" /> ist keiner der Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="d9922-969">The value of <paramref name="securityContextSource" /> is not one of the enumeration values.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-970">Lädt den Inhalt einer Assemblydatei.</span><span class="sxs-lookup"><span data-stu-id="d9922-970">Loads the contents of an assembly file.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d9922-971">Der voll gekennzeichnete Pfad der zu ladenden Datei.</span><span class="sxs-lookup"><span data-stu-id="d9922-971">The fully qualified path of the file to load.</span></span></param>
        <summary><span data-ttu-id="d9922-972">Lädt den Inhalt einer Assemblydatei mit dem angegebenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-972">Loads the contents of an assembly file on the specified path.</span></span></summary>
        <returns><span data-ttu-id="d9922-973">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-973">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-974">Verwenden der <xref:System.Reflection.Assembly.LoadFile%2A> Methode zum Laden und Assemblys, die die gleiche Identität haben, befinden sich in verschiedenen Pfaden jedoch untersuchen.<xref:System.Reflection.Assembly.LoadFile%2A></span><span class="sxs-lookup"><span data-stu-id="d9922-974">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.<xref:System.Reflection.Assembly.LoadFile%2A></span></span> <span data-ttu-id="d9922-975">Dateien wird nicht in den LoadFrom-Kontext geladen, und lässt sich nicht mit dem Ladepfad als Abhängigkeiten Auflösen der <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat.</span><span class="sxs-lookup"><span data-stu-id="d9922-975">does not load files into the load-from  context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="d9922-976"><xref:System.Reflection.Assembly.LoadFile%2A> eignet sich für dieses Szenario mit eingeschränkten da <xref:System.Reflection.Assembly.LoadFrom%2A> nicht zum Laden von Assemblys verwendet werden, die über die gleichen Identitäten, aber unterschiedliche Pfade; es wird nur das erste laden diese Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-976"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-977">Das <paramref name="path" />-Argument ist kein absoluter Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-977">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-978">Der <paramref name="path" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-978">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-979">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-979">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-980">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge ("") oder nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d9922-980">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-981"><paramref name="path" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-981"><paramref name="path" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-982">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-982">-or-</span></span>  
  
 <span data-ttu-id="d9922-983">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="path" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-983">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-984">für den Zugriff zum Lesen aus einer Datei oder eines Verzeichnisses und für den Zugriff auf die Informationen in den Pfad selbst.</span><span class="sxs-lookup"><span data-stu-id="d9922-984">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="d9922-985">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-985">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-986">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-986">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-987">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-987">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFile">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFile (string path, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFile(string path, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFile(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFile (path As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFile(System::String ^ path, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="d9922-988">Der vollqualifizierte Pfad der Assemblydatei.</span><span class="sxs-lookup"><span data-stu-id="d9922-988">The fully qualified path of the assembly file.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="d9922-989">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-989">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-990">Lädt eine Assembly bei Angabe des Pfads, wobei die Assembly unter Verwendung der bereitgestellten Beweise in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-990">Loads an assembly given its path, loading the assembly into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="d9922-991">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-991">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-992">Verwenden der <xref:System.Reflection.Assembly.LoadFile%2A> Methode zum Laden und Assemblys, die die gleiche Identität haben, befinden sich in verschiedenen Pfaden jedoch untersuchen.</span><span class="sxs-lookup"><span data-stu-id="d9922-992">Use the <xref:System.Reflection.Assembly.LoadFile%2A> method to load and examine assemblies that have the same identity, but are located in different paths.</span></span> <span data-ttu-id="d9922-993"><xref:System.Reflection.Assembly.LoadFile%2A> lädt keine Dateien in den <xref:System.Reflection.Assembly.LoadFrom%2A> Kontext und Abhängigkeiten, die mit dem Ladepfad als nicht aufgelöst die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat.</span><span class="sxs-lookup"><span data-stu-id="d9922-993"><xref:System.Reflection.Assembly.LoadFile%2A> does not load files into the <xref:System.Reflection.Assembly.LoadFrom%2A> context, and does not resolve dependencies using the load path, as the <xref:System.Reflection.Assembly.LoadFrom%2A> method does.</span></span> <span data-ttu-id="d9922-994"><xref:System.Reflection.Assembly.LoadFile%2A> eignet sich für dieses Szenario mit eingeschränkten da <xref:System.Reflection.Assembly.LoadFrom%2A> nicht zum Laden von Assemblys verwendet werden, die über die gleichen Identitäten, aber unterschiedliche Pfade; es wird nur das erste laden diese Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-994"><xref:System.Reflection.Assembly.LoadFile%2A> is useful in this limited scenario because <xref:System.Reflection.Assembly.LoadFrom%2A> cannot be used to load assemblies that have the same identities but different paths; it will load only the first such assembly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-995">Das <paramref name="path" />-Argument ist kein absoluter Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-995">The <paramref name="path" /> argument is not an absolute path.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-996">Der <paramref name="path" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-996">The <paramref name="path" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException"><span data-ttu-id="d9922-997">Der <paramref name="path" />-Parameter ist eine leere Zeichenfolge ("") oder nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="d9922-997">The <paramref name="path" /> parameter is an empty string ("") or does not exist.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-998">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-998">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-999"><paramref name="path" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-999"><paramref name="path" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1000">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1000">-or-</span></span>  
  
 <span data-ttu-id="d9922-1001">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="path" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1001">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="path" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d9922-1002"><paramref name="securityEvidence" /> ist nicht <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1002"><paramref name="securityEvidence" /> is not <see langword="null" />.</span></span> <span data-ttu-id="d9922-1003">Die CAS-Legacyrichtlinie ist standardmäßig in [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] nicht aktiviert. Wenn sie nicht aktiviert ist, muss <paramref name="securityEvidence" /> <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="d9922-1003">By default, legacy CAS policy is not enabled in the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]; when it is not enabled, <paramref name="securityEvidence" /> must be <see langword="null" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1004">für den Zugriff zum Lesen aus einer Datei oder eines Verzeichnisses und für den Zugriff auf die Informationen in den Pfad selbst.</span><span class="sxs-lookup"><span data-stu-id="d9922-1004">for access to read from a file or directory, and for access to the information in the path itself.</span></span> <span data-ttu-id="d9922-1005">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1005">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1006">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1006">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-1007">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1007">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadFrom">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-1008">Lädt eine Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1008">Loads an assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1009">Der Name oder Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1009">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1010">Lädt eine Assembly bei Angabe des Anzeigenamens oder Pfads.</span><span class="sxs-lookup"><span data-stu-id="d9922-1010">Loads an assembly given its file name or path.</span></span></summary>
        <returns><span data-ttu-id="d9922-1011">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1011">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1012">Die `assemblyFile` -Parameter muss auf einen URI ohne Escapezeichen verweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1012">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d9922-1013">Diese Methode stellt für alle ungültigen Zeichen im URI-Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1013">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-1014">File Transfer-Protokoll (FTP) wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1014">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d9922-1015">Wenn für der URI angegeben `assemblyFile` eine FTP-Adresse, die Assembly wurde nicht geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1015">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d9922-1016">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d9922-1016">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d9922-1017">`assemblyFile` kann absolut oder relativ zum aktuellen Verzeichnis sein und die Assembly in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1017">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d9922-1018">Assemblys können in einem der drei Kontexte geladen werden oder können ohne Kontext geladen werden:</span><span class="sxs-lookup"><span data-stu-id="d9922-1018">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d9922-1019">Der Load-Kontext enthält Überprüfung gefundene Assemblys: im GAC, in eine Hostassembly zu speichern, wenn die Laufzeit gehostet wird, oder in der <xref:System.AppDomainSetup.ApplicationBase%2A> und <xref:System.AppDomainSetup.PrivateBinPath%2A> der Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d9922-1019">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d9922-1020">Die meisten Überladungen der Methode <xref:System.Reflection.Assembly.Load%2A> laden Assemblys in diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1020">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d9922-1021">LoadFrom-Kontext enthält die Assemblys, die für die der Benutzer einen Pfad, der nicht in den Verzeichnissen, die Überprüfung durch Durchsuchen enthalten bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1021">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d9922-1022"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> und <xref:System.AppDomain.ExecuteAssembly%2A> sind Beispiel für Methoden, die anhand des Pfads laden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1022"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d9922-1023">Reflection-only-Kontext enthält Assemblys geladen werden, mit der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> und <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden, Code in diesen Kontexten können nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1023">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d9922-1024">Wenn der Benutzer generiert oder die Assembly gefunden, ist es nicht in jedem Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1024">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d9922-1025">Dies gilt für mithilfe von Überladungen der geladenen Assemblys die <xref:System.Reflection.Assembly.Load%2A> Methode, die ein Bytearray mit einer Assembly angeben, um flüchtige dynamische Assemblys mit Reflektion erstellt auszugeben, und nicht auf einem Datenträger gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1025">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d9922-1026">LoadFrom-Kontext ermöglicht es einer Assembly aus einem Pfad, der nicht in der Suche enthalten geladen werden und ermöglicht noch Abhängigkeiten in diesem Pfad gefunden und geladen werden, da die Pfadinformationen vom Kontext beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1026">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d9922-1027">Die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat folgende Nachteile.</span><span class="sxs-lookup"><span data-stu-id="d9922-1027">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d9922-1028">Verwenden Sie stattdessen <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1028">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d9922-1029">Wenn eine Assembly mit der gleichen Identität bereits geladen wurde, gibt <xref:System.Reflection.Assembly.LoadFrom%2A> die geladene Assembly zurück, auch wenn ein anderer Pfad angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1029">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d9922-1030">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und später eine Assembly in den Load-Kontext versucht, über den Anzeigenamen die gleiche Assembly zu laden, Auslastungstest fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1030">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d9922-1031">Dies kann auftreten, wenn eine Assembly deserialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1031">This can occur when an assembly is de-serialized.</span></span>  
  
-   <span data-ttu-id="d9922-1032">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und die Überprüfungspfad enthält eine Assembly mit derselben Identität, aber einen anderen Speicherort ein <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, oder anderes unerwartetes Verhalten auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1032">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d9922-1033"><xref:System.Reflection.Assembly.LoadFrom%2A> fordert <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> und <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> oder <xref:System.Net.WebPermission> im angegebenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-1033"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d9922-1034">Wenn ein systemeigenes Image für vorhanden ist `assemblyFile`, er wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1034">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d9922-1035">Die Assembly werden nicht domänenneutral geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1035">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d9922-1036">In .NET Framework, Version 1.0 und 1.1 wird die Richtlinie nicht angewendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1036">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-1037">Im folgende Beispiel lädt eine Assembly bei Angabe des Anzeigenamens oder Pfads.</span><span class="sxs-lookup"><span data-stu-id="d9922-1037">The following example loads an assembly given its file name or path.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#11)]
 [!code-csharp[System.Reflection.Assembly#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#11)]
 [!code-vb[System.Reflection.Assembly#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1038"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1038"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1039"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, enthält keine Angabe der Dateinamenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1039"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1040">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1040">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1041"><paramref name="assemblyFile" /> ist keine gültige Assembly; beispielsweise eine 32-Bit-Assembly in einem 64-Bit-Prozess.</span><span class="sxs-lookup"><span data-stu-id="d9922-1041"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="d9922-1042">Weitere Informationen finden Sie im Thema zu Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1042">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="d9922-1043">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1043">-or-</span></span>  
  
 <span data-ttu-id="d9922-1044">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1044">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1045">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1045">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-1046">Der <paramref name="assemblyFile" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1046">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1047">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1047">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1048">zum Lesen von eines URIS, der mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1048">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d9922-1049">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1049">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-1050">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1050">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1051">Der Name oder Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1051">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="d9922-1052">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1052">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1053">Lädt eine Assembly bei Angabe des Dateinamens oder Pfads und liefert den Sicherheitsbeweis.</span><span class="sxs-lookup"><span data-stu-id="d9922-1053">Loads an assembly given its file name or path and supplying security evidence.</span></span></summary>
        <returns><span data-ttu-id="d9922-1054">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1054">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1055">Die `assemblyFile` -Parameter muss auf einen URI ohne Escapezeichen verweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1055">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d9922-1056">Diese Methode stellt für alle ungültigen Zeichen im URI-Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1056">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-1057">File Transfer-Protokoll (FTP) wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1057">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d9922-1058">Wenn für der URI angegeben `assemblyFile` eine FTP-Adresse, die Assembly wurde nicht geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1058">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d9922-1059">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d9922-1059">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d9922-1060">`assemblyFile` kann absolut oder relativ zum aktuellen Verzeichnis sein und die Assembly in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1060">`assemblyFile` may be absolute or  relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d9922-1061">Assemblys können in einem der drei Kontexte geladen werden oder können ohne Kontext geladen werden:</span><span class="sxs-lookup"><span data-stu-id="d9922-1061">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d9922-1062">Der Load-Kontext enthält Überprüfung gefundene Assemblys: im GAC, in eine Hostassembly zu speichern, wenn die Laufzeit gehostet wird, oder in der <xref:System.AppDomainSetup.ApplicationBase%2A> und <xref:System.AppDomainSetup.PrivateBinPath%2A> der Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d9922-1062">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d9922-1063">Die meisten Überladungen der Methode <xref:System.Reflection.Assembly.Load%2A> laden Assemblys in diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1063">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d9922-1064">LoadFrom-Kontext enthält die Assemblys, die für die der Benutzer einen Pfad, der nicht in den Verzeichnissen, die Überprüfung durch Durchsuchen enthalten bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1064">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d9922-1065"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> und <xref:System.AppDomain.ExecuteAssembly%2A> sind Beispiel für Methoden, die anhand des Pfads laden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1065"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d9922-1066">Reflection-only-Kontext enthält Assemblys geladen werden, mit der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> und <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden, Code in diesen Kontexten können nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1066">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d9922-1067">Wenn der Benutzer generiert oder die Assembly gefunden, ist es nicht in jedem Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1067">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d9922-1068">Dies gilt für mithilfe von Überladungen der geladenen Assemblys die <xref:System.Reflection.Assembly.Load%2A> Methode, die ein Bytearray mit einer Assembly angeben, um flüchtige dynamische Assemblys mit Reflektion erstellt auszugeben, und nicht auf einem Datenträger gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1068">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d9922-1069">LoadFrom-Kontext ermöglicht es einer Assembly aus einem Pfad, der nicht in der Suche enthalten geladen werden und ermöglicht noch Abhängigkeiten in diesem Pfad gefunden und geladen werden, da die Pfadinformationen vom Kontext beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1069">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d9922-1070">Die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat folgende Nachteile.</span><span class="sxs-lookup"><span data-stu-id="d9922-1070">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d9922-1071">Verwenden Sie stattdessen <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1071">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d9922-1072">Wenn eine Assembly mit der gleichen Identität bereits geladen wurde, gibt <xref:System.Reflection.Assembly.LoadFrom%2A> die geladene Assembly zurück, auch wenn ein anderer Pfad angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1072">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d9922-1073">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und später eine Assembly in den Load-Kontext versucht, über den Anzeigenamen die gleiche Assembly zu laden, Auslastungstest fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1073">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d9922-1074">Dies kann auftreten, wenn eine Assembly deserialisiert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1074">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d9922-1075">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und die Überprüfungspfad enthält eine Assembly mit derselben Identität, aber einen anderen Speicherort ein <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, oder anderes unerwartetes Verhalten auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1075">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d9922-1076"><xref:System.Reflection.Assembly.LoadFrom%2A> fordert <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> und <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> oder <xref:System.Net.WebPermission> im angegebenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-1076"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d9922-1077">Wenn ein systemeigenes Image für vorhanden ist `assemblyFile`, er wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1077">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d9922-1078">Die Assembly werden nicht domänenneutral geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1078">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d9922-1079">In .NET Framework, Version 1.0 und 1.1 wird die Richtlinie nicht angewendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1079">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="d9922-1080">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1080">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-1081">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-1081">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-1082">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1082">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-1083">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1083">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-1084">Beweise, die als Argument an die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-1084">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-1085">Wenn Sie diese Methode mehrmals für dieselbe Assembly jedoch einen anderen Beweis angegebenen aufrufen, die common Language Runtime löst eine <xref:System.IO.FileLoadException> , da die Gleichheit und Integrität der anderen Beweis-Spezifikationen nicht bestimmt werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-1085">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d9922-1086">Der Nachweis, der zunächst erfolgreich ist der Beweis, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1086">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="d9922-1087">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1087">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="d9922-1088">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1088">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-1089">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1089">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-1090">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1090">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1091"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1091"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1092"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, enthält keine Angabe der Dateinamenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1092"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1093">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1093">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-1094">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1094">-or-</span></span>  
  
 <span data-ttu-id="d9922-1095">Der <paramref name="securityEvidence" /> ist nicht mehrdeutig und wird als ungültig bestimmt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1095">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1096"><paramref name="assemblyFile" /> ist keine gültige Assembly; beispielsweise eine 32-Bit-Assembly in einem 64-Bit-Prozess.</span><span class="sxs-lookup"><span data-stu-id="d9922-1096"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="d9922-1097">Weitere Informationen finden Sie im Thema zu Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1097">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="d9922-1098">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1098">-or-</span></span>  
  
 <span data-ttu-id="d9922-1099">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1099">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1100">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1100">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-1101">Der <paramref name="assemblyFile" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1101">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1102">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1102">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1103">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1103">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-1104">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1104">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1105">zum Lesen von eines URIS, der mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1105">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d9922-1106">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1106">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-1107">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1107">for reading a URI that does not begin with "file://".</span></span></permission>
        <altmember cref="T:System.Security.Policy.Evidence" />
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1108">Der Name oder Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1108">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="d9922-1109">Der Wert des errechneten Hashcodes.</span><span class="sxs-lookup"><span data-stu-id="d9922-1109">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="d9922-1110">Der Hashalgorithmus für das Hashing von Dateien und das Generieren des starken Namens.</span><span class="sxs-lookup"><span data-stu-id="d9922-1110">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="d9922-1111">Lädt eine Assembly bei Angabe des Dateinamens bzw. -pfads, des Hashwerts und des Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="d9922-1111">Loads an assembly given its file name or path, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="d9922-1112">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1112">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1113">Die `assemblyFile` -Parameter muss auf einen URI ohne Escapezeichen verweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1113">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d9922-1114">Diese Methode stellt für alle ungültigen Zeichen im URI-Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1114">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-1115">File Transfer-Protokoll (FTP) wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1115">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d9922-1116">Wenn für der URI angegeben `assemblyFile` eine FTP-Adresse, die Assembly wurde nicht geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1116">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d9922-1117">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d9922-1117">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d9922-1118">`assemblyFile` kann absolut oder relativ zum aktuellen Verzeichnis sein und die Assembly in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1118">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d9922-1119">Assemblys können in einem der drei Kontexte geladen werden oder können ohne Kontext geladen werden:</span><span class="sxs-lookup"><span data-stu-id="d9922-1119">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d9922-1120">Der Load-Kontext enthält Assemblys, die von der Überprüfung: in den globalen Assemblycache einschließen, in eine Hostassembly zu speichern, wenn die Laufzeit gehostet wird, oder in der <xref:System.AppDomainSetup.ApplicationBase%2A> und <xref:System.AppDomainSetup.PrivateBinPath%2A> der Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d9922-1120">The load context contains assemblies found by probing: in the global assembly cache, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d9922-1121">Die meisten Überladungen der Methode <xref:System.Reflection.Assembly.Load%2A> laden Assemblys in diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1121">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d9922-1122">LoadFrom-Kontext enthält die Assemblys, die für die der Benutzer einen Pfad bereitgestellt, der nicht in der Suche enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1122">The load-from context contains assemblies for which the user provided a path that is not included in probing.</span></span> <span data-ttu-id="d9922-1123"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> und <xref:System.AppDomain.ExecuteAssembly%2A> sind Beispiel für Methoden, die anhand des Pfads laden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1123"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d9922-1124">Reflection-only-Kontext enthält Assemblys geladen werden, mit der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> und <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden, Code in diesen Kontexten können nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1124">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d9922-1125">Wenn der Benutzer generiert oder die Assembly gefunden, ist es nicht in jedem Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1125">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d9922-1126">Dies gilt für mithilfe von Überladungen der geladenen Assemblys die <xref:System.Reflection.Assembly.Load%2A> Methode, die ein Bytearray mit einer Assembly angeben, um flüchtige dynamische Assemblys mit Reflektion erstellt auszugeben, und nicht auf einem Datenträger gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1126">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d9922-1127">LoadFrom-Kontext ermöglicht es einer Assembly aus einem Pfad geladen werden soll, die nicht in der Suche enthalten ist und noch ermöglicht Abhängigkeiten in diesem Pfad gefunden und geladen werden, da die Pfadinformationen vom Kontext beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1127">The load-from context allows an assembly to be loaded from a path that is not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d9922-1128">Die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat folgende Nachteile.</span><span class="sxs-lookup"><span data-stu-id="d9922-1128">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d9922-1129">Verwenden Sie stattdessen <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1129">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d9922-1130">Wenn eine Assembly mit der gleichen Identität bereits geladen wurde, gibt <xref:System.Reflection.Assembly.LoadFrom%2A> die geladene Assembly zurück, auch wenn ein anderer Pfad angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1130">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d9922-1131">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und später eine Assembly in den Load-Kontext versucht, über den Anzeigenamen die gleiche Assembly zu laden, Auslastungstest fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1131">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d9922-1132">Dies kann auftreten, wenn eine Assembly deserialisiert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1132">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d9922-1133">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und die Überprüfungspfad enthält eine Assembly mit derselben Identität, aber einen anderen Speicherort ein <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, oder anderes unerwartetes Verhalten auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1133">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d9922-1134"><xref:System.Reflection.Assembly.LoadFrom%2A> fordert <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> und <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> oder <xref:System.Net.WebPermission> im angegebenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-1134"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d9922-1135">Wenn ein systemeigenes Image für vorhanden ist `assemblyFile`, er wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1135">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d9922-1136">Die Assembly kann nicht als domänenneutral geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1136">The assembly cannot be loaded as domain-neutral.</span></span>  
  
 <span data-ttu-id="d9922-1137">Die Assembly wird mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1137">The assembly is loaded with the evidence that the loader supplies.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1138"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1138"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1139"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, gibt keine Dateinamenerweiterung an.</span><span class="sxs-lookup"><span data-stu-id="d9922-1139"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1140">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1140">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1141"><paramref name="assemblyFile" /> ist keine gültige Assembly; beispielsweise eine 32-Bit-Assembly in einem 64-Bit-Prozess.</span><span class="sxs-lookup"><span data-stu-id="d9922-1141"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="d9922-1142">Weitere Informationen finden Sie im Thema zu Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1142">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="d9922-1143">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1143">-or-</span></span>  
  
 <span data-ttu-id="d9922-1144"><paramref name="assemblyFile" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1144"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1145">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1145">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-1146">Der <paramref name="assemblyFile" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1146">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1147">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1147">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1148">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1148">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-1149">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1150">zum Lesen von eines URIS, der mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1150">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d9922-1151">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1151">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-1152">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1152">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadFrom (string assemblyFile, System.Security.Policy.Evidence securityEvidence, byte[] hashValue, System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadFrom(string assemblyFile, class System.Security.Policy.Evidence securityEvidence, unsigned int8[] hashValue, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm hashAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadFrom(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadFrom (assemblyFile As String, securityEvidence As Evidence, hashValue As Byte(), hashAlgorithm As AssemblyHashAlgorithm) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadFrom(System::String ^ assemblyFile, System::Security::Policy::Evidence ^ securityEvidence, cli::array &lt;System::Byte&gt; ^ hashValue, System::Configuration::Assemblies::AssemblyHashAlgorithm hashAlgorithm);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hashValue" Type="System.Byte[]" />
        <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1153">Der Name oder Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1153">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="d9922-1154">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1154">Evidence for loading the assembly.</span></span></param>
        <param name="hashValue"><span data-ttu-id="d9922-1155">Der Wert des errechneten Hashcodes.</span><span class="sxs-lookup"><span data-stu-id="d9922-1155">The value of the computed hash code.</span></span></param>
        <param name="hashAlgorithm"><span data-ttu-id="d9922-1156">Der Hashalgorithmus für das Hashing von Dateien und das Generieren des starken Namens.</span><span class="sxs-lookup"><span data-stu-id="d9922-1156">The hash algorithm used for hashing files and for generating the strong name.</span></span></param>
        <summary><span data-ttu-id="d9922-1157">Lädt eine Assembly bei Angabe des Dateinamens bzw. -pfads, des Hashwerts, der Sicherheitsbeweise und des Hashalgorithmus.</span><span class="sxs-lookup"><span data-stu-id="d9922-1157">Loads an assembly given its file name or path, security evidence, hash value, and hash algorithm.</span></span></summary>
        <returns><span data-ttu-id="d9922-1158">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1158">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1159">Die `assemblyFile` -Parameter muss auf einen URI ohne Escapezeichen verweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1159">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d9922-1160">Diese Methode stellt für alle ungültigen Zeichen im URI-Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1160">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-1161">File Transfer-Protokoll (FTP) wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1161">File transfer protocol (FTP) is not supported.</span></span> <span data-ttu-id="d9922-1162">Wenn für der URI angegeben `assemblyFile` eine FTP-Adresse, die Assembly wurde nicht geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1162">If the URI supplied for `assemblyFile` is an FTP address, the assembly is not loaded.</span></span> <span data-ttu-id="d9922-1163">Es werden keine Ausnahmen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d9922-1163">No exception is thrown.</span></span>  
  
 <span data-ttu-id="d9922-1164">`assemblyFile` kann absolut oder relativ zum aktuellen Verzeichnis sein und die Assembly in die Domäne des Aufrufers geladen wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1164">`assemblyFile` may be absolute or relative to the current directory, and the assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d9922-1165">Assemblys können in einem der drei Kontexte geladen werden oder können ohne Kontext geladen werden:</span><span class="sxs-lookup"><span data-stu-id="d9922-1165">Assemblies can be loaded into one of three contexts, or can be loaded without context:</span></span>  
  
-   <span data-ttu-id="d9922-1166">Der Load-Kontext enthält Überprüfung gefundene Assemblys: im GAC, in eine Hostassembly zu speichern, wenn die Laufzeit gehostet wird, oder in der <xref:System.AppDomainSetup.ApplicationBase%2A> und <xref:System.AppDomainSetup.PrivateBinPath%2A> der Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="d9922-1166">The load context contains assemblies found by probing: in the GAC, in a host assembly store if the runtime is hosted, or in the <xref:System.AppDomainSetup.ApplicationBase%2A> and <xref:System.AppDomainSetup.PrivateBinPath%2A> of the application domain.</span></span> <span data-ttu-id="d9922-1167">Die meisten Überladungen der Methode <xref:System.Reflection.Assembly.Load%2A> laden Assemblys in diesen Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1167">Most overloads of the <xref:System.Reflection.Assembly.Load%2A> method load assemblies into this context.</span></span>  
  
-   <span data-ttu-id="d9922-1168">LoadFrom-Kontext enthält die Assemblys, die für die der Benutzer einen Pfad, der nicht in den Verzeichnissen, die Überprüfung durch Durchsuchen enthalten bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1168">The load-from context contains assemblies for which the user provided a path not included in the directories searched by probing.</span></span> <span data-ttu-id="d9922-1169"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A> und <xref:System.AppDomain.ExecuteAssembly%2A> sind Beispiel für Methoden, die anhand des Pfads laden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1169"><xref:System.Reflection.Assembly.LoadFrom%2A>, <xref:System.AppDomain.CreateInstanceFrom%2A>, and <xref:System.AppDomain.ExecuteAssembly%2A> are examples of methods that load by path.</span></span>  
  
-   <span data-ttu-id="d9922-1170">Reflection-only-Kontext enthält Assemblys geladen werden, mit der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> und <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> Methoden, Code in diesen Kontexten können nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1170">The reflection-only context contains assemblies loaded with the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> and <xref:System.Reflection.Assembly.ReflectionOnlyLoadFrom%2A> methods; code in these contexts cannot be executed.</span></span>  
  
-   <span data-ttu-id="d9922-1171">Wenn der Benutzer generiert oder die Assembly gefunden, ist es nicht in jedem Kontext.</span><span class="sxs-lookup"><span data-stu-id="d9922-1171">If the user generated or found the assembly, it is not in any context.</span></span> <span data-ttu-id="d9922-1172">Dies gilt für mithilfe von Überladungen der geladenen Assemblys die <xref:System.Reflection.Assembly.Load%2A> Methode, die ein Bytearray mit einer Assembly angeben, um flüchtige dynamische Assemblys mit Reflektion erstellt auszugeben, und nicht auf einem Datenträger gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1172">This applies to assemblies loaded using overloads of the <xref:System.Reflection.Assembly.Load%2A> method that specify a byte array containing an assembly, and to transient dynamic assemblies created with reflection emit and not saved to disk.</span></span>  
  
 <span data-ttu-id="d9922-1173">LoadFrom-Kontext ermöglicht es einer Assembly aus einem Pfad, der nicht in der Suche enthalten geladen werden und ermöglicht noch Abhängigkeiten in diesem Pfad gefunden und geladen werden, da die Pfadinformationen vom Kontext beibehalten wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1173">The load-from context allows an assembly to be loaded from a path not included in probing, and yet allows dependencies on that path to be found and loaded because the path information is maintained by the context.</span></span>  
  
 <span data-ttu-id="d9922-1174">Die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode hat folgende Nachteile.</span><span class="sxs-lookup"><span data-stu-id="d9922-1174">The <xref:System.Reflection.Assembly.LoadFrom%2A> method has the following disadvantages.</span></span> <span data-ttu-id="d9922-1175">Verwenden Sie stattdessen <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1175">Consider using <xref:System.Reflection.Assembly.Load%2A> instead.</span></span>  
  
-   <span data-ttu-id="d9922-1176">Wenn eine Assembly mit der gleichen Identität bereits geladen wurde, gibt <xref:System.Reflection.Assembly.LoadFrom%2A> die geladene Assembly zurück, auch wenn ein anderer Pfad angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1176">If an assembly with the same identity is already loaded, <xref:System.Reflection.Assembly.LoadFrom%2A> returns the loaded assembly even if a different path was specified.</span></span>  
  
-   <span data-ttu-id="d9922-1177">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und später eine Assembly in den Load-Kontext versucht, über den Anzeigenamen die gleiche Assembly zu laden, Auslastungstest fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1177">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and later an assembly in the load context attempts to load the same assembly by display name, the load attempt fails.</span></span> <span data-ttu-id="d9922-1178">Dies kann auftreten, wenn eine Assembly deserialisiert ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1178">This can occur when an assembly is deserialized.</span></span>  
  
-   <span data-ttu-id="d9922-1179">Wenn eine Assembly geladen wurde mit <xref:System.Reflection.Assembly.LoadFrom%2A>, und die Überprüfungspfad enthält eine Assembly mit derselben Identität, aber einen anderen Speicherort ein <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, oder anderes unerwartetes Verhalten auftreten kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1179">If an assembly is loaded with <xref:System.Reflection.Assembly.LoadFrom%2A>, and the probing path includes an assembly with the same identity but a different location, an <xref:System.InvalidCastException>, <xref:System.MissingMethodException>, or other unexpected behavior can occur.</span></span>  
  
-   <span data-ttu-id="d9922-1180"><xref:System.Reflection.Assembly.LoadFrom%2A> fordert <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> und <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType> oder <xref:System.Net.WebPermission> im angegebenen Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-1180"><xref:System.Reflection.Assembly.LoadFrom%2A> demands <xref:System.Security.Permissions.FileIOPermissionAccess.Read?displayProperty=nameWithType> and <xref:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery?displayProperty=nameWithType>, or <xref:System.Net.WebPermission>, on the specified path.</span></span>  
  
-   <span data-ttu-id="d9922-1181">Wenn ein systemeigenes Image für vorhanden ist `assemblyFile`, er wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1181">If a native image exists for `assemblyFile`, it is not used.</span></span> <span data-ttu-id="d9922-1182">Die Assembly werden nicht domänenneutral geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1182">The assembly cannot be loaded as domain neutral.</span></span>  
  
-   <span data-ttu-id="d9922-1183">In .NET Framework, Version 1.0 und 1.1 wird die Richtlinie nicht angewendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1183">In the .NET Framework version 1.0 and 1.1, policy is not applied.</span></span>  
  
 <span data-ttu-id="d9922-1184">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1184">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-1185">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-1185">The rules for assembly and security evidence merging are as follows:</span></span>  
  
-   <span data-ttu-id="d9922-1186">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode ohne <xref:System.Security.Policy.Evidence> Parameter, wird die Assembly mit der das Ladeprogramm bereitgestellten Beweisen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1186">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with no <xref:System.Security.Policy.Evidence> parameter, the assembly is loaded with the evidence that the loader supplies.</span></span>  
  
-   <span data-ttu-id="d9922-1187">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einer <xref:System.Security.Policy.Evidence> Parameter Beweise werden zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1187">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with an <xref:System.Security.Policy.Evidence> parameter, pieces of evidence are merged.</span></span> <span data-ttu-id="d9922-1188">Beweise, die als Argument an die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode ablösen vom Ladeprogramm bereitgestellte Beweise.</span><span class="sxs-lookup"><span data-stu-id="d9922-1188">Pieces of evidence supplied as an argument to the <xref:System.Reflection.Assembly.LoadFrom%2A> method supersede pieces of evidence supplied by the loader.</span></span>  
  
-   <span data-ttu-id="d9922-1189">Wenn Sie diese Methode mehrmals für dieselbe Assembly jedoch einen anderen Beweis angegebenen aufrufen, die common Language Runtime löst eine <xref:System.IO.FileLoadException> , da die Gleichheit und Integrität der anderen Beweis-Spezifikationen nicht bestimmt werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-1189">If you call this method more than once on the same assembly but with a different evidence specified, the common language runtime does not throw a <xref:System.IO.FileLoadException> because the equality and integrity of the different evidence specifications cannot be determined.</span></span> <span data-ttu-id="d9922-1190">Der Nachweis, der zunächst erfolgreich ist der Beweis, der verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1190">The evidence that first succeeds is the evidence that is used.</span></span>  
  
-   <span data-ttu-id="d9922-1191">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einem `Byte[]` Parameter Laden Sie ein Image common Object File Format (COFF), Beweis kombiniert wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1191">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter to load a common object file format (COFF) image, evidence is combined.</span></span> <span data-ttu-id="d9922-1192">`Zone`, `Url` und `Site` erbt von der aufrufenden Assembly und `Hash` und `StrongName` stammen aus der COFF-Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1192">`Zone`, `Url` and `Site` are inherited from the calling assembly, and `Hash` and `StrongName` are taken from the COFF assembly.</span></span>  
  
-   <span data-ttu-id="d9922-1193">Bei Verwendung einer <xref:System.Reflection.Assembly.LoadFrom%2A> Methode mit einem `Byte[]` Parameter und <xref:System.Security.Policy.Evidence> um ein COFF-Image zu laden, wird nur die bereitgestellte Beweise verwendet.</span><span class="sxs-lookup"><span data-stu-id="d9922-1193">When you use a <xref:System.Reflection.Assembly.LoadFrom%2A> method with a `Byte[]` parameter and <xref:System.Security.Policy.Evidence> to load a COFF image, only the supplied evidence is used.</span></span> <span data-ttu-id="d9922-1194">Von der aufrufenden Assembly und Beweise, des COFF-Image werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1194">Evidence of the calling assembly and evidence of the COFF image is ignored.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1195"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1195"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1196"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, enthält keine Angabe der Dateinamenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1196"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1197">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1197">A file that was found could not be loaded.</span></span>  
  
 <span data-ttu-id="d9922-1198">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1198">-or-</span></span>  
  
 <span data-ttu-id="d9922-1199">Der <paramref name="securityEvidence" /> ist nicht mehrdeutig und wird als ungültig bestimmt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1199">The <paramref name="securityEvidence" /> is not ambiguous and is determined to be invalid.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1200"><paramref name="assemblyFile" /> ist keine gültige Assembly; beispielsweise eine 32-Bit-Assembly in einem 64-Bit-Prozess.</span><span class="sxs-lookup"><span data-stu-id="d9922-1200"><paramref name="assemblyFile" /> is not a valid assembly; for example, a 32-bit assembly in a 64-bit process.</span></span> <span data-ttu-id="d9922-1201">Weitere Informationen finden Sie im Thema zu Ausnahmen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1201">See the exception topic for more information.</span></span>  
  
 <span data-ttu-id="d9922-1202">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1202">-or-</span></span>  
  
 <span data-ttu-id="d9922-1203">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1203">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1204">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1204">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-1205">Der <paramref name="assemblyFile" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1205">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1206">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1206">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1207">zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1207">to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-1208">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1208">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1209">zum Lesen von eines URIS, der mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1209">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d9922-1210">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1210">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-1211">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1211">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadModule">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-1212">Lädt das Modul, das für diese Assembly intern ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1212">Loads the module internal to this assembly.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module LoadModule (string moduleName, byte[] rawModule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadModule (moduleName As String, rawModule As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="d9922-1213">Der Name des Moduls.</span><span class="sxs-lookup"><span data-stu-id="d9922-1213">The name of the module.</span></span> <span data-ttu-id="d9922-1214">Diese Zeichenfolge muss einem Dateinamen im Manifest dieser Assembly entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1214">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="d9922-1215">Ein Bytearray, das ein COFF-Image mit einem ausgegebenen Modul oder eine Ressource ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1215">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <summary><span data-ttu-id="d9922-1216">Lädt das Modul, das für diese Assembly intern ist, mit einem COFF (Common Object File Format)-Image, das ein ausgegebenes Modul enthält, oder eine Ressourcendatei.</span><span class="sxs-lookup"><span data-stu-id="d9922-1216">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span></summary>
        <returns><span data-ttu-id="d9922-1217">Das geladene Modul.</span><span class="sxs-lookup"><span data-stu-id="d9922-1217">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1218"><paramref name="moduleName" /> oder <paramref name="rawModule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1218"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-1219"><paramref name="moduleName" /> stimmt mit keinem Dateieintrag im Manifest dieser Assembly überein.</span><span class="sxs-lookup"><span data-stu-id="d9922-1219"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1220"><paramref name="rawModule" /> ist kein gültiges Modul.</span><span class="sxs-lookup"><span data-stu-id="d9922-1220"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1221">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1221">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1222">zum Bereitstellen von Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1222">to provide evidence.</span></span> <span data-ttu-id="d9922-1223">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1223">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="LoadModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module LoadModule (string moduleName, byte[] rawModule, byte[] rawSymbolStore);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Module LoadModule(string moduleName, unsigned int8[] rawModule, unsigned int8[] rawSymbolStore) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadModule (moduleName As String, rawModule As Byte(), rawSymbolStore As Byte()) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::Module ^ LoadModule(System::String ^ moduleName, cli::array &lt;System::Byte&gt; ^ rawModule, cli::array &lt;System::Byte&gt; ^ rawSymbolStore);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moduleName" Type="System.String" />
        <Parameter Name="rawModule" Type="System.Byte[]" />
        <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="moduleName"><span data-ttu-id="d9922-1224">Der Name des Moduls.</span><span class="sxs-lookup"><span data-stu-id="d9922-1224">The name of the module.</span></span> <span data-ttu-id="d9922-1225">Diese Zeichenfolge muss einem Dateinamen im Manifest dieser Assembly entsprechen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1225">This string must correspond to a file name in this assembly's manifest.</span></span></param>
        <param name="rawModule"><span data-ttu-id="d9922-1226">Ein Bytearray, das ein COFF-Image mit einem ausgegebenen Modul oder eine Ressource ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1226">A byte array that is a COFF-based image containing an emitted module, or a resource.</span></span></param>
        <param name="rawSymbolStore"><span data-ttu-id="d9922-1227">Ein Bytearray, das die Rohdatenbytes enthält, die die Symbole für das Modul darstellen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1227">A byte array containing the raw bytes representing the symbols for the module.</span></span> <span data-ttu-id="d9922-1228">Muss <see langword="null" /> sein, wenn es sich um eine Ressourcendatei handelt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1228">Must be <see langword="null" /> if this is a resource file.</span></span></param>
        <summary><span data-ttu-id="d9922-1229">Lädt das Modul, das für diese Assembly intern ist, mit einem COFF (Common Object File Format)-Image, das ein ausgegebenes Modul enthält, oder eine Ressourcendatei.</span><span class="sxs-lookup"><span data-stu-id="d9922-1229">Loads the module, internal to this assembly, with a common object file format (COFF)-based image containing an emitted module, or a resource file.</span></span> <span data-ttu-id="d9922-1230">Die Rohdatenbytes, die die Symbole für das Modul darstellen, werden ebenfalls geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1230">The raw bytes representing the symbols for the module are also loaded.</span></span></summary>
        <returns><span data-ttu-id="d9922-1231">Das geladene Modul.</span><span class="sxs-lookup"><span data-stu-id="d9922-1231">The loaded module.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1232"><paramref name="moduleName" /> oder <paramref name="rawModule" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1232"><paramref name="moduleName" /> or <paramref name="rawModule" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-1233"><paramref name="moduleName" /> stimmt mit keinem Dateieintrag im Manifest dieser Assembly überein.</span><span class="sxs-lookup"><span data-stu-id="d9922-1233"><paramref name="moduleName" /> does not match a file entry in this assembly's manifest.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1234"><paramref name="rawModule" /> ist kein gültiges Modul.</span><span class="sxs-lookup"><span data-stu-id="d9922-1234"><paramref name="rawModule" /> is not a valid module.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1235">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1235">A file that was found could not be loaded.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1236">zum Bereitstellen von Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1236">to provide evidence.</span></span> <span data-ttu-id="d9922-1237">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1237">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadWithPartialName">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-1238">Lädt eine Assembly mithilfe eines unvollständigen Namens aus dem Anwendungsverzeichnis oder dem globalen Assemblycache.</span><span class="sxs-lookup"><span data-stu-id="d9922-1238">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9922-1239">Die Überladungen der <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> Methode sind veraltet und wurden für die Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1239">The overloads of the <xref:System.Reflection.Assembly.LoadWithPartialName%2A?displayProperty=nameWithType> method are obsolete and have been retained for backward compatibility.</span></span> <span data-ttu-id="d9922-1240">Die nicht veraltete Alternative ist <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1240">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="d9922-1241">Der Anzeigename der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1241">The display name of the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1242">Lädt eine Assembly mithilfe eines unvollständigen Namens aus dem Anwendungsverzeichnis oder dem globalen Assemblycache.</span><span class="sxs-lookup"><span data-stu-id="d9922-1242">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span></summary>
        <returns><span data-ttu-id="d9922-1243">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1243">The loaded assembly.</span></span> <span data-ttu-id="d9922-1244">Wenn <paramref name="partialName" /> nicht gefunden wird, gibt diese Methode <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-1244">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9922-1245">Die <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> Methode ist veraltet und wurde für Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1245">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="d9922-1246">Die nicht veraltete Alternative ist <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1246">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d9922-1247">Anwendungen, Laden von Assemblys mit dieser Methode, werden von Upgrades dieser Assemblys beeinflusst werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1247">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="d9922-1248">Aus diesem Grund verwenden Sie diese Methode nicht; Umgestalten der Anwendung für die Verwendung der <xref:System.Reflection.Assembly.Load%28System.String%29> methodenüberladung oder <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1248">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%28System.String%29> method overload or the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 <span data-ttu-id="d9922-1249">Diese Methode ruft zuerst <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1249">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="d9922-1250">Wenn die Assembly nicht gefunden wird, gibt diese Methode die Assembly aus dem globalen Assemblycache, die den gleichen einfachen Namen und die höchste Versionsnummer aufweist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1250">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-1251">Der <paramref name="partialName" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1251">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1252"><paramref name="assemblyFile" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1252"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1253">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1253">-or-</span></span>  
  
 <span data-ttu-id="d9922-1254">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="partialName" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1254">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="LoadWithPartialName">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly LoadWithPartialName (string partialName, System.Security.Policy.Evidence securityEvidence);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly LoadWithPartialName(string partialName, class System.Security.Policy.Evidence securityEvidence) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.LoadWithPartialName(System.String,System.Security.Policy.Evidence)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LoadWithPartialName (partialName As String, securityEvidence As Evidence) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ LoadWithPartialName(System::String ^ partialName, System::Security::Policy::Evidence ^ securityEvidence);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partialName" Type="System.String" />
        <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
      </Parameters>
      <Docs>
        <param name="partialName"><span data-ttu-id="d9922-1255">Der Anzeigename der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1255">The display name of the assembly.</span></span></param>
        <param name="securityEvidence"><span data-ttu-id="d9922-1256">Beweis für das Laden der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1256">Evidence for loading the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1257">Lädt eine Assembly mithilfe eines unvollständigen Namens aus dem Anwendungsverzeichnis oder dem globalen Assemblycache.</span><span class="sxs-lookup"><span data-stu-id="d9922-1257">Loads an assembly from the application directory or from the global assembly cache using a partial name.</span></span> <span data-ttu-id="d9922-1258">Die Assembly wird mithilfe des bereitgestellten Beweises in die Domäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1258">The assembly is loaded into the domain of the caller using the supplied evidence.</span></span></summary>
        <returns><span data-ttu-id="d9922-1259">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1259">The loaded assembly.</span></span> <span data-ttu-id="d9922-1260">Wenn <paramref name="partialName" /> nicht gefunden wird, gibt diese Methode <see langword="null" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-1260">If <paramref name="partialName" /> is not found, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="d9922-1261">Die <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> Methode ist veraltet und wurde für Abwärtskompatibilität beibehalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1261">The <xref:System.Reflection.Assembly.LoadWithPartialName%28System.String%2CSystem.Security.Policy.Evidence%29> method is obsolete and has been retained for backward compatibility.</span></span> <span data-ttu-id="d9922-1262">Die nicht veraltete Alternative ist <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1262">The non-obsolete alternative is <xref:System.Reflection.Assembly.Load%28System.String%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="d9922-1263">Den Beweis bilden die Informationen, die der Sicherheitsrichtlinie als Eingaben für Entscheidungen dienen, z. B., welche Berechtigungen einem Code erteilt werden können.</span><span class="sxs-lookup"><span data-stu-id="d9922-1263">Evidence is the set of information that constitutes input to security policy decisions, such as what permissions can be granted to code.</span></span>  
  
 <span data-ttu-id="d9922-1264">Anwendungen, Laden von Assemblys mit dieser Methode, werden von Upgrades dieser Assemblys beeinflusst werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1264">Applications that load assemblies with this method will be affected by upgrades of those assemblies.</span></span> <span data-ttu-id="d9922-1265">Aus diesem Grund verwenden Sie diese Methode nicht; Umgestalten der Anwendung für die Verwendung der <xref:System.Reflection.Assembly.Load%2A> Methode oder die <xref:System.Reflection.Assembly.LoadFrom%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-1265">Therefore, do not use this method; redesign the application to use the <xref:System.Reflection.Assembly.Load%2A> method or the <xref:System.Reflection.Assembly.LoadFrom%2A> method.</span></span>  
  
 <span data-ttu-id="d9922-1266">Diese Methode ruft zuerst <xref:System.Reflection.Assembly.Load%2A>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1266">This method first calls <xref:System.Reflection.Assembly.Load%2A>.</span></span> <span data-ttu-id="d9922-1267">Wenn die Assembly nicht gefunden wird, gibt diese Methode die Assembly aus dem globalen Assemblycache, die den gleichen einfachen Namen und die höchste Versionsnummer aufweist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1267">If the assembly is not found, this method returns the assembly from the global assembly cache that has the same simple name, and the highest version number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1268">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweissätzen geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1268">An assembly or module was loaded twice with two different sets of evidence.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="d9922-1269">Der <paramref name="partialName" />-Parameter ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1269">The <paramref name="partialName" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1270"><paramref name="assemblyFile" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1270"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1271">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1271">-or-</span></span>  
  
 <span data-ttu-id="d9922-1272">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="partialName" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1272">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="partialName" /> was compiled with a later version.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="d9922-1273">zum Aufrufen von nicht verwalteten Codes und zum Laden einer Assembly mit Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1273">for calling unmanaged code and to load an assembly with evidence.</span></span> <span data-ttu-id="d9922-1274">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1274">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></span></span></permission>
        <altmember cref="M:System.Reflection.Assembly.Load(System.String)" />
        <altmember cref="M:System.Reflection.Assembly.LoadFrom(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public virtual string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._Assembly.Location</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1275">Ruft den vollständigen Pfad oder UNC-Pfad der geladenen Datei ab, die das Manifest enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1275">Gets the full path or UNC location of the loaded file that contains the manifest.</span></span></summary>
        <value><span data-ttu-id="d9922-1276">Der Speicherort der geladenen Datei, die das Manifest enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1276">The location of the loaded file that contains the manifest.</span></span> <span data-ttu-id="d9922-1277">Wenn eine Schattenkopie der geladenen Datei erstellt wurde, entspricht der Speicherort dem der Datei nach dem Erstellen der Schattenkopie.</span><span class="sxs-lookup"><span data-stu-id="d9922-1277">If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</span></span> <span data-ttu-id="d9922-1278">Wenn die Assembly aus einem Bytearray geladen wurde, z. B. bei Verwendung der Überladung der <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" />-Methode, ist der zurückgegebene Wert eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1278">If the assembly is loaded from a byte array, such as when using the <see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /> method overload, the value returned is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1279">Um den Speicherort abzurufen, bevor die Datei verborgen kopiert wurde, verwenden Sie die <xref:System.Reflection.Assembly.CodeBase%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9922-1279">To get the location before the file has been shadow-copied, use the <xref:System.Reflection.Assembly.CodeBase%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9922-1280">Das folgende Beispiel zeigt den Speicherort der geladenen Datei, die das Manifest enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1280">The following example displays the location of the loaded file that contains the manifest.</span></span>  
  
 [!code-cpp[System.Reflection.Assembly#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Assembly/CPP/assembly.cpp#3)]
 [!code-csharp[System.Reflection.Assembly#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Assembly/CS/assembly.cs#3)]
 [!code-vb[System.Reflection.Assembly#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Assembly/VB/assembly.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="d9922-1281">Die aktuelle Assembly ist eine dynamische Assembly, dargestellt durch ein <see cref="T:System.Reflection.Emit.AssemblyBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1281">The current assembly is a dynamic assembly, represented by an <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> object.</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1282">für den Zugriff auf den Pfad.</span><span class="sxs-lookup"><span data-stu-id="d9922-1282">for access to the path.</span></span> <span data-ttu-id="d9922-1283">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1283">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1284">Ruft das Modul mit dem Manifest für die aktuelle Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-1284">Gets the module that contains the manifest for the current assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-1285">Das Modul mit dem Manifest für die Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1285">The module that contains the manifest for the assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ModuleResolve">
      <MemberSignature Language="C#" Value="public virtual event System.Reflection.ModuleResolveEventHandler ModuleResolve;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Reflection.ModuleResolveEventHandler ModuleResolve" />
      <MemberSignature Language="DocId" Value="E:System.Reflection.Assembly.ModuleResolve" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event ModuleResolve As ModuleResolveEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Reflection::ModuleResolveEventHandler ^ ModuleResolve;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Runtime.InteropServices._Assembly.ModuleResolve</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ModuleResolveEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1286">Tritt ein, wenn das Klassenladeprogramm der Common Language Runtime einen Verweis auf ein internes Modul einer Assembly nicht auf normale Weise auflösen kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1286">Occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1287">Dieses Ereignis kann dem Rückruf Dank suchen und laden das Modul selbst und zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1287">This event gives the callback a chance to find and load the module itself and return it.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d9922-1288">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="d9922-1288">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="d9922-1289">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1289">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1290">Ruft eine Sammlung ab, die die Module in dieser Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1290">Gets a collection that contains the modules in this assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-1291">Eine Sammlung, die die Module in dieser Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1291">A collection that contains the modules in this assembly.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Equality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d9922-1292">Die Assembly, die mit <c>rechts</c> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-1292">The assembly to compare to <c>right</c>.</span></span></param>
        <param name="right"><span data-ttu-id="d9922-1293">Die Assembly, die mit <c>links</c> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-1293">The assembly to compare to <c>left</c>.</span></span></param>
        <summary><span data-ttu-id="d9922-1294">Gibt an, ob zwei <see cref="T:System.Reflection.Assembly" />-Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-1294">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="d9922-1295"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1295"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Assembly left, System.Reflection.Assembly right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.Assembly left, class System.Reflection.Assembly right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.op_Inequality(System.Reflection.Assembly,System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As Assembly, right As Assembly) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Assembly ^ left, System::Reflection::Assembly ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.Assembly" />
        <Parameter Name="right" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="d9922-1296">Die Assembly, die mit <c>rechts</c> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-1296">The assembly to compare to <c>right</c>.</span></span></param>
        <param name="right"><span data-ttu-id="d9922-1297">Die Assembly, die mit <c>links</c> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-1297">The assembly to compare to <c>left</c>.</span></span></param>
        <summary><span data-ttu-id="d9922-1298">Gibt an, ob zwei <see cref="T:System.Reflection.Assembly" />-Objekte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="d9922-1298">Indicates whether two <see cref="T:System.Reflection.Assembly" /> objects are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="d9922-1299"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1299"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1300">Ruft den Berechtigungssatz der aktuellen Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="d9922-1300">Gets the grant set of the current assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-1301">Der Berechtigungssatz der aktuellen Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1301">The grant set of the current assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1302"><xref:System.Security.PermissionSet> -Objekte können vertraulichen Informationen wie z. B. Pfade enthalten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1302"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="d9922-1303">Aus diesem Grund wird volle Vertrauenswürdigkeit erforderlich, um diese Objekte zugreifen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1303">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d9922-1304">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="d9922-1304">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d9922-1305">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1305">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1306">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob diese Assembly in den ReflectionOnly-Kontext geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1306">Gets a <see cref="T:System.Boolean" /> value indicating whether this assembly was loaded into the reflection-only context.</span></span></summary>
        <value>
          <span data-ttu-id="d9922-1307"><see langword="true" />, wenn die Assembly in den ReflectionOnly-Kontext und nicht in den Ausführungskontext geladen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1307"><see langword="true" /> if the assembly was loaded into the reflection-only context, rather than the execution context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1308">Wenn eine Assembly in den reflektionsbezogenen Kontext geladen wurde, mithilfe der <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> -Methode Code kann nicht ausgeführt werden, in der Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1308">If an assembly has been loaded into the reflection-only context, using the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A> method, you cannot execute code in the assembly.</span></span> <span data-ttu-id="d9922-1309">Um Code auszuführen, muss die Assembly in den Ausführungskontext geladen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9922-1309">To execute code, the assembly must be loaded into the execution context.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReflectionOnlyLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d9922-1310">Lädt eine Assembly in den ReflectionOnly-Kontext, wo sie überprüft, aber nicht ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1310">Loads an assembly into the reflection-only context, where it can be examined but not executed.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (byte[] rawAssembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(unsigned int8[] rawAssembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (rawAssembly As Byte()) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(cli::array &lt;System::Byte&gt; ^ rawAssembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rawAssembly" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="rawAssembly"><span data-ttu-id="d9922-1311">Ein Bytearray, das ein COFF-Image mit einer ausgegebenen Assembly ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1311">A byte array that is a COFF-based image containing an emitted assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1312">Lädt die Assembly aus einem COFF (Common Object File Format)-Image, das eine ausgegebene Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1312">Loads the assembly from a common object file format (COFF)-based image containing an emitted assembly.</span></span> <span data-ttu-id="d9922-1313">Die Assembly wird in den ReflectionOnly-Kontext der Anwendungsdomäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1313">The assembly is loaded into the reflection-only context of the caller's application domain.</span></span></summary>
        <returns><span data-ttu-id="d9922-1314">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1314">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1315">Code kann nicht aus einer Assembly in den ReflectionOnly Kontext geladen, ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1315">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="d9922-1316">Um Code auszuführen, die Assembly muss geladen werden in den Ausführungskontext auch mithilfe der <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-1316">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="d9922-1317">Reflection-only-Kontext unterscheidet sich von anderen Kontexten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1317">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d9922-1318">Assemblys, die in den Kontext geladen werden, können nur durch das Entladen der Anwendungsdomäne entladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1318">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1319"><paramref name="rawAssembly" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1319"><paramref name="rawAssembly" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1320"><paramref name="rawAssembly" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1320"><paramref name="rawAssembly" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1321">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1321">-or-</span></span>  
  
 <span data-ttu-id="d9922-1322">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="rawAssembly" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1322">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="rawAssembly" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-1323"><paramref name="rawAssembly" /> kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1323"><paramref name="rawAssembly" /> cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoad">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoad (string assemblyString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoad(string assemblyString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoad (assemblyString As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoad(System::String ^ assemblyString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyString"><span data-ttu-id="d9922-1324">Der Anzeigename der Assembly, wie von der <see cref="P:System.Reflection.AssemblyName.FullName" />-Eigenschaft zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1324">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span></span></param>
        <summary><span data-ttu-id="d9922-1325">Lädt eine Assembly in den ReflectionOnly-Kontext, wenn ihr Anzeigename angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1325">Loads an assembly into the reflection-only context, given its display name.</span></span></summary>
        <returns><span data-ttu-id="d9922-1326">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1326">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1327">Abhängigkeiten werden nicht automatisch in den ReflectionOnly Kontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1327">Dependencies are not automatically loaded into the reflection-only context.</span></span>  
  
 <span data-ttu-id="d9922-1328">Code kann nicht aus einer Assembly in den ReflectionOnly Kontext geladen, ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1328">You cannot execute code from an assembly loaded into the reflection-only context.</span></span> <span data-ttu-id="d9922-1329">Um Code auszuführen, die Assembly muss geladen werden in den Ausführungskontext auch mithilfe der <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-1329">To execute code, the assembly must be loaded into the execution context as well, using the <xref:System.Reflection.Assembly.Load%2A> method.</span></span>  
  
 <span data-ttu-id="d9922-1330">Das Erteilen bestimmter Berechtigungen für eine Assembly beruht auf Beweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1330">Whether certain permissions are granted or not granted to an assembly is based on evidence.</span></span> <span data-ttu-id="d9922-1331">Regeln für die Assembly und den Sicherheitsbeweis Zusammenführen sind wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="d9922-1331">The rules for assembly and security evidence merging are as follows:</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9922-1332">In C++ kompilierten ausführbaren Dateien reflektieren kann Auslösen einer <xref:System.IO.FileLoadException>.</span><span class="sxs-lookup"><span data-stu-id="d9922-1332">Reflecting on executable files compiled in C++ might throw a <xref:System.IO.FileLoadException>.</span></span> <span data-ttu-id="d9922-1333">Dies wird wahrscheinlich vom C++-Compiler die Umsetzungsadressen oder den .reloc-Abschnitt der ausführbaren Datei Striping verursacht.</span><span class="sxs-lookup"><span data-stu-id="d9922-1333">This is most likely caused by the C++ compiler stripping the relocation addresses or the .reloc section from your executable file.</span></span> <span data-ttu-id="d9922-1334">Um die .reloc-Adresse zu erhalten, geben Sie `/fixed:no` beim verknüpfen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1334">To preserve the .reloc address, specify `/fixed:no` when you are linking.</span></span>  
  
 <span data-ttu-id="d9922-1335">Reflection-only-Kontext unterscheidet sich von anderen Kontexten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1335">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d9922-1336">Assemblys, die in den Kontext geladen werden, können nur durch das Entladen der Anwendungsdomäne entladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1336">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1337"><paramref name="assemblyString" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1337"><paramref name="assemblyString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-1338"><paramref name="assemblyString" /> ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1338"><paramref name="assemblyString" /> is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1339"><paramref name="assemblyString" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1339"><paramref name="assemblyString" /> is not found.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-1340"><paramref name="assemblyString" /> wurde gefunden, kann aber nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1340"><paramref name="assemblyString" /> is found, but cannot be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1341"><paramref name="assemblyString" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1341"><paramref name="assemblyString" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1342">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1342">-or-</span></span>  
  
 <span data-ttu-id="d9922-1343">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyString" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1343">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyString" /> was compiled with a later version.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnlyLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly ReflectionOnlyLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly ReflectionOnlyLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ReflectionOnlyLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReflectionOnlyLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ ReflectionOnlyLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1344">Der Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1344">The path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1345">Lädt eine Assembly in den ReflectionOnly-Kontext, wenn ihr Pfad angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1345">Loads an assembly into the reflection-only context, given its path.</span></span></summary>
        <returns><span data-ttu-id="d9922-1346">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1346">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1347">Abhängigkeiten werden nicht automatisch in den ReflectionOnly Kontext geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1347">Dependencies are not automatically loaded into the reflection-only context.</span></span> <span data-ttu-id="d9922-1348">Um Abhängigkeiten automatisch zu laden, verarbeiten die <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> Ereignis und laden die Abhängigkeit im Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d9922-1348">To automatically load dependencies, handle the <xref:System.AppDomain.ReflectionOnlyAssemblyResolve> event and load the dependency in the event handler.</span></span>  
  
 <span data-ttu-id="d9922-1349">Code kann nicht aus einer Assembly ausgeführt werden, die in den reflektionsbezogenen Kontext geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1349">You cannot execute code from an assembly that has been loaded into the reflection-only context.</span></span> <span data-ttu-id="d9922-1350">Um den Code auszuführen, laden Sie die Assembly mit der <xref:System.Reflection.Assembly.LoadFile%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d9922-1350">To execute the code, load the assembly with the <xref:System.Reflection.Assembly.LoadFile%2A> method.</span></span>  
  
 <span data-ttu-id="d9922-1351">Die `assemblyFile` -Parameter muss auf einen URI ohne Escapezeichen verweisen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1351">The `assemblyFile` parameter must refer to a URI without escape characters.</span></span> <span data-ttu-id="d9922-1352">Diese Methode stellt für alle ungültigen Zeichen im URI-Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1352">This method supplies escape characters for all invalid characters in the URI.</span></span>  
  
 <span data-ttu-id="d9922-1353">Der angegebene Pfad für `assemblyFile` ist relativ zum aktuellen Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="d9922-1353">The path specified for `assemblyFile` is relative to the current directory.</span></span> <span data-ttu-id="d9922-1354">Die Assembly wird in die Domäne des Aufrufers geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1354">The assembly is loaded into the domain of the caller.</span></span>  
  
 <span data-ttu-id="d9922-1355">Reflection-only-Kontext unterscheidet sich von anderen Kontexten.</span><span class="sxs-lookup"><span data-stu-id="d9922-1355">The reflection-only context is no different from other contexts.</span></span> <span data-ttu-id="d9922-1356">Assemblys, die in den Kontext geladen werden, können nur durch das Entladen der Anwendungsdomäne entladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1356">Assemblies that are loaded into the context can be unloaded only by unloading the application domain.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1357"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1357"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1358"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, gibt keine Dateinamenerweiterung an.</span><span class="sxs-lookup"><span data-stu-id="d9922-1358"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a file name extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="d9922-1359"><paramref name="assemblyFile" /> wurde gefunden, konnte jedoch nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1359"><paramref name="assemblyFile" /> is found, but could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1360"><paramref name="assemblyFile" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1360"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1361">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1361">-or-</span></span>  
  
 <span data-ttu-id="d9922-1362">Version 2.0 oder höher der Common Language Runtime ist derzeit geladen, und <paramref name="assemblyFile" /> wurde mit einer höheren Version kompiliert.</span><span class="sxs-lookup"><span data-stu-id="d9922-1362">Version 2.0 or later of the common language runtime is currently loaded and <paramref name="assemblyFile" /> was compiled with a later version.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1363">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1363">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1364">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1364">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d9922-1365"><paramref name="assemblyFile" /> ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1365"><paramref name="assemblyFile" /> is an empty string ("").</span></span></exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission"><span data-ttu-id="d9922-1366">zum Lesen von eines URIS, der mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1366">for reading a URI that begins with "file://".</span></span> <span data-ttu-id="d9922-1367">Zugeordnete Enumerationen: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span><span class="sxs-lookup"><span data-stu-id="d9922-1367">Associated enumerations: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.Read" />, <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span></span></permission>
        <permission cref="T:System.Net.WebPermission"><span data-ttu-id="d9922-1368">zum Lesen von eines URIS, der nicht mit "file://" beginnt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1368">for reading a URI that does not begin with "file://".</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public virtual System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Assembly.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9922-1369">Ruft einen Wert ab, der angibt, welchen Satz von Sicherheitsregeln die Common Language Runtime (CLR) für diese Assembly erzwingt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1369">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span></span></summary>
        <value><span data-ttu-id="d9922-1370">Der Sicherheitsregelsatz, den die CLR für diese Assembly erzwingt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1370">The security rule set that the CLR enforces for this assembly.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1371">Standardmäßig werden in Assemblys, die beim Kompilieren mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] Transparenz ist, auch wenn Sie sie stattdessen explizit vornehmen können.</span><span class="sxs-lookup"><span data-stu-id="d9922-1371">By default, assemblies that you compile with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] have  transparency, although you can explicitly make them  instead.</span></span> <span data-ttu-id="d9922-1372">Assemblys, die mit früheren Versionen von .NET Framework kompiliert wurden, haben Transparenz der Ebene 1.</span><span class="sxs-lookup"><span data-stu-id="d9922-1372">Assemblies that were compiled with earlier versions of the .NET Framework have level 1 transparency.</span></span>  
  
 <span data-ttu-id="d9922-1373">Weitere Informationen finden Sie unter [Sicherheitsänderungen](~/docs/framework/security/security-changes.md).</span><span class="sxs-lookup"><span data-stu-id="d9922-1373">See [Security Changes](~/docs/framework/security/security-changes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">To be added.</param>
        <param name="inherit">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._Assembly.GetType">
      <MemberSignature Language="C#" Value="Type _Assembly.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._Assembly.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.System#Runtime#InteropServices#_Assembly#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _Assembly.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._Assembly.GetType() = System::Runtime::InteropServices::_Assembly::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-1374">Gibt den Typ der aktuellen Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="d9922-1374">Returns the type of the current instance.</span></span></summary>
        <returns><span data-ttu-id="d9922-1375">Ein Objekt, das den konvertierten <see cref="T:System.Reflection.Assembly" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="d9922-1375">An object that represents the <see cref="T:System.Reflection.Assembly" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._Assembly.ToString</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d9922-1376">Gibt den vollständigen Namen der Assembly zurück, der auch als Anzeigename bezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="d9922-1376">Returns the full name of the assembly, also known as the display name.</span></span></summary>
        <returns><span data-ttu-id="d9922-1377">Der vollständige Name der Assembly oder der Klassenname, wenn der vollständige Name der Assembly nicht bestimmt werden kann.</span><span class="sxs-lookup"><span data-stu-id="d9922-1377">The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnsafeLoadFrom">
      <MemberSignature Language="C#" Value="public static System.Reflection.Assembly UnsafeLoadFrom (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Assembly UnsafeLoadFrom(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Assembly.UnsafeLoadFrom(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function UnsafeLoadFrom (assemblyFile As String) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Assembly ^ UnsafeLoadFrom(System::String ^ assemblyFile);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile"><span data-ttu-id="d9922-1378">Der Name oder Pfad der Datei, die das Manifest der Assembly enthält.</span><span class="sxs-lookup"><span data-stu-id="d9922-1378">The name or path of the file that contains the manifest of the assembly.</span></span></param>
        <summary><span data-ttu-id="d9922-1379">Lädt eine Assembly in den Ladekontext und umgeht einige Sicherheitsüberprüfungen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1379">Loads an assembly into the load-from context, bypassing some security checks.</span></span></summary>
        <returns><span data-ttu-id="d9922-1380">Die geladene Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1380">The loaded assembly.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9922-1381">Verwenden Sie diese Methode, um eine lokale Assembly zu laden, die das Betriebssystem gekennzeichnet wurde, als aus dem Web (z. B. eine temporäre Datei, die aus dem Internet oder Intranet heruntergeladen wurde) geladen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9922-1381">Use this method to load a local assembly that the operating system has flagged as having been loaded from the Web (for example, a temporary file that was downloaded from the Internet or intranet).</span></span> <span data-ttu-id="d9922-1382">Bevor Sie die [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], solche Assemblys automatisch in einer Sandbox-Anwendungsdomäne geladen wurden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1382">Before the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], such assemblies were automatically loaded into a sandboxed application domain.</span></span> <span data-ttu-id="d9922-1383">Beginnend mit der [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], sie sind mit voller Vertrauenswürdigkeit geladen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1383">Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], they are loaded with full trust.</span></span>  
  
 <span data-ttu-id="d9922-1384">Sie können als Alternative zur Verwendung dieser Methode anwenden der [ &lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in der Anwendungskonfigurationsdatei.</span><span class="sxs-lookup"><span data-stu-id="d9922-1384">As an alternative to using this method, you can apply the [&lt;NetFx40_LegacySecurityPolicy&gt; Element](~/docs/framework/configure-apps/file-schema/runtime/netfx40-legacysecuritypolicy-element.md) in your application configuration file.</span></span> <span data-ttu-id="d9922-1385">Dies bewirkt, dass die common Language Runtime an der Sicherheitsrichtlinie des Zurücksetzen der [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span><span class="sxs-lookup"><span data-stu-id="d9922-1385">This causes the common language runtime to revert to the security policy of the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)].</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d9922-1386">Wenn Sie eine dieser Lösungen verwenden, müssen Sie sicher sein, dass er geladen ist `assemblyFile` mit vollständiger Vertrauenswürdigkeit.</span><span class="sxs-lookup"><span data-stu-id="d9922-1386">If you use either of these solutions, you must be certain that it is safe to load `assemblyFile` with full trust.</span></span>  
  
 <span data-ttu-id="d9922-1387">Eine Erläuterung der Load-Kontexte, einschließlich LoadFrom-Kontext finden Sie unter der <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1387">For a discussion of load contexts, including the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%28System.String%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d9922-1388"><paramref name="assemblyFile" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="d9922-1388"><paramref name="assemblyFile" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="d9922-1389"><paramref name="assemblyFile" /> wurde nicht gefunden, oder das Modul, das Sie laden möchten, enthält keine Angabe der Dateinamenerweiterung.</span><span class="sxs-lookup"><span data-stu-id="d9922-1389"><paramref name="assemblyFile" /> is not found, or the module you are trying to load does not specify a filename extension.</span></span></exception>
        <exception cref="T:System.IO.FileLoadException"><span data-ttu-id="d9922-1390">Eine gefundene Datei konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1390">A file that was found could not be loaded.</span></span></exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="d9922-1391"><paramref name="assemblyFile" /> ist keine gültige Assembly.</span><span class="sxs-lookup"><span data-stu-id="d9922-1391"><paramref name="assemblyFile" /> is not a valid assembly.</span></span>  
  
 <span data-ttu-id="d9922-1392">- oder - </span><span class="sxs-lookup"><span data-stu-id="d9922-1392">-or-</span></span>  
  
 <span data-ttu-id="d9922-1393"><paramref name="assemblyFile" /> wurde mit einer Version der Common Language Runtime kompiliert, die höher ist als die Version, die derzeit geladen ist.</span><span class="sxs-lookup"><span data-stu-id="d9922-1393"><paramref name="assemblyFile" /> was compiled with a later version of the common language runtime than the version that is currently loaded.</span></span></exception>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="d9922-1394">Eine CodeBase, die nicht mit "file://" beginnt, wurde ohne die erforderliche <see cref="T:System.Net.WebPermission" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="d9922-1394">A codebase that does not start with "file://" was specified without the required <see cref="T:System.Net.WebPermission" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="d9922-1395">Der <paramref name="assemblyFile" />-Parameter ist eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="d9922-1395">The <paramref name="assemblyFile" /> parameter is an empty string ("").</span></span></exception>
        <exception cref="T:System.IO.PathTooLongException"><span data-ttu-id="d9922-1396">Der Assemblyname ist länger als MAX_PATH Zeichen.</span><span class="sxs-lookup"><span data-stu-id="d9922-1396">The assembly name is longer than MAX_PATH characters.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="d9922-1397">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="d9922-1397">requires full trust for the immediate caller.</span></span> <span data-ttu-id="d9922-1398">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="d9922-1398">This member cannot be used by partially trusted or transparent code.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>