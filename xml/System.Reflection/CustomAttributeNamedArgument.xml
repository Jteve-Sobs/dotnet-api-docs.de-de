<Type Name="CustomAttributeNamedArgument" FullName="System.Reflection.CustomAttributeNamedArgument">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cb5683beef3de443e9a5df3d7cf110331a07a5fe" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30479724" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CustomAttributeNamedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeNamedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeNamedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeNamedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeNamedArgument" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f8ee8-101">Stellt ein benanntes Argument eines benutzerdefinierten Attributs im Reflection-Only-Kontext dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8ee8-101">Represents a named argument of a custom attribute in the reflection-only context.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8ee8-102">Code, der in den ReflectionOnly Kontext überprüft wird kann nicht ausgeführt werden, daher es nicht immer möglich ist, benutzerdefinierte Attribute zu untersuchen, durch das Erstellen von Instanzen von sie und anschließend untersucht werden, deren Eigenschaften und Methoden wie <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>usw. .</span><span class="sxs-lookup"><span data-stu-id="f8ee8-102">Code that is being examined in the reflection-only context cannot be executed, so it is not always possible to examine custom attributes by creating instances of them and then examining their properties, using methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>, and so on.</span></span> <span data-ttu-id="f8ee8-103">Wenn der Code für den Attributtyp selbst in den reflektionsbezogenen Kontext geladen wird, kann sie nicht ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-103">If the code for the attribute type itself is loaded into the reflection-only context, it cannot be executed.</span></span>  
  
 <span data-ttu-id="f8ee8-104">Die <xref:System.Reflection.CustomAttributeNamedArgument> Struktur wird verwendet, durch die <xref:System.Reflection.CustomAttributeData> Klasse für den Zugriff auf ein benanntes Argument für eine Instanz des benutzerdefinierten Attributs, ohne die Ausführung des Codes der entsprechenden Eigenschaft des benutzerdefinierten Attributtyps angegeben.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-104">The <xref:System.Reflection.CustomAttributeNamedArgument> structure is used by the <xref:System.Reflection.CustomAttributeData> class to provide access to a named argument specified for a custom attribute instance, without executing the code of the corresponding property of the custom attribute type.</span></span> <span data-ttu-id="f8ee8-105">Die <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> Eigenschaft gibt eine <xref:System.Reflection.CustomAttributeTypedArgument> -Struktur, die den Typ und Wert des benannten Arguments enthält.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-105">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property returns a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value of the named argument.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="f8ee8-106">Ein Argument wird mit dem Namen oder mit Feldern fester Breite, Sie müssen Zugriff auf dem Typ und Wert mithilfe der <xref:System.Reflection.CustomAttributeTypedArgument> Struktur.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-106">Whether an argument is named or positional, you must access its type and value by using the <xref:System.Reflection.CustomAttributeTypedArgument> structure.</span></span>  
  
 <span data-ttu-id="f8ee8-107">Zum Erstellen von Instanzen der <xref:System.Reflection.CustomAttributeData> Klasse, verwenden Sie die `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Factorymethode.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-107">To create instances of the <xref:System.Reflection.CustomAttributeData> class, use the `static`<xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> factory method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8ee8-108">Im folgende Beispiel wird ein benutzerdefiniertes Attribut mit vier Konstruktoren und vier Eigenschaften definiert.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-108">The following example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="f8ee8-109">Zwei Eigenschaften sind schreibgeschützt und einrichten, indem Sie die Positionsparameter der Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-109">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="f8ee8-110">Die anderen beiden Eigenschaften weisen Lese-/Schreibzugriff und kann nur mithilfe von Set heißen Argumente.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-110">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="f8ee8-111">Eine mit Feldern fester Breite-Eigenschaft ist ein Array von Zeichenfolgen, und eine benannte Eigenschaft ist ein Array von Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-111">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="f8ee8-112">Das Attribut wird auf die Assembly angewendet sowie auf einen in der Assembly deklarierten Typ, eine Methode dieses Typs und einen Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-112">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="f8ee8-113">In diesen Fällen werden verschiedene Konstruktoren verwendet.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-113">Different constructors are used for these cases.</span></span> <span data-ttu-id="f8ee8-114">Bei der Ausführung wird die Assembly selbst in den ReflectionOnly Kontext geladen, und zeigt Informationen zu den benutzerdefinierten Attributen, die angewendet wurden, und für den Typ und die darin enthaltenen Elemente.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-114">When executed, the assembly loads itself into the reflection-only context and displays information about the custom attributes that were applied to it and to the type and members it contains.</span></span>  
  
 <span data-ttu-id="f8ee8-115">Das Attribut, das auf den Typ angewendet wird veranschaulicht, Arrayeigenschaften mit Feldern fester Breite und benannte Argumente.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-115">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-116">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-116">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Object ^ value);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="f8ee8-117">Ein Feld oder eine Eigenschaft des benutzerdefinierten Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-117">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="f8ee8-118">Das neue <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Objekt stellt diesen Member und seinen Wert dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-118">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="f8ee8-119">Der Wert des Felds oder der Eigenschaft des benutzerdefinierten Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-119">The value of the field or property of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8ee8-120">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Klasse, die das angegebene Feld oder die angegebene Eigenschaft des benutzerdefinierten Attributs darstellt, und gibt den Wert des Felds oder der Eigenschaft an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-120">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies the value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8ee8-121">Dieser Konstruktor ist für die Verwendung durch Erben von der <xref:System.Reflection.CustomAttributeNamedArgument> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-121">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="f8ee8-122">Es ist nicht für die Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-122">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f8ee8-123">
            <paramref name="memberInfo" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-123">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="f8ee8-124">
            <paramref name="memberInfo" /> ist kein Feld und keine Eigenschaft des benutzerdefinierten Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-124">
              <paramref name="memberInfo" /> is not a field or property of the custom attribute.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeNamedArgument (System.Reflection.MemberInfo memberInfo, System.Reflection.CustomAttributeTypedArgument typedArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.MemberInfo memberInfo, valuetype System.Reflection.CustomAttributeTypedArgument typedArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.#ctor(System.Reflection.MemberInfo,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeNamedArgument(System::Reflection::MemberInfo ^ memberInfo, System::Reflection::CustomAttributeTypedArgument typedArgument);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="typedArgument" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="memberInfo">
          <span data-ttu-id="f8ee8-125">Ein Feld oder eine Eigenschaft des benutzerdefinierten Attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-125">A field or property of the custom attribute.</span>
          </span>
          <span data-ttu-id="f8ee8-126">Das neue <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Objekt stellt diesen Member und seinen Wert dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-126">The new <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> object represents this member and its value.</span>
          </span>
        </param>
        <param name="typedArgument">
          <span data-ttu-id="f8ee8-127">Ein Objekt, das den Typ und den Wert des Felds oder der Eigenschaft beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-127">An object that describes the type and value of the field or property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8ee8-128">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Klasse, die das angegebene Feld oder die angegebene Eigenschaft des benutzerdefinierten Attributs darstellt, und gibt ein <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Objekt an, das den Typ und den Wert des Felds oder der Eigenschaft beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-128">Initializes a new instance of the <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> class, which represents the specified field or property of the custom attribute, and specifies a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> object that describes the type and value of the field or property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8ee8-129">Dieser Konstruktor ist für die Verwendung durch Erben von der <xref:System.Reflection.CustomAttributeNamedArgument> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-129">This constructor is for use by inheritors of the <xref:System.Reflection.CustomAttributeNamedArgument> class.</span></span> <span data-ttu-id="f8ee8-130">Es ist nicht für die Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-130">It is not intended for use in application code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f8ee8-131">
            <paramref name="memberInfo" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-131">
              <paramref name="memberInfo" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="f8ee8-132">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-132">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8ee8-133">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-133">Returns a value that indicates whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8ee8-134">
            <see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-134">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-135">Gibt den Hashcode für diese Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-135">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8ee8-136">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-136">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsField">
      <MemberSignature Language="C#" Value="public bool IsField { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsField" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.IsField" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsField As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsField { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-137">Ruft einen Wert ab, der angibt, ob das benannte Argument ein Feld ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-137">Gets a value that indicates whether the named argument is a field.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8ee8-138">
            <see langword="true" />, wenn das benannte Argument ein Feld ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-138">
              <see langword="true" /> if the named argument is a field; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberInfo">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo MemberInfo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo MemberInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberInfo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberInfo As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ MemberInfo { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-139">Ruft den Attributmember ab, der zum Festlegen des benannten Arguments verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-139">Gets the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8ee8-140">Der Attributmember ab, der zum Festlegen des benannten Arguments verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-140">The attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8ee8-141">In den meisten Fällen ist das Element eine Eigenschaft an.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-141">In most cases, the member is a property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-142">Ruft den Namen des Attributmembers ab, der zum Festlegen des benannten Arguments verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-142">Gets the name of the attribute member that would be used to set the named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8ee8-143">Der Name des Attributmembers, der zum Festlegen des benannten Arguments verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-143">The name of the attribute member that would be used to set the named argument.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Equality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="f8ee8-144">Die Struktur auf der linken Seite des Gleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-144">The structure to the left of the equality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="f8ee8-145">Die Struktur auf der rechten Seite des Gleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-145">The structure to the right of the equality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8ee8-146">Testet, ob zwei <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Strukturen gleich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-146">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8ee8-147">
            <see langword="true" />, wenn die beiden <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Strukturen gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-147">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="f8ee8-148">Die entsprechende Methode für diesen Operator ist <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-148">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeNamedArgument left, System.Reflection.CustomAttributeNamedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeNamedArgument left, valuetype System.Reflection.CustomAttributeNamedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.op_Inequality(System.Reflection.CustomAttributeNamedArgument,System.Reflection.CustomAttributeNamedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeNamedArgument, right As CustomAttributeNamedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeNamedArgument left, System::Reflection::CustomAttributeNamedArgument right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeNamedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeNamedArgument" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="f8ee8-149">Die Struktur auf der linken Seite des Ungleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-149">The structure to the left of the inequality operator.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="f8ee8-150">Die Struktur auf der rechten Seite des Ungleichheitsoperators.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-150">The structure to the right of the inequality operator.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8ee8-151">Testet, ob zwei <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Strukturen verschieden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-151">Tests whether two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8ee8-152">
            <see langword="true" />, wenn die beiden <see cref="T:System.Reflection.CustomAttributeNamedArgument" />-Strukturen verschieden sind; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-152">
              <see langword="true" /> if the two <see cref="T:System.Reflection.CustomAttributeNamedArgument" /> structures are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="f8ee8-153">Die entsprechende Methode für diesen Operator ist <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-153">The equivalent method for this operator is <xref:System.Reflection.CustomAttributeNamedArgument.Equals%2A?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeNamedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-154">Gibt eine Zeichenfolge mit den Namen des Arguments, dem Gleichheitszeichen und einer Zeichenfolgendarstellung des Argumentwerts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-154">Returns a string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8ee8-155">Eine Zeichenfolge mit den Namen des Arguments, dem Gleichheitszeichen und einer Zeichenfolgendarstellung des Argumentwerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-155">A string that consists of the argument name, the equal sign, and a string representation of the argument value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypedValue">
      <MemberSignature Language="C#" Value="public System.Reflection.CustomAttributeTypedArgument TypedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CustomAttributeTypedArgument TypedValue" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeNamedArgument.TypedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypedValue As CustomAttributeTypedArgument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::CustomAttributeTypedArgument TypedValue { System::Reflection::CustomAttributeTypedArgument get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CustomAttributeTypedArgument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8ee8-156">Ruft eine <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Struktur ab, die verwendet werden kann, um den Typ und den Wert des aktuellen benannten Arguments abzurufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-156">Gets a <see cref="T:System.Reflection.CustomAttributeTypedArgument" /> structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8ee8-157">Eine Struktur, die verwendet werden kann, um den Typ und den Wert des aktuellen benannten Arguments abzurufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8ee8-157">A structure that can be used to obtain the type and value of the current named argument.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8ee8-158">Die <xref:System.Reflection.CustomAttributeNamedArgument> Struktur enthält nur Informationen wie der Argumentwert festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-158">The <xref:System.Reflection.CustomAttributeNamedArgument> structure only contains information about how the argument value was set.</span></span> <span data-ttu-id="f8ee8-159">Verwenden Sie diese Eigenschaft zum Abrufen einer <xref:System.Reflection.CustomAttributeTypedArgument> Struktur, die dem Typ und Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-159">Use this property to obtain a <xref:System.Reflection.CustomAttributeTypedArgument> structure that contains the type and value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8ee8-160">Im folgenden Codebeispiel wird ein benutzerdefiniertes Attribut mit vier Konstruktoren und vier Eigenschaften definiert.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-160">The following code example defines a custom attribute with four constructors and four properties.</span></span> <span data-ttu-id="f8ee8-161">Zwei Eigenschaften sind schreibgeschützt und einrichten, indem Sie die Positionsparameter der Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-161">Two of the properties are read-only, and are set by using the positional parameters of the constructors.</span></span> <span data-ttu-id="f8ee8-162">Die anderen beiden Eigenschaften weisen Lese-/Schreibzugriff und kann nur mithilfe von Set heißen Argumente.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-162">The other two properties are read/write, and can be set only by using named arguments.</span></span> <span data-ttu-id="f8ee8-163">Eine mit Feldern fester Breite-Eigenschaft ist ein Array von Zeichenfolgen, und eine benannte Eigenschaft ist ein Array von Ganzzahlen.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-163">One positional property is an array of strings, and one named property is an array of integers.</span></span>  
  
 <span data-ttu-id="f8ee8-164">Das Attribut wird auf die Assembly angewendet sowie auf einen in der Assembly deklarierten Typ, eine Methode dieses Typs und einen Parameter der Methode.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-164">The attribute is applied to the assembly, to a type declared in the assembly, to a method of the type, and to a parameter of the method.</span></span> <span data-ttu-id="f8ee8-165">In diesen Fällen werden verschiedene Konstruktoren verwendet.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-165">Different constructors are used for these cases.</span></span> <span data-ttu-id="f8ee8-166">Bei der Ausführung wird die Assembly selbst in den ReflectionOnly Kontext geladen, und zeigt die benutzerdefinierten Attribute an.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-166">When executed, the assembly loads itself into the reflection-only context and displays the custom attributes.</span></span>  
  
 <span data-ttu-id="f8ee8-167">Das Attribut, das auf den Typ angewendet wird veranschaulicht, Arrayeigenschaften mit Feldern fester Breite und benannte Argumente.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-167">The attribute that is applied to the type demonstrates array properties, with both positional and named arguments.</span></span>  
  
 <span data-ttu-id="f8ee8-168">Die <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> Eigenschaft wird verwendet, der `ShowAttributeData` -Methode, die benutzerdefinierte Attributdaten werden, zum Abrufen der Typen und Werte von angezeigt benannten Attributen.</span><span class="sxs-lookup"><span data-stu-id="f8ee8-168">The <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A> property is used in the `ShowAttributeData` method that displays custom attribute data, to obtain the types and values of named attributes.</span></span>  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.CustomAttributeData" />
        <altmember cref="T:System.Reflection.CustomAttributeTypedArgument" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
  </Members>
</Type>