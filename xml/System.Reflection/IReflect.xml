<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IReflect.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e4e9ce35ae51db5215ec0931c6460ac8367f47a6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e4e9ce35ae51db5215ec0931c6460ac8367f47a6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Interoperates with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">Arbeitet mit der <bpt id="p1">[</bpt>IDispatch-Schnittstelle<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept> zusammen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> interface is used to interoperate with the <bpt id="p1">[</bpt>IDispatch interface<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> Schnittstelle wird verwendet, um die Interoperabilität mit den <bpt id="p1">[</bpt>IDispatch-Schnittstelle<ept id="p1">](http://msdn.microsoft.com/library/ebbff4bc-36b2-4861-9efa-ffa45e013eb5)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> defines a subset of the <ph id="ph2">&lt;xref:System.Type&gt;</ph> reflection methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.IReflect&gt;</ph> definiert eine Teilmenge der <ph id="ph2">&lt;xref:System.Type&gt;</ph> Reflektionsmethoden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>Implementing this interface enables a type to customize its behavior when the object is being accessed from COM as an <ph id="ph1">`IDispatch`</ph> object.</source>
          <target state="translated">Einen Typ, dessen Verhalten anpassen, wenn das Objekt von COM als zugegriffen wird implementieren diese Schnittstelle ermöglicht eine <ph id="ph1">`IDispatch`</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.IReflect">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> class can be used to marshal an object that implements <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> or <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> as a COM <ph id="ph4">`IDispatch`</ph> object, and vice versa.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.InteropServices.CustomMarshalers.ExpandoToDispatchExMarshaler&gt;</ph> Klasse kann verwendet werden, um ein Objekt zu marshallen, die implementiert <ph id="ph2">&lt;xref:System.Reflection.IReflect&gt;</ph> oder <ph id="ph3">&lt;xref:System.Runtime.InteropServices.Expando.IExpando&gt;</ph> als eine COM- <ph id="ph4">`IDispatch`</ph> -Objekt, und umgekehrt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of the field to find.</source>
          <target state="translated">Der Name des zu suchenden Felds.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object that corresponds to the specified field and binding flag.</source>
          <target state="translated">Gibt das <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekt zurück, das dem angegebenen Feld und Bindungsflag entspricht.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> object containing the field information for the named object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekt mit den Feldinformationen für das benannte Objekt, das die in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> angegebenen Sucheinschränkungen erfüllt.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">Das Objekt implementiert mehrere Felder mit demselben Namen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Returns an array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects that correspond to all fields of the current class.</source>
          <target state="translated">Gibt ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekten zurück, die allen Feldern der aktuellen Klasse entsprechen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph> objects containing all the field information for this reflection object that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.FieldInfo" /&gt;</ph>-Objekten mit sämtlichen Feldinformationen für dieses Reflektionsobjekt, das die in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> angegebenen Sucheinschränkungen erfüllt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The match is based upon a name.</source>
          <target state="translated">Die Übereinstimmung basiert auf einen Namen.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>Each field must have a unique name.</source>
          <target state="translated">Jedes Feld muss einen eindeutigen Namen haben.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> flag specifies that non-public methods are included in the search.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType&gt;</ph> -Flag gibt an, dass nicht öffentliche Methoden in der Suche enthalten sind.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetFields(System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> flag specifies that public methods are included in the search.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.Public?displayProperty=nameWithType&gt;</ph> -Flag gibt an, dass öffentliche Methoden in der Suche enthalten sind.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">Der Name des zu suchenden Members.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects corresponding to all public members or to all members that match a specified name.</source>
          <target state="translated">Ruft ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten ab, die entweder allen öffentlichen Membern oder allen Membern entsprechen, die mit einem angegebenen Namen übereinstimmen.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects matching the <ph id="ph2">&lt;paramref name="name" /&gt;</ph> parameter.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die dem <ph id="ph2">&lt;paramref name="name" /&gt;</ph>-Parameter entsprechen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> method retrieves an array of <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the name and binding attribute that correspond to all public members or to all members that match a specified name.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Reflection.IReflect.GetMember%2A&gt;</ph> Methode ruft ein Array von <ph id="ph2">&lt;xref:System.Reflection.MemberInfo&gt;</ph> -Objekte mit dem Namen und Bindungsattributs, entsprechen, die alle öffentlichen Membern oder auf alle Elemente, die mit den angegebenen Namen übereinstimmen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMember(System.String,System.Reflection.BindingFlags)">
          <source>The case of the specified name is observed or ignored, as specified by <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Dem angegebenen Namen die Groß-/Kleinschreibung wird berücksichtigt oder ignoriert, nach den Angaben von <ph id="ph1">&lt;xref:System.Reflection.BindingFlags.IgnoreCase?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects that correspond either to all public members or to all members of the current class.</source>
          <target state="translated">Ruft ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten ab, die entweder allen öffentlichen Membern oder allen Membern der aktuellen Klasse entsprechen.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> objects containing all the member information for this reflection object.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>-Objekten, die sämtliche Memberinformationen für dieses Reflektionsobjekt enthalten.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>This method retrieves an array of <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> objects by using the binding attribute that corresponds either to all public members or to all members of the current class.</source>
          <target state="translated">Diese Methode ruft ein Array von <ph id="ph1">&lt;xref:System.Reflection.MemberInfo&gt;</ph> Objekte durch die Verwendung des Bindungsattributs, die alle öffentlichen Member oder alle Elemente der aktuellen Klasse entspricht.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMembers(System.Reflection.BindingFlags)">
          <source>It returns an array of all of the members defined for this object.</source>
          <target state="translated">Es gibt ein Array aller für dieses Objekt definierten Member.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt ab, das einer angegebenen Methode entspricht.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The name of the member to find.</source>
          <target state="translated">Der Name des zu suchenden Members.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that corresponds to a specified method under specified search constraints.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt ab, das unter angegebenen Sucheinschränkungen einer angegebenen Methode entspricht.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object containing the method information, with the match being based on the method name and search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt, das die Methodeninformationen mit der Übereinstimmung enthält, die auf dem Methodennamen und den in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> angegebenen Sucheinschränkungen beruht.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">Das Objekt implementiert mehrere Methoden mit demselben Namen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">Der Name des zu suchenden Members.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Ein Objekt, das <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> implementiert, das auf diese Methode bezogene Eigenschaften enthält.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods.</source>
          <target state="translated">Ein Array, das zum Auswählen überladener Methoden verwendet wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array of parameter modifiers used to make binding work with parameter signatures in which the types have been modified.</source>
          <target state="translated">Ein Array von Parametermodifizierern, das zur Bindung mit Parametersignaturen verwendet wird, in denen die Typen geändert wurden.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object corresponding to a specified method, using a <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> array to choose from among overloaded methods.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekt ab, das einer angegebenen Methode entspricht, und verwendet für die Auswahl überladener Methoden ein <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph>-Array.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The requested method that matches all the specified parameters.</source>
          <target state="translated">Die angeforderte Methode, die allen angegebenen Parametern entspricht.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The return value is a match based on the method name, <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> enum member, the kind of type conversion specified by the <ph id="ph2">`binder`</ph> parameter, the overload, and the <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> that describes the signature of the method.</source>
          <target state="translated">Der Rückgabewert ist eine Übereinstimmung, die basierend auf dem Methodennamen <ph id="ph1">&lt;xref:System.Reflection.BindingFlags&gt;</ph> Enum-Element, die Art der Konvertierung vom Typ, die gemäß der <ph id="ph2">`binder`</ph> Parameter, die Überladung, und die <ph id="ph3">&lt;xref:System.Reflection.ParameterInfo&gt;</ph> , beschreibt die Signatur der Methode.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The object implements multiple methods with the same name.</source>
          <target state="translated">Das Objekt implementiert mehrere Methoden mit demselben Namen.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects with all public methods or all methods of the current class.</source>
          <target state="translated">Ruft ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekten mit allen öffentlichen Methoden oder allen Methoden der aktuellen Klasse ab.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> objects containing all the methods defined for this reflection object that meet the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph>-Objekten mit allen für dieses Reflektionsobjekt definierten Methoden, die die in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> angegebenen Sucheinschränkungen erfüllen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetMethods(System.Reflection.BindingFlags)">
          <source>The non-public attribute of <ph id="ph1">`bindingAttr`</ph> is indicated only if public methods are returned.</source>
          <target state="translated">Das Attribut nicht öffentlichen <ph id="ph1">`bindingAttr`</ph> wird nur angezeigt, wenn öffentliche Methoden zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">Das zum Steuern der Suche verwendete Bindungsattribut.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>Retrieves an array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects corresponding to all public properties or to all properties of the current class.</source>
          <target state="translated">Ruft ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekten ab, die entweder allen öffentlichen Eigenschaften oder allen Eigenschaften der aktuellen Klasse entsprechen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperties(System.Reflection.BindingFlags)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> objects for all the properties defined on the reflection object.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekten für alle Eigenschaften, die für das Reflektionsobjekt definiert sind.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.Reflection.IReflect">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt ab, das einer angegebenen Eigenschaft entspricht.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The name of the property to find.</source>
          <target state="translated">Der Name der zu suchenden Eigenschaft.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The binding attributes used to control the search.</source>
          <target state="translated">Die zum Steuern der Suche verwendeten Bindungsattribute.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt ab, das unter angegebenen Sucheinschränkungen einer angegebenen Eigenschaft entspricht.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property that meets the search constraints specified in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt für die gesuchte Eigenschaft, die die in <ph id="ph2">&lt;paramref name="bindingAttr" /&gt;</ph> angegebenen Sucheinschränkungen erfüllt, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn die Eigenschaft nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags)">
          <source>The object implements multiple fields with the same name.</source>
          <target state="translated">Das Objekt implementiert mehrere Felder mit demselben Namen.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The name of the member to find.</source>
          <target state="translated">Der Name des zu suchenden Members.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The binding attribute used to control the search.</source>
          <target state="translated">Das zum Steuern der Suche verwendete Bindungsattribut.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An object that implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Ein Objekt, das <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph> implementiert, das auf diese Methode bezogene Eigenschaften enthält.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>The type of the property.</source>
          <target state="translated">Den Typ der Eigenschaft.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose among overloaded methods with the same name.</source>
          <target state="translated">Ein Array, das zum Auswählen überladener Methoden mit demselben Namen verwendet wird.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>An array used to choose the parameter modifiers.</source>
          <target state="translated">Ein Array, das zum Auswählen der Parametermodifizierer verwendet wird.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>Retrieves a <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object that corresponds to a specified property with specified search constraints.</source>
          <target state="translated">Ruft ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt ab, das unter angegebenen Sucheinschränkungen einer angegebenen Eigenschaft entspricht.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph> object for the located property, if a property with the specified name was located in this reflection object, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the property was not located.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Reflection.PropertyInfo" /&gt;</ph>-Objekt für die gesuchte Eigenschaft, wenn in diesem Reflektionsobjekt eine Eigenschaft mit dem angegebenen Namen enthalten war, oder <ph id="ph2">&lt;see langword="null" /&gt;</ph>, wenn die Eigenschaft nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>This method retrieves a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> object corresponding to a specified property under specified search constraints.</source>
          <target state="translated">Diese Methode ruft eine <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> Objekt entspricht, der auf eine angegebene Eigenschaft unter angegebenen Einschränkungen der Suche.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])">
          <source>A type array is used to choose from among overloaded methods.</source>
          <target state="translated">Ein Typarray dient zum Auswahl überladener Methoden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The name of the member to find.</source>
          <target state="translated">Der Name des zu suchenden Members.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> invocation attributes.</source>
          <target state="translated">Eines der <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>-Aufrufattribute.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept> parameter may be a constructor, method, property, or field.</source>
          <target state="translated">Der <bpt id="p1">&lt;c&gt;</bpt>invokeAttr<ept id="p1">&lt;/c&gt;</ept>-Parameter kann ein Konstruktor, eine Methode, eine Eigenschaft oder ein Feld sein.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A suitable invocation attribute must be specified.</source>
          <target state="translated">Es muss ein geeignetes Aufrufattribut angegeben werden.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invoke the default member of a class by passing the empty string ("") as the name of the member.</source>
          <target state="translated">Rufen Sie den Standardmember einer Klasse auf, indem Sie die leere Zeichenfolge ("") als Name des Members übergeben.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> bit flags.</source>
          <target state="translated">Eines der <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>-Bitflags.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Implements <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, containing properties related to this method.</source>
          <target state="translated">Implementiert <ph id="ph1">&lt;see cref="T:System.Reflection.Binder" /&gt;</ph>, und enthält auf diese Methode bezogene Eigenschaften.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The object on which to invoke the specified member.</source>
          <target state="translated">Das Objekt, für das der angegebene Member aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This parameter is ignored for static members.</source>
          <target state="translated">Für statische Member wird dieser Parameter ignoriert.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of objects that contains the number, order, and type of the parameters of the member to be invoked.</source>
          <target state="translated">Ein Array von Objekten, das Anzahl, Reihenfolge und Typ der Parameter des aufzurufenden Members enthält.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This is an empty array if there are no parameters.</source>
          <target state="translated">Dies ist ein leeres Array, wenn keine Parameter vorhanden sind.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph> objects.</source>
          <target state="translated">Ein Array von <ph id="ph1">&lt;see cref="T:System.Reflection.ParameterModifier" /&gt;</ph>-Objekten.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>This array has the same length as the <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> parameter, representing the invoked member's argument attributes in the metadata.</source>
          <target state="translated">Das Array hat dieselbe Länge wie der <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept>-Parameter und stellt die Argumentattribute des aufgerufenen Members in den Metadaten dar.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A parameter can have the following attributes: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph>, and <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</source>
          <target state="translated">Ein Parameter kann die folgenden Attribute aufweisen: <ph id="ph1">&lt;see langword="pdIn" /&gt;</ph>, <ph id="ph2">&lt;see langword="pdOut" /&gt;</ph>, <ph id="ph3">&lt;see langword="pdRetval" /&gt;</ph>, <ph id="ph4">&lt;see langword="pdOptional" /&gt;</ph> und <ph id="ph5">&lt;see langword="pdHasDefault" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These represent [In], [Out], [retval], [optional], and a default parameter, respectively.</source>
          <target state="translated">Diese stellen [In], [Out], [retval], [optional] und einen Standardparameter dar.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>These attributes are used by various interoperability services.</source>
          <target state="translated">Diese Attribute werden von verschiedenen Interoperabilitätsdiensten verwendet.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">Eine Instanz von <ph id="ph1">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> für die Steuerung der Umwandlung von Typen.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> converts a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, since 1000 is represented differently by different cultures.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>culture<ept id="p1">&lt;/c&gt;</ept> konvertiert z.B. einen <ph id="ph1">&lt;see langword="String" /&gt;</ph>, mit dem 1.000 dargestellt wird, in einen <ph id="ph2">&lt;see langword="Double" /&gt;</ph>-Wert, da 1.000 in verschiedenen Kulturen unterschiedlich dargestellt wird.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>If this parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">Wenn dieser Parameter <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird die <ph id="ph2">&lt;see cref="T:System.Globalization.CultureInfo" /&gt;</ph> für den aktuellen Thread verwendet.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> array of parameters.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph>-Array von Parametern.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Invokes a specified member.</source>
          <target state="translated">Ruft einen angegebenen Member auf.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The specified member.</source>
          <target state="translated">Der angegebene Member.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method that is to be invoked must be accessible and provide the most specific match with the specified argument list, under the constraints of the specified binder and invocation attributes.</source>
          <target state="translated">Die Methode, die aufgerufen werden soll, muss zugänglich sein und mit der angegebenen Argumentliste unter den Einschränkungen des angegebenen Binders und der Aufrufattribute die spezifischste Übereinstimmung bereitstellen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A method is invoked if the number of parameters in the method declaration equals the number of arguments in the specified argument list, and the type of each argument can be converted by the binder to the type of the parameter.</source>
          <target state="translated">Eine Methode wird aufgerufen, wenn die Anzahl von Parametern in der Deklaration der Methode der Anzahl der Argumente in der angegebenen Argumentliste entspricht und der Typ jedes Arguments vom Binder in den Typ des Parameters konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The array of parameter modifiers passed to the <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> method must contain a single parameter modifier.</source>
          <target state="translated">Das Array von Parametermodifizierern übergeben, um die <ph id="ph1">&lt;xref:System.Reflection.IReflect.InvokeMember%2A&gt;</ph> Methode muss einen einzelnen Parametermodifizierer enthalten.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Only the first parameter modifier is considered when determining which argument needs to be passed by reference when exposed to COM.</source>
          <target state="translated">Nur die erste Parametermodifizierer gilt beim Bestimmen des Arguments als Verweis, wenn für COM verfügbar gemacht übergeben werden muss</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The binder finds all matching methods, in accordance with the type of binding requested (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>, and so on).</source>
          <target state="translated">Der Binder sucht alle übereinstimmende Methoden gemäß den Typ der Bindung angefordert (<ph id="ph1">&lt;xref:System.Reflection.BindingFlags.InvokeMethod?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.IReflect.GetProperties%2A&gt;</ph>usw.).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The set of methods is filtered by the name, number of arguments, and a set of search modifiers defined in the binder.</source>
          <target state="translated">Der Satz von Methoden wird durch den Namen, Anzahl von Argumenten und einen Satz von Suchabfragen in der Binder definierten gefiltert.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>After the method is selected, it is invoked, and accessibility is checked at that point.</source>
          <target state="translated">Nachdem die Methode ausgewählt ist, er wird aufgerufen, und Eingabehilfen an diesem Punkt aktiviert ist.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The search may control which set of methods is searched based upon the accessibility attribute associated with the method.</source>
          <target state="translated">Die Suche kann gesteuert werden, welche Gruppe von Methoden basierend auf der Eingabehilfen-Attribut, das der Methode zugeordnet durchsucht wird.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> selects the method to be invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Reflection.Binder.BindToMethod%2A&gt;</ph> Wählt die aufzurufende Methode.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The default binder selects the most specific match.</source>
          <target state="translated">Der Standardbinder wählt die spezifischste Übereinstimmung.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>Access restrictions are ignored for fully trusted code.</source>
          <target state="translated">Zugriffseinschränkungen für vollständig vertrauenswürdige Code ignoriert.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</source>
          <target state="translated">D. h. können private Konstruktoren, Methoden, Felder und Eigenschaften werden zugegriffen und durch Reflektion aufgerufen werden, wenn der Code vollständig vertrauenswürdig ist.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The following example obtains the value of the <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> property.</source>
          <target state="translated">Im folgende Beispiel erhält den Wert der <ph id="ph1">&lt;xref:System.DateTime.Now%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>More than one argument is specified for a field <ph id="ph1">&lt;see langword="set" /&gt;</ph>.</source>
          <target state="translated">Für ein Feld <ph id="ph1">&lt;see langword="set" /&gt;</ph> sind mehrere Argumente angegeben.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The field or property cannot be found.</source>
          <target state="translated">Das Feld oder die Eigenschaft wurde nicht gefunden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>The method cannot be found.</source>
          <target state="translated">Die Methode kann nicht gefunden werden.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Reflection.IReflect.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])">
          <source>A private member is invoked without the necessary <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph>.</source>
          <target state="translated">Ein privater Member wurde ohne die erforderliche <ph id="ph1">&lt;see cref="T:System.Security.Permissions.ReflectionPermission" /&gt;</ph> aufgerufen.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>Gets the underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated">Ruft den zugrunde liegenden Typ ab, der das <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>-Objekt darstellt.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.IReflect.UnderlyingSystemType">
          <source>The underlying type that represents the <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph> object.</source>
          <target state="translated">Der zugrunde liegende Typ, der das <ph id="ph1">&lt;see cref="T:System.Reflection.IReflect" /&gt;</ph>-Objekt darstellt.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>