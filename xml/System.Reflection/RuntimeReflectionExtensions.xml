<Type Name="RuntimeReflectionExtensions" FullName="System.Reflection.RuntimeReflectionExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7b28669f6f0427dda1aac127dcd1061d05d00e3a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78817553" /></Metadata><TypeSignature Language="C#" Value="public static class RuntimeReflectionExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit RuntimeReflectionExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.RuntimeReflectionExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module RuntimeReflectionExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class RuntimeReflectionExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type RuntimeReflectionExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Reflection.Extensions" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Reflection.Extensions" FromVersion="4.1.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Reflection.Extensions" FromVersion="4.1.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Reflection.Extensions" FromVersion="4.1.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Methoden bereit, die Informationen über Typen zur Laufzeit abrufen.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetMethodInfo">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetMethodInfo (this Delegate del);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetMethodInfo(class System.Delegate del) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetMethodInfo(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetMethodInfo (del As Delegate) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetMethodInfo(Delegate ^ del);" />
      <MemberSignature Language="F#" Value="static member GetMethodInfo : Delegate -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetMethodInfo del" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="del" Type="System.Delegate" RefType="this" />
      </Parameters>
      <Docs>
        <param name="del">Der zu überprüfende Delegat.</param>
        <summary>Ruft ein Objekt ab, das die Methode darstellt, die vom angegebenen Delegaten dargestellt wird.</summary>
        <returns>Ein Objekt, das die Methode darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="del" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.MemberAccessException">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</exception>
        <altmember cref="P:System.Delegate.Method" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeBaseDefinition">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeBaseDefinition (this System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeBaseDefinition(class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeBaseDefinition (method As MethodInfo) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeBaseDefinition(System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeBaseDefinition : System.Reflection.MethodInfo -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeBaseDefinition method" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="method" Type="System.Reflection.MethodInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="method">Die Methode, über die Informationen abgerufen werden sollen.</param>
        <summary>Ruft ein Objekt ab, das die angegebene Methode der direkten oder indirekten Basisklasse darstellt, in der die Methode am Anfang deklariert wurde.</summary>
        <returns>Ein Objekt, das die ursprünglichen Deklaration der angegebenen Methode in einer Basisklasse darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="method" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Reflection.MethodInfo.GetBaseDefinition" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvent">
      <MemberSignature Language="C#" Value="public static System.Reflection.EventInfo GetRuntimeEvent (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.EventInfo GetRuntimeEvent(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeEvent (type As Type, name As String) As EventInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::EventInfo ^ GetRuntimeEvent(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvent : Type * string -&gt; System.Reflection.EventInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvent (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der das Ereignis enthält.</param>
        <param name="name">Der Name des Ereignisses.</param>
        <summary>Ruft ein Objekt ab, das das angegebene Ereignis darstellt.</summary>
        <returns>Ein Objekt, das das angegebene Ereignis darstellt, oder <see langword="null" />, wenn das Ereignis nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.

- oder -

<paramref name="name" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeEvents">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt; GetRuntimeEvents (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.EventInfo&gt; GetRuntimeEvents(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents(System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeEvents (type As Type) As IEnumerable(Of EventInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::EventInfo ^&gt; ^ GetRuntimeEvents(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeEvents : Type -&gt; seq&lt;System.Reflection.EventInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeEvents type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.EventInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Ereignisse enthält.</param>
        <summary>Ruft eine Auflistung ab, die alle Ereignisse darstellt, die für einen bestimmten Typ definiert werden.</summary>
        <returns>Eine Auflistung der Ereignisse für den angegebenen Typ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt alle für den angegebenen Typ definierten Ereignisse zurück, einschließlich geerbte, nicht öffentliche, Instanz-und statische Ereignisse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetEvents(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeField">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetRuntimeField (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetRuntimeField(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeField(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeField (type As Type, name As String) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::FieldInfo ^ GetRuntimeField(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeField : Type * string -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeField (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der das Feld enthält.</param>
        <param name="name">Der Name des Felds.</param>
        <summary>Ruft ein Objekt ab, das ein bestimmtes Feld darstellt.</summary>
        <returns>Ein Objekt, das das angegebene Feld darstellt, oder <see langword="null" />, wenn das Feld nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.

- oder -

<paramref name="name" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetField(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeFields">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt; GetRuntimeFields (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.FieldInfo&gt; GetRuntimeFields(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields(System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeFields (type As Type) As IEnumerable(Of FieldInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::FieldInfo ^&gt; ^ GetRuntimeFields(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeFields : Type -&gt; seq&lt;System.Reflection.FieldInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeFields type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.FieldInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Felder enthält.</param>
        <summary>Ruft eine Auflistung ab, die alle Felder darstellt, die für einen bestimmten Typ definiert werden.</summary>
        <returns>Eine Auflistung der Felder für den angegebenen Typ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt alle Felder zurück, die für den angegebenen Typ definiert sind, einschließlich geerbte, nicht öffentliche, Instanz-und statische Felder.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetFields(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeInterfaceMap">
      <MemberSignature Language="C#" Value="public static System.Reflection.InterfaceMapping GetRuntimeInterfaceMap (this System.Reflection.TypeInfo typeInfo, Type interfaceType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Reflection.InterfaceMapping GetRuntimeInterfaceMap(class System.Reflection.TypeInfo typeInfo, class System.Type interfaceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap(System.Reflection.TypeInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeInterfaceMap (typeInfo As TypeInfo, interfaceType As Type) As InterfaceMapping" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::InterfaceMapping GetRuntimeInterfaceMap(System::Reflection::TypeInfo ^ typeInfo, Type ^ interfaceType);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeInterfaceMap : System.Reflection.TypeInfo * Type -&gt; System.Reflection.InterfaceMapping" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeInterfaceMap (typeInfo, interfaceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.InterfaceMapping</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" RefType="this" />
        <Parameter Name="interfaceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="typeInfo">Der Typ, für den eine Zuordnung abgerufen werden soll.</param>
        <param name="interfaceType">Die Schnittstelle, für die eine Zuordnung abgerufen werden soll.</param>
        <summary>Gibt eine Schnittstellenzuordnung für den angegebenen Typ und die angegebene Schnittstelle zurück.</summary>
        <returns>Ein Objekt, das die Schnittstellenzuordnung für die angegebene Schnittstelle und den Typ darstellt.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="typeInfo" /> ist <see langword="null" />.
        
- oder -

<paramref name="interfaceType" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="interfaceType" /> wird von <paramref name="typeInfo" /> nicht implementiert.

- oder -

<paramref name="interfaceType" /> verweist nicht auf eine vorhandene Schnittstelle.

- oder -

<paramref name="typeInfo" /> oder <paramref name="interfaceType" /> ist ein offener generischer Typ.

- oder -

<paramref name="interfaceType" /> ist eine generische Schnittstelle, und <paramref name="typeInfo" /> ist ein Arraytyp.</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="typeInfo" /> stellt einen generischen Typparameter dar.</exception>
        <exception cref="T:System.NotSupportedException"><paramref name="typeInfo" /> ist eine <see cref="T:System.Reflection.Emit.TypeBuilder" />-Instanz, deren <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />-Methode noch nicht aufgerufen wurde.

- oder -

Die aufgerufene Methode wird in der Basisklasse nicht unterstützt. Abgeleitete Klassen müssen eine Implementation angeben.</exception>
        <altmember cref="M:System.Type.GetInterfaceMap(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethod">
      <MemberSignature Language="C#" Value="public static System.Reflection.MethodInfo GetRuntimeMethod (this Type type, string name, Type[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.MethodInfo GetRuntimeMethod(class System.Type type, string name, class System.Type[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod(System.Type,System.String,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeMethod (type As Type, name As String, parameters As Type()) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::MethodInfo ^ GetRuntimeMethod(Type ^ type, System::String ^ name, cli::array &lt;Type ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethod : Type * string * Type[] -&gt; System.Reflection.MethodInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethod (type, name, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="parameters" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Methode enthält.</param>
        <param name="name">Der Name der Methode.</param>
        <param name="parameters">Ein Array, das die Parameter der Methode enthält.</param>
        <summary>Ruft ein Objekt ab, das eine angegebene Methode darstellt.</summary>
        <returns>Ein Objekt, das die angegebene Methode darstellt, oder <see langword="null" />, wenn die Methode nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.

- oder -

<paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Es wurden mehrere Methoden mit dem angegebenen Namen gefunden.</exception>
        <altmember cref="M:System.Type.GetMethod(System.String,System.Type[])" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeMethods">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt; GetRuntimeMethods (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.MethodInfo&gt; GetRuntimeMethods(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods(System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeMethods (type As Type) As IEnumerable(Of MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::MethodInfo ^&gt; ^ GetRuntimeMethods(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeMethods : Type -&gt; seq&lt;System.Reflection.MethodInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeMethods type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.MethodInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Methoden enthält.</param>
        <summary>Ruft eine Auflistung ab, die alle Methoden darstellt, die für einen bestimmten Typ definiert werden.</summary>
        <returns>Eine Auflistung der Methoden für den angegebenen Typ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt alle Methoden zurück, die für den angegebenen Typ definiert sind, einschließlich geerbte, nicht öffentliche, Instanz-und statische Methoden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetMethods(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperties">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; GetRuntimeProperties (this Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; GetRuntimeProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties(System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeProperties (type As Type) As IEnumerable(Of PropertyInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ GetRuntimeProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Eigenschaften enthält.</param>
        <summary>Ruft eine Auflistung ab, die alle Eigenschaften darstellt, die für einen bestimmten Typ definiert werden.</summary>
        <returns>Eine Sammlung von Eigenschaften für den angegebenen Typ.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode gibt alle Eigenschaften zurück, die für den angegebenen Typ definiert sind, einschließlich geerbte, nicht öffentliche, Instanz-und statische Eigenschaften.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Type.GetProperties(System.Reflection.BindingFlags)" />
      </Docs>
    </Member>
    <Member MemberName="GetRuntimeProperty">
      <MemberSignature Language="C#" Value="public static System.Reflection.PropertyInfo GetRuntimeProperty (this Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.PropertyInfo GetRuntimeProperty(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetRuntimeProperty (type As Type, name As String) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Reflection::PropertyInfo ^ GetRuntimeProperty(Type ^ type, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetRuntimeProperty : Type * string -&gt; System.Reflection.PropertyInfo" Usage="System.Reflection.RuntimeReflectionExtensions.GetRuntimeProperty (type, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" RefType="this" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Der Typ, der die Eigenschaft enthält.</param>
        <param name="name">Den Namen der Eigenschaft.</param>
        <summary>Ruft ein Objekt ab, das eine angegebene Eigenschaft darstellt.</summary>
        <returns>Ein Objekt, das die angegebene Eigenschaft darstellt, oder <see langword="null" />, wenn die Eigenschaft nicht gefunden wird.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="type" /> ist <see langword="null" />.

- oder -

<paramref name="name" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException">Es wurde mehrere Eigenschaften mit dem angeforderten Namen gefunden.</exception>
        <altmember cref="M:System.Type.GetProperty(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>
