<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TypeAttributes.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5883e03879e8f84d661d1c8ec23af5f0c838f3d80.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">883e03879e8f84d661d1c8ec23af5f0c838f3d80</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.TypeAttributes">
          <source>Specifies type attributes.</source>
          <target state="translated">Gibt Typattribute an.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Some of the members of the <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes&gt;</ph> enumeration are masks that represent a set of mutually exclusive attributes.</source>
          <target state="translated">Einige Member der <ph id="ph1">&lt;xref:System.Reflection.TypeAttributes&gt;</ph> Enumeration sind Masken, die sich gegenseitig ausschließende Attribute darstellen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>For example, the VisibilityMask member includes the NotPublic, Public, NestedPublic, NestedPrivate, NestedFamily, NestedAssembly, NestedFamANDAssem, and NestedFamORAssem members,  Because each attribute set includes a member whose underlying value is zero, you should first <ph id="ph1">`And`</ph> the value of the mask with the specific <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes.VisibilityMask?displayProperty=nameWithType&gt;</ph> value retrieved from a property such as <ph id="ph3">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Z. B. schließt die Member NotPublic, öffentliche NestedPublic, NestedPrivate, NestedFamily, NestedAssembly, NestedFamANDAssem und NestedFamORAssem das VisibilityMask-Element, da jeder Attributgruppe ein Element enthalten, dessen zugrunde liegender Wert ist 0 (null), sollten Sie zuerst <ph id="ph1">`And`</ph> den Wert der Maske mit dem spezifischen <ph id="ph2">&lt;xref:System.Reflection.TypeAttributes.VisibilityMask?displayProperty=nameWithType&gt;</ph> Wert z. B. durch eine Eigenschaft abgerufen <ph id="ph3">&lt;xref:System.Type.Attributes%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>The following table lists the masks and the individual members that they include:</source>
          <target state="translated">Die folgende Tabelle enthält die Masken und die einzelnen Elemente, die sie enthalten:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Mask</source>
          <target state="translated">Format</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Includes</source>
          <target state="translated">Enthält</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>VisibilityMask</source>
          <target state="translated">VisibilityMask</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NotPublic</source>
          <target state="translated">NotPublic</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Public</source>
          <target state="translated">Public</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedPublic</source>
          <target state="translated">NestedPublic</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedPrivate</source>
          <target state="translated">NestedPrivate</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedFamily</source>
          <target state="translated">NestedFamily</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedAssembly</source>
          <target state="translated">NestedAssembly</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedFamANDAssem</source>
          <target state="translated">NestedFamANDAssem</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>NestedFamORAssem</source>
          <target state="translated">NestedFamORAssem</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>LayoutMask</source>
          <target state="translated">LayoutMask</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>AutoLayout</source>
          <target state="translated">AutoLayout</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>SequentialLayout</source>
          <target state="translated">SequentialLayout</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>ExplicitLayout</source>
          <target state="translated">ExplicitLayout</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>ClassSemanticsMask</source>
          <target state="translated">ClassSemanticsMask</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Class</source>
          <target state="translated">Klasse</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>Interface</source>
          <target state="translated">Interface</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>StringFormatMask</source>
          <target state="translated">StringFormatMask</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>AnsiClass</source>
          <target state="translated">AnsiClass</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>UnicodeClass</source>
          <target state="translated">UnicodeClass</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>AutoClass</source>
          <target state="translated">AutoClass</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>CustomFormatClass</source>
          <target state="translated">CustomFormatClass</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>CustomFormatMask</source>
          <target state="translated">CustomFormatMask</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>No members.</source>
          <target state="translated">Keine Mitglieder.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>The members of this enumerator class match the CorTypeAttr enumerator as defined in the corhdr.h file.</source>
          <target state="translated">Die Member dieser Enumeratorenklasse überein CorTypeAttr-Enumerator, wie in der Datei "corhdr.h" definiert.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.TypeAttributes">
          <source>The following example retrieves the value of the <ph id="ph1">&lt;xref:System.Type.Attributes%2A&gt;</ph> property for <ph id="ph2">&lt;xref:System.Type&gt;</ph> objects that represent a number of different types, and then determines whether individual attribute flags have been set.</source>
          <target state="translated">Das folgende Beispiel ruft den Wert des der <ph id="ph1">&lt;xref:System.Type.Attributes%2A&gt;</ph> -Eigenschaft für <ph id="ph2">&lt;xref:System.Type&gt;</ph> -Objekten, die eine Anzahl von verschiedenen Typen darstellen, und bestimmt dann, ob ein einzelnes Attributflags festgelegt wurden.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Abstract">
          <source>Specifies that the type is abstract.</source>
          <target state="translated">Gibt an, dass der Typ abstrakt ist.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.AnsiClass">
          <source>LPTSTR is interpreted as ANSI.</source>
          <target state="translated">LPTSTR wird als ANSI-Code interpretiert.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.AutoClass">
          <source>LPTSTR is interpreted automatically.</source>
          <target state="translated">LPTSTR wird automatisch interpretiert.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.AutoLayout">
          <source>Specifies that class fields are automatically laid out by the common language runtime.</source>
          <target state="translated">Gibt an, dass das Layout der Klassenfelder automatisch durch die Common Language Runtime erfolgt.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.BeforeFieldInit">
          <source>Specifies that calling static methods of the type does not force the system to initialize the type.</source>
          <target state="translated">Gibt an, dass durch den Aufruf von statischen Methoden des Typs nicht die Initialisierung dieses Typs durch das System erzwungen wird.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Class">
          <source>Specifies that the type is a class.</source>
          <target state="translated">Gibt an, dass der Typ eine Klasse ist.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.ClassSemanticsMask">
          <source>Specifies class semantics information; the current class is contextful (else agile).</source>
          <target state="translated">Gibt Informationen zur Klassensemantik an. Die aktuelle Klasse ist kontextabhängig (andernfalls beweglich).</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.CustomFormatClass">
          <source>LPSTR is interpreted by some implementation-specific means, which includes the possibility of throwing a <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph>.</source>
          <target state="translated">LPSTR wird mit einigen implementierungsabhängigen Mitteln interpretiert. Dazu zählt auch die Möglichkeit, eine <ph id="ph1">&lt;see cref="T:System.NotSupportedException" /&gt;</ph> auszulösen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.CustomFormatClass">
          <source>Not used in the Microsoft implementation of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Nicht verwendet in der Microsoft-Implementierung von <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.CustomFormatMask">
          <source>Used to retrieve non-standard encoding information for native interop.</source>
          <target state="translated">Wird verwendet, um nicht standardkonforme Codierungsinformationen für systemeigenes Interop abzurufen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.CustomFormatMask">
          <source>The meaning of the values of these 2 bits is unspecified.</source>
          <target state="translated">Die Bedeutung der Werte dieser 2 Bits ist nicht festgelegt.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.CustomFormatMask">
          <source>Not used in the Microsoft implementation of the <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</source>
          <target state="translated">Nicht verwendet in der Microsoft-Implementierung von <ph id="ph1">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.ExplicitLayout">
          <source>Specifies that class fields are laid out at the specified offsets.</source>
          <target state="translated">Gibt an, dass das Layout der Klassenfelder an den angegebenen Offsets erfolgt.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.HasSecurity">
          <source>Type has security associate with it.</source>
          <target state="translated">Dem Typ ist Sicherheit zugeordnet.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Import">
          <source>Specifies that the class or interface is imported from another module.</source>
          <target state="translated">Gibt an, dass die Klasse oder die Schnittstelle aus einem anderen Modul importiert wird.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Interface">
          <source>Specifies that the type is an interface.</source>
          <target state="translated">Gibt an, dass der Typ eine Schnittstelle ist.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.LayoutMask">
          <source>Specifies class layout information.</source>
          <target state="translated">Gibt Informationen zum Klassenlayout an.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedAssembly">
          <source>Specifies that the class is nested with assembly visibility, and is thus accessible only by methods within its assembly.</source>
          <target state="translated">Gibt an, dass die Klasse mit Assemblysichtbarkeit geschachtelt ist, und dass daher nur mit Methoden auf die Klasse zugegriffen werden kann, die sich in ihrer Assembly befinden.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedFamANDAssem">
          <source>Specifies that the class is nested with assembly and family visibility, and is thus accessible only by methods lying in the intersection of its family and assembly.</source>
          <target state="translated">Gibt an, dass die Klasse mit Assembly- und Familiensichtbarkeit geschachtelt ist und daher nur mit Methoden auf die Klasse zugegriffen werden kann, die zur Schnittmenge ihrer Familie und Assembly gehören.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedFamily">
          <source>Specifies that the class is nested with family visibility, and is thus accessible only by methods within its own type and any derived types.</source>
          <target state="translated">Gibt an, dass die Klasse mit Familiensichtbarkeit geschachtelt ist und daher nur mit Methoden auf die Klasse zugegriffen werden kann, die sich innerhalb des Typs oder eines beliebigen abgeleiteten Typs befinden.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedFamORAssem">
          <source>Specifies that the class is nested with family or assembly visibility, and is thus accessible only by methods lying in the union of its family and assembly.</source>
          <target state="translated">Gibt an, dass die Klasse mit Assembly- oder Familiensichtbarkeit geschachtelt ist und daher nur mit Methoden auf die Klasse zugegriffen werden kann, die zur Gesamtmenge ihrer Familie und Assembly gehören.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedPrivate">
          <source>Specifies that the class is nested with private visibility.</source>
          <target state="translated">Gibt an, dass die Klasse mit privater Sichtbarkeit geschachtelt ist.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NestedPublic">
          <source>Specifies that the class is nested with public visibility.</source>
          <target state="translated">Gibt an, dass die Klasse mit öffentlicher Sichtbarkeit geschachtelt ist.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.NotPublic">
          <source>Specifies that the class is not public.</source>
          <target state="translated">Gibt an, dass die Klasse nicht öffentlich ist.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Public">
          <source>Specifies that the class is public.</source>
          <target state="translated">Gibt an, dass die Klasse öffentlich ist.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.ReservedMask">
          <source>Attributes reserved for runtime use.</source>
          <target state="translated">Attribute, die für die Verwendung zur Laufzeit reserviert sind.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.RTSpecialName">
          <source>Runtime should check name encoding.</source>
          <target state="translated">Die Laufzeit muss die Namenscodierung überprüfen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Sealed">
          <source>Specifies that the class is concrete and cannot be extended.</source>
          <target state="translated">Gibt an, dass die Klasse konkret ist und nicht erweitert werden kann.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.SequentialLayout">
          <source>Specifies that class fields are laid out sequentially, in the order that the fields were emitted to the metadata.</source>
          <target state="translated">Gibt an, dass das Layout der Klassenfelder sequenziell in der Reihenfolge erfolgt, in der die Felder an die Metadaten ausgegeben wurden.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.Serializable">
          <source>Specifies that the class can be serialized.</source>
          <target state="translated">Gibt an, dass die Klasse serialisiert werden kann.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.SpecialName">
          <source>Specifies that the class is special in a way denoted by the name.</source>
          <target state="translated">Gibt an, dass der Name eine Besonderheit der Klasse bezeichnet.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.StringFormatMask">
          <source>Used to retrieve string information for native interoperability.</source>
          <target state="translated">Wird zum Abrufen von Zeichenfolgeninformationen für die systemeigene Interoperabilität verwendet.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.UnicodeClass">
          <source>LPTSTR is interpreted as UNICODE.</source>
          <target state="translated">LPTSTR wird als UNICODE interpretiert.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.VisibilityMask">
          <source>Specifies type visibility information.</source>
          <target state="translated">Gibt Informationen zur Sichtbarkeit des Typs an.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="F:System.Reflection.TypeAttributes.WindowsRuntime">
          <source>Specifies a <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph> type.</source>
          <target state="translated">Gibt einen <ph id="ph1">[!INCLUDE[wrt](~/includes/wrt-md.md)]</ph>-Typ an.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>