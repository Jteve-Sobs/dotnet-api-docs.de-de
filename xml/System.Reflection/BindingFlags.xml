<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingFlags.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac589084f16161d1fd3b1457d1121781a4306af5292.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89084f16161d1fd3b1457d1121781a4306af5292</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.BindingFlags">
          <source>Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.</source>
          <target state="translated">Gibt Flags an, die die Bindung steuern und die Art bestimmen, wie die Reflektion die Suche nach Membern und Typen durchführt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>These <ph id="ph1">`BindingFlags`</ph> control binding for a great many classes in the <ph id="ph2">`System`</ph>, <ph id="ph3">`System.Reflection`</ph>, and <ph id="ph4">`System.Runtime`</ph> namespaces that invoke, create, get, set, and find members and types.</source>
          <target state="translated">Diese <ph id="ph1">`BindingFlags`</ph> Binden einer großen Anzahl von Klassen im steuern die <ph id="ph2">`System`</ph>, <ph id="ph3">`System.Reflection`</ph>, und <ph id="ph4">`System.Runtime`</ph> Namespaces, die aufzurufen, erstellen, abrufen, festlegen und Suchen von Membern und Typen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`BindingFlags`</ph> are used in the following <ph id="ph2">&lt;xref:System.Type&gt;</ph> methods and other places such as <ph id="ph3">&lt;xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType&gt;</ph> :</source>
          <target state="translated"><ph id="ph1">`BindingFlags`</ph> werden verwendet, in der folgenden <ph id="ph2">&lt;xref:System.Type&gt;</ph> Methoden sowie an anderen Stellen z. B. <ph id="ph3">&lt;xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`InvokeMember`</ph> and <ph id="ph2">`GetMethod`</ph> are especially important.</source>
          <target state="translated"><ph id="ph1">`InvokeMember`</ph> und <ph id="ph2">`GetMethod`</ph> besonders wichtig sind.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The binding flags can be categorized by how they identify a type member, as listed in the following table.</source>
          <target state="translated">Der Bindungsflags können durch, wie sie einen Typmember identifizieren kategorisiert werden, wie in der folgenden Tabelle aufgeführt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Accessibility</source>
          <target state="translated">Identifizierte Eingabehilfen</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Binding Argument</source>
          <target state="translated">Identifizierte Argument gebunden</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Identified by Operation</source>
          <target state="translated">Durch den Vorgang identifiziert</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>DeclaredOnly</source>
          <target state="translated">DeclaredOnly</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>FlattenHierarchy</source>
          <target state="translated">FlattenHierarchy</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>IgnoreCase</source>
          <target state="translated">IgnoreCase</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>IgnoreReturn</source>
          <target state="translated">IgnoreReturn</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Instance</source>
          <target state="translated">Instanz</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>NonPublic</source>
          <target state="translated">NonPublic</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Public</source>
          <target state="translated">Public</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Static</source>
          <target state="translated">Statisch</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>ExactBinding</source>
          <target state="translated">ExactBinding</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>OptionalParamBinding</source>
          <target state="translated">OptionalParamBinding</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>CreateInstance</source>
          <target state="translated">CreateInstance</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>GetField</source>
          <target state="translated">GetField</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>SetField</source>
          <target state="translated">SetField</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>GetProperty</source>
          <target state="translated">GetProperty</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>SetProperty</source>
          <target state="translated">SetProperty</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>InvokeMethod</source>
          <target state="translated">InvokeMethod</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>PutDispProperty</source>
          <target state="translated">PutDispProperty</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>PutRefDispProperty</source>
          <target state="translated">PutRefDispProperty</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>You must specify <ph id="ph1">`Instance`</ph> or <ph id="ph2">`Static`</ph> along with <ph id="ph3">`Public`</ph> or <ph id="ph4">`NonPublic`</ph> or no members will be returned.</source>
          <target state="translated">Sie müssen angeben, <ph id="ph1">`Instance`</ph> oder <ph id="ph2">`Static`</ph> zusammen mit <ph id="ph3">`Public`</ph> oder <ph id="ph4">`NonPublic`</ph> oder keine Elemente zurückgegeben.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The following table lists the coercions performed by the default <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Die folgende Tabelle enthält die Umwandlungen durchgeführt, die standardmäßig <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>This table applies especially to the <ph id="ph1">`ExactBinding`</ph> binding flag.</source>
          <target state="translated">Diese Tabelle gilt insbesondere für die <ph id="ph1">`ExactBinding`</ph> Bindungsflags.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Source Type</source>
          <target state="translated">Quelltyp</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Target Type</source>
          <target state="translated">Zieltyp</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Any type</source>
          <target state="translated">Beliebiger Typ</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Its base type.</source>
          <target state="translated">Der Basistyp.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Any type</source>
          <target state="translated">Beliebiger Typ</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The interface it implements.</source>
          <target state="translated">Die Schnittstelle implementiert.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt16`</ph>, <ph id="ph2">`UInt32`</ph>, <ph id="ph3">`Int32`</ph>, <ph id="ph4">`UInt64`</ph>, <ph id="ph5">`Int64`</ph>, <ph id="ph6">`Single`</ph>, <ph id="ph7">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt16`</ph>, <ph id="ph2">`UInt32`</ph>, <ph id="ph3">`Int32`</ph>, <ph id="ph4">`UInt64`</ph>, <ph id="ph5">`Int64`</ph>, <ph id="ph6">`Single`</ph>, <ph id="ph7">`Double`</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Char`</ph>, <ph id="ph2">`UInt16`</ph>, <ph id="ph3">`Int16`</ph>, <ph id="ph4">`UInt32`</ph>, <ph id="ph5">`Int32`</ph>, <ph id="ph6">`UInt64`</ph>, <ph id="ph7">`Int64`</ph>, <ph id="ph8">`Single`</ph>, <ph id="ph9">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Char`</ph>, <ph id="ph2">`UInt16`</ph>, <ph id="ph3">`Int16`</ph>, <ph id="ph4">`UInt32`</ph>, <ph id="ph5">`Int32`</ph>, <ph id="ph6">`UInt64`</ph>, <ph id="ph7">`Int64`</ph>, <ph id="ph8">`Single`</ph>, <ph id="ph9">`Double`</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int16`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`Int64`</ph>, <ph id="ph4">`Single`</ph>, <ph id="ph5">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int16`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`Int64`</ph>, <ph id="ph4">`Single`</ph>, <ph id="ph5">`Double`</ph></target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt32`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`UInt64`</ph>, <ph id="ph4">`Int64`</ph>, <ph id="ph5">`Single`</ph>, <ph id="ph6">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt32`</ph>, <ph id="ph2">`Int32`</ph>, <ph id="ph3">`UInt64`</ph>, <ph id="ph4">`Int64`</ph>, <ph id="ph5">`Single`</ph>, <ph id="ph6">`Double`</ph></target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int32`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int32`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`UInt64`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`UInt64`</ph>, <ph id="ph2">`Int64`</ph>, <ph id="ph3">`Single`</ph>, <ph id="ph4">`Double`</ph></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Int64`</ph>, <ph id="ph2">`Single`</ph>, <ph id="ph3">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Int64`</ph>, <ph id="ph2">`Single`</ph>, <ph id="ph3">`Double`</ph></target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></source>
          <target state="translated"><ph id="ph1">`Single`</ph>, <ph id="ph2">`Double`</ph></target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>Non-reference</source>
          <target state="translated">Ohne Verweis</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>By-reference.</source>
          <target state="translated">Per-Verweis.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.BindingFlags">
          <source>The following example demonstrates many of the binding flags.</source>
          <target state="translated">Das folgende Beispiel zeigt viele der Bindungsflags.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>Specifies that reflection should create an instance of the specified type.</source>
          <target state="translated">Gibt an, dass die Reflektion eine Instanz des angegebenen Typs erstellen soll.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>Calls the constructor that matches the given arguments.</source>
          <target state="translated">Ruft den Konstruktor auf, der mit den angegebenen Argumenten übereinstimmt.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>The supplied member name is ignored.</source>
          <target state="translated">Der angegebene Membername wird ignoriert.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>If the type of lookup is not specified, (Instance | Public) will apply.</source>
          <target state="translated">Wenn die Art der Suche nicht angegeben ist, wird „(Instance | Public)“ angewendet.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>It is not possible to call a type initializer.</source>
          <target state="translated">Es ist nicht möglich, einen Typeninitialisierer aufzurufen.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.CreateInstance">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a constructor.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um einen Konstruktor aufzurufen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.DeclaredOnly">
          <source>Specifies that only members declared at the level of the supplied type's hierarchy should be considered.</source>
          <target state="translated">Gibt an, dass nur Member, die auf der Ebene der Hierarchie des angegebenen Typs deklariert wurden, berücksichtigt werden sollen.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.DeclaredOnly">
          <source>Inherited members are not considered.</source>
          <target state="translated">Geerbte Member werden nicht berücksichtigt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Default">
          <source>Specifies that no binding flags are defined.</source>
          <target state="translated">Gibt an, dass keine Bindungsflags definiert sind.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.</source>
          <target state="translated">Gibt an, dass die Typen der angegebenen Argumente genau mit den Typen der entsprechenden formalen Parameter übereinstimmen müssen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Reflection throws an exception if the caller supplies a non-null <ph id="ph1">&lt;see langword="Binder" /&gt;</ph> object, since that implies that the caller is supplying <ph id="ph2">&lt;see langword="BindToXXX" /&gt;</ph> implementations that will pick the appropriate method.</source>
          <target state="translated">Die Reflektion löst eine Ausnahme aus, wenn der Aufrufer ein <ph id="ph1">&lt;see langword="Binder" /&gt;</ph>-Objekt liefert, das ungleich Null ist, da dies impliziert, dass der Aufrufer <ph id="ph2">&lt;see langword="BindToXXX" /&gt;</ph>-Implementierungen bereitstellt, die die entsprechende Methode aufnehmen.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Reflection models the accessibility rules of the common type system.</source>
          <target state="translated">Reflektion modelliert die Zugriffsregeln des allgemeinen Typsystems.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</source>
          <target state="translated">Z. B. wenn der Aufrufer in der gleichen Assembly befindet, benötigt der Aufrufer keine besondere Berechtigungen für interne Member.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>Otherwise, the caller needs <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</source>
          <target state="translated">Andernfalls muss der Aufrufer <ph id="ph1">&lt;xref:System.Security.Permissions.ReflectionPermission&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>This is consistent with lookup of members that are protected, private, and so on.</source>
          <target state="translated">Dies ist konsistent mit der Suche nach Membern, die geschützt werden, private und usw. ein.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>The general principle is that <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A&gt;</ph> should perform only widening coercions, which never lose data.</source>
          <target state="translated">Im Allgemeinen gilt <ph id="ph1">&lt;xref:System.Reflection.Binder.ChangeType%2A&gt;</ph> sollten ausführen, nur widening-Umwandlungen, die keine Daten verloren gehen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</source>
          <target state="translated">Ein Beispiel für eine erweiternde Konvertierung ist eine Umwandlung einer 32-Bit-Ganzzahl mit Vorzeichen in einen Wert einer 64-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>This is distinguished from a narrowing coercion, which may lose data.</source>
          <target state="translated">Dies wird über eine einschränkende Konvertierung unterschieden, die Daten verloren gehen können.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</source>
          <target state="translated">Ein Beispiel für eine einschränkende Konvertierung ist eine 64-Bit-Ganzzahl mit Vorzeichen in eine 32-Bit-Ganzzahl mit Vorzeichen umzuwandeln.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.ExactBinding">
          <source>The default binder ignores this flag, while custom binders can implement the semantics of this flag.</source>
          <target state="translated">Der Standardbinder ignoriert dieses Flag an, während benutzerdefinierte Binder die Semantik dieses Flags implementieren können.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Specifies that public and protected static members up the hierarchy should be returned.</source>
          <target state="translated">Gibt an, dass öffentliche und geschützte statische Member in der nach oben gerichteten Hierarchie zurückgegeben werden sollen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Private static members in inherited classes are not returned.</source>
          <target state="translated">Private statische Member in geerbten Klassen werden nicht zurückgegeben.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Static members include fields, methods, events, and properties.</source>
          <target state="translated">Statische Member enthalten Felder, Methoden, Ereignisse und Eigenschaften.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.FlattenHierarchy">
          <source>Nested types are not returned.</source>
          <target state="translated">Geschachtelte Typen werden nicht zurückgegeben.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetField">
          <source>Specifies that the value of the specified field should be returned.</source>
          <target state="translated">Gibt an, dass der Wert des angegebenen Felds zurückgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetField">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to get a field value.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um einen Feldwert abzurufen.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetProperty">
          <source>Specifies that the value of the specified property should be returned.</source>
          <target state="translated">Gibt an, dass der Wert der angegebenen Eigenschaft zurückgegeben werden soll.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.GetProperty">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a property getter.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um einen Getter für eine Eigenschaft aufzurufen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.IgnoreCase">
          <source>Specifies that the case of the member name should not be considered when binding.</source>
          <target state="translated">Gibt an, dass die Groß-/Kleinschreibung für den Membernamen beim Binden nicht berücksichtigt werden soll.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.IgnoreReturn">
          <source>Used in COM interop to specify that the return value of the member can be ignored.</source>
          <target state="translated">Dieses wird in COM-Interop zur Angabe verwendet, dass der Rückgabewert des Members ignoriert werden kann.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Instance">
          <source>Specifies that instance members are to be included in the search.</source>
          <target state="translated">Gibt an, dass Instanzmember in die Suche einbezogen werden.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>Specifies that a method is to be invoked.</source>
          <target state="translated">Gibt an, dass eine Methode aufgerufen werden muss.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>This must not be a constructor or a type initializer.</source>
          <target state="translated">Dies darf kein Konstruktor oder Typinitialisierer sein.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.InvokeMethod">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a method.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um eine Methode aufzurufen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.NonPublic">
          <source>Specifies that non-public members are to be included in the search.</source>
          <target state="translated">Gibt an, dass nicht öffentliche Member in die Suche einbezogen werden.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>Returns the set of members whose parameter count matches the number of supplied arguments.</source>
          <target state="translated">Gibt die Menge der Member zurück, deren Parameteranzahl mit der Anzahl der bereitgestellten Argumente übereinstimmt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).</source>
          <target state="translated">Dieses Bindungsflag wird für Methoden mit Parametern verwendet, die Standardwerte besitzen, und für Methoden mit variablen Argumenten (varargs).</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>This flag should only be used with <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Dieses Flag sollte nur mit <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> verwendet werden.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>Parameters with default values are used only in calls where trailing arguments are omitted.</source>
          <target state="translated">Parameter mit Standardwerten werden nur in Aufrufen verwendet, in denen nachfolgende Argumente ausgelassen werden.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Reflection.BindingFlags.OptionalParamBinding">
          <source>They must be the last arguments.</source>
          <target state="translated">Sie müssen die letzten Argumente sein.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Public">
          <source>Specifies that public members are to be included in the search.</source>
          <target state="translated">Gibt an, dass öffentliche Member in die Suche einbezogen werden.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source>Specifies that the <ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> member on a COM object should be invoked.</source>
          <target state="translated">Gibt an, dass der <ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph>-Member für ein COM-Objekt aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source><ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> specifies a property-setting function that uses a value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PROPPUT" /&gt;</ph> gibt eine Eigenschaften festlegende Funktion an, die einen Wert verwendet.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutDispProperty">
          <source>Use <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> if a property has both <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> and <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> and you need to distinguish which one is called.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph>, wenn eine Eigenschaft sowohl <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> als auch <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> aufweist und Sie unterscheiden müssen, welche dieser beiden Optionen aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source>Specifies that the <ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> member on a COM object should be invoked.</source>
          <target state="translated">Gibt an, dass der <ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph>-Member für ein COM-Objekt aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source><ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> specifies a property-setting function that uses a reference instead of a value.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="PROPPUTREF" /&gt;</ph> gibt eine Eigenschaften festlegende Funktion an, die einen Verweis anstelle eines Werts verwendet.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.PutRefDispProperty">
          <source>Use <ph id="ph1">&lt;see langword="PutRefDispProperty" /&gt;</ph> if a property has both <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> and <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> and you need to distinguish which one is called.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;see langword="PutRefDispProperty" /&gt;</ph>, wenn eine Eigenschaft sowohl <ph id="ph2">&lt;see langword="PROPPUT" /&gt;</ph> als auch <ph id="ph3">&lt;see langword="PROPPUTREF" /&gt;</ph> aufweist und Sie unterscheiden müssen, welche dieser beiden Optionen aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetField">
          <source>Specifies that the value of the specified field should be set.</source>
          <target state="translated">Gibt an, dass der Wert des angegebenen Felds festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetField">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to set a field value.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um einen Feldwert festzulegen.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>Specifies that the value of the specified property should be set.</source>
          <target state="translated">Gibt an, dass der Wert der angegebenen Eigenschaft festgelegt werden soll.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>For COM properties, specifying this binding flag is equivalent to specifying <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> and <ph id="ph2">&lt;see langword="PutRefDispProperty" /&gt;</ph>.</source>
          <target state="translated">Bei COM-Eigenschaften ist die Angabe dieses Bindungsflags gleichbedeutend mit der Angabe von <ph id="ph1">&lt;see langword="PutDispProperty" /&gt;</ph> und <ph id="ph2">&lt;see langword="PutRefDispProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SetProperty">
          <source>This flag is passed to an <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph> method to invoke a property setter.</source>
          <target state="translated">Dieses Flag wird an eine <ph id="ph1">&lt;see langword="InvokeMember" /&gt;</ph>-Methode übergeben, um einen Setter für eine Eigenschaft aufzurufen.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.Static">
          <source>Specifies that static members are to be included in the search.</source>
          <target state="translated">Gibt an, dass statische Member in die Suche einbezogen werden.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="F:System.Reflection.BindingFlags.SuppressChangeType">
          <source>Not implemented.</source>
          <target state="translated">Nicht implementiert.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>