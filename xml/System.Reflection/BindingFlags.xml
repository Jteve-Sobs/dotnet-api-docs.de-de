<Type Name="BindingFlags" FullName="System.Reflection.BindingFlags">
  <Metadata><Meta Name="ms.openlocfilehash" Value="47b08fdb533b11cab6e1d37bb569e8fe32330011" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56368856" /></Metadata><TypeSignature Language="C#" Value="public enum BindingFlags" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed BindingFlags extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.BindingFlags" />
  <TypeSignature Language="VB.NET" Value="Public Enum BindingFlags" />
  <TypeSignature Language="C++ CLI" Value="public enum class BindingFlags" />
  <TypeSignature Language="F#" Value="type BindingFlags = " />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;netcore-2.2;dotnet-uwp-10.0;netcore-3.0">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="cd7c4-101">Gibt Flags an, die die Bindung steuern und die Art bestimmen, wie die Reflektion die Suche nach Membern und Typen durchführt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-101">Specifies flags that control binding and the way in which the search for members and types is conducted by reflection.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd7c4-102">Diese `BindingFlags` steuern Binden einer großen Anzahl von Klassen im der `System`, `System.Reflection`, und `System.Runtime` Namespaces, die aufzurufen, erstellen, abrufen, festlegen und Membern und Typen zu finden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-102">These `BindingFlags` control binding for a great many classes in the `System`, `System.Reflection`, and `System.Runtime` namespaces that invoke, create, get, set, and find members and types.</span></span>  
  
 <span data-ttu-id="cd7c4-103">`BindingFlags` werden verwendet, in der folgenden <xref:System.Type> Methoden sowie an anderen Stellen z. B. <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="cd7c4-103">`BindingFlags` are used in the following <xref:System.Type> methods and other places such as <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>:</span></span>  
  
-   <xref:System.Reflection.MethodBase.Invoke%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetMembers%2A>  
  
-   <xref:System.Type.GetEvents%2A>  
  
-   <xref:System.Type.InvokeMember%2A>  
  
-   <xref:System.Activator.CreateInstance%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.GetConstructor%2A>  
  
-   <xref:System.Type.GetConstructors%2A>  
  
-   <xref:System.Type.GetMethod%2A>  
  
-   <xref:System.Type.GetMethods%2A>  
  
-   <xref:System.Type.GetField%2A>  
  
-   <xref:System.Type.GetFields%2A>  
  
-   <xref:System.Type.GetEvent%2A>  
  
-   <xref:System.Type.GetProperty%2A>  
  
-   <xref:System.Type.GetProperties%2A>  
  
-   <xref:System.Type.GetMember%2A>  
  
-   <xref:System.Type.FindMembers%2A>  
  
 <span data-ttu-id="cd7c4-104">`InvokeMember` und `GetMethod` sind besonders wichtig.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-104">`InvokeMember` and `GetMethod` are especially important.</span></span>  
  
 <span data-ttu-id="cd7c4-105">Die Bindungsflags können durch, wie sie einen Typmember identifizieren kategorisiert werden, wie in der folgenden Tabelle aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-105">The binding flags can be categorized by how they identify a type member, as listed in the following table.</span></span>  
  
|<span data-ttu-id="cd7c4-106">Barrierefreiheit identifizierte</span><span class="sxs-lookup"><span data-stu-id="cd7c4-106">Identified by Accessibility</span></span>|<span data-ttu-id="cd7c4-107">Identifizierte Argument gebunden</span><span class="sxs-lookup"><span data-stu-id="cd7c4-107">Identified by Binding Argument</span></span>|<span data-ttu-id="cd7c4-108">Durch den Vorgang identifiziert</span><span class="sxs-lookup"><span data-stu-id="cd7c4-108">Identified by Operation</span></span>|  
|---------------------------------|------------------------------------|-----------------------------|  
|<span data-ttu-id="cd7c4-109">DeclaredOnly</span><span class="sxs-lookup"><span data-stu-id="cd7c4-109">DeclaredOnly</span></span><br /><br /> <span data-ttu-id="cd7c4-110">FlattenHierarchy</span><span class="sxs-lookup"><span data-stu-id="cd7c4-110">FlattenHierarchy</span></span><br /><br /> <span data-ttu-id="cd7c4-111">IgnoreCase</span><span class="sxs-lookup"><span data-stu-id="cd7c4-111">IgnoreCase</span></span><br /><br /> <span data-ttu-id="cd7c4-112">IgnoreReturn</span><span class="sxs-lookup"><span data-stu-id="cd7c4-112">IgnoreReturn</span></span><br /><br /> <span data-ttu-id="cd7c4-113">Instanz</span><span class="sxs-lookup"><span data-stu-id="cd7c4-113">Instance</span></span><br /><br /> <span data-ttu-id="cd7c4-114">NonPublic</span><span class="sxs-lookup"><span data-stu-id="cd7c4-114">NonPublic</span></span><br /><br /> <span data-ttu-id="cd7c4-115">Public</span><span class="sxs-lookup"><span data-stu-id="cd7c4-115">Public</span></span><br /><br /> <span data-ttu-id="cd7c4-116">Statisch</span><span class="sxs-lookup"><span data-stu-id="cd7c4-116">Static</span></span>|<span data-ttu-id="cd7c4-117">ExactBinding</span><span class="sxs-lookup"><span data-stu-id="cd7c4-117">ExactBinding</span></span><br /><br /> <span data-ttu-id="cd7c4-118">OptionalParamBinding</span><span class="sxs-lookup"><span data-stu-id="cd7c4-118">OptionalParamBinding</span></span>|<span data-ttu-id="cd7c4-119">CreateInstance</span><span class="sxs-lookup"><span data-stu-id="cd7c4-119">CreateInstance</span></span><br /><br /> <span data-ttu-id="cd7c4-120">GetField</span><span class="sxs-lookup"><span data-stu-id="cd7c4-120">GetField</span></span><br /><br /> <span data-ttu-id="cd7c4-121">SetField</span><span class="sxs-lookup"><span data-stu-id="cd7c4-121">SetField</span></span><br /><br /> <span data-ttu-id="cd7c4-122">GetProperty</span><span class="sxs-lookup"><span data-stu-id="cd7c4-122">GetProperty</span></span><br /><br /> <span data-ttu-id="cd7c4-123">SetProperty</span><span class="sxs-lookup"><span data-stu-id="cd7c4-123">SetProperty</span></span><br /><br /> <span data-ttu-id="cd7c4-124">InvokeMethod</span><span class="sxs-lookup"><span data-stu-id="cd7c4-124">InvokeMethod</span></span><br /><br /> <span data-ttu-id="cd7c4-125">PutDispProperty</span><span class="sxs-lookup"><span data-stu-id="cd7c4-125">PutDispProperty</span></span><br /><br /> <span data-ttu-id="cd7c4-126">PutRefDispProperty</span><span class="sxs-lookup"><span data-stu-id="cd7c4-126">PutRefDispProperty</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="cd7c4-127">Sie müssen angeben, `Instance` oder `Static` zusammen mit `Public` oder `NonPublic` oder keine Elemente zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-127">You must specify `Instance` or `Static` along with `Public` or `NonPublic` or no members will be returned.</span></span>  
  
 <span data-ttu-id="cd7c4-128">In der folgende Tabelle werden die Umwandlungen aufgelistet, die ausgeführt werden, die standardmäßig <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-128">The following table lists the coercions performed by the default <xref:System.Reflection.Binder.ChangeType%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="cd7c4-129">Diese Tabelle gilt insbesondere für die `BindingFlags.ExactBinding` Bindungsflags.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-129">This table applies especially to the `BindingFlags.ExactBinding` binding flag.</span></span> <span data-ttu-id="cd7c4-130">Im Allgemeinen gilt, die <xref:System.Reflection.Binder.ChangeType%2A> nur Erweiterungsumwandlungen keine Daten verloren gehen durchführen sollte.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-130">The general principle is that <xref:System.Reflection.Binder.ChangeType%2A> should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="cd7c4-131">Ein Beispiel für eine erweiternde Konvertierung ist eine Umwandlung, die eine 32-Bit-Ganzzahl mit Vorzeichen in einen Wert, der eine 64-Bit-Ganzzahl mit Vorzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-131">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="cd7c4-132">Dies ist über eine einschränkende Konvertierung, unterschieden, die Daten verloren gehen können.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-132">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="cd7c4-133">Ein Beispiel für eine einschränkende Konvertierung ist eine 64-Bit-Ganzzahl mit Vorzeichen in eine 32-Bit-Ganzzahl mit Vorzeichen Koersion.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-133">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span> 
  
|<span data-ttu-id="cd7c4-134">Quelltyp</span><span class="sxs-lookup"><span data-stu-id="cd7c4-134">Source Type</span></span>|<span data-ttu-id="cd7c4-135">Zieltyp</span><span class="sxs-lookup"><span data-stu-id="cd7c4-135">Target Type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="cd7c4-136">Beliebiger Typ</span><span class="sxs-lookup"><span data-stu-id="cd7c4-136">Any type</span></span>|<span data-ttu-id="cd7c4-137">Basistyp.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-137">Its base type.</span></span>|  
|<span data-ttu-id="cd7c4-138">Beliebiger Typ</span><span class="sxs-lookup"><span data-stu-id="cd7c4-138">Any type</span></span>|<span data-ttu-id="cd7c4-139">Die Schnittstelle, die er implementiert.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-139">The interface it implements.</span></span>|  
|`Char`|<span data-ttu-id="cd7c4-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-140">`UInt16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Byte`|<span data-ttu-id="cd7c4-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-141">`Char`, `UInt16`, `Int16`, `UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`SByte`|<span data-ttu-id="cd7c4-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-142">`Int16`, `Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt16`|<span data-ttu-id="cd7c4-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-143">`UInt32`, `Int32`, `UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int16`|<span data-ttu-id="cd7c4-144">`Int32`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-144">`Int32`, `Int64`, `Single`, `Double`</span></span>|  
|`UInt32`|<span data-ttu-id="cd7c4-145">`UInt64`, `Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-145">`UInt64`, `Int64`, `Single`, `Double`</span></span>|  
|`Int32`|<span data-ttu-id="cd7c4-146">`Int64`, `Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-146">`Int64`, `Single`, `Double`</span></span>|  
|`UInt64`|<span data-ttu-id="cd7c4-147">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-147">`Single`, `Double`</span></span>|  
|`Int64`|<span data-ttu-id="cd7c4-148">`Single`, `Double`</span><span class="sxs-lookup"><span data-stu-id="cd7c4-148">`Single`, `Double`</span></span>|  
|`Single`|`Double`|  
|<span data-ttu-id="cd7c4-149">Ohne Verweis</span><span class="sxs-lookup"><span data-stu-id="cd7c4-149">Non-reference</span></span>|<span data-ttu-id="cd7c4-150">Per-Verweis.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-150">By-reference.</span></span>|  

<span data-ttu-id="cd7c4-151">Wenn die `BindingFlags.ExactBinding` Bindungsflag wird verwendet, Reflektion modelliert die Zugriffsregeln des allgemeinen Typsystems.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-151">When the `BindingFlags.ExactBinding` binding flag is used, reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="cd7c4-152">Wenn der Aufrufer in der gleichen Assembly ist, wird z. B. spezielle Berechtigungen von der Aufrufer nicht für interne Member benötigt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-152">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="cd7c4-153">Andernfalls, benötigt der Aufrufer <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-153">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="cd7c4-154">Dies ist konsistent mit der Suche nach Elementen, die geschützt werden, private und so weiter.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-154">This is consistent with the lookup of members that are protected, private, and so on.</span></span>  
  
   
  
   
     
  
## Examples  
 <span data-ttu-id="cd7c4-155">Das folgende Beispiel veranschaulicht viele der Bindungsflags.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-155">The following example demonstrates many of the binding flags.</span></span>  
  
 [!code-cpp[BindingFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/BindingFlags/CPP/bindingflagssample.cpp#1)]
 [!code-csharp[BindingFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/BindingFlags/CS/bindingflagssample.cs#1)]
 [!code-vb[BindingFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/BindingFlags/VB/bindingflagssample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="CreateInstance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags CreateInstance = int32(512)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="CreateInstance" />
      <MemberSignature Language="C++ CLI" Value="CreateInstance" />
      <MemberSignature Language="F#" Value="CreateInstance = 512" Usage="System.Reflection.BindingFlags.CreateInstance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>512</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-156">Gibt an, dass die Reflektion eine Instanz des angegebenen Typs erstellen soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-156">Specifies that reflection should create an instance of the specified type.</span></span> <span data-ttu-id="cd7c4-157">Ruft den Konstruktor auf, der mit den angegebenen Argumenten übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-157">Calls the constructor that matches the given arguments.</span></span> <span data-ttu-id="cd7c4-158">Der angegebene Membername wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-158">The supplied member name is ignored.</span></span> <span data-ttu-id="cd7c4-159">Wenn die Art der Suche nicht angegeben ist, wird „(Instance | Public)“ angewendet.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-159">If the type of lookup is not specified, (Instance | Public) will apply.</span></span> <span data-ttu-id="cd7c4-160">Es ist nicht möglich, einen Typeninitialisierer aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-160">It is not possible to call a type initializer.</span></span>  
  
<span data-ttu-id="cd7c4-161">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um einen Konstruktor aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-161">This flag is passed to an <see langword="InvokeMember" /> method to invoke a constructor.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DeclaredOnly">
      <MemberSignature Language="C#" Value="DeclaredOnly" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DeclaredOnly = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberSignature Language="VB.NET" Value="DeclaredOnly" />
      <MemberSignature Language="C++ CLI" Value="DeclaredOnly" />
      <MemberSignature Language="F#" Value="DeclaredOnly = 2" Usage="System.Reflection.BindingFlags.DeclaredOnly" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-162">Gibt an, dass nur Member, die auf der Ebene der Hierarchie des angegebenen Typs deklariert wurden, berücksichtigt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-162">Specifies that only members declared at the level of the supplied type's hierarchy should be considered.</span></span> <span data-ttu-id="cd7c4-163">Geerbte Member werden nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-163">Inherited members are not considered.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="Default" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Default = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Default" />
      <MemberSignature Language="VB.NET" Value="Default" />
      <MemberSignature Language="C++ CLI" Value="Default" />
      <MemberSignature Language="F#" Value="Default = 0" Usage="System.Reflection.BindingFlags.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-164">Gibt an, dass keine Bindungsflags definiert sind.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-164">Specifies that no binding flags are defined.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="DoNotWrapExceptions">
      <MemberSignature Language="C#" Value="DoNotWrapExceptions" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags DoNotWrapExceptions = int32(33554432)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberSignature Language="VB.NET" Value="DoNotWrapExceptions" />
      <MemberSignature Language="C++ CLI" Value="DoNotWrapExceptions" />
      <MemberSignature Language="F#" Value="DoNotWrapExceptions = 33554432" Usage="System.Reflection.BindingFlags.DoNotWrapExceptions" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>33554432</MemberValue>
      <Docs>
        <summary>To be added.</summary>
      </Docs>
    </Member>
    <Member MemberName="ExactBinding">
      <MemberSignature Language="C#" Value="ExactBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags ExactBinding = int32(65536)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.ExactBinding" />
      <MemberSignature Language="VB.NET" Value="ExactBinding" />
      <MemberSignature Language="C++ CLI" Value="ExactBinding" />
      <MemberSignature Language="F#" Value="ExactBinding = 65536" Usage="System.Reflection.BindingFlags.ExactBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>65536</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-165">Gibt an, dass die Typen der angegebenen Argumente genau mit den Typen der entsprechenden formalen Parameter übereinstimmen müssen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-165">Specifies that types of the supplied arguments must exactly match the types of the corresponding formal parameters.</span></span> <span data-ttu-id="cd7c4-166">Die Reflektion löst eine Ausnahme aus, wenn der Aufrufer ein <see langword="Binder" />-Objekt liefert, das ungleich Null ist, da dies impliziert, dass der Aufrufer <see langword="BindToXXX" />-Implementierungen bereitstellt, die die entsprechende Methode aufnehmen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-166">Reflection throws an exception if the caller supplies a non-null <see langword="Binder" /> object, since that implies that the caller is supplying <see langword="BindToXXX" /> implementations that will pick the appropriate method.</span></span> <span data-ttu-id="cd7c4-167">Die Standardbindung ignoriert dieses Flag, während benutzerdefinierte Bindungen die Semantik dieses Flags implementieren können.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-167">The default binder ignores this flag, while custom binders can implement the semantics of this flag.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="FlattenHierarchy">
      <MemberSignature Language="C#" Value="FlattenHierarchy" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags FlattenHierarchy = int32(64)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberSignature Language="VB.NET" Value="FlattenHierarchy" />
      <MemberSignature Language="C++ CLI" Value="FlattenHierarchy" />
      <MemberSignature Language="F#" Value="FlattenHierarchy = 64" Usage="System.Reflection.BindingFlags.FlattenHierarchy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>64</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-168">Gibt an, dass öffentliche und geschützte statische Member in der nach oben gerichteten Hierarchie zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-168">Specifies that public and protected static members up the hierarchy should be returned.</span></span> <span data-ttu-id="cd7c4-169">Private statische Member in geerbten Klassen werden nicht zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-169">Private static members in inherited classes are not returned.</span></span> <span data-ttu-id="cd7c4-170">Statische Member enthalten Felder, Methoden, Ereignisse und Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-170">Static members include fields, methods, events, and properties.</span></span> <span data-ttu-id="cd7c4-171">Geschachtelte Typen werden nicht zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-171">Nested types are not returned.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetField">
      <MemberSignature Language="C#" Value="GetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetField = int32(1024)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetField" />
      <MemberSignature Language="VB.NET" Value="GetField" />
      <MemberSignature Language="C++ CLI" Value="GetField" />
      <MemberSignature Language="F#" Value="GetField = 1024" Usage="System.Reflection.BindingFlags.GetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1024</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-172">Gibt an, dass der Wert des angegebenen Felds zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-172">Specifies that the value of the specified field should be returned.</span></span>  
  
<span data-ttu-id="cd7c4-173">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um einen Feldwert abzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-173">This flag is passed to an <see langword="InvokeMember" /> method to get a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="GetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags GetProperty = int32(4096)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.GetProperty" />
      <MemberSignature Language="VB.NET" Value="GetProperty" />
      <MemberSignature Language="C++ CLI" Value="GetProperty" />
      <MemberSignature Language="F#" Value="GetProperty = 4096" Usage="System.Reflection.BindingFlags.GetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4096</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-174">Gibt an, dass der Wert der angegebenen Eigenschaft zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-174">Specifies that the value of the specified property should be returned.</span></span>  
  
<span data-ttu-id="cd7c4-175">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um einen Getter für eine Eigenschaft aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-175">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property getter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreCase">
      <MemberSignature Language="C#" Value="IgnoreCase" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreCase = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreCase" />
      <MemberSignature Language="VB.NET" Value="IgnoreCase" />
      <MemberSignature Language="C++ CLI" Value="IgnoreCase" />
      <MemberSignature Language="F#" Value="IgnoreCase = 1" Usage="System.Reflection.BindingFlags.IgnoreCase" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-176">Gibt an, dass die Groß-/Kleinschreibung für den Membernamen beim Binden nicht berücksichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-176">Specifies that the case of the member name should not be considered when binding.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="IgnoreReturn">
      <MemberSignature Language="C#" Value="IgnoreReturn" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags IgnoreReturn = int32(16777216)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberSignature Language="VB.NET" Value="IgnoreReturn" />
      <MemberSignature Language="C++ CLI" Value="IgnoreReturn" />
      <MemberSignature Language="F#" Value="IgnoreReturn = 16777216" Usage="System.Reflection.BindingFlags.IgnoreReturn" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16777216</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-177">Dieses wird in COM-Interop zur Angabe verwendet, dass der Rückgabewert des Members ignoriert werden kann.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-177">Used in COM interop to specify that the return value of the member can be ignored.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Instance">
      <MemberSignature Language="C#" Value="Instance" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Instance = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Instance" />
      <MemberSignature Language="VB.NET" Value="Instance" />
      <MemberSignature Language="C++ CLI" Value="Instance" />
      <MemberSignature Language="F#" Value="Instance = 4" Usage="System.Reflection.BindingFlags.Instance" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-178">Gibt an, dass Instanzmember in die Suche einbezogen werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-178">Specifies that instance members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="InvokeMethod">
      <MemberSignature Language="C#" Value="InvokeMethod" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags InvokeMethod = int32(256)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.InvokeMethod" />
      <MemberSignature Language="VB.NET" Value="InvokeMethod" />
      <MemberSignature Language="C++ CLI" Value="InvokeMethod" />
      <MemberSignature Language="F#" Value="InvokeMethod = 256" Usage="System.Reflection.BindingFlags.InvokeMethod" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>256</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-179">Gibt an, dass eine Methode aufgerufen werden muss.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-179">Specifies that a method is to be invoked.</span></span> <span data-ttu-id="cd7c4-180">Dies darf kein Konstruktor oder Typinitialisierer sein.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-180">This must not be a constructor or a type initializer.</span></span>  
  
<span data-ttu-id="cd7c4-181">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um eine Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-181">This flag is passed to an <see langword="InvokeMember" /> method to invoke a method.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonPublic">
      <MemberSignature Language="C#" Value="NonPublic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags NonPublic = int32(32)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.NonPublic" />
      <MemberSignature Language="VB.NET" Value="NonPublic" />
      <MemberSignature Language="C++ CLI" Value="NonPublic" />
      <MemberSignature Language="F#" Value="NonPublic = 32" Usage="System.Reflection.BindingFlags.NonPublic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-182">Gibt an, dass nicht öffentliche Member in die Suche einbezogen werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-182">Specifies that non-public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OptionalParamBinding">
      <MemberSignature Language="C#" Value="OptionalParamBinding" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags OptionalParamBinding = int32(262144)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberSignature Language="VB.NET" Value="OptionalParamBinding" />
      <MemberSignature Language="C++ CLI" Value="OptionalParamBinding" />
      <MemberSignature Language="F#" Value="OptionalParamBinding = 262144" Usage="System.Reflection.BindingFlags.OptionalParamBinding" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>262144</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-183">Gibt die Menge der Member zurück, deren Parameteranzahl mit der Anzahl der bereitgestellten Argumente übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-183">Returns the set of members whose parameter count matches the number of supplied arguments.</span></span> <span data-ttu-id="cd7c4-184">Dieses Bindungsflag wird für Methoden mit Parametern verwendet, die Standardwerte besitzen, und für Methoden mit variablen Argumenten (varargs).</span><span class="sxs-lookup"><span data-stu-id="cd7c4-184">This binding flag is used for methods with parameters that have default values and methods with variable arguments (varargs).</span></span> <span data-ttu-id="cd7c4-185">Dieses Flag sollte nur mit <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-185">This flag should only be used with <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span><br /><br /><span data-ttu-id="cd7c4-186">Parameter mit Standardwerten werden nur in Aufrufen verwendet, in denen nachfolgende Argumente ausgelassen werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-186">Parameters with default values are used only in calls where trailing arguments are omitted.</span></span> <span data-ttu-id="cd7c4-187">Sie müssen die letzten Argumente sein.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-187">They must be the last arguments.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Public">
      <MemberSignature Language="C#" Value="Public" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Public = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Public" />
      <MemberSignature Language="VB.NET" Value="Public" />
      <MemberSignature Language="C++ CLI" Value="Public" />
      <MemberSignature Language="F#" Value="Public = 16" Usage="System.Reflection.BindingFlags.Public" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-188">Gibt an, dass öffentliche Member in die Suche einbezogen werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-188">Specifies that public members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutDispProperty">
      <MemberSignature Language="C#" Value="PutDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutDispProperty = int32(16384)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutDispProperty" />
      <MemberSignature Language="F#" Value="PutDispProperty = 16384" Usage="System.Reflection.BindingFlags.PutDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>16384</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-189">Gibt an, dass der <see langword="PROPPUT" />-Member für ein COM-Objekt aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-189">Specifies that the <see langword="PROPPUT" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="cd7c4-190"><see langword="PROPPUT" /> gibt eine Eigenschaften festlegende Funktion an, die einen Wert verwendet.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-190"><see langword="PROPPUT" /> specifies a property-setting function that uses a value.</span></span> <span data-ttu-id="cd7c4-191">Verwenden Sie <see langword="PutDispProperty" />, wenn eine Eigenschaft sowohl <see langword="PROPPUT" /> als auch <see langword="PROPPUTREF" /> aufweist und Sie unterscheiden müssen, welche dieser beiden Optionen aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-191">Use <see langword="PutDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="PutRefDispProperty">
      <MemberSignature Language="C#" Value="PutRefDispProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags PutRefDispProperty = int32(32768)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberSignature Language="VB.NET" Value="PutRefDispProperty" />
      <MemberSignature Language="C++ CLI" Value="PutRefDispProperty" />
      <MemberSignature Language="F#" Value="PutRefDispProperty = 32768" Usage="System.Reflection.BindingFlags.PutRefDispProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>32768</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-192">Gibt an, dass der <see langword="PROPPUTREF" />-Member für ein COM-Objekt aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-192">Specifies that the <see langword="PROPPUTREF" /> member on a COM object should be invoked.</span></span> <span data-ttu-id="cd7c4-193"><see langword="PROPPUTREF" /> gibt eine Eigenschaften festlegende Funktion an, die einen Verweis anstelle eines Werts verwendet.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-193"><see langword="PROPPUTREF" /> specifies a property-setting function that uses a reference instead of a value.</span></span> <span data-ttu-id="cd7c4-194">Verwenden Sie <see langword="PutRefDispProperty" />, wenn eine Eigenschaft sowohl <see langword="PROPPUT" /> als auch <see langword="PROPPUTREF" /> aufweist und Sie unterscheiden müssen, welche dieser beiden Optionen aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-194">Use <see langword="PutRefDispProperty" /> if a property has both <see langword="PROPPUT" /> and <see langword="PROPPUTREF" /> and you need to distinguish which one is called.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetField">
      <MemberSignature Language="C#" Value="SetField" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetField = int32(2048)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetField" />
      <MemberSignature Language="VB.NET" Value="SetField" />
      <MemberSignature Language="C++ CLI" Value="SetField" />
      <MemberSignature Language="F#" Value="SetField = 2048" Usage="System.Reflection.BindingFlags.SetField" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>2048</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-195">Gibt an, dass der Wert des angegebenen Felds festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-195">Specifies that the value of the specified field should be set.</span></span>  
  
<span data-ttu-id="cd7c4-196">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um einen Feldwert festzulegen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-196">This flag is passed to an <see langword="InvokeMember" /> method to set a field value.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="SetProperty" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SetProperty = int32(8192)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SetProperty" />
      <MemberSignature Language="VB.NET" Value="SetProperty" />
      <MemberSignature Language="C++ CLI" Value="SetProperty" />
      <MemberSignature Language="F#" Value="SetProperty = 8192" Usage="System.Reflection.BindingFlags.SetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8192</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-197">Gibt an, dass der Wert der angegebenen Eigenschaft festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-197">Specifies that the value of the specified property should be set.</span></span> <span data-ttu-id="cd7c4-198">Bei COM-Eigenschaften ist die Angabe dieses Bindungsflags gleichbedeutend mit der Angabe von <see langword="PutDispProperty" /> und <see langword="PutRefDispProperty" />.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-198">For COM properties, specifying this binding flag is equivalent to specifying <see langword="PutDispProperty" /> and <see langword="PutRefDispProperty" />.</span></span>  
  
<span data-ttu-id="cd7c4-199">Dieses Flag wird an eine <see langword="InvokeMember" />-Methode übergeben, um einen Setter für eine Eigenschaft aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-199">This flag is passed to an <see langword="InvokeMember" /> method to invoke a property setter.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Static">
      <MemberSignature Language="C#" Value="Static" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags Static = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.Static" />
      <MemberSignature Language="VB.NET" Value="Static" />
      <MemberSignature Language="C++ CLI" Value="Static" />
      <MemberSignature Language="F#" Value="Static = 8" Usage="System.Reflection.BindingFlags.Static" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-200">Gibt an, dass statische Member in die Suche einbezogen werden.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-200">Specifies that static members are to be included in the search.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="SuppressChangeType">
      <MemberSignature Language="C#" Value="SuppressChangeType" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Reflection.BindingFlags SuppressChangeType = int32(131072)" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberSignature Language="VB.NET" Value="SuppressChangeType" />
      <MemberSignature Language="C++ CLI" Value="SuppressChangeType" />
      <MemberSignature Language="F#" Value="SuppressChangeType = 131072" Usage="System.Reflection.BindingFlags.SuppressChangeType" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.TypeExtensions</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.BindingFlags</ReturnType>
      </ReturnValue>
      <MemberValue>131072</MemberValue>
      <Docs>
        <summary><span data-ttu-id="cd7c4-201">Nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="cd7c4-201">Not implemented.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>