<Type Name="MemberInfo" FullName="System.Reflection.MemberInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="982c07b9077fc75a1bab61f28198cfd9b58ec31a" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82301201" /></Metadata><TypeSignature Language="C#" Value="public abstract class MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberInfo extends System.Object" FrameworkAlternate="dotnet-uwp-10.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MemberInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInfo abstract" FrameworkAlternate="dotnet-uwp-10.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4" />
  <TypeSignature Language="F#" Value="type MemberInfo = class" FrameworkAlternate="dotnet-uwp-10.0;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4" />
  <TypeSignature Language="C#" Value="public abstract class MemberInfo : System.Reflection.ICustomAttributeProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MemberInfo extends System.Object implements class System.Reflection.ICustomAttributeProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberInfo&#xA;Implements ICustomAttributeProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInfo abstract : System::Reflection::ICustomAttributeProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type MemberInfo = class&#xA;    interface ICustomAttributeProvider" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="C#" Value="public abstract class MemberInfo : System.Reflection.ICustomAttributeProvider, System.Runtime.InteropServices._MemberInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit MemberInfo extends System.Object implements class System.Reflection.ICustomAttributeProvider, class System.Runtime.InteropServices._MemberInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MemberInfo&#xA;Implements _MemberInfo, ICustomAttributeProvider" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class MemberInfo abstract : System::Reflection::ICustomAttributeProvider, System::Runtime::InteropServices::_MemberInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type MemberInfo = class&#xA;    interface _MemberInfo&#xA;    interface ICustomAttributeProvider" FrameworkAlternate="netframework-1.1" />
  <TypeSignature Language="F#" Value="type MemberInfo = class&#xA;    interface ICustomAttributeProvider&#xA;    interface _MemberInfo" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Reflection" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="System.Reflection" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Reflection.ICustomAttributeProvider</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._MemberInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._MemberInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="2fd48-101">Ruft Informationen zu den Attributen eines Members ab und erm√∂glicht den Zugriff auf die Metadaten des Members.</span><span class="sxs-lookup"><span data-stu-id="2fd48-101">Obtains information about the attributes of a member and provides access to member metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-102">Die <xref:System.Reflection.MemberInfo>-Klasse ist die abstrakte Basisklasse f√ºr Klassen, die zum Abrufen von Informationen zu allen Membern einer Klasse (Konstruktoren, Ereignisse, Felder, Methoden und Eigenschaften) verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-102">The <xref:System.Reflection.MemberInfo> class is the abstract base class for classes used to obtain information about all members of a class (constructors, events, fields, methods, and properties).</span></span>  
  
 <span data-ttu-id="2fd48-103">Mit dieser Klasse werden die grundlegenden Funktionen eingef√ºhrt, die alle Elemente bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-103">This class introduces the basic functionality that all members provide.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-104">In diesem Beispiel wird gezeigt, wie verschiedene Reflektionsklassen verwendet werden, um die in einer Assembly enthaltenen Metadaten zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="2fd48-104">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="2fd48-105">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="2fd48-105">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="2fd48-106">Wenn Sie von <see cref="T:System.Reflection.MemberInfo" /> erben, m√ºssen Sie die folgenden Member √ºberschreiben: <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> und <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-106">When you inherit from <see cref="T:System.Reflection.MemberInfo" /> you must override the following members: <see cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" /> and <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MemberInfo ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MemberInfo();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2fd48-107">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Reflection.MemberInfo" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-107">Initializes a new instance of the <see cref="T:System.Reflection.MemberInfo" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-108">Diese `MemberInfo` Klasse kann nur von einer abgeleiteten Klasse erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-108">Only a derived class can create this `MemberInfo` class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomAttributes">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt; CustomAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.CustomAttributeData&gt; CustomAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.CustomAttributes" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CustomAttributes As IEnumerable(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ CustomAttributes { System::Collections::Generic::IEnumerable&lt;System::Reflection::CustomAttributeData ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomAttributes : seq&lt;System.Reflection.CustomAttributeData&gt;" Usage="System.Reflection.MemberInfo.CustomAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-109">Ruft eine Sammlung ab, die die benutzerdefinierten Attribute dieses Members enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-109">Gets a collection that contains this member's custom attributes.</span></span></summary>
        <value><span data-ttu-id="2fd48-110">Eine Sammlung, die die benutzerdefinierten Attribute dieses Members enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-110">A collection that contains this member's custom attributes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public abstract Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Reflection.MemberInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._MemberInfo.DeclaringType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-111">Ruft die Klasse ab, die diesen Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-111">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="2fd48-112">Das <see langword="Type" />-Objekt f√ºr die Klasse, in der dieser Member deklariert ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-112">The <see langword="Type" /> object for the class that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-113">Die <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft ruft einen Verweis auf das <xref:System.Type>-Objekt f√ºr den Typ ab, der diesen Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-113">The <xref:System.Reflection.MemberInfo.DeclaringType%2A> property retrieves a reference to the <xref:System.Type> object for the type that declares this member.</span></span> <span data-ttu-id="2fd48-114">Ein Member eines Typs wird entweder vom Typ deklariert oder von einem Basistyp geerbt, sodass das `Type` Objekt, das von der <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft zur√ºckgegeben wird, m√∂glicherweise nicht mit dem `Type` Objekt √ºbereinstimmt, das zum Abrufen des aktuellen <xref:System.Reflection.MemberInfo> Objekts verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-114">A member of a type is either declared by the type or inherited from a base type, so the `Type` object returned by the <xref:System.Reflection.MemberInfo.DeclaringType%2A> property might not be the same as the `Type` object used to obtain the current <xref:System.Reflection.MemberInfo> object.</span></span>  
  
-   <span data-ttu-id="2fd48-115">Wenn das `Type` Objekt, aus dem dieses `MemberInfo` Objekt abgerufen wurde, diesen Member nicht deklariert hat, stellt die <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft einen ihrer Basis Typen dar.</span><span class="sxs-lookup"><span data-stu-id="2fd48-115">If the `Type` object from which this `MemberInfo` object was obtained did not declare this member, the <xref:System.Reflection.MemberInfo.DeclaringType%2A> property will represent one of its base types.</span></span>  
  
-   <span data-ttu-id="2fd48-116">Wenn das `MemberInfo` Objekt ein globaler Member ist (d. h., wenn es von der <xref:System.Reflection.Module.GetMethods%2A?displayProperty=nameWithType>-Methode abgerufen wurde, die globale Methoden f√ºr ein Modul zur√ºckgibt), wird der zur√ºckgegebene <xref:System.Reflection.MemberInfo.DeclaringType%2A> `null`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-116">If the `MemberInfo` object is a global member (that is, if it was obtained from the <xref:System.Reflection.Module.GetMethods%2A?displayProperty=nameWithType> method, which returns global methods on a module), the returned <xref:System.Reflection.MemberInfo.DeclaringType%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-117">Im folgenden Beispiel wird eine Schnittstelle definiert, `IValue`mit einem einzelnen Element `GetValue`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-117">The following example defines an interface, `IValue`, with a single member, `GetValue`.</span></span> <span data-ttu-id="2fd48-118">Au√üerdem werden vier Klassen definiert: `A`, eine Basisklasse, die die `IValue`-Schnittstelle implementiert. `B`, das von `A` erbt und seine Implementierung von `GetValue` aus der Basisklassen Implementierung verbirgt. `C`, der einfach von `A`erbt; und `D`, die von `A` erbt und deren `GetValue`-Methode √ºberschreibt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-118">It also defines four classes: `A`, a base class that implements the `IValue` interface; `B`, which inherits from `A` and hides its implementation of `GetValue` from the base class implementation; `C`, which simply inherits from `A`; and `D`, which inherits from `A` and overrides its `GetValue` method.</span></span>  <span data-ttu-id="2fd48-119">Im Beispiel wird dann ein <xref:System.Reflection.MemberInfo>-Objekt f√ºr jeden Member des Typs (einschlie√ülich der von <xref:System.Object>geerbten Member) abgerufen und der Wert seiner <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-119">The example then retrieves a <xref:System.Reflection.MemberInfo> object for each member of the type (including members inherited from <xref:System.Object>) and displays the value of its <xref:System.Reflection.MemberInfo.DeclaringType%2A> property.</span></span>  
  
 [!code-csharp[Classic MemberInfo.DeclaringType Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.DeclaringType Example/CS/Example2.cs#2)]
 [!code-vb[Classic MemberInfo.DeclaringType Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.DeclaringType Example/VB/Example2.vb#2)]  
  
 <span data-ttu-id="2fd48-120">Beachten Sie, dass der deklarierende Typ von "`A.GetValue`" `A`ist, dass `B` zwei `GetValue` Methoden enth√§lt, eine von `A` deklariert und eine durch `B`, und dass der deklarierende Typ `D.GetValue` `D`ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-120">Note that the declaring type of `A.GetValue` is `A`, that `B` includes two `GetValue` methods, one declared by `A` and one by `B`, and that the declaring type of `D.GetValue` is `D`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd48-121">`DeclaringType` gibt nur die Elementnamen und die Namen der deklarierenden Typen zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="2fd48-121">`DeclaringType` returns only the member names and the names of their declaring types.</span></span> <span data-ttu-id="2fd48-122">Um die Elementnamen mit Ihren Prototypen zur√ºckzugeben, wenden Sie `MemberInfo.ToString`an.</span><span class="sxs-lookup"><span data-stu-id="2fd48-122">To return the member names with their prototypes, call `MemberInfo.ToString`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="memberInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="2fd48-123">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-123">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="2fd48-124">Gibt einen Wert zur√ºck, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-124">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="2fd48-125"><see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-125"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="2fd48-126">Gibt beim √úberschreiben in einer abgeleiteten Klasse f√ºr diesen Member angewendete benutzerdefinierte Attribute zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="2fd48-126">When overridden in a derived class, returns custom attributes applied to this member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public abstract object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : bool -&gt; obj[]" Usage="memberInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="2fd48-127"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-127"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2fd48-128">Dieser Parameter wird f√ºr Eigenschaften und Ereignisse ignoriert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-128">This parameter is ignored for properties and events.</span></span></param>
        <summary><span data-ttu-id="2fd48-129">Gibt beim √úberschreiben in einer abgeleiteten Klasse ein Array mit allen benutzerdefinierten Attributen zur√ºck, die auf diesen Member angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-129">When overridden in a derived class, returns an array of all custom attributes applied to this member.</span></span></summary>
        <returns><span data-ttu-id="2fd48-130">Ein Array, das alle auf diesen Member angewendeten benutzerdefinierten Attribute enth√§lt, oder ein Array mit null Elementen, wenn keine Attribute definiert sind.</span><span class="sxs-lookup"><span data-stu-id="2fd48-130">An array that contains all the custom attributes applied to this member, or an array with zero elements if no attributes are defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-131">Diese Methode ignoriert den `inherit`-Parameter f√ºr Eigenschaften und Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="2fd48-131">This method ignores the `inherit` parameter for properties and events.</span></span> <span data-ttu-id="2fd48-132">Um die Vererbungs Kette nach Attributen f√ºr Eigenschaften und Ereignisse zu durchsuchen, verwenden Sie die entsprechenden √ºber Ladungen der <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="2fd48-132">To search the inheritance chain for attributes on properties and events, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd48-133">In der .NET Framework Version 2,0 gibt diese Methode Sicherheits Attribute f√ºr Methoden, Konstruktoren und Typen zur√ºck, wenn Sie im neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-133">In the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if they are stored in the new metadata format.</span></span> <span data-ttu-id="2fd48-134">Mit Version 2,0 kompilierte Assemblys verwenden dieses Format.</span><span class="sxs-lookup"><span data-stu-id="2fd48-134">Assemblies compiled with version 2.0 use this format.</span></span> <span data-ttu-id="2fd48-135">Dynamische Assemblys und Assemblys, die mit fr√ºheren Versionen der .NET Framework kompiliert wurden, verwenden das alte XML-Format</span><span class="sxs-lookup"><span data-stu-id="2fd48-135">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2fd48-136">Siehe Ausgeben von [deklarativen Sicherheits Attributen](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2fd48-136">See [Emitting Declarative Security Attributes](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-137">Im folgenden Beispiel wird ein benutzerdefiniertes Attribut definiert und das-Attribut mit `MyClass.MyMethod`verkn√ºpft, das-Attribut zur Laufzeit abgerufen und das Ergebnis angezeigt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-137">The following example defines a custom attribute and associates the attribute with `MyClass.MyMethod`, retrieves the attribute at run time, and displays the result.</span></span>  
  
 [!code-cpp[MemberInfo_GetCustomAttributes1#1](~/samples/snippets/cpp/VS_Snippets_CLR/MemberInfo_GetCustomAttributes1/CPP/memberinfo_getcustomattributes1.cpp#1)]
 [!code-csharp[MemberInfo_GetCustomAttributes1#1](~/samples/snippets/csharp/VS_Snippets_CLR/MemberInfo_GetCustomAttributes1/CS/memberinfo_getcustomattributes1.cs#1)]
 [!code-vb[MemberInfo_GetCustomAttributes1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MemberInfo_GetCustomAttributes1/VB/memberinfo_getcustomattributes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2fd48-138">Dieser Member geh√∂rt zu einem Typ, der in den auf Reflexionen beschr√§nkten Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-138">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="2fd48-139">Weitere Informationen finden Sie unter [Gewusst wie: Laden von Assemblys in den reflexionsbezogenen Kontext](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="2fd48-139">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2fd48-140">Ein benutzerdefinierter Attributtyp konnte nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-140">A custom attribute type could not be loaded.</span></span></exception>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Reflection.Emit.CustomAttributeBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public abstract object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : Type * bool -&gt; obj[]" Usage="memberInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2fd48-141">Der Attributtyp, nach dem gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-141">The type of attribute to search for.</span></span> <span data-ttu-id="2fd48-142">Nur Attribute, die diesem Typ zugeordnet werden k√∂nnen, werden zur√ºckgegeben.</span><span class="sxs-lookup"><span data-stu-id="2fd48-142">Only attributes that are assignable to this type are returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="2fd48-143"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-143"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2fd48-144">Dieser Parameter wird f√ºr Eigenschaften und Ereignisse ignoriert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-144">This parameter is ignored for properties and events.</span></span></param>
        <summary><span data-ttu-id="2fd48-145">Gibt beim √úberschreiben in einer abgeleiteten Klasse ein Array aus benutzerdefinierten Attributen zur√ºck, die auf diesen Member angewendet und von <see cref="T:System.Type" /> identifiziert wurden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-145">When overridden in a derived class, returns an array of custom attributes applied to this member and identified by <see cref="T:System.Type" />.</span></span></summary>
        <returns><span data-ttu-id="2fd48-146">Ein Array aus benutzerdefinierten Attributen, die auf diesen Member angewendet wurden, oder ein Array mit 0 (null) Elementen, wenn keine Attribute angewendet wurden, die <paramref name="attributeType" /> zugewiesen werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-146">An array of custom attributes applied to this member, or an array with zero elements if no attributes assignable to <paramref name="attributeType" /> have been applied.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-147">Diese Methode ignoriert den `inherit`-Parameter f√ºr Eigenschaften und Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="2fd48-147">This method ignores the `inherit` parameter for properties and events.</span></span> <span data-ttu-id="2fd48-148">Um die Vererbungs Kette nach Attributen f√ºr Eigenschaften und Ereignisse zu durchsuchen, verwenden Sie die entsprechenden √ºber Ladungen der <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="2fd48-148">To search the inheritance chain for attributes on properties and events, use the appropriate overloads of the <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd48-149">In der .NET Framework Version 2,0 gibt diese Methode Sicherheits Attribute f√ºr Methoden, Konstruktoren und Typen zur√ºck, wenn die Attribute im neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-149">In the .NET Framework version 2.0, this method returns security attributes on methods, constructors, and types if the attributes are stored in the new metadata format.</span></span> <span data-ttu-id="2fd48-150">Mit Version 2,0 kompilierte Assemblys verwenden dieses Format.</span><span class="sxs-lookup"><span data-stu-id="2fd48-150">Assemblies compiled with version 2.0 use this format.</span></span> <span data-ttu-id="2fd48-151">Dynamische Assemblys und Assemblys, die mit fr√ºheren Versionen der .NET Framework kompiliert wurden, verwenden das alte XML-Format</span><span class="sxs-lookup"><span data-stu-id="2fd48-151">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2fd48-152">Siehe Ausgeben von [deklarativen Sicherheits Attributen](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2fd48-152">See [Emitting Declarative Security Attributes](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-153">Im folgenden Beispiel wird eine Klasse mit dem Namen `BaseClass` definiert, die zwei nicht geerbte Member hat: ein statisches Thread Feld mit dem Namen `total` und eine nicht CLS-kompatible Methode mit dem Namen `MethodA`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-153">The following example defines a class named `BaseClass` that has two non-inherited members: a thread static field named `total` and a non-CLS-compliant method named `MethodA`.</span></span>  <span data-ttu-id="2fd48-154">Eine Klasse mit dem Namen `DerivedClass` erbt von `BaseClass` und √ºberschreibt deren `MethodA`-Methode.</span><span class="sxs-lookup"><span data-stu-id="2fd48-154">A class named `DerivedClass` inherits from `BaseClass` and overrides its `MethodA` method.</span></span> <span data-ttu-id="2fd48-155">Beachten Sie, dass auf die Member von `DerivedClass`keine Attribute angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-155">Note that no attributes are applied to the members of `DerivedClass`.</span></span> <span data-ttu-id="2fd48-156">Im Beispiel werden die Member von `DerivedClass` durchlaufen, um zu bestimmen, ob die <xref:System.CLSCompliantAttribute> oder <xref:System.ThreadStaticAttribute> Attribut auf Sie angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-156">The example iterates the members of `DerivedClass` to determine whether the <xref:System.CLSCompliantAttribute> or <xref:System.ThreadStaticAttribute> attribute as been applied to them.</span></span> <span data-ttu-id="2fd48-157">Da `inherit` `true`ist, durchsucht die-Methode die Vererbungs Hierarchie von `DerivedClass` nach dem angegebenen Attribut.</span><span class="sxs-lookup"><span data-stu-id="2fd48-157">Because `inherit` is `true`, the method searches the inheritance hierarchy of `DerivedClass` for the specified attribute.</span></span> <span data-ttu-id="2fd48-158">Wie die Ausgabe des Beispiels zeigt, wird das `total`-Feld mit dem <xref:System.ThreadStaticAttribute>-Attribut versehen, und die `MethodA`-Methode wird mit dem <xref:System.CLSCompliantAttribute>-Attribut erg√§nzt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-158">As the output from the example shows, the `total` field is decorated with the <xref:System.ThreadStaticAttribute> attribute, and the `MethodA` method is decorated with the <xref:System.CLSCompliantAttribute> attribute.</span></span>  
  
 [!code-csharp[System.Reflection.MemberInfo.GetCustomAttributes#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Reflection.MemberInfo.GetCustomAttributes/cs/GetCustomAttributes1.cs#1)]
 [!code-vb[System.Reflection.MemberInfo.GetCustomAttributes#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Reflection.MemberInfo.GetCustomAttributes/vb/GetCustomAttributes1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="2fd48-159">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-159">A custom attribute type cannot be loaded.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2fd48-160">Wenn <paramref name="attributeType" /> gleich <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-160">If <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2fd48-161">Dieser Member geh√∂rt zu einem Typ, der in den auf Reflexionen beschr√§nkten Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-161">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="2fd48-162">Weitere Informationen finden Sie unter [Gewusst wie: Laden von Assemblys in den reflexionsbezogenen Kontext](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="2fd48-162">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;&#xA;override this.GetCustomAttributesData : unit -&gt; System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;" Usage="memberInfo.GetCustomAttributesData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2fd48-163">Gibt eine Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Objekten zur√ºck, die Daten zu den Attributen darstellen, die auf den Zielmember angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-163">Returns a list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></summary>
        <returns><span data-ttu-id="2fd48-164">Eine generische Liste von <see cref="T:System.Reflection.CustomAttributeData" />-Objekten, die Daten √ºber die f√ºr das Ziel √ºbernommenen Attribute darstellen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-164">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the target member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-165">Verwenden Sie diese Methode, um die benutzerdefinierten Attribute von Code im Reflektionskontext zu √ºberpr√ºfen, in F√§llen, in denen die benutzerdefinierten Attribute selbst im Code definiert sind, der in den reflektionsbasierten Kontext geladen wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-165">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="2fd48-166">Methoden wie <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> und <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> k√∂nnen in solchen F√§llen nicht verwendet werden, da Sie Instanzen der Attribute erstellen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-166">Methods like <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="2fd48-167">Code im reflektionsbasierten Kontext kann nicht ausgef√ºhrt werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-167">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="2fd48-168">Weitere Informationen und Beispielcode finden Sie in der <xref:System.Reflection.CustomAttributeData>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="2fd48-168">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 <span data-ttu-id="2fd48-169">Diese Methode ruft benutzerdefinierte Attributdaten f√ºr Typen, schsted Typen und Typmember ab, da die <xref:System.Type> Klasse und die Klassen im <xref:System.Reflection>-Namespace, die Typmember darstellen, von <xref:System.Reflection.MemberInfo>abgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-169">This method gets custom attribute data for types, nested types, and type members, because the <xref:System.Type> class and the classes in the <xref:System.Reflection> namespace that represent type members all derive from <xref:System.Reflection.MemberInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="memberInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2fd48-170">Gibt den Hashcode f√ºr diese Instanz zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="2fd48-170">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="2fd48-171">Ein Hashcode in Form einer 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-171">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="memberInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSameMetadataDefinitionAs">
      <MemberSignature Language="C#" Value="public virtual bool HasSameMetadataDefinitionAs (System.Reflection.MemberInfo other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasSameMetadataDefinitionAs(class System.Reflection.MemberInfo other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.HasSameMetadataDefinitionAs(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasSameMetadataDefinitionAs (other As MemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasSameMetadataDefinitionAs(System::Reflection::MemberInfo ^ other);" />
      <MemberSignature Language="F#" Value="abstract member HasSameMetadataDefinitionAs : System.Reflection.MemberInfo -&gt; bool&#xA;override this.HasSameMetadataDefinitionAs : System.Reflection.MemberInfo -&gt; bool" Usage="memberInfo.HasSameMetadataDefinitionAs other" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="other">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollectible">
      <MemberSignature Language="C#" Value="public virtual bool IsCollectible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollectible" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.IsCollectible" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCollectible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCollectible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollectible : bool" Usage="System.Reflection.MemberInfo.IsCollectible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-172">Ruft einen Wert ab, der angibt, ob dieses <see cref="T:System.Reflection.MemberInfo" />-Objekt Teil einer Assembly ist, die sich in einem entladbaren <see cref="T:System.Runtime.Loader.AssemblyLoadContext" /> befindet.</span><span class="sxs-lookup"><span data-stu-id="2fd48-172">Gets a value that indicates whether this <see cref="T:System.Reflection.MemberInfo" /> object is part of an assembly held in a collectible <see cref="T:System.Runtime.Loader.AssemblyLoadContext" />.</span></span></summary>
        <value><span data-ttu-id="2fd48-173"><see langword="true" />, wenn die <see cref="T:System.Reflection.MemberInfo" /> Teil einer Assembly ist, die in einem entladbaren Assembly-Lade Kontext gespeichert ist. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-173"><see langword="true" /> if the <see cref="T:System.Reflection.MemberInfo" /> is part of an assembly held in a collectible assembly load context; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="2fd48-174">Weitere Informationen finden Sie unter [Verwenden und Debuggen der Entladbarkeit von Assemblys in .NET Core](~/docs/standard/assembly/unloadability.md).</span><span class="sxs-lookup"><span data-stu-id="2fd48-174">For more information, see [How to use and debug assembly unloadability in .NET Core](~/docs/standard/assembly/unloadability.md).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public abstract bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="abstract member IsDefined : Type * bool -&gt; bool" Usage="memberInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2fd48-175">Der Typ des zu suchenden benutzerdefinierten Attributs.</span><span class="sxs-lookup"><span data-stu-id="2fd48-175">The type of custom attribute to search for.</span></span> <span data-ttu-id="2fd48-176">Bei der Suche werden auch abgeleitete Typen ber√ºcksichtigt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-176">The search includes derived types.</span></span></param>
        <param name="inherit"><span data-ttu-id="2fd48-177"><see langword="true" />, um die Vererbungskette dieses Members nach den Attributen zu durchsuchen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-177"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2fd48-178">Dieser Parameter wird f√ºr Eigenschaften und Ereignisse ignoriert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-178">This parameter is ignored for properties and events.</span></span></param>
        <summary><span data-ttu-id="2fd48-179">Gibt beim √úberschreiben in einer abgeleiteten Klasse an, ob ein oder mehrere Attribute des angegebenen Typs oder seiner abgeleiteten Typen auf diesen Member angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-179">When overridden in a derived class, indicates whether one or more attributes of the specified type or of its derived types is applied to this member.</span></span></summary>
        <returns><span data-ttu-id="2fd48-180"><see langword="true" />, wenn eine oder mehrere Instanzen von <paramref name="attributeType" /> oder einer seiner abgeleiteten Typen auf diesen Member angewendet wurden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-180"><see langword="true" /> if one or more instances of <paramref name="attributeType" /> or any of its derived types is applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-181">Diese Methode ignoriert den `inherit`-Parameter f√ºr Eigenschaften und Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="2fd48-181">This method ignores the `inherit` parameter for properties and events.</span></span> <span data-ttu-id="2fd48-182">Um die Vererbungs Kette nach Attributen f√ºr Eigenschaften und Ereignisse zu durchsuchen, verwenden Sie die entsprechenden √ºber Ladungen der <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType>-Methode.</span><span class="sxs-lookup"><span data-stu-id="2fd48-182">To search the inheritance chain for attributes on properties and events, use the appropriate overloads of the <xref:System.Attribute.IsDefined%2A?displayProperty=nameWithType> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd48-183">In der .NET Framework Version 2,0 gibt diese Methode `true` zur√ºck, wenn ein Typ, eine Methode oder ein Konstruktor Sicherheits Attribute aufweist, die im neuen Metadatenformat gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-183">In the .NET Framework version 2.0, this method returns `true` if a type, method, or constructor has security attributes stored in the new metadata format.</span></span> <span data-ttu-id="2fd48-184">Mit Version 2,0 kompilierte Assemblys verwenden dieses Format.</span><span class="sxs-lookup"><span data-stu-id="2fd48-184">Assemblies compiled with version 2.0 use this format.</span></span> <span data-ttu-id="2fd48-185">Dynamische Assemblys und Assemblys, die mit fr√ºheren Versionen der .NET Framework kompiliert wurden, verwenden das alte XML-Format</span><span class="sxs-lookup"><span data-stu-id="2fd48-185">Dynamic assemblies and assemblies compiled with earlier versions of the .NET Framework use the old XML format.</span></span> <span data-ttu-id="2fd48-186">Siehe Ausgeben von [deklarativen Sicherheits Attributen](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span><span class="sxs-lookup"><span data-stu-id="2fd48-186">See [Emitting Declarative Security Attributes](https://msdn.microsoft.com/library/9eeddee8-ca89-4440-b84b-fd613f590cd5).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-187">Im folgenden Beispiel wird bestimmt, ob das angegebene Attribut auf den angegebenen Member angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-187">The following example determines whether the specified attribute is applied to the specified member.</span></span>  
  
 [!code-cpp[MemberInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/cpp/VS_Snippets_CLR/MemberInfo_GetCustomAttribute_IsDefined/CPP/memberinfo_getcustomattribute_isdefined.cpp#1)]
 [!code-csharp[MemberInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR/MemberInfo_GetCustomAttribute_IsDefined/CS/memberinfo_getcustomattribute_isdefined.cs#1)]
 [!code-vb[MemberInfo_GetCustomAttribute_IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/MemberInfo_GetCustomAttribute_IsDefined/VB/memberinfo_getcustomattribute_isdefined.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.MemberInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._MemberInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-188">Ruft beim √úberschreiben in einer abgeleiteten Klasse einen <see cref="T:System.Reflection.MemberTypes" />-Wert ab, der den Typ des Members angibt: Methode, Konstruktor, Ereignis usw.</span><span class="sxs-lookup"><span data-stu-id="2fd48-188">When overridden in a derived class, gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating the type of the member - method, constructor, event, and so on.</span></span></summary>
        <value><span data-ttu-id="2fd48-189">Ein <see cref="T:System.Reflection.MemberTypes" />-Wert, der den Typ des Members angibt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-189">A <see cref="T:System.Reflection.MemberTypes" /> value indicating the type of member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-190">Diese Eigenschaft wird in abgeleiteten Klassen √ºberschrieben, und die √úberschreibung gibt den entsprechenden Elementtyp zur√ºck.</span><span class="sxs-lookup"><span data-stu-id="2fd48-190">This property is overridden in derived classes, and the override returns the appropriate member type.</span></span> <span data-ttu-id="2fd48-191">Wenn Sie z. b. eine Gruppe von <xref:System.Reflection.MemberInfo> Objekten untersuchen, kann das von <xref:System.Type.GetMembers%2A>-der <xref:System.Reflection.MemberInfo.MemberType%2A>-Eigenschaft zur√ºckgegebene Array verwendet werden, um den Elementtyp eines beliebigen Elements zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-191">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property can be used to determine the member type of any given member.</span></span>  
  
 <span data-ttu-id="2fd48-192">Um die `MemberType`-Eigenschaft zu erhalten, erhalten Sie die-Klasse <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="2fd48-192">To get the `MemberType` property, get the class <xref:System.Type>.</span></span> <span data-ttu-id="2fd48-193">Holen Sie das <xref:System.Reflection.MethodInfo> Array aus dem `Type`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-193">From the `Type`, get the <xref:System.Reflection.MethodInfo> array.</span></span> <span data-ttu-id="2fd48-194">Holen Sie den `MemberTypes`aus dem `MethodInfo`-Array ab.</span><span class="sxs-lookup"><span data-stu-id="2fd48-194">From the `MethodInfo` array, get the `MemberTypes`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-195">Das folgende Beispiel zeigt den Elementnamen und den Typ einer angegebenen Klasse.</span><span class="sxs-lookup"><span data-stu-id="2fd48-195">The following example displays the member name and type of a specified class.</span></span>  
  
 [!code-cpp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.MemberTypes" />
      </Docs>
    </Member>
    <Member MemberName="MetadataToken">
      <MemberSignature Language="C#" Value="public virtual int MetadataToken { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataToken" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.MetadataToken" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property MetadataToken As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MetadataToken { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataToken : int" Usage="System.Reflection.MemberInfo.MetadataToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-196">Ruft einen Wert ab, der ein Metadatenelement identifiziert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-196">Gets a value that identifies a metadata element.</span></span></summary>
        <value><span data-ttu-id="2fd48-197">Ein Wert, der in Kombination mit <see cref="P:System.Reflection.MemberInfo.Module" /> ein Metadatenelement eindeutig identifiziert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-197">A value which, in combination with <see cref="P:System.Reflection.MemberInfo.Module" />, uniquely identifies a metadata element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-198">Die mithilfe dieser Eigenschaft abzurufenden Token k√∂nnen an die nicht verwaltete reflektionsinoken √ºbermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-198">The tokens obtained using this property can be passed to the unmanaged reflection API.</span></span> <span data-ttu-id="2fd48-199">Weitere Informationen finden Sie unter [nicht verwaltete Reflektionsinformationen](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span><span class="sxs-lookup"><span data-stu-id="2fd48-199">For more information, please see [Unmanaged Reflection API](https://msdn.microsoft.com/library/0c5bb9de-0cf6-438d-ba47-134e6c775fb8).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2fd48-200">Die Verwendung der nicht verwalteten reflektionsapi erfordert Vertrautheit mit der Common Language Infrastructure (CLI)-Dokumentation, insbesondere "Partition II: Metadatendefinition und-Semantik" und "Partition III: CIL Instruction Set".</span><span class="sxs-lookup"><span data-stu-id="2fd48-200">Using the unmanaged reflection API requires familiarity with the Common Language Infrastructure (CLI) documentation, especially "Partition II: Metadata Definition and Semantics" and "Partition III: CIL Instruction Set".</span></span> <span data-ttu-id="2fd48-201">Die Dokumentation ist online verf√ºgbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 ‚Äì Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="2fd48-201">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2fd48-202">Die aktuelle <see cref="T:System.Reflection.MemberInfo" /> stellt eine Arraymethode dar, wie z.B. <see langword="Address" />, f√ºr einen Arraytyp, dessen Elementtyp ein nicht abgeschlossener dynamischer Typ ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-202">The current <see cref="T:System.Reflection.MemberInfo" /> represents an array method, such as <see langword="Address" />, on an array type whose element type is a dynamic type that has not been completed.</span></span> <span data-ttu-id="2fd48-203">Um in diesem Fall ein Metadatentoken abzurufen, √ºbergeben Sie das <see cref="T:System.Reflection.MemberInfo" />-Objekt an die <see cref="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" />-Methode. Alternativ dazu verwenden Sie die <see cref="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />-Methode, um das Token direkt abzurufen, anstatt die <see cref="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" />-Methode zu verwenden, um zuerst eine <see cref="T:System.Reflection.MethodInfo" /> abzurufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-203">To get a metadata token in this case, pass the <see cref="T:System.Reflection.MemberInfo" /> object to the <see cref="M:System.Reflection.Emit.ModuleBuilder.GetMethodToken(System.Reflection.MethodInfo)" /> method; or use the <see cref="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethodToken(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" /> method to get the token directly, instead of using the <see cref="M:System.Reflection.Emit.ModuleBuilder.GetArrayMethod(System.Type,System.String,System.Reflection.CallingConventions,System.Type,System.Type[])" /> method to get a <see cref="T:System.Reflection.MethodInfo" /> first.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Module : System.Reflection.Module" Usage="System.Reflection.MemberInfo.Module" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-204">Ruft das Modul ab, in dem der Typ definiert ist, der den von der aktuellen <see cref="T:System.Reflection.MemberInfo" />-Klasse dargestellten Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-204">Gets the module in which the type that declares the member represented by the current <see cref="T:System.Reflection.MemberInfo" /> is defined.</span></span></summary>
        <value><span data-ttu-id="2fd48-205">Die <see cref="T:System.Reflection.Module" />-Klasse, in der der Typ definiert ist, der den von der aktuellen <see cref="T:System.Reflection.MemberInfo" />-Klasse dargestellten Member deklariert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-205">The <see cref="T:System.Reflection.Module" /> in which the type that declares the member represented by the current <see cref="T:System.Reflection.MemberInfo" /> is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-206">Diese Eigenschaft wird als praktische Hilfe bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-206">This property is provided as a convenience.</span></span> <span data-ttu-id="2fd48-207">Dies entspricht der Verwendung der <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft zum Abrufen des Typs, in dem die Methode deklariert ist, und dem anschlie√üenden Aufrufen der <xref:System.Type.Module%2A>-Eigenschaft des resultierenden <xref:System.Type> Objekts.</span><span class="sxs-lookup"><span data-stu-id="2fd48-207">It is equivalent to using the <xref:System.Reflection.MemberInfo.DeclaringType%2A> property to get the type in which the method is declared, and then calling the <xref:System.Type.Module%2A> property of the resulting <xref:System.Type> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-208">Im folgenden Codebeispiel wird eine Klasse deklariert, die <xref:System.Object> erbt und <xref:System.Object.ToString%2A?displayProperty=nameWithType>√ºberschreibt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-208">The following code example declares a class that inherits <xref:System.Object> and overrides <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="2fd48-209">Im Beispiel werden <xref:System.Reflection.MethodInfo>-Objekte f√ºr die `ToString`-Methode der-Klasse und f√ºr die geerbte <xref:System.Object.GetHashCode%2A>-Methode abgerufen, und die Namen der Module, in denen die beiden Methoden deklariert werden, werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-209">The example obtains <xref:System.Reflection.MethodInfo> objects for the class's `ToString` method and for the inherited <xref:System.Object.GetHashCode%2A> method, and displays the names of the modules in which the two methods are declared.</span></span>  
  
 [!code-cpp[System.Reflection.MemberInfo.Module#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.MemberInfo.Module/cpp/source.cpp#1)]
 [!code-csharp[System.Reflection.MemberInfo.Module#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.MemberInfo.Module/CS/source.cs#1)]
 [!code-vb[System.Reflection.MemberInfo.Module#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.MemberInfo.Module/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2fd48-210">Diese Methode ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-210">This method is not implemented.</span></span></exception>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Reflection.MemberInfo.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._MemberInfo.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-211">Ruft den Namen des aktuellen Members ab.</span><span class="sxs-lookup"><span data-stu-id="2fd48-211">Gets the name of the current member.</span></span></summary>
        <value><span data-ttu-id="2fd48-212">Ein <see cref="T:System.String" /> mit dem Namen dieses Members.</span><span class="sxs-lookup"><span data-stu-id="2fd48-212">A <see cref="T:System.String" /> containing the name of this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-213">Nur der einfache Name des Members wird zur√ºckgegeben, nicht der voll qualifizierte Name.</span><span class="sxs-lookup"><span data-stu-id="2fd48-213">Only the simple name of the member is returned, not the fully qualified name.</span></span>  
  
 <span data-ttu-id="2fd48-214">Um die <xref:System.Reflection.MemberInfo.Name%2A>-Eigenschaft zu erhalten, erhalten Sie die-Klasse <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="2fd48-214">To get the <xref:System.Reflection.MemberInfo.Name%2A> property, get the class <xref:System.Type>.</span></span> <span data-ttu-id="2fd48-215">Holen Sie das <xref:System.Reflection.MemberInfo> Array aus dem `Type`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-215">From the `Type`, get the <xref:System.Reflection.MemberInfo> array.</span></span> <span data-ttu-id="2fd48-216">Rufen Sie die `Name`-Eigenschaft aus einem `MemberInfo`-Element des Arrays ab.</span><span class="sxs-lookup"><span data-stu-id="2fd48-216">From a `MemberInfo` element of the array, obtain the `Name` property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-217">In diesem Beispiel werden die `Name`-Eigenschaft und die `DeclaringType`-Eigenschaft der einzelnen Member der angegebenen Klasse aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="2fd48-217">This example lists the `Name` and `DeclaringType` property of each member of the specified class.</span></span>  
  
 [!code-cpp[Classic MemberInfo.Name Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.Name Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.Name Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.Name Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.Name Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.Name Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.MemberInfo left, System.Reflection.MemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.MemberInfo left, class System.Reflection.MemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.op_Equality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As MemberInfo, right As MemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::MemberInfo ^ left, System::Reflection::MemberInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="right" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2fd48-218">Das <see cref="T:System.Reflection.MemberInfo" />, das mit <paramref name="right" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-218">The <see cref="T:System.Reflection.MemberInfo" /> to compare to <paramref name="right" />.</span></span></param>
        <param name="right"><span data-ttu-id="2fd48-219">Das <see cref="T:System.Reflection.MemberInfo" />, das mit <paramref name="left" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-219">The <see cref="T:System.Reflection.MemberInfo" /> to compare to <paramref name="left" />.</span></span></param>
        <summary><span data-ttu-id="2fd48-220">Gibt an, ob zwei <see cref="T:System.Reflection.MemberInfo" />-Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="2fd48-220">Indicates whether two <see cref="T:System.Reflection.MemberInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="2fd48-221"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-221"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.MemberInfo left, System.Reflection.MemberInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.MemberInfo left, class System.Reflection.MemberInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.op_Inequality(System.Reflection.MemberInfo,System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As MemberInfo, right As MemberInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::MemberInfo ^ left, System::Reflection::MemberInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.MemberInfo * System.Reflection.MemberInfo -&gt; bool" Usage="System.Reflection.MemberInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.MemberInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="right" Type="System.Reflection.MemberInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="2fd48-222">Das <see cref="T:System.Reflection.MemberInfo" />, das mit <paramref name="right" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-222">The <see cref="T:System.Reflection.MemberInfo" /> to compare to <paramref name="right" />.</span></span></param>
        <param name="right"><span data-ttu-id="2fd48-223">Das <see cref="T:System.Reflection.MemberInfo" />, das mit <paramref name="left" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-223">The <see cref="T:System.Reflection.MemberInfo" /> to compare to <paramref name="left" />.</span></span></param>
        <summary><span data-ttu-id="2fd48-224">Gibt an, ob zwei <see cref="T:System.Reflection.MemberInfo" />-Objekte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="2fd48-224">Indicates whether two <see cref="T:System.Reflection.MemberInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="2fd48-225"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-225"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public abstract Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.MemberInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Reflection.MemberInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._MemberInfo.ReflectedType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2fd48-226">Ruft das Klassenobjekt ab, mit dem diese Instanz von <see langword="MemberInfo" /> abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="2fd48-226">Gets the class object that was used to obtain this instance of <see langword="MemberInfo" />.</span></span></summary>
        <value><span data-ttu-id="2fd48-227">Das <see langword="Type" />-Objekt, √ºber das dieses <see langword="MemberInfo" />-Objekt abgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="2fd48-227">The <see langword="Type" /> object through which this <see langword="MemberInfo" /> object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-228">Die `ReflectedType`-Eigenschaft ruft das <xref:System.Type> Objekt ab, das verwendet wurde, um diese Instanz von `MemberInfo`abzurufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-228">The `ReflectedType` property retrieves the <xref:System.Type> object that was used to obtain this instance of `MemberInfo`.</span></span> <span data-ttu-id="2fd48-229">Dies kann sich vom Wert der <xref:System.Reflection.MemberInfo.DeclaringType%2A>-Eigenschaft unterscheiden, wenn dieses <xref:System.Reflection.MemberInfo> Objekt einen Member darstellt, der von einer Basisklasse geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="2fd48-229">This may differ from the value of the <xref:System.Reflection.MemberInfo.DeclaringType%2A> property if this <xref:System.Reflection.MemberInfo> object represents a member that is inherited from a base class.</span></span>  
  
 <span data-ttu-id="2fd48-230">Wenn das `MemberInfo` Objekt ein globaler Member ist (d. h., wenn es von der <xref:System.Reflection.Module.GetMethods%2A?displayProperty=nameWithType>-Methode abgerufen wurde, die globale Methoden f√ºr ein Modul zur√ºckgibt), wird der zur√ºckgegebene <xref:System.Reflection.MemberInfo.DeclaringType%2A> `null`.</span><span class="sxs-lookup"><span data-stu-id="2fd48-230">If the `MemberInfo` object is a global member (that is, if it was obtained from the <xref:System.Reflection.Module.GetMethods%2A?displayProperty=nameWithType> method, which returns global methods on a module), the returned <xref:System.Reflection.MemberInfo.DeclaringType%2A> will be `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2fd48-231">Im folgenden Codebeispiel wird veranschaulicht, wie sich die <xref:System.Reflection.MemberInfo.ReflectedType%2A> √§ndert, wenn der Element <xref:System.Object.ToString%2A?displayProperty=nameWithType> von einem <xref:System.Reflection.MemberInfo>, das vom Typ <xref:System.Object> abgerufen wurde, und aus einer <xref:System.Reflection.MemberInfo>, die von der <xref:System.Reflection.MemberInfo>-Klasse abgerufen wurde, abgerufen wird, die <xref:System.Object> erbt, aber <xref:System.Object.ToString%2A?displayProperty=nameWithType>nicht √ºberschreibt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-231">The following code example shows how the <xref:System.Reflection.MemberInfo.ReflectedType%2A> changes when the member <xref:System.Object.ToString%2A?displayProperty=nameWithType> is viewed from a <xref:System.Reflection.MemberInfo> obtained from type <xref:System.Object> and from a <xref:System.Reflection.MemberInfo> obtained from the <xref:System.Reflection.MemberInfo> class itself, which inherits <xref:System.Object> but does not override <xref:System.Object.ToString%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-cpp[Classic MemberInfo.ReflectedType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic MemberInfo.ReflectedType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic MemberInfo.ReflectedType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic MemberInfo.ReflectedType Example/CS/source.cs#1)]
 [!code-vb[Classic MemberInfo.ReflectedType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic MemberInfo.ReflectedType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberSignature Language="F#" Value="abstract member System.Reflection.ICustomAttributeProvider.GetCustomAttributes : bool -&gt; obj[]&#xA;override this.System.Reflection.ICustomAttributeProvider.GetCustomAttributes : bool -&gt; obj[]" Usage="memberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="2fd48-232">Wenn <see langword="true" />, durchsuchen Sie die Hierarchiekette nach dem geerbten benutzerdefinierten Attribut.</span><span class="sxs-lookup"><span data-stu-id="2fd48-232">When <see langword="true" />, look up the hierarchy chain for the inherited custom attribute.</span></span></param>
        <summary><span data-ttu-id="2fd48-233">Gibt ‚Äì mit Ausnahme benannter Attribute ‚Äì ein Array mit allen f√ºr diesen Member definierten benutzerdefinierten Attributen zur√ºck ‚Äì oder ein leeres Array , wenn keine benutzerdefinierten Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="2fd48-233">Returns an array of all of the custom attributes defined on this member, excluding named attributes, or an empty array if there are no custom attributes.</span></span></summary>
        <returns><span data-ttu-id="2fd48-234">Ein Objektarray, das alle benutzerdefinierten Attribute darstellt, oder ein leeres Array .</span><span class="sxs-lookup"><span data-stu-id="2fd48-234">An array of Objects representing custom attributes, or an empty array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.GetCustomAttributes">
      <MemberSignature Language="C#" Value="object[] ICustomAttributeProvider.GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object[] System.Reflection.ICustomAttributeProvider.GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object() Implements ICustomAttributeProvider.GetCustomAttributes" />
      <MemberSignature Language="C++ CLI" Value=" virtual cli::array &lt;System::Object ^&gt; ^ System.Reflection.ICustomAttributeProvider.GetCustomAttributes(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::GetCustomAttributes;" />
      <MemberSignature Language="F#" Value="abstract member System.Reflection.ICustomAttributeProvider.GetCustomAttributes : Type * bool -&gt; obj[]&#xA;override this.System.Reflection.ICustomAttributeProvider.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="memberInfo.System.Reflection.ICustomAttributeProvider.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.GetCustomAttributes(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2fd48-235">Der Typ der benutzerdefinierten Attribute.</span><span class="sxs-lookup"><span data-stu-id="2fd48-235">The type of the custom attributes.</span></span></param>
        <param name="inherit"><span data-ttu-id="2fd48-236">Wenn <see langword="true" />, durchsuchen Sie die Hierarchiekette nach dem geerbten benutzerdefinierten Attribut.</span><span class="sxs-lookup"><span data-stu-id="2fd48-236">When <see langword="true" />, look up the hierarchy chain for the inherited custom attribute.</span></span></param>
        <summary><span data-ttu-id="2fd48-237">Gibt ein Array mit f√ºr diesen Member definierten benutzerdefinierten Attributen zur√ºck ‚Äì identifiziert nach Typ ‚Äì oder ein leeres Array , wenn keine benutzerdefinierten Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="2fd48-237">Returns an array of custom attributes defined on this member, identified by type, or an empty array if there are no custom attributes of that type.</span></span></summary>
        <returns><span data-ttu-id="2fd48-238">Ein Objektarray, das alle benutzerdefinierten Attribute darstellt, oder ein leeres Array .</span><span class="sxs-lookup"><span data-stu-id="2fd48-238">An array of Objects representing custom attributes, or an empty array.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Reflection.ICustomAttributeProvider.IsDefined">
      <MemberSignature Language="C#" Value="bool ICustomAttributeProvider.IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Reflection.ICustomAttributeProvider.IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Reflection#ICustomAttributeProvider#IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean Implements ICustomAttributeProvider.IsDefined" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Reflection.ICustomAttributeProvider.IsDefined(Type ^ attributeType, bool inherit) = System::Reflection::ICustomAttributeProvider::IsDefined;" />
      <MemberSignature Language="F#" Value="abstract member System.Reflection.ICustomAttributeProvider.IsDefined : Type * bool -&gt; bool&#xA;override this.System.Reflection.ICustomAttributeProvider.IsDefined : Type * bool -&gt; bool" Usage="memberInfo.System.Reflection.ICustomAttributeProvider.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Reflection.ICustomAttributeProvider.IsDefined(System.Type,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="inherit" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="2fd48-239">Der Typ der benutzerdefinierten Attribute.</span><span class="sxs-lookup"><span data-stu-id="2fd48-239">The type of the custom attributes.</span></span></param>
        <param name="inherit"><span data-ttu-id="2fd48-240">Wenn <see langword="true" />, durchsuchen Sie die Hierarchiekette nach dem geerbten benutzerdefinierten Attribut.</span><span class="sxs-lookup"><span data-stu-id="2fd48-240">When <see langword="true" />, look up the hierarchy chain for the inherited custom attribute.</span></span></param>
        <summary><span data-ttu-id="2fd48-241">Gibt an, ob mindestens eine Instanz von <paramref name="attributeType" /> f√ºr diesen Member definiert ist.</span><span class="sxs-lookup"><span data-stu-id="2fd48-241">Indicates whether one or more instance of <paramref name="attributeType" /> is defined on this member.</span></span></summary>
        <returns><span data-ttu-id="2fd48-242"><see langword="true" />, wenn der <paramref name="attributeType" /> f√ºr diesen Member definiert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2fd48-242"><see langword="true" /> if the <paramref name="attributeType" /> is defined on this member; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MemberInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _MemberInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MemberInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _MemberInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_MemberInfo::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MemberInfo.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="memberInfo.System.Runtime.InteropServices._MemberInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="2fd48-243">F√ºr die zuk√ºnftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-243">Reserved for future use.</span></span> <span data-ttu-id="2fd48-244">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="2fd48-244">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="2fd48-245">Das √ºbergebene Array von zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-245">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="2fd48-246">Die Anzahl der zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-246">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="2fd48-247">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-247">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="2fd48-248">Das vom Aufrufer zugewiesene Array, das die IDs entsprechend den Namen empf√§ngt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-248">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="2fd48-249">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span><span class="sxs-lookup"><span data-stu-id="2fd48-249">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-250">Diese Methode ist f√ºr den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-250">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2fd48-251">Weitere Informationen zu `IDispatch::GetIDsOfNames`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2fd48-251">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2fd48-252">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit sp√§t gebundenem Zugriff aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-252">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MemberInfo.GetType">
      <MemberSignature Language="C#" Value="Type _MemberInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._MemberInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _MemberInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._MemberInfo.GetType() = System::Runtime::InteropServices::_MemberInfo::GetType;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MemberInfo.GetType : unit -&gt; Type&#xA;override this.System.Runtime.InteropServices._MemberInfo.GetType : unit -&gt; Type" Usage="memberInfo.System.Runtime.InteropServices._MemberInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2fd48-253">Ruft ein <see cref="T:System.Type" />-Objekt ab, das die <see cref="T:System.Reflection.MemberInfo" />-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-253">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.MemberInfo" /> class.</span></span></summary>
        <returns><span data-ttu-id="2fd48-254">Ein <see cref="T:System.Type" />-Objekt, das die <see cref="T:System.Reflection.MemberInfo" />-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-254">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.MemberInfo" /> class.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MemberInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _MemberInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MemberInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _MemberInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_MemberInfo::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MemberInfo.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MemberInfo.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="memberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="2fd48-255">Die zur√ºckzugebenden Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-255">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="2fd48-256">Der Gebietsschemabezeichner f√ºr die Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-256">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="2fd48-257">Empf√§ngt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-257">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="2fd48-258">Ruft die Typinformationen f√ºr ein Objekt ab, die dann zum Abrufen der Typinformationen f√ºr eine Schnittstelle verwendet werden k√∂nnen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-258">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-259">Diese Methode ist f√ºr den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-259">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2fd48-260">Weitere Informationen zu `IDispatch::GetTypeInfo`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2fd48-260">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2fd48-261">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit sp√§t gebundenem Zugriff aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-261">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _MemberInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _MemberInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_MemberInfo::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount : uint32 -&gt; unit" Usage="memberInfo.System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="2fd48-262">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empf√§ngt, die vom Objekt bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-262">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="2fd48-263">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span><span class="sxs-lookup"><span data-stu-id="2fd48-263">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-264">Diese Methode ist f√ºr den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-264">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2fd48-265">Weitere Informationen zu `IDispatch::GetTypeInfoCount`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2fd48-265">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2fd48-266">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit sp√§t gebundenem Zugriff aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-266">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._MemberInfo.Invoke">
      <MemberSignature Language="C#" Value="void _MemberInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._MemberInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MemberInfo.System#Runtime#InteropServices#_MemberInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _MemberInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._MemberInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_MemberInfo::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._MemberInfo.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._MemberInfo.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="memberInfo.System.Runtime.InteropServices._MemberInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._MemberInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="2fd48-267">Bezeichnet den Member.</span><span class="sxs-lookup"><span data-stu-id="2fd48-267">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="2fd48-268">F√ºr die zuk√ºnftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="2fd48-268">Reserved for future use.</span></span> <span data-ttu-id="2fd48-269">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="2fd48-269">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="2fd48-270">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-270">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="2fd48-271">Flags, die den Kontext des Aufrufs beschreiben.</span><span class="sxs-lookup"><span data-stu-id="2fd48-271">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="2fd48-272">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs f√ºr benannte Argumente sowie Z√§hler f√ºr die Anzahl der Elemente in jedem Array enth√§lt.</span><span class="sxs-lookup"><span data-stu-id="2fd48-272">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="2fd48-273">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="2fd48-273">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="2fd48-274">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-274">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="2fd48-275">Der Index des ersten Arguments mit einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="2fd48-275">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="2fd48-276">Stellt den Zugriff auf von einem Objekt verf√ºgbar gemachte Eigenschaften und Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="2fd48-276">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2fd48-277">Diese Methode ist f√ºr den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="2fd48-277">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="2fd48-278">Weitere Informationen zu `IDispatch::Invoke`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="2fd48-278">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="2fd48-279">Die Methode wird unter Verwendung der <c>IDispatch</c>-Schnittstelle in COM mit sp√§t gebundenem Zugriff aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="2fd48-279">The method is called late-bound using the COM <c>IDispatch</c> interface.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
