<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AmbiguousMatchException.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5911cf30906a42c5385f0853056fca9293ff264b8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">911cf30906a42c5385f0853056fca9293ff264b8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>The exception that is thrown when binding to a member results in more than one member matching the binding criteria.</source>
          <target state="translated">Diese Ausnahme wird ausgelöst, wenn bei der Bindung an einen Member mehr als ein Member den Bindungskriterien entspricht.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> uses the HRESULT COR_E_AMBIGUOUSMATCH which has the value 0x8000211D.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> verwendet HRESULT COR_E_AMBIGUOUSMATCH mit den Wert 0x8000211D.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.AmbiguousMatchException">
          <source>An <ph id="ph1">`AmbiguousMatchException`</ph> is thrown when a member is invoked late-bound and multiple overloads satisfy the binding criteria, or when more than one member matches the binding criteria passed to a reflection method that can return only a single result (for example, <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Ein <ph id="ph1">`AmbiguousMatchException`</ph> wird ausgelöst, wenn ein Element wird spät gebunden aufgerufen und mehrere Überladungen entsprechen den Bindungskriterien entspricht, oder mehrere Elemente entsprechen den Bindungskriterien, die an eine Reflektion-Methode, die nur ein einzelnes Ergebnis zurückgeben kann übergeben (z. B. <ph id="ph2">&lt;xref:System.Type.GetMethod%2A?displayProperty=nameWithType&gt;</ph>oder <ph id="ph3">&lt;xref:System.Type.GetProperty%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.Reflection.AmbiguousMatchException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with an empty message string and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph>-Klasse mit einer leeren Meldungszeichenfolge und einer auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegten ursächlichen Ausnahme.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> erbt von <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">Dieser Konstruktor legt die Eigenschaften der <ph id="ph1">`Exception`</ph> Objekts wie in der folgenden Tabelle gezeigt.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor">
          <source>The empty string ("").</source>
          <target state="translated">Die leere Zeichenfolge ("").</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>A string indicating the reason this exception was thrown.</source>
          <target state="translated">Eine Zeichenfolge, die die Ursache für das Auslösen dieser Ausnahme angibt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with its message string set to the given message and the root cause exception set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph>-Klasse mit einer auf die angegebene Meldung festgelegten Meldungszeichenfolge und einer auf <ph id="ph2">&lt;see langword="null" /&gt;</ph> festgelegten ursächlichen Ausnahme.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source><ph id="ph1">`AmbiguousMatchException`</ph> inherits from <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`AmbiguousMatchException`</ph> erbt von <ph id="ph2">&lt;xref:System.Exception&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>This constructor sets the properties of the <ph id="ph1">`Exception`</ph> object as shown in the following table.</source>
          <target state="translated">Dieser Konstruktor legt die Eigenschaften der <ph id="ph1">`Exception`</ph> Objekts wie in der folgenden Tabelle gezeigt.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String)">
          <source>The <ph id="ph1">`message`</ph> string.</source>
          <target state="translated">Die <ph id="ph1">`message`</ph> Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated">Wenn der <bpt id="p1">&lt;c&gt;</bpt>inner<ept id="p1">&lt;/c&gt;</ept>-Parameter nicht <ph id="ph1">&lt;see langword="null" /&gt;</ph> ist, wird die aktuelle Ausnahme in einem <ph id="ph2">&lt;see langword="catch" /&gt;</ph>-Block ausgelöst, der die innere Ausnahme behandelt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.AmbiguousMatchException" /&gt;</ph>-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft gibt den gleichen Wert zurück, der an den Konstruktor übergeben wird, oder <ph id="ph2">`null`</ph>, wenn die <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>-Eigenschaft den Wert der inneren Ausnahme nicht an den Konstruktor übergibt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph>.</source>
          <target state="translated">In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <ph id="ph1">&lt;xref:System.Reflection.AmbiguousMatchException&gt;</ph>-Instanz aufgeführt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">Eigenschaft</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">Der Verweis auf die interne Ausnahme.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">Die Zeichenfolge der Fehlermeldung.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>The following example shows two classes, each named <ph id="ph1">`Mymethod`</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt zwei Klassen, die jeweils den Namen <ph id="ph1">`Mymethod`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>One class takes an integer and the other takes a string.</source>
          <target state="translated">Eine Klasse akzeptiert eine ganze Zahl, und die andere akzeptiert eine Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If an integer is passed to <ph id="ph1">`Mymethod`</ph>, the first class is used.</source>
          <target state="translated">Wenn eine ganze Zahl, um übergeben wird <ph id="ph1">`Mymethod`</ph>, wird die erste Klasse verwendet.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If a string is passed, the second class is used.</source>
          <target state="translated">Wenn eine Zeichenfolge übergeben wird, wird die zweite Klasse verwendet.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AmbiguousMatchException.#ctor(System.String,System.Exception)">
          <source>If it cannot be determined which <ph id="ph1">`Mymethod`</ph> to use, <ph id="ph2">`AmbiguousMatchException`</ph> is thrown.</source>
          <target state="translated">Wenn es nicht möglich bestimmt, die <ph id="ph1">`Mymethod`</ph> zu verwendenden <ph id="ph2">`AmbiguousMatchException`</ph> ausgelöst wird.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>