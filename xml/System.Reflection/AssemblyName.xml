<Type Name="AssemblyName" FullName="System.Reflection.AssemblyName">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e878858094f704c7b0ba7144c79f38d5ed65d5b3" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48746608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyName : ICloneable, System.Runtime.InteropServices._AssemblyName, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit AssemblyName extends System.Object implements class System.ICloneable, class System.Runtime.InteropServices._AssemblyName, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyName" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyName&#xA;Implements _AssemblyName, ICloneable, IDeserializationCallback, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyName sealed : ICloneable, System::Runtime::InteropServices::_AssemblyName, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type AssemblyName = class&#xA;    interface ICloneable&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback&#xA;    interface _AssemblyName" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyName</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyName))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="72cb3-101">Beschreibt die eindeutige Identität einer Assembly vollständig.</span>
      <span class="sxs-lookup">
        <span data-stu-id="72cb3-101">Describes an assembly's unique identity in full.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-102">Die <xref:System.Reflection.AssemblyName> Objekt enthält Informationen zu einer Assembly, die Sie verwenden können, um auf die Assembly zu binden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-102">The <xref:System.Reflection.AssemblyName> object contains information about an assembly, which you can use to bind to that assembly.</span></span> <span data-ttu-id="72cb3-103">Die Identität einer Assembly besteht aus den folgenden:</span><span class="sxs-lookup"><span data-stu-id="72cb3-103">An assembly's identity consists of the following:</span></span>  
  
-   <span data-ttu-id="72cb3-104">Einfacher Name.</span><span class="sxs-lookup"><span data-stu-id="72cb3-104">Simple name.</span></span>  
  
-   <span data-ttu-id="72cb3-105">Die Versionsnummer.</span><span class="sxs-lookup"><span data-stu-id="72cb3-105">Version number.</span></span>  
  
-   <span data-ttu-id="72cb3-106">Kryptografisches Schlüsselpaar.</span><span class="sxs-lookup"><span data-stu-id="72cb3-106">Cryptographic key pair.</span></span>  
  
-   <span data-ttu-id="72cb3-107">Unterstützte Kultur.</span><span class="sxs-lookup"><span data-stu-id="72cb3-107">Supported culture.</span></span>  
  
 <span data-ttu-id="72cb3-108">Der einfache Name ist in der Regel den Dateinamen für die Manifestdatei ohne Erweiterung.</span><span class="sxs-lookup"><span data-stu-id="72cb3-108">The simple name is typically the file name for the manifest file without its extension.</span></span> <span data-ttu-id="72cb3-109">Das Schlüsselpaar enthält einen öffentlichen und privaten Schlüssel zum Erstellen von Signaturen mit starkem Namen für Assemblys verwendet.</span><span class="sxs-lookup"><span data-stu-id="72cb3-109">The key pair includes a public and private key, used to create strong-name signatures for assemblies.</span></span>  
  
 <span data-ttu-id="72cb3-110">Alle Compiler, die die common Language Runtime unterstützen, werden der einfache Name einer geschachtelten Klasse geben an, und Reflektion erstellt einen ergänzten Namen in Übereinstimmung mit den folgenden Konventionen abgefragt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-110">All compilers that support the common language runtime will emit the simple name of a nested class, and reflection constructs a mangled name when queried, in accordance with the following conventions.</span></span>  
  
|<span data-ttu-id="72cb3-111">Trennzeichen</span><span class="sxs-lookup"><span data-stu-id="72cb3-111">Delimiter</span></span>|<span data-ttu-id="72cb3-112">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="72cb3-112">Meaning</span></span>|  
|---------------|-------------|  
|<span data-ttu-id="72cb3-113">Umgekehrter Schrägstrich (\\)</span><span class="sxs-lookup"><span data-stu-id="72cb3-113">Backslash (\\)</span></span>|<span data-ttu-id="72cb3-114">Escape-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-114">Escape character.</span></span>|  
|<span data-ttu-id="72cb3-115">Komma (,)</span><span class="sxs-lookup"><span data-stu-id="72cb3-115">Comma (,)</span></span>|<span data-ttu-id="72cb3-116">Der Name der Assembly wird vorangestellt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-116">Precedes the assembly name.</span></span>|  
|<span data-ttu-id="72cb3-117">Pluszeichen (+)</span><span class="sxs-lookup"><span data-stu-id="72cb3-117">Plus sign (+)</span></span>|<span data-ttu-id="72cb3-118">Steht vor einer geschachtelten Klasse.</span><span class="sxs-lookup"><span data-stu-id="72cb3-118">Precedes a nested class.</span></span>|  
  
 <span data-ttu-id="72cb3-119">Der vollqualifizierte Name für eine Klasse kann beispielsweise wie folgt aussehen:</span><span class="sxs-lookup"><span data-stu-id="72cb3-119">For example, the fully qualified name for a class might look like this:</span></span>  
  
 <span data-ttu-id="72cb3-120">ContainingClass + NestedClass, MyAssembly</span><span class="sxs-lookup"><span data-stu-id="72cb3-120">ContainingClass+NestedClass,MyAssembly</span></span>  
  
 <span data-ttu-id="72cb3-121">Ein "++" wird "\\+\\+", und ein "\\"wird"\\\\".</span><span class="sxs-lookup"><span data-stu-id="72cb3-121">A "++" becomes "\\+\\+", and a "\\" becomes "\\\\".</span></span>  
  
 <span data-ttu-id="72cb3-122">Dieser qualifizierte Name persistent gespeichert werden kann, und später verwendet, um das Laden der <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-122">This qualified name can be persisted and later used to load the <xref:System.Type>.</span></span> <span data-ttu-id="72cb3-123">Suchen und Laden eine <xref:System.Type>, verwenden Sie <xref:System.Type.GetType%2A> entweder mit dem Typ oder einen Namen geben nur mit dem Namen der Assembly qualifizierten Typ.</span><span class="sxs-lookup"><span data-stu-id="72cb3-123">To search for and load a <xref:System.Type>, use <xref:System.Type.GetType%2A> either with the type name only or with the assembly qualified type name.</span></span> <span data-ttu-id="72cb3-124"><xref:System.Type.GetType%2A> mit dem Namen nur sucht die <xref:System.Type> in der Assembly des Aufrufers, und klicken Sie dann in der System-Assembly.</span><span class="sxs-lookup"><span data-stu-id="72cb3-124"><xref:System.Type.GetType%2A> with the type name only will look for the <xref:System.Type> in the caller's assembly and then in the System assembly.</span></span> <span data-ttu-id="72cb3-125"><xref:System.Type.GetType%2A> mit der Assembly qualifizierten Typnamen sucht die <xref:System.Type> in jeder Assembly.</span><span class="sxs-lookup"><span data-stu-id="72cb3-125"><xref:System.Type.GetType%2A> with the assembly qualified type name will look for the <xref:System.Type> in any assembly.</span></span>  
  
 <span data-ttu-id="72cb3-126">Eine vollständig angegebene <xref:System.Reflection.AssemblyName> müssen Name, Kultur, öffentlicher Schlüssel oder Token des öffentlichen Schlüssels, größere Version, Nebenversion, Buildnummer und Revision Number-Parameter.</span><span class="sxs-lookup"><span data-stu-id="72cb3-126">A fully specified <xref:System.Reflection.AssemblyName> must have the name, culture, public key or public key token, major version, minor version, build number, and revision number parameters.</span></span> <span data-ttu-id="72cb3-127">Die letzten vier verpackt werden, in der <xref:System.Version> Typ.</span><span class="sxs-lookup"><span data-stu-id="72cb3-127">The last four are packaged in the <xref:System.Version> type.</span></span>  
  
 <span data-ttu-id="72cb3-128">Um einen einfachen Namen zu erstellen, erstellen eine <xref:System.Reflection.AssemblyName> Objekt mit dem Standardkonstruktor, und legen die <xref:System.Reflection.AssemblyName.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-128">To create a simple name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A>.</span></span> <span data-ttu-id="72cb3-129">Die anderen Eigenschaften sind optional.</span><span class="sxs-lookup"><span data-stu-id="72cb3-129">The other properties are optional.</span></span>  
  
 <span data-ttu-id="72cb3-130">Um einen vollständigen starken Namen zu erstellen, erstellen eine <xref:System.Reflection.AssemblyName> Objekt mit dem Standardkonstruktor, und legen die <xref:System.Reflection.AssemblyName.Name%2A> und <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-130">To create a full strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the <xref:System.Reflection.AssemblyName.Name%2A> and <xref:System.Reflection.AssemblyName.KeyPair%2A>.</span></span> <span data-ttu-id="72cb3-131">Die anderen Eigenschaften sind optional.</span><span class="sxs-lookup"><span data-stu-id="72cb3-131">The other properties are optional.</span></span> <span data-ttu-id="72cb3-132">Verwendung <xref:System.Reflection.AssemblyName.SetPublicKey%2A> und <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> Festlegen des öffentlichen Schlüssels und des starken Namens.</span><span class="sxs-lookup"><span data-stu-id="72cb3-132">Use <xref:System.Reflection.AssemblyName.SetPublicKey%2A> and <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> to set the public key and the strong name.</span></span> <span data-ttu-id="72cb3-133">Die starke Namensignatur immer verwendet die <xref:System.Security.Cryptography.SHA1> Hash-Algorithmus.</span><span class="sxs-lookup"><span data-stu-id="72cb3-133">The strong name signing always uses the <xref:System.Security.Cryptography.SHA1> hash algorithm.</span></span>  
  
 <span data-ttu-id="72cb3-134">Um sicherzustellen, dass die Namen korrekt erstellt werden, verwenden Sie die folgenden Eigenschaften:</span><span class="sxs-lookup"><span data-stu-id="72cb3-134">To ensure that the names are constructed correctly, use the following properties:</span></span>  
  
-   <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Reflection.AssemblyName.FullName%2A?displayProperty=nameWithType>  
  
-   <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=nameWithType>  
  
 <span data-ttu-id="72cb3-135">Sie können auch den Namen abrufen, mithilfe der `/l` -Option mit der [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span><span class="sxs-lookup"><span data-stu-id="72cb3-135">You can also get the name by using the `/l` option with the [Gacutil.exe (Global Assembly Cache Tool)](~/docs/framework/tools/gacutil-exe-gac-tool.md)</span></span>  
  
 <span data-ttu-id="72cb3-136">Erstellen Sie für ein teilweise angegebenen starken Namen einer <xref:System.Reflection.AssemblyName> Objekt, mit dem Standardkonstruktor, und legen Sie den Namen und den öffentlichen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="72cb3-136">For a partially specified strong name, create an <xref:System.Reflection.AssemblyName> object using the default constructor and set the name and public key.</span></span> <span data-ttu-id="72cb3-137">Eine Assembly erstellt wurde, verwenden z. B. eine <xref:System.Reflection.AssemblyName> kann später mit der Assembly Linker (Al.exe) signiert werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-137">An assembly created using such an <xref:System.Reflection.AssemblyName> can be signed later using the Assembly Linker (Al.exe).</span></span>  
  
 <span data-ttu-id="72cb3-138">Es ist möglich, einen öffentlichen Schlüssel angeben und ein <xref:System.Reflection.AssemblyName.KeyPair%2A> mit inkonsistente Werte.</span><span class="sxs-lookup"><span data-stu-id="72cb3-138">It is possible to specify a public key and a <xref:System.Reflection.AssemblyName.KeyPair%2A> with inconsistent values.</span></span> <span data-ttu-id="72cb3-139">Dies kann in entwicklerszenarien nützlich sein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-139">This can be useful in developer scenarios.</span></span> <span data-ttu-id="72cb3-140">In diesem Fall wird der öffentliche Schlüssel mit abgerufen <xref:System.Reflection.AssemblyName.GetPublicKey%2A> gibt an, den richtigen öffentlichen Schlüssel an, während die <xref:System.Reflection.AssemblyName.KeyPair%2A> gibt an, die öffentlichen und privaten Schlüssel, die während der Entwicklung verwendete.</span><span class="sxs-lookup"><span data-stu-id="72cb3-140">In this case, the public key retrieved with <xref:System.Reflection.AssemblyName.GetPublicKey%2A> specifies the correct public key, while the <xref:System.Reflection.AssemblyName.KeyPair%2A> specifies the public and private keys used during development.</span></span> <span data-ttu-id="72cb3-141">Wenn die Laufzeit erkennt eine fehlende Übereinstimmung zwischen der <xref:System.Reflection.AssemblyName.KeyPair%2A> und den öffentlichen Schlüssel, sieht sich in der Registrierung den richtigen Schlüssel, der den öffentlichen Schlüssel entspricht.</span><span class="sxs-lookup"><span data-stu-id="72cb3-141">When the runtime detects a mismatch between the <xref:System.Reflection.AssemblyName.KeyPair%2A> and the public key, it looks up in the registry the correct key that matches the public key.</span></span>  
  
 <span data-ttu-id="72cb3-142">Das Format des Anzeigenamens des ein <xref:System.Reflection.AssemblyName> ist eine durch Trennzeichen getrennte Unicode-Zeichenfolge, die mit dem Namen, wie folgt beginnt:</span><span class="sxs-lookup"><span data-stu-id="72cb3-142">The format of the display name of an <xref:System.Reflection.AssemblyName> is a comma-delimited Unicode string that begins with the name, as follows:</span></span>  
  
 `Name <,Culture = CultureInfo> <,Version = Major.Minor.Build.Revision> <, StrongName> <,PublicKeyToken> '\0'`  
  
 <span data-ttu-id="72cb3-143">`Name` ist der wörtliche Name der Assembly an.</span><span class="sxs-lookup"><span data-stu-id="72cb3-143">`Name` is the textual name of the assembly.</span></span> <span data-ttu-id="72cb3-144">`CultureInfo` ist die Kultur im Format RFC1766 definiert.</span><span class="sxs-lookup"><span data-stu-id="72cb3-144">`CultureInfo` is the RFC1766-format-defined culture.</span></span> <span data-ttu-id="72cb3-145">`Major`, `Minor`, `Build`, und `Revision` sind die Hauptversion, Nebenversion, Buildnummer und Revisionsnummer der Assembly.</span><span class="sxs-lookup"><span data-stu-id="72cb3-145">`Major`, `Minor`, `Build`, and `Revision` are the major version, minor version, build number, and revision number of the assembly.</span></span> <span data-ttu-id="72cb3-146">`StrongName` ist die hexadezimal codierte niederwertigen 64 Bits des der Hash-Wert, der den öffentlichen Schlüssel generiert, mit dem SHA-1-Hashalgorithmus und dem öffentlichen Schlüssel, die anhand des <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-146">`StrongName` is the hexadecimal-encoded low-order 64 bits of the hash value of the public key generated using the SHA-1 hashing algorithm and the public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span> <span data-ttu-id="72cb3-147">`PublicKeyToken` ist der hexadezimal-codierte öffentliche Schlüssel anhand des <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-147">`PublicKeyToken` is the hexadecimal-encoded public key specified by <xref:System.Reflection.AssemblyName.SetPublicKey%2A>.</span></span>  
  
 <span data-ttu-id="72cb3-148">Hexadezimale Codierung wird definiert, wie das Konvertieren jedes Byte der als binäres Objekt in zwei Hexadezimalzeichen, vom am wenigsten Fortschritt zum höchsten Byte.</span><span class="sxs-lookup"><span data-stu-id="72cb3-148">Hexadecimal encoding is defined as the conversion of each byte of a binary object to two hexadecimal characters, progressing from least to most significant byte.</span></span> <span data-ttu-id="72cb3-149">Zusätzliche Werte werden je nach Bedarf hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-149">Additional display values will be added as deemed necessary.</span></span>  
  
 <span data-ttu-id="72cb3-150">Wenn Sie der vollständigen öffentliche Schlüssel bekannt ist, kann dann PublicKey StrongName durch ersetzt werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-150">If the full public key is known, then PublicKey may be substituted for StrongName.</span></span>  
  
 <span data-ttu-id="72cb3-151">Beachten Sie, dass mit Ausnahme von `Name`, müssen zunächst die stammen, die lexikalische Reihenfolge von Parametern ist unwichtig.</span><span class="sxs-lookup"><span data-stu-id="72cb3-151">Also note that except for `Name`, which must come first, the lexical order of parameters is unimportant.</span></span> <span data-ttu-id="72cb3-152">Jedoch einen Parameter (`Version`, `Culture`, `StrongName` oder `PublicKey`) nicht explizit Satz gilt weggelassen werden, und die <xref:System.Reflection.AssemblyName> als unvollständig.</span><span class="sxs-lookup"><span data-stu-id="72cb3-152">However, any parameter (`Version`, `Culture`, `StrongName` or `PublicKey`) not specifically set is considered to be omitted, and the <xref:System.Reflection.AssemblyName> is then considered partial.</span></span> <span data-ttu-id="72cb3-153">Wenn partielle Informationen angeben, müssen die Parameter in der oben beschriebenen Reihenfolge angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-153">When specifying partial information, Name parameters must be specified in the order described above.</span></span>  
  
 <span data-ttu-id="72cb3-154">Wenn Sie einen Anzeigenamen angeben, die Konvention `StrongName =null` oder `PublicKey= null` gibt an, dass die Bindung und Übereinstimmung mit einer einfach benannten Assembly erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="72cb3-154">When supplying a display name, the convention `StrongName =null` or `PublicKey= null` indicates that binding and matching against a simply named assembly is required.</span></span> <span data-ttu-id="72cb3-155">Darüber hinaus die Konvention `Culture= ""` (doppeltes Anführungszeichen, die eine leere Zeichenfolge darstellt.) gibt an, Übereinstimmung mit der Standardkultur.</span><span class="sxs-lookup"><span data-stu-id="72cb3-155">Additionally, the convention `Culture= ""` (double quote representing an empty string) indicates matching against the default culture.</span></span>  
  
 <span data-ttu-id="72cb3-156">Das folgende Beispiel zeigt eine <xref:System.Reflection.AssemblyName> für eine einfach benannte Assembly mit einer Standardkultur.</span><span class="sxs-lookup"><span data-stu-id="72cb3-156">The following example shows an <xref:System.Reflection.AssemblyName> for a simply named assembly with default culture.</span></span>  
  
```  
ExampleAssembly, Culture=""  
```  
  
 <span data-ttu-id="72cb3-157">In folgendem Beispiel wird einen vollständig angegebenen Verweis auf eine Assembly mit starkem Namen mit der Kultur „en“ dargestellt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-157">The following example shows a fully specified reference for a strongly named assembly with culture "en".</span></span>  
  
```  
ExampleAssembly, Version=1.0.0.0, Culture=en, PublicKeyToken=a5d015c7d5a0b012  
```  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-158">Dieses Beispiel zeigt, wie Sie mit verschiedenen Reflektionsklassen verwendet wird, zur Analyse der Metadaten in einer Assembly enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="72cb3-158">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Version" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKey" />
    <altmember cref="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
    <altmember cref="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
    <altmember cref="P:System.Type.FullName" />
    <altmember cref="M:System.Type.GetType" />
    <altmember cref="P:System.Type.AssemblyQualifiedName" />
    <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md">
      <span data-ttu-id="72cb3-159">Angeben vollständig gekennzeichneter Typnamen</span>
      <span class="sxs-lookup">
        <span data-stu-id="72cb3-159">Specifying Fully Qualified Type Names</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-160">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyName" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-160">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-161">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyName" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-161">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72cb3-162">Das folgende Beispiel erstellt eine dynamische Assembly mit dem Namen `MyAssembly.exe` und speichert es auf Ihrer Festplatte.</span><span class="sxs-lookup"><span data-stu-id="72cb3-162">The following example creates a dynamic assembly named `MyAssembly.exe` and saves it to your hard disk.</span></span> <span data-ttu-id="72cb3-163">Nach dem Ausführen des Beispiels können Sie die [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) den Metadaten der Assembly zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-163">After running the example, you can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the assembly metadata.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#1)]
 [!code-csharp[AssemblyName_Constructor#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#1)]
 [!code-vb[AssemblyName_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyName (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyName(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="new System.Reflection.AssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="new System.Reflection.AssemblyName assemblyName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="72cb3-164">Der Anzeigename der Assembly, wie von der <see cref="P:System.Reflection.AssemblyName.FullName" />-Eigenschaft zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-164">The display name of the assembly, as returned by the <see cref="P:System.Reflection.AssemblyName.FullName" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-165">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyName" />-Klasse mit dem angegebenen Anzeigenamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-165">Initializes a new instance of the <see cref="T:System.Reflection.AssemblyName" /> class with the specified display name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-166">Die angegebene `assemblyName` analysiert wird, und die entsprechenden Felder des neuen <xref:System.Reflection.AssemblyName> werden mit Werten aus dem Anzeigenamen initialisiert.</span><span class="sxs-lookup"><span data-stu-id="72cb3-166">The supplied `assemblyName` is parsed, and the appropriate fields of the new <xref:System.Reflection.AssemblyName> are initialized with values from the display name.</span></span> <span data-ttu-id="72cb3-167">Dies ist die empfohlene Methode der Analyse von Anzeigenamen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-167">This is the recommended way of parsing display names.</span></span> <span data-ttu-id="72cb3-168">Schreiben eigenen Code zum Analysieren von Anzeigenamen wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-168">Writing your own code to parse display names is not recommended.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-169">Das folgende Beispiel erstellt eine Instanz von <xref:System.Reflection.AssemblyName> über einen Anzeigenamen ein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-169">The following example creates an instance of <xref:System.Reflection.AssemblyName> from a display name.</span></span> <span data-ttu-id="72cb3-170">Die einzelnen Elemente des Anzeigenamens sind die Ausgabe an die Konsole als Eigenschaften der <xref:System.Reflection.AssemblyName> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-170">The individual elements of the display name are output to the console as properties of the <xref:System.Reflection.AssemblyName> object.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor_2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor_2/CPP/source.cpp#1)]
 [!code-csharp[AssemblyName_Constructor_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor_2/CS/source.cs#1)]
 [!code-vb[AssemblyName_Constructor_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72cb3-171">
            <paramref name="assemblyName" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-171">
              <paramref name="assemblyName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72cb3-172">
            <paramref name="assemblyName" /> ist eine Zeichenfolge der Länge 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-172">
              <paramref name="assemblyName" /> is a zero length string.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <block subset="none" type="note">
            <para>
              <span data-ttu-id="72cb3-173">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder der <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.IO.IOException" /> ab.</span>
              <span class="sxs-lookup">
                <span data-stu-id="72cb3-173">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.IO.IOException" />, instead.</span>
              </span>
            </para>
          </block>
          <span data-ttu-id="72cb3-174">Die referenzierte Assembly wurde nicht gefunden oder konnte nicht geladen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-174">The referenced assembly could not be found, or could not be loaded.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="assemblyName.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-175">Erstellt eine Kopie dieses <see cref="T:System.Reflection.AssemblyName" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-175">Makes a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-176">Ein Objekt, das eine Kopie dieses <see cref="T:System.Reflection.AssemblyName" />-Objekts ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-176">An object that is a copy of this <see cref="T:System.Reflection.AssemblyName" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-177">Ein neues Objekt ist, mit dem Original identisch erstellt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-177">A new object is created, identical to the original.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public string CodeBase { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeBase { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeBase : string with get, set" Usage="System.Reflection.AssemblyName.CodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-178">Ruft den Speicherort der Assembly als URL ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-178">Gets or sets the location of the assembly as a URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-179">Eine Zeichenfolge, die den Speicherort der Assembly als URL darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-179">A string that is the URL location of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-180">Wenn eine Assembly geladen wird, dieser Wert kann auch abgerufen werden mithilfe der <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="72cb3-180">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="72cb3-181">Wenn die Assembly als ein Bytearray geladen wurde, gibt diese Eigenschaft den Speicherort des Aufrufers des der <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> -methodenüberladung, nicht den Speicherort der geladenen Assembly.</span><span class="sxs-lookup"><span data-stu-id="72cb3-181">If the assembly was loaded as a byte array, this property returns the location of the caller of the <xref:System.Reflection.Assembly.Load%28System.Byte%5B%5D%29> method overload, not the location of the loaded assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="72cb3-182">Verwenden Sie keine <xref:System.Reflection.AssemblyName> nur mit der <xref:System.Reflection.AssemblyName.CodeBase%2A> Eigenschaftensatz.</span><span class="sxs-lookup"><span data-stu-id="72cb3-182">Do not use an <xref:System.Reflection.AssemblyName> with only the <xref:System.Reflection.AssemblyName.CodeBase%2A> property set.</span></span> <span data-ttu-id="72cb3-183">Die <xref:System.Reflection.AssemblyName.CodeBase%2A> Eigenschaft stellt keinen Elemente der Assemblyidentität (z. B. Name oder Version), also Laden erfolgt nicht gemäß den Regeln des Load-von-Identität, wie erwartet aus der <xref:System.Reflection.Assembly.Load%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="72cb3-183">The <xref:System.Reflection.AssemblyName.CodeBase%2A> property does not supply any elements of the assembly identity (such as name or version), so loading does not occur according to load-by-identity rules, as you would expect from the <xref:System.Reflection.Assembly.Load%2A> method.</span></span> <span data-ttu-id="72cb3-184">Stattdessen wird die Assembly geladen, mithilfe von Load-from-Regeln.</span><span class="sxs-lookup"><span data-stu-id="72cb3-184">Instead, the assembly is loaded using load-from rules.</span></span> <span data-ttu-id="72cb3-185">Informationen zu den Nachteilen der LoadFrom-Kontext verwenden, finden Sie unter den <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> methodenüberladung oder [Best Practices für das Laden von Assembly](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span><span class="sxs-lookup"><span data-stu-id="72cb3-185">For information about the disadvantages of using the load-from context, see the <xref:System.Reflection.Assembly.LoadFrom%2A?displayProperty=nameWithType> method overload or [Best Practices for Assembly Loading](~/docs/framework/deployment/best-practices-for-assembly-loading.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-186">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-186">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-187">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.CodeBase%2A> Eigenschaft wird verwendet, um das Verzeichnis anzugeben, in die Assembly gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="72cb3-187">When the assembly is created, the <xref:System.Reflection.AssemblyName.CodeBase%2A> property is used to specify the directory where the assembly is saved.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#1)]
 [!code-csharp[AssemblyName_CodeBase#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#1)]
 [!code-vb[AssemblyName_CodeBase#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyContentType ContentType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyContentType ContentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentType As AssemblyContentType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyContentType ContentType { System::Reflection::AssemblyContentType get(); void set(System::Reflection::AssemblyContentType value); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : System.Reflection.AssemblyContentType with get, set" Usage="System.Reflection.AssemblyName.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyContentType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-188">Ruft einen Wert ab oder legt einen Wert fest, der angibt, welche Art von Inhalt die Assembly enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-188">Gets or sets a value that indicates what type of content the assembly contains.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-189">Ein Wert, der angibt, welche Art von Inhalts der Assembly enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-189">A value that indicates what type of content the assembly contains.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureInfo">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo CultureInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo CultureInfo" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureInfo As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ CultureInfo { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureInfo : System.Globalization.CultureInfo with get, set" Usage="System.Reflection.AssemblyName.CultureInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-190">Ruft die von der Assembly unterstützte Kultur ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-190">Gets or sets the culture supported by the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-191">Ein Objekt, das die von der Assembly unterstützte Kultur darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-191">An object that represents the culture supported by the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72cb3-192">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-192">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-193">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.CultureInfo%2A> Eigenschaft wird zum Angeben der Kultur der Anzeigename der Assembly gehört.</span><span class="sxs-lookup"><span data-stu-id="72cb3-193">When the assembly is created, the <xref:System.Reflection.AssemblyName.CultureInfo%2A> property is used to specify the culture, which is part of the assembly's display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#2)]
 [!code-csharp[AssemblyName_CodeBase#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#2)]
 [!code-vb[AssemblyName_CodeBase#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CultureName">
      <MemberSignature Language="C#" Value="public string CultureName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CultureName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.CultureName" />
      <MemberSignature Language="VB.NET" Value="Public Property CultureName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CultureName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CultureName : string with get, set" Usage="System.Reflection.AssemblyName.CultureName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-194">Ruft den Namen der Kultur ab, die dieser Assembly zugeordnet ist, oder legt den Namen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-194">Gets or sets the name of the culture associated with the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-195">Der Kulturname</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-195">The culture name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EscapedCodeBase">
      <MemberSignature Language="C#" Value="public string EscapedCodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EscapedCodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EscapedCodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EscapedCodeBase { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EscapedCodeBase : string" Usage="System.Reflection.AssemblyName.EscapedCodeBase" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-196">Ruft den URI einschließlich Escapezeichen ab, der die CodeBase darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-196">Gets the URI, including escape characters, that represents the codebase.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-197">Ein URI mit Escapezeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-197">A URI with escape characters.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public System.Reflection.AssemblyNameFlags Flags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.AssemblyNameFlags Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Flags" />
      <MemberSignature Language="VB.NET" Value="Public Property Flags As AssemblyNameFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::AssemblyNameFlags Flags { System::Reflection::AssemblyNameFlags get(); void set(System::Reflection::AssemblyNameFlags value); };" />
      <MemberSignature Language="F#" Value="member this.Flags : System.Reflection.AssemblyNameFlags with get, set" Usage="System.Reflection.AssemblyName.Flags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyNameFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-198">Ruft die Attribute der Assembly ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-198">Gets or sets the attributes of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-199">Ein Wert, der die Attribute der Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-199">A value that represents the attributes of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72cb3-200">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-200">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-201">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.Flags%2A> Eigenschaft wird verwendet, um anzugeben, dass die Assembly über einen öffentlichen Schlüssel besitzt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-201">When the assembly is created, the <xref:System.Reflection.AssemblyName.Flags%2A> property is used to specify that the assembly has a public key.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#4)]
 [!code-csharp[AssemblyName_KeyPair#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#4)]
 [!code-vb[AssemblyName_KeyPair#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.FullName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullName : string" Usage="System.Reflection.AssemblyName.FullName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-202">Ruft den vollständigen Namen der Assembly ab, der auch als Anzeigename bezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-202">Gets the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-203">Eine Zeichenfolge, die den vollständigen Namen der Assembly darstellt, der auch als Anzeigename bezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-203">A string that is the full name of the assembly, also known as the display name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-204">Der Anzeigename besteht in der Regel den einfachen Namen, Versionsnummer, unterstützten Kultur und öffentlichen Schlüssel aus.</span><span class="sxs-lookup"><span data-stu-id="72cb3-204">The display name typically consists of the simple name, version number, supported culture, and public key.</span></span> <span data-ttu-id="72cb3-205">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="72cb3-205">For example:</span></span>  
  
```  
mylib, Version=1.2.1900.0, Culture=neutral, PublicKeyToken=a14f3033def15840  
```  
  
 <span data-ttu-id="72cb3-206">Schreiben eigenen Code zum Analysieren von Anzeigenamen wird nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-206">Writing your own code to parse display names is not recommended.</span></span> <span data-ttu-id="72cb3-207">Übergeben Sie stattdessen den Namen, der die <xref:System.Reflection.AssemblyName.%23ctor%2A> -Konstruktor, der analysiert, und füllt die entsprechenden Felder des neuen <xref:System.Reflection.AssemblyName>.</span><span class="sxs-lookup"><span data-stu-id="72cb3-207">Instead, pass the display name to the <xref:System.Reflection.AssemblyName.%23ctor%2A> constructor, which parses it and populates the appropriate fields of the new <xref:System.Reflection.AssemblyName>.</span></span>  
  
 <span data-ttu-id="72cb3-208">Wenn eine Assembly geladen wird, dieser Wert kann auch abgerufen werden mithilfe der <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="72cb3-208">When an assembly is loaded, this value can also be obtained using the <xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-209">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-209">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-210">Wenn die Assembly erstellt wird, wird im Codebeispiel wird die <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, und <xref:System.Reflection.AssemblyName.KeyPair%2A> Eigenschaften, die zusammen bilden der vollständige Name einer Assembly, oder einen Anzeigenamen ein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-210">When the assembly is created, the code example sets the <xref:System.Reflection.AssemblyName.Name%2A>, <xref:System.Reflection.AssemblyName.Version%2A>, <xref:System.Reflection.AssemblyName.CultureInfo%2A>, and <xref:System.Reflection.AssemblyName.KeyPair%2A> properties, which together comprise an assembly's full name, or display name.</span></span> <span data-ttu-id="72cb3-211">Die <xref:System.Reflection.AssemblyName.FullName%2A> Eigenschaft wird dann zum Abrufen des Anzeigenamens, den verwendet.</span><span class="sxs-lookup"><span data-stu-id="72cb3-211">The <xref:System.Reflection.AssemblyName.FullName%2A> property is then used to retrieve the display name.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#4](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#4)]
 [!code-csharp[AssemblyName_CodeBase#4](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#4)]
 [!code-vb[AssemblyName_CodeBase#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md">
          <span data-ttu-id="72cb3-212">Angeben vollständig gekennzeichneter Typnamen</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-212">Specifying Fully Qualified Type Names</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetAssemblyName">
      <MemberSignature Language="C#" Value="public static System.Reflection.AssemblyName GetAssemblyName (string assemblyFile);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.AssemblyName GetAssemblyName(string assemblyFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetAssemblyName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAssemblyName (assemblyFile As String) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::AssemblyName ^ GetAssemblyName(System::String ^ assemblyFile);" />
      <MemberSignature Language="F#" Value="static member GetAssemblyName : string -&gt; System.Reflection.AssemblyName" Usage="System.Reflection.AssemblyName.GetAssemblyName assemblyFile" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFile">
          <span data-ttu-id="72cb3-213">Der Pfad für die Assembly, deren <see cref="T:System.Reflection.AssemblyName" /> zurückgegeben werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-213">The path for the assembly whose <see cref="T:System.Reflection.AssemblyName" /> is to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-214">Ruft den <see cref="T:System.Reflection.AssemblyName" /> für eine angegebene Datei ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-214">Gets the <see cref="T:System.Reflection.AssemblyName" /> for a given file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-215">Ein Objekt, das die angegebene Assemblydatei darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-215">An object that represents the given assembly file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-216">Dies funktioniert nur, wenn die Datei ein Assemblymanifest enthält.</span><span class="sxs-lookup"><span data-stu-id="72cb3-216">This will only work if the file contains an assembly manifest.</span></span> <span data-ttu-id="72cb3-217">Diese Methode bewirkt, dass die Datei geöffnet und geschlossen werden, aber die Assembly wird mit dieser Domäne nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-217">This method causes the file to be opened and closed, but the assembly is not added to this domain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-218">Im folgenden Beispiel wird die <xref:System.Reflection.AssemblyName> für eine Assembly auf dem Datenträger.</span><span class="sxs-lookup"><span data-stu-id="72cb3-218">The following example gets the <xref:System.Reflection.AssemblyName> for an assembly on disk.</span></span> <span data-ttu-id="72cb3-219">Es wird nicht ausgeführt, wenn Sie die Zeichenfolge "MyAssembly.exe" ersetzen, mit dem Dateinamen einer Assembly (einschließlich den Pfad, falls erforderlich) auf Ihrer Festplatte.</span><span class="sxs-lookup"><span data-stu-id="72cb3-219">It will not run unless you replace the string "MyAssembly.exe" with the file name of an assembly (including the path, if necessary) on your hard disk.</span></span> <span data-ttu-id="72cb3-220">Alternativ können Sie in diesem Beispiel wird als "MyAssembly.exe" kompilieren.</span><span class="sxs-lookup"><span data-stu-id="72cb3-220">Alternatively, you can compile this example as "MyAssembly.exe".</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#1)]
 [!code-csharp[AssemblyName_GetAssemblyName#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#1)]
 [!code-vb[AssemblyName_GetAssemblyName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72cb3-221">
            <paramref name="assemblyFile" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-221">
              <paramref name="assemblyFile" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="72cb3-222">
            <paramref name="assemblyFile" /> ist ungültig, wie z. B. im Fall einer Assembly mit einer ungültigen Kultur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-222">
              <paramref name="assemblyFile" /> is invalid, such as an assembly with an invalid culture.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="72cb3-223">
            <paramref name="assemblyFile" /> wurde nicht gefunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-223">
              <paramref name="assemblyFile" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="72cb3-224">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen zur Pfadsuche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-224">The caller does not have path discovery permission.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="72cb3-225">
            <paramref name="assemblyFile" /> ist keine gültige Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-225">
              <paramref name="assemblyFile" /> is not a valid assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="72cb3-226">Eine Assembly oder ein Modul wurde zweimal mit zwei unterschiedlichen Beweissätzen geladen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-226">An assembly or module was loaded twice with two different sets of evidence.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="72cb3-227">für den Zugriff auf Informationen im Pfad.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-227">for access to information in the path.</span>
          </span>
          <span data-ttu-id="72cb3-228">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-228">Associated enumeration: <see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="assemblyName.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="72cb3-229">Das Objekt, das mit Serialisierungsinformationen aufgefüllt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-229">The object to be populated with serialization information.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="72cb3-230">Der Zielkontext der Serialisierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-230">The destination context of the serialization.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-231">Ruft Serialisierungsinformationen mit allen Daten ab, die für das erneute Erstellen einer Instanz dieses <see langword="AssemblyName" /> benötigt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-231">Gets serialization information with all the data needed to recreate an instance of this <see langword="AssemblyName" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="72cb3-232">
            <paramref name="info" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-232">
              <paramref name="info" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="72cb3-233">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-233">Requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="72cb3-234">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-234">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKey">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKey() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKey" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKey () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKey();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKey : unit -&gt; byte[]" Usage="assemblyName.GetPublicKey " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-235">Ruft den öffentlichen Schlüssel der Assembly ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-235">Gets the public key of the assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-236">Ein Bytearray mit dem öffentlichen Schlüssel der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-236">A byte array that contains the public key of the assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72cb3-237">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-237">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-238">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.SetPublicKey%2A> Methode wird verwendet, um der Assembly einen öffentlichen Schlüssel zu gewähren.</span><span class="sxs-lookup"><span data-stu-id="72cb3-238">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="72cb3-239">Die <xref:System.Reflection.AssemblyName.GetPublicKey%2A> -Methode wird anschließend verwendet, um den öffentlichen Schlüssel zu abzurufen, die in der Konsole angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="72cb3-239">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#2)]
 [!code-csharp[AssemblyName_KeyPair#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#2)]
 [!code-vb[AssemblyName_KeyPair#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="72cb3-240">Es wurde ein öffentlicher Schlüssel bereitgestellt (z. B. mithilfe der <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />-Methode), es wurde jedoch kein öffentliches Schlüsseltoken bereitgestellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-240">A public key was provided (for example, by using the <see cref="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" /> method), but no public key token was provided.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetPublicKeyToken">
      <MemberSignature Language="C#" Value="public byte[] GetPublicKeyToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetPublicKeyToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.GetPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPublicKeyToken () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetPublicKeyToken();" />
      <MemberSignature Language="F#" Value="member this.GetPublicKeyToken : unit -&gt; byte[]" Usage="assemblyName.GetPublicKeyToken " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-241">Ruft das Token des öffentlichen Schlüssels ab, d. h. die letzten 8 Byte des SHA-1-Hashs des öffentlichen Schlüssels, mit dem die Anwendung oder Assembly signiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-241">Gets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-242">Ein Bytearray, das öffentliche Schlüsseltoken enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-242">A byte array that contains the public key token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="72cb3-243">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-243">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-244">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> Methode wird verwendet, um das öffentliche Schlüsseltoken der Assembly des festgelegt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-244">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="72cb3-245">Die <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> -Methode wird anschließend verwendet, um das Token des öffentlichen Schlüssels zu abzurufen, die in der Konsole angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="72cb3-245">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#3)]
 [!code-csharp[AssemblyName_KeyPair#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#3)]
 [!code-vb[AssemblyName_KeyPair#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashAlgorithm">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm HashAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property HashAlgorithm As AssemblyHashAlgorithm" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyHashAlgorithm HashAlgorithm { System::Configuration::Assemblies::AssemblyHashAlgorithm get(); void set(System::Configuration::Assemblies::AssemblyHashAlgorithm value); };" />
      <MemberSignature Language="F#" Value="member this.HashAlgorithm : System.Configuration.Assemblies.AssemblyHashAlgorithm with get, set" Usage="System.Reflection.AssemblyName.HashAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyHashAlgorithm</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-246">Ruft den Hashalgorithmus ab, der vom Assemblymanifest verwendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-246">Gets or sets the hash algorithm used by the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-247">Der vom Assemblymanifest verwendete Hashalgorithmus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-247">The hash algorithm used by the assembly manifest.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="72cb3-248">Ab der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], die <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> Eigenschaft ein <xref:System.Reflection.AssemblyName> von zurückgegebene Objekt der <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> Methode ist <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> liegt kein Hashalgorithmus der Assembly, auf die verwiesen wird, oder wenn der Hashalgorithmus auf den verwiesen wird Assembly wird nicht angegeben, durch die <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="72cb3-248">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property of an <xref:System.Reflection.AssemblyName> object that is returned by the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method is <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.None?displayProperty=nameWithType> if there is no hash algorithm for the referenced assembly, or if the hash algorithm of the referenced assembly is not identified by the <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="72cb3-249">In früheren Versionen von .NET Framework die <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> zurückgegebene Eigenschaft <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in dieser Situation.</span><span class="sxs-lookup"><span data-stu-id="72cb3-249">In previous versions of the .NET Framework, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property returned <xref:System.Configuration.Assemblies.AssemblyHashAlgorithm.SHA1?displayProperty=nameWithType> in this situation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-250">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-250">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-251">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> Eigenschaft wird verwendet, um den Hashalgorithmus für das Assemblymanifest festzulegen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-251">When the assembly is created, the <xref:System.Reflection.AssemblyName.HashAlgorithm%2A> property is used to set the hash algorithm for the assembly manifest.</span></span>  
  
 [!code-cpp[AssemblyName_CodeBase#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_CodeBase/CPP/assemblyname_codebase.cpp#3)]
 [!code-csharp[AssemblyName_CodeBase#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_CodeBase/CS/assemblyname_codebase.cs#3)]
 [!code-vb[AssemblyName_CodeBase#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_CodeBase/VB/assemblyname_codebase.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyPair">
      <MemberSignature Language="C#" Value="public System.Reflection.StrongNameKeyPair KeyPair { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.StrongNameKeyPair KeyPair" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.KeyPair" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyPair As StrongNameKeyPair" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::StrongNameKeyPair ^ KeyPair { System::Reflection::StrongNameKeyPair ^ get(); void set(System::Reflection::StrongNameKeyPair ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyPair : System.Reflection.StrongNameKeyPair with get, set" Usage="System.Reflection.AssemblyName.KeyPair" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.StrongNameKeyPair</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-252">Ruft das Paar aus öffentlichem und privatem kryptografischem Schlüssel ab, mit dem eine Signatur mit starkem Namen für die Assembly erstellt wird, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-252">Gets or sets the public and private cryptographic key pair that is used to create a strong name signature for the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-253">Das Paar aus öffentlichem und privatem kryptografischem Schlüssel, mit dem ein starker Name für die Assembly erstellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-253">The public and private cryptographic key pair to be used to create a strong name for the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-254">Wenn die Runtime eine Assembly geladen wird, ist es nicht festgelegt die <xref:System.Reflection.AssemblyName.KeyPair%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="72cb3-254">When the runtime loads an assembly, it does not set the <xref:System.Reflection.AssemblyName.KeyPair%2A> property.</span></span> <span data-ttu-id="72cb3-255">Der Getter für die Eigenschaft ist nur dann hilfreich, wenn der Benutzer die Eigenschaft vor der Verwendung der <xref:System.Reflection.AssemblyName> Objekt, das eine dynamische Assembly erstellen und anschließend das Schlüsselpaar abrufen möchte.</span><span class="sxs-lookup"><span data-stu-id="72cb3-255">The getter for the property is only useful if the user set the property before using the <xref:System.Reflection.AssemblyName> object to create a dynamic assembly, and subsequently wants to retrieve the key pair.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-256">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-256">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-257">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.KeyPair%2A> Eigenschaft wird verwendet, um die öffentlichen und privaten kryptografischen Schlüssel festgelegt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-257">When the assembly is created, the <xref:System.Reflection.AssemblyName.KeyPair%2A> property is used to set the assembly's public and private cryptographic keys.</span></span> <span data-ttu-id="72cb3-258">sein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-258">.</span></span>  
  
 [!code-cpp[AssemblyName_KeyPair#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_KeyPair/CPP/assemblyname_keypair.cpp#1)]
 [!code-csharp[AssemblyName_KeyPair#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_KeyPair/CS/assemblyname_keypair.cs#1)]
 [!code-vb[AssemblyName_KeyPair#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_KeyPair/VB/assemblyname_keypair.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Reflection.AssemblyName.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-259">Ruft den einfachen Namen der Assembly ab oder legt ihn fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-259">Gets or sets the simple name of the assembly.</span>
          </span>
          <span data-ttu-id="72cb3-260">Dies ist üblicherweise (jedoch nicht unbedingt) der Dateiname der Manifestdatei der Assembly, abzüglich ihrer Erweiterung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-260">This is usually, but not necessarily, the file name of the manifest file of the assembly, minus its extension.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-261">Der einfache Name der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-261">The simple name of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-262">Die Manifestdatei ist die Datei, die das Assemblymanifest enthält.</span><span class="sxs-lookup"><span data-stu-id="72cb3-262">The manifest file is the file that contains the assembly manifest.</span></span>  
  
 <span data-ttu-id="72cb3-263">Beispielsweise ist der einfache Name der eine Einzeldateiassembly, die mit dem Namen ""MeineAssembly.dll "" "MyAssembly".</span><span class="sxs-lookup"><span data-stu-id="72cb3-263">For example, the simple name of a single-file assembly named "MyAssembly.dll" is "MyAssembly".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-264">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-264">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-265">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.Name%2A> Eigenschaft wird verwendet, um den einfachen Namen der dynamischen Assembly festzulegen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-265">When the assembly is created, the <xref:System.Reflection.AssemblyName.Name%2A> property is used to set the simple name of the dynamic assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#2)]
 [!code-csharp[AssemblyName_Constructor#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#2)]
 [!code-vb[AssemblyName_Constructor#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/reflection-and-codedom/specifying-fully-qualified-type-names.md">
          <span data-ttu-id="72cb3-266">Angeben vollständig gekennzeichneter Typnamen</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-266">Specifying Fully Qualified Type Names</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialization">
      <MemberSignature Language="C#" Value="public void OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialization (sender As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnDeserialization(System::Object ^ sender);" />
      <MemberSignature Language="F#" Value="abstract member OnDeserialization : obj -&gt; unit&#xA;override this.OnDeserialization : obj -&gt; unit" Usage="assemblyName.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">
          <span data-ttu-id="72cb3-267">Die Quelle des Deserialisierungsereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-267">The source of the deserialization event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-268">Implementiert die <see cref="T:System.Runtime.Serialization.ISerializable" />-Schnittstelle und wird nach Abschluss der Deserialisierung durch das Deserialisierungsereignis aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-268">Implements the <see cref="T:System.Runtime.Serialization.ISerializable" /> interface and is called back by the deserialization event when deserialization is complete.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="M:System.Reflection.AssemblyName.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </Docs>
    </Member>
    <Member MemberName="ProcessorArchitecture">
      <MemberSignature Language="C#" Value="public System.Reflection.ProcessorArchitecture ProcessorArchitecture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.ProcessorArchitecture ProcessorArchitecture" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberSignature Language="VB.NET" Value="Public Property ProcessorArchitecture As ProcessorArchitecture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::ProcessorArchitecture ProcessorArchitecture { System::Reflection::ProcessorArchitecture get(); void set(System::Reflection::ProcessorArchitecture value); };" />
      <MemberSignature Language="F#" Value="member this.ProcessorArchitecture : System.Reflection.ProcessorArchitecture with get, set" Usage="System.Reflection.AssemblyName.ProcessorArchitecture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ProcessorArchitecture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-269">Ruft einen Wert ab, der den Prozessor und die Bits pro Wort für die Plattform angibt, auf die eine ausführbare Datei zielt, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-269">Gets or sets a value that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-270">Einer der Enumerationswerte, der den Prozessor und die Bits pro Wort für die Plattform angibt, auf die eine ausführbare Datei zielt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-270">One of the enumeration values that identifies the processor and bits-per-word of the platform targeted by an executable.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-271">Beginnend mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], gibt diese Eigenschaft immer <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> für Verweisassemblys.</span><span class="sxs-lookup"><span data-stu-id="72cb3-271">Beginning with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], this property always returns <xref:System.Reflection.ProcessorArchitecture.None?displayProperty=nameWithType> for reference assemblies.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Reflection.Module.GetPEKind(System.Reflection.PortableExecutableKinds@,System.Reflection.ImageFileMachine@)" />
      </Docs>
    </Member>
    <Member MemberName="ReferenceMatchesDefinition">
      <MemberSignature Language="C#" Value="public static bool ReferenceMatchesDefinition (System.Reflection.AssemblyName reference, System.Reflection.AssemblyName definition);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool ReferenceMatchesDefinition(class System.Reflection.AssemblyName reference, class System.Reflection.AssemblyName definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ReferenceMatchesDefinition(System.Reflection.AssemblyName,System.Reflection.AssemblyName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ReferenceMatchesDefinition (reference As AssemblyName, definition As AssemblyName) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool ReferenceMatchesDefinition(System::Reflection::AssemblyName ^ reference, System::Reflection::AssemblyName ^ definition);" />
      <MemberSignature Language="F#" Value="static member ReferenceMatchesDefinition : System.Reflection.AssemblyName * System.Reflection.AssemblyName -&gt; bool" Usage="System.Reflection.AssemblyName.ReferenceMatchesDefinition (reference, definition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
        <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="reference">
          <span data-ttu-id="72cb3-272">Der Name der Referenzassembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-272">The reference assembly name.</span>
          </span>
        </param>
        <param name="definition">
          <span data-ttu-id="72cb3-273">Der Assemblyname, der mit der Referenzassembly verglichen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-273">The assembly name that is compared to the reference assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-274">Gibt einen Wert zurück, der angibt, ob zwei Assemblynamen identisch sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-274">Returns a value indicating whether two assembly names are the same.</span>
          </span>
          <span data-ttu-id="72cb3-275">Der Vergleich basiert auf den einfachen Assemblynamen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-275">The comparison is based on the simple assembly names.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-276">
            <see langword="true" />, wenn die einfachen Assemblynamen gleich sind; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-276">
              <see langword="true" /> if the simple assembly names are the same; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-277">Der Vergleich hängt nur von dem einfachen Assemblynamen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-277">The comparison depends only on the simple assembly name.</span></span> <span data-ttu-id="72cb3-278">Version, Kultur und öffentliches Schlüsseltoken werden dabei ignoriert.</span><span class="sxs-lookup"><span data-stu-id="72cb3-278">It ignores version, culture, and public key token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKey">
      <MemberSignature Language="C#" Value="public void SetPublicKey (byte[] publicKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKey(unsigned int8[] publicKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKey(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKey (publicKey As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKey(cli::array &lt;System::Byte&gt; ^ publicKey);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKey : byte[] -&gt; unit" Usage="assemblyName.SetPublicKey publicKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKey" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKey">
          <span data-ttu-id="72cb3-279">Ein Bytearray mit dem öffentlichen Schlüssel der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-279">A byte array containing the public key of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-280">Legt den öffentlichen Schlüssel zum Identifizieren der Assembly fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-280">Sets the public key identifying the assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-281">Sie müssen außerdem verwenden die <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> Methode, um ein Token des öffentlichen Schlüssels bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-281">You must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="72cb3-282">Andernfalls ein <xref:System.Security.SecurityException> wird ausgelöst, wenn die <xref:System.Reflection.AssemblyName.GetPublicKey%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-282">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-283">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-283">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-284">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.SetPublicKey%2A> Methode wird verwendet, um der Assembly einen öffentlichen Schlüssel zu gewähren.</span><span class="sxs-lookup"><span data-stu-id="72cb3-284">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method is used to give the assembly a public key.</span></span> <span data-ttu-id="72cb3-285">Die <xref:System.Reflection.AssemblyName.GetPublicKey%2A> -Methode wird anschließend verwendet, um den öffentlichen Schlüssel zu abzurufen, die in der Konsole angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="72cb3-285">The <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is then used to retrieve the public key, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#1)]
 [!code-csharp[AssemblyName_SetPublicKey#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#1)]
 [!code-vb[AssemblyName_SetPublicKey#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPublicKeyToken">
      <MemberSignature Language="C#" Value="public void SetPublicKeyToken (byte[] publicKeyToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPublicKeyToken(unsigned int8[] publicKeyToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.SetPublicKeyToken(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPublicKeyToken (publicKeyToken As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPublicKeyToken(cli::array &lt;System::Byte&gt; ^ publicKeyToken);" />
      <MemberSignature Language="F#" Value="member this.SetPublicKeyToken : byte[] -&gt; unit" Usage="assemblyName.SetPublicKeyToken publicKeyToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="publicKeyToken" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="publicKeyToken">
          <span data-ttu-id="72cb3-286">Ein Bytearray mit dem Token des öffentlichen Schlüssels der Assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-286">A byte array containing the public key token of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-287">Legt das Token des öffentlichen Schlüssels fest, d. h. die letzten 8 Bytes des SHA-1-Hashs des öffentlichen Schlüssels, mit dem die Anwendung oder Assembly signiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-287">Sets the public key token, which is the last 8 bytes of the SHA-1 hash of the public key under which the application or assembly is signed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-288">Wenn Sie den öffentlichen Schlüssel festlegen, durch den Aufruf der <xref:System.Reflection.AssemblyName.SetPublicKey%2A> -Methode, Sie müssen auch verwenden die <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> Methode, um ein Token des öffentlichen Schlüssels bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-288">When you set the public key by calling the <xref:System.Reflection.AssemblyName.SetPublicKey%2A> method, you must also use the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method to provide a public key token.</span></span> <span data-ttu-id="72cb3-289">Andernfalls ein <xref:System.Security.SecurityException> wird ausgelöst, wenn die <xref:System.Reflection.AssemblyName.GetPublicKey%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-289">Otherwise, a <xref:System.Security.SecurityException> is thrown when the <xref:System.Reflection.AssemblyName.GetPublicKey%2A> method is called.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-290">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-290">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-291">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> Methode wird verwendet, um das öffentliche Schlüsseltoken der Assembly des festgelegt.</span><span class="sxs-lookup"><span data-stu-id="72cb3-291">When the assembly is created, the <xref:System.Reflection.AssemblyName.SetPublicKeyToken%2A> method is used to set the assembly's public key token.</span></span> <span data-ttu-id="72cb3-292">Die <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> -Methode wird anschließend verwendet, um das Token des öffentlichen Schlüssels zu abzurufen, die in der Konsole angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="72cb3-292">The <xref:System.Reflection.AssemblyName.GetPublicKeyToken%2A> method is then used to retrieve the public key token, which is displayed to the console.</span></span>  
  
 [!code-cpp[AssemblyName_SetPublicKey#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CPP/assemblyname_setpublickey.cpp#2)]
 [!code-csharp[AssemblyName_SetPublicKey#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_SetPublicKey/CS/assemblyname_setpublickey.cs#2)]
 [!code-vb[AssemblyName_SetPublicKey#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_SetPublicKey/VB/assemblyname_setpublickey.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyName.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyName::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="72cb3-293">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-293">Reserved for future use.</span>
          </span>
          <span data-ttu-id="72cb3-294">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-294">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="72cb3-295">Das übergebene Array von zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-295">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="72cb3-296">Die Anzahl der zuzuordnenden Namen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-296">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="72cb3-297">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-297">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="72cb3-298">Das vom Aufrufer zugeordnete Array, das die IDs entsprechend den Namen empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-298">Caller-allocated array that receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-299">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-299">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-300">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-300">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="72cb3-301">Weitere Informationen zu `IDispatch::GetIDsOfNames`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="72cb3-301">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="72cb3-302">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-302">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyName.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="72cb3-303">Die zurückzugebenden Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-303">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="72cb3-304">Der Gebietsschemabezeichner für die Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-304">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="72cb3-305">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-305">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-306">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-306">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-307">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-307">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="72cb3-308">Weitere Informationen zu `IDispatch::GetTypeInfo`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="72cb3-308">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="72cb3-309">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-309">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyName.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyName.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyName::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="72cb3-310">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-310">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-311">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-311">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-312">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-312">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="72cb3-313">Weitere Informationen zu `IDispatch::GetTypeInfoCount`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="72cb3-313">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="72cb3-314">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-314">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyName.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyName.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyName.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.System#Runtime#InteropServices#_AssemblyName#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyName.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyName.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyName::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyName.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="72cb3-315">Bezeichnet den Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-315">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="72cb3-316">Für zukünftige Verwendung reserviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-316">Reserved for future use.</span>
          </span>
          <span data-ttu-id="72cb3-317">Muss IID_NULL sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-317">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="72cb3-318">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-318">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="72cb3-319">Flags, die den Kontext des Aufrufs beschreiben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-319">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="72cb3-320">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-320">Pointer to a structure containing an array of arguments, an array of argument DispIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="72cb3-321">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-321">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="72cb3-322">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-322">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="72cb3-323">Der Index des ersten Arguments mit einem Fehler.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-323">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="72cb3-324">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-324">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-325">Diese Methode ist für den Zugriff auf verwaltete Klassen von nicht verwaltetem Code und sollte nicht von verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="72cb3-325">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="72cb3-326">Weitere Informationen zu `IDispatch::Invoke`, finden Sie unter der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="72cb3-326">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="72cb3-327">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-327">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyName.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="assemblyName.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-328">Gibt den vollständigen Namen der Assembly zurück, der auch als Anzeigename bezeichnet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-328">Returns the full name of the assembly, also known as the display name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="72cb3-329">Der vollständige Name der Assembly oder der Klassenname, wenn der vollständige Name nicht bestimmt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-329">The full name of the assembly, or the class name if the full name cannot be determined.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-330">Siehe die Beschreibung der <xref:System.Reflection.AssemblyName> für das Format der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="72cb3-330">See the description of <xref:System.Reflection.AssemblyName> for the format of the returned string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-331">Im folgenden Beispiel wird ein <xref:System.Reflection.AssemblyName> Objekt für eine hypothetische `MyAssembly.exe` Assembly und verwendet dann die <xref:System.Reflection.AssemblyName.ToString%2A> Methode, um den vollständigen Assemblynamen abzurufen, oder einen Anzeigenamen ein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-331">The following example gets an <xref:System.Reflection.AssemblyName> object for a hypothetical `MyAssembly.exe` assembly, and then uses the <xref:System.Reflection.AssemblyName.ToString%2A> method to retrieve the full assembly name, or display name.</span></span>  
  
 [!code-cpp[AssemblyName_GetAssemblyName#2](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CPP/assemblyname_getassemblyname.cpp#2)]
 [!code-csharp[AssemblyName_GetAssemblyName#2](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_GetAssemblyName/CS/assemblyname_getassemblyname.cs#2)]
 [!code-vb[AssemblyName_GetAssemblyName#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_GetAssemblyName/VB/assemblyname_getassemblyname.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public Version Version { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Version Version" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.Version" />
      <MemberSignature Language="VB.NET" Value="Public Property Version As Version" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Version ^ Version { Version ^ get(); void set(Version ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Version : Version with get, set" Usage="System.Reflection.AssemblyName.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Version</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-332">Ruft die Haupt-, Neben-, Build- und Revisionsnummer der Assembly ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-332">Gets or sets the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-333">Ein Objekt, das die Haupt-, Neben-, Build- und Revisionsnummer der Assembly darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-333">An object that represents the major, minor, build, and revision numbers of the assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-334">Alle Komponenten der Version müssen es sich um ganze Zahlen größer oder gleich 0 (null) sein.</span><span class="sxs-lookup"><span data-stu-id="72cb3-334">All components of the version must be integers greater than or equal to zero.</span></span> <span data-ttu-id="72cb3-335">Metadaten beschränken Hauptversion, Nebenversion, Build und Revisionskomponenten für eine Assembly und einen maximalen Wert von <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span><span class="sxs-lookup"><span data-stu-id="72cb3-335">Metadata restricts the major, minor, build, and revision components for an assembly to a maximum value of <xref:System.UInt16.MaxValue?displayProperty=nameWithType> - 1.</span></span> <span data-ttu-id="72cb3-336">Wenn eine Komponente diesen Wert überschreitet, wird kein Fehler ausgelöst. in einer dynamischen Assembly ist diese Komponente jedoch 0 (null).</span><span class="sxs-lookup"><span data-stu-id="72cb3-336">If a component exceeds this value, no error is thrown; however, in a dynamic assembly, that component is zero.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72cb3-337">Dieser Abschnitt enthält zwei Beispiele.</span><span class="sxs-lookup"><span data-stu-id="72cb3-337">This section contains two examples.</span></span> <span data-ttu-id="72cb3-338">Das erste Beispiel zeigt, wie Sie die Version des aktuell ausgeführten Assembly abzurufen.</span><span class="sxs-lookup"><span data-stu-id="72cb3-338">The first example shows how to retrieve the version of the currently executing assembly.</span></span> <span data-ttu-id="72cb3-339">Das zweite Beispiel zeigt, wie Sie mit der <xref:System.Reflection.AssemblyName.Version%2A> Eigenschaft, um die Version der Assembly anzugeben, wenn Sie eine dynamische Assembly ausgeben.</span><span class="sxs-lookup"><span data-stu-id="72cb3-339">The second example shows how to use the <xref:System.Reflection.AssemblyName.Version%2A> property to specify the assembly version when you emit a dynamic assembly.</span></span>  
  
 <span data-ttu-id="72cb3-340">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="72cb3-340">**Example 1**</span></span>  
  
 <span data-ttu-id="72cb3-341">Im folgenden Beispiel ruft ab und zeigt die Versionsnummern der aktuell ausgeführten Assembly und die Assembly mit der <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="72cb3-341">The following example retrieves and displays the version numbers of the currently executing assembly and the assembly that contains the <xref:System.String> class.</span></span>  
  
 [!code-cpp[AssemblyName.Version#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName.Version/cpp/Example.cpp#1)]
 [!code-csharp[AssemblyName.Version#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName.Version/cs/Example.cs#1)]
 [!code-vb[AssemblyName.Version#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName.Version/vb/Example.vb#1)]  
  
 <span data-ttu-id="72cb3-342">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="72cb3-342">**Example 2**</span></span>  
  
 <span data-ttu-id="72cb3-343">Im folgenden Beispiel gibt eine dynamische Assembly und speichert sie in das aktuelle Verzeichnis.</span><span class="sxs-lookup"><span data-stu-id="72cb3-343">The following example emits a dynamic assembly and saves it to the current directory.</span></span> <span data-ttu-id="72cb3-344">Wenn die Assembly erstellt wird, die <xref:System.Reflection.AssemblyName.Version%2A> Eigenschaft wird verwendet, um Versionsinformationen für die Assembly anzugeben.</span><span class="sxs-lookup"><span data-stu-id="72cb3-344">When the assembly is created, the <xref:System.Reflection.AssemblyName.Version%2A> property is used to specify version information for the assembly.</span></span>  
  
 [!code-cpp[AssemblyName_Constructor#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyName_Constructor/CPP/assemblyname_constructor.cpp#3)]
 [!code-csharp[AssemblyName_Constructor#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyName_Constructor/CS/assemblyname_constructor.cs#3)]
 [!code-vb[AssemblyName_Constructor#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyName_Constructor/VB/assemblyname_constructor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VersionCompatibility">
      <MemberSignature Language="C#" Value="public System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Configuration.Assemblies.AssemblyVersionCompatibility VersionCompatibility" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VersionCompatibility As AssemblyVersionCompatibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Configuration::Assemblies::AssemblyVersionCompatibility VersionCompatibility { System::Configuration::Assemblies::AssemblyVersionCompatibility get(); void set(System::Configuration::Assemblies::AssemblyVersionCompatibility value); };" />
      <MemberSignature Language="F#" Value="member this.VersionCompatibility : System.Configuration.Assemblies.AssemblyVersionCompatibility with get, set" Usage="System.Reflection.AssemblyName.VersionCompatibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.Assemblies.AssemblyVersionCompatibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="72cb3-345">Ruft die Informationen ab, die sich auf die Kompatibilität der Assembly mit anderen Assemblys beziehen, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-345">Gets or sets the information related to the assembly's compatibility with other assemblies.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="72cb3-346">Ein Wert, der Informationen über die Kompatibilität der Assembly mit anderen Assemblys darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="72cb3-346">A value that represents information about the assembly's compatibility with other assemblies.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72cb3-347"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> Informationen gibt an, z. B., dass die Seite-an-Seite mit anderen Versionen aufgrund von Konflikten in die Assembly über einen Gerätetreiber ausgeführt werden kann.</span><span class="sxs-lookup"><span data-stu-id="72cb3-347"><xref:System.Reflection.AssemblyName.VersionCompatibility%2A> information indicates, for example, that the assembly cannot execute side-by-side with other versions due to conflicts over a device driver.</span></span>  
  
 <span data-ttu-id="72cb3-348">Derzeit <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> gibt immer <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, und wird nicht vom Ladeprogramm verwendet.</span><span class="sxs-lookup"><span data-stu-id="72cb3-348">Currently, <xref:System.Reflection.AssemblyName.VersionCompatibility%2A> always returns <xref:System.Configuration.Assemblies.AssemblyVersionCompatibility.SameMachine?displayProperty=nameWithType>, and is not used by the loader.</span></span> <span data-ttu-id="72cb3-349">Diese Eigenschaft ist für eine zukünftige Funktion reserviert.</span><span class="sxs-lookup"><span data-stu-id="72cb3-349">This property is reserved for a future feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>