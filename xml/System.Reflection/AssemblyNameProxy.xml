<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AssemblyNameProxy.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b1f1ad313660816b1d897846b49b9f9e8443cd2b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b1f1ad313660816b1d897846b49b9f9e8443cd2b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.AssemblyNameProxy">
          <source>Provides a remotable version of the <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph>.</source>
          <target state="translated">Stellt eine Version von <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph> mit Remoteunterstützung zur Verfügung.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameProxy" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyNameProxy" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>The assembly file for which to get the <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph>.</source>
          <target state="translated">Die Assemblydatei, für die der <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph> abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>Gets the <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph> for a given file.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph> für eine angegebene Datei ab.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>An <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph> object representing the given file.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="AssemblyName" /&gt;</ph>-Objekt, das die angegebene Datei darstellt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>This will only work if the file contains an assembly manifest.</source>
          <target state="translated">Dies funktioniert nur, wenn die Datei ein Assemblymanifest enthält.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>This method causes the file to be opened and closed.</source>
          <target state="translated">Diese Methode bewirkt, dass die Datei geöffnet und geschlossen werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is empty.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> ist leer.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not found.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> wurde nicht gefunden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> is not a valid assembly.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="assemblyFile" /&gt;</ph> ist keine gültige Assembly.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>for access to information in the path.</source>
          <target state="translated">für den Zugriff auf Informationen im Pfad.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Reflection.AssemblyNameProxy.GetAssemblyName(System.String)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.FileIOPermissionAccess.PathDiscovery" /&gt;</ph></target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>