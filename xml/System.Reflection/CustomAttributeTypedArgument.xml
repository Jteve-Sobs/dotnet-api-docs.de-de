<Type Name="CustomAttributeTypedArgument" FullName="System.Reflection.CustomAttributeTypedArgument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="155eb403f2f9f61c1a95de46e16c401fd50f764d" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52342220" /></Metadata><TypeSignature Language="C#" Value="public struct CustomAttributeTypedArgument" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit CustomAttributeTypedArgument extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeTypedArgument" />
  <TypeSignature Language="VB.NET" Value="Public Structure CustomAttributeTypedArgument" />
  <TypeSignature Language="C++ CLI" Value="public value class CustomAttributeTypedArgument" />
  <TypeSignature Language="F#" Value="type CustomAttributeTypedArgument = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt ein Argument eines benutzerdefinierten Attributs im Reflection-Only-Kontext oder ein Element eines Arrayarguments dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Code, der in den ReflectionOnly Kontext überprüft wird kann nicht ausgeführt werden, sodass es nicht immer möglich, benutzerdefinierte Attribute zu überprüfen, indem das Erstellen von Instanzen, die sie und klicken Sie dann ihre Eigenschaften untersucht, die Verwendung von Methoden wie <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType>, <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=nameWithType>usw. . Wenn der Code für den Attributtyp selbst in den ReflectionOnly-Kontext geladen wird, kann er nicht ausgeführt werden.  
  
 Die <xref:System.Reflection.CustomAttributeNamedArgument> Struktur wird verwendet, durch die <xref:System.Reflection.CustomAttributeData> Klasse, um den Zugriff auf den Typ und Wert des positionelle Argumente für eine benutzerdefinierte Attributinstanz angegeben werden, ohne dass Sie den Konstruktor des Attributs ausgeführt bereitzustellen. Es bietet auch Zugriff auf den Typ und Wert ein benanntes Argument ohne Ausführung des Codes der entsprechenden Eigenschaft des benutzerdefinierten Attributtyps.  
  
 Die Typen und Werte aller positionelle und benannte Argumente eine Instanz des werden bereitgestellt, indem <xref:System.Reflection.CustomAttributeTypedArgument> Strukturen. Zurückgegebenes Positionsargumente der <xref:System.Reflection.CustomAttributeData.ConstructorArguments%2A?displayProperty=nameWithType> Eigenschaft direkt von dargestellt sind <xref:System.Reflection.CustomAttributeTypedArgument> Strukturen, aber die benannten Argumente, die vom der <xref:System.Reflection.CustomAttributeData.NamedArguments%2A?displayProperty=nameWithType> Eigenschaft durch dargestellt <xref:System.Reflection.CustomAttributeNamedArgument> Strukturen; zum Abrufen der <xref:System.Reflection.CustomAttributeTypedArgument> Struktur für ein benanntes Argument, verwenden die <xref:System.Reflection.CustomAttributeNamedArgument.TypedValue%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Ein Argument ist ein Array von Werten, die <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> Eigenschaft der <xref:System.Reflection.CustomAttributeTypedArgument> , dass, stellt das Argument ein generisches zurückgibt <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Reflection.CustomAttributeTypedArgument> Objekte. Jede <xref:System.Reflection.CustomAttributeTypedArgument> Objekt in der Auflistung darstellt, das entsprechende Element des Arrays.  
  
 Zum Erstellen von Instanzen von der <xref:System.Reflection.CustomAttributeData> Klasse, verwenden Sie die `static` <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A> Factorymethode.  
  
   
  
## Examples  
 Das folgende Beispiel definiert ein benutzerdefiniertes Attribut mit vier Konstruktoren und vier Eigenschaften. Zwei Eigenschaften sind schreibgeschützt und werden mit die Positionsparameter der Konstruktoren festgelegt. Die anderen beiden Eigenschaften weisen Lese-/Schreibzugriff und kann sein Satz nur mithilfe von benannten Argumente. Eine mit Feldern fester Breite-Eigenschaft ist ein Array von Zeichenfolgen, und eine benannte Eigenschaft ist ein Array von ganzen Zahlen.  
  
 Das Attribut wird auf die Assembly angewendet sowie auf einen in der Assembly deklarierten Typ, eine Methode dieses Typs und einen Parameter der Methode. In diesen Fällen werden die verschiedene Konstruktoren verwendet. Bei der Ausführung wird die Assembly selbst in den ReflectionOnly Kontext geladen, und zeigt die benutzerdefinierte Attribute an.  
  
 Speicherarray-Eigenschaften, mit benannten und Positionsargumenten veranschaulicht, das Attribut, das in den Typ angewendet wird.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.CustomAttributeData" />
    <altmember cref="T:System.Reflection.CustomAttributeNamedArgument" />
    <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Der Wert des benutzerdefinierten Attributarguments.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Klasse mit dem angegebenen Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `value` Parameter darf nicht sein `null` für diesen Konstruktor, da der Typ des Arguments, vom Typ des abgeleitet wird `value`. Angeben einer `null` -Werts der <xref:System.Reflection.CustomAttributeTypedArgument.%23ctor%28System.Type%2CSystem.Object%29> Konstruktor.  
  
 Dieser Konstruktor ist für die Verwendung durch Erben von der <xref:System.Reflection.CustomAttributeTypedArgument> Klasse. Es ist nicht für die Verwendung in Anwendungscode vorgesehen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomAttributeTypedArgument (Type argumentType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type argumentType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (argumentType As Type, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomAttributeTypedArgument(Type ^ argumentType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Reflection.CustomAttributeTypedArgument : Type * obj -&gt; System.Reflection.CustomAttributeTypedArgument" Usage="new System.Reflection.CustomAttributeTypedArgument (argumentType, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="argumentType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="argumentType">Der Typ des benutzerdefinierten Attributarguments.</param>
        <param name="value">Der Wert des benutzerdefinierten Attributarguments.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Klasse mit dem angegebenen Typ und Wert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ist für die Verwendung durch Erben von der <xref:System.Reflection.CustomAttributeTypedArgument> Klasse. Es ist nicht für die Verwendung in Anwendungscode vorgesehen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="argumentType" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ArgumentType">
      <MemberSignature Language="C#" Value="public Type ArgumentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ArgumentType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ArgumentType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ArgumentType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ArgumentType : Type" Usage="System.Reflection.CustomAttributeTypedArgument.ArgumentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Typ des Arguments oder des Arrayargumentelements ab.</summary>
        <value>Ein <see cref="T:System.Type" />-Objekt, das den Typ des Arguments oder des Arrayelements darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für einfache Argumente oder für Elemente des von Arrayargumenten wird durch diese Eigenschaft identifiziert, den tatsächlichen Typ der von zurückgegebene Wert die <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> Eigenschaft. Für Arrayargumente, diese Eigenschaft gibt den Arraytyp zurück, aber die <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> -Eigenschaft gibt eine `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic) in dem jedes Element der Auflistung das entsprechende Element des Arrayarguments darstellt.  
  
   
  
## Examples  
 Das folgende Beispiel definiert ein benutzerdefiniertes Attribut mit vier Konstruktoren und vier Eigenschaften. Zwei Eigenschaften sind schreibgeschützt und werden mit die Positionsparameter der Konstruktoren festgelegt. Die anderen beiden Eigenschaften weisen Lese-/Schreibzugriff und kann sein Satz nur mithilfe von benannten Argumente. Eine mit Feldern fester Breite-Eigenschaft ist ein Array von Zeichenfolgen, und eine benannte Eigenschaft ist ein Array von ganzen Zahlen.  
  
 Das Attribut wird auf die Assembly angewendet sowie auf einen in der Assembly deklarierten Typ, eine Methode dieses Typs und einen Parameter der Methode. In diesen Fällen werden die verschiedene Konstruktoren verwendet. Bei der Ausführung wird die Assembly selbst in den ReflectionOnly Kontext geladen, und zeigt die benutzerdefinierte Attribute an.  
  
 Speicherarray-Eigenschaften, mit benannten und Positionsargumenten veranschaulicht, das Attribut, das in den Typ angewendet wird.  
  
 Die <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Eigenschaft wird verwendet, der `ShowValueOrArray` -Methode, die benutzerdefinierten Attributdaten werden angezeigt, um die Typen von Attributen anzuzeigen.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.CustomAttributeTypedArgument.Value" />
        <altmember cref="Overload:System.Reflection.Assembly.ReflectionOnlyLoad" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="customAttributeTypedArgument.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Ein weiteres Objekt für den Vergleich.</param>
        <summary>Gibt an, ob diese Instanz und ein angegebenes Objekt gleich sind.</summary>
        <returns><see langword="true" />, wenn <paramref name="obj" /> und diese Instanz denselben Typ aufweisen und denselben Wert darstellen, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="customAttributeTypedArgument.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt den Hashcode für diese Instanz zurück.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen. Diese ist der Hashcode für die Instanz.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Equality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">Die <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Struktur auf der linken Seite des Gleichheitsoperators.</param>
        <param name="right">Die <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Struktur auf der rechten Seite des Gleichheitsoperators.</param>
        <summary>Testet, ob zwei <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Strukturen gleich sind.</summary>
        <returns><see langword="true" />, wenn die beiden <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Strukturen gleich sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.CustomAttributeTypedArgument left, System.Reflection.CustomAttributeTypedArgument right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.CustomAttributeTypedArgument left, valuetype System.Reflection.CustomAttributeTypedArgument right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.op_Inequality(System.Reflection.CustomAttributeTypedArgument,System.Reflection.CustomAttributeTypedArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As CustomAttributeTypedArgument, right As CustomAttributeTypedArgument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::CustomAttributeTypedArgument left, System::Reflection::CustomAttributeTypedArgument right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.CustomAttributeTypedArgument * System.Reflection.CustomAttributeTypedArgument -&gt; bool" Usage="System.Reflection.CustomAttributeTypedArgument.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.CustomAttributeTypedArgument" />
        <Parameter Name="right" Type="System.Reflection.CustomAttributeTypedArgument" />
      </Parameters>
      <Docs>
        <param name="left">Die <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Struktur auf der linken Seite des Ungleichheitsoperators.</param>
        <param name="right">Die <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Struktur auf der rechten Seite des Ungleichheitsoperators.</param>
        <summary>Testet, ob zwei <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Strukturen verschieden sind.</summary>
        <returns><see langword="true" />, wenn die beiden <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Strukturen verschieden sind; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Die entsprechende Methode für diesen Operator <xref:System.Reflection.CustomAttributeTypedArgument.Equals%2A?displayProperty=nameWithType>.]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeTypedArgument.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="customAttributeTypedArgument.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Zeichenfolge mit den Namen des Arguments, dem Gleichheitszeichen und einer Zeichenfolgendarstellung des Argumentwerts zurück.</summary>
        <returns>Eine Zeichenfolge mit den Namen des Arguments, dem Gleichheitszeichen und einer Zeichenfolgendarstellung des Argumentwerts.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj" Usage="System.Reflection.CustomAttributeTypedArgument.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft für ein einfaches Argument oder ein Element eines Arrayarguments den Wert des Arguments ab. Ruft für ein Arrayargument eine Auflistung von Werten ab.</summary>
        <value>Ein Objekt, das den Wert des Arguments oder Elements darstellt, oder eine generische <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> von <see cref="T:System.Reflection.CustomAttributeTypedArgument" />-Objekten, die die Werte eines Arraytyparguments darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die <xref:System.Reflection.CustomAttributeTypedArgument> ein Arrayarguments darstellt, gibt diese Eigenschaft eine `ReadOnlyCollection<CustomAttributeTypedArgument>` (`ReadOnlyCollection(Of CustomAttributeTypedArgument)` in Visual Basic). Jedes Element der Auflistung stellt das entsprechende Element eines Arrayarguments dar.  
  
 Der Typ des Werts abgerufen werden kann, mithilfe der <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Eigenschaft. <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> Ruft den tatsächlichen Typ, der den Rückgabewert von der <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> -Eigenschaft für einfache Argumente oder Elemente von Arrayargumenten. Es gibt den Arraytyp "für Arrayargumente zurück.  
  
   
  
## Examples  
 Das folgende Beispiel definiert ein benutzerdefiniertes Attribut mit vier Konstruktoren und vier Eigenschaften. Zwei Eigenschaften sind schreibgeschützt und werden mit die Positionsparameter der Konstruktoren festgelegt. Die anderen beiden Eigenschaften weisen Lese-/Schreibzugriff und kann sein Satz nur mithilfe von benannten Argumente. Eine mit Feldern fester Breite-Eigenschaft ist ein Array von Zeichenfolgen, und eine benannte Eigenschaft ist ein Array von ganzen Zahlen.  
  
 Das Attribut wird auf die Assembly angewendet sowie auf einen in der Assembly deklarierten Typ, eine Methode dieses Typs und einen Parameter der Methode. In diesen Fällen werden die verschiedene Konstruktoren verwendet. Bei der Ausführung wird die Assembly selbst in den ReflectionOnly Kontext geladen, und zeigt die benutzerdefinierte Attribute an.  
  
 Speicherarray-Eigenschaften, mit benannten und Positionsargumenten veranschaulicht, das Attribut, das in den Typ angewendet wird.  
  
 Die <xref:System.Reflection.CustomAttributeTypedArgument.Value%2A> Eigenschaft wird verwendet, der `ShowValueOrArray` -Methode, die benutzerdefinierten Attributdaten werden angezeigt, um die Werte der Attribute anzuzeigen.  
  
 [!code-cpp[CustomAttributeData#1](~/samples/snippets/cpp/VS_Snippets_CLR/CustomAttributeData/CPP/source.cpp#1)]
 [!code-csharp[CustomAttributeData#1](~/samples/snippets/csharp/VS_Snippets_CLR/CustomAttributeData/CS/source.cs#1)]
 [!code-vb[CustomAttributeData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/CustomAttributeData/VB/source.vb#1)]  
  
 <xref:System.Reflection.CustomAttributeTypedArgument.ArgumentType%2A> &#124; <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>