<Type Name="PropertyInfo" FullName="System.Reflection.PropertyInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5f0971505a973d1be41974cd5c21f1ed29a9bb62" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70324379" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit PropertyInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._PropertyInfo" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.PropertyInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyInfo&#xA;Inherits MemberInfo&#xA;Implements _PropertyInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_PropertyInfo" />
  <TypeSignature Language="F#" Value="type PropertyInfo = class&#xA;    inherit MemberInfo&#xA;    interface _PropertyInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._PropertyInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._PropertyInfo))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8bde7-101">Ermittelt die Attribute einer Eigenschaft und bietet Zugriff auf die Metadaten der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-101">Discovers the attributes of a property and provides access to property metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-102">Eigenschaften sind logisch identisch mit Feldern.</span><span class="sxs-lookup"><span data-stu-id="8bde7-102">Properties are logically the same as fields.</span></span> <span data-ttu-id="8bde7-103">Eine Eigenschaft ist ein benannter Aspekt des Zustands eines Objekts, dessen Wert in der `get` Regel `set` über-und-Accessoren zugänglich ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-103">A property is a named aspect of an object's state whose value is typically accessible through `get` and `set` accessors.</span></span> <span data-ttu-id="8bde7-104">Eigenschaften können schreibgeschützt sein. in diesem Fall wird eine Set-Routine nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-104">Properties may be read-only, in which case a set routine is not supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-105">Um zu ermitteln, ob eine `static`Eigenschaft ist, müssen Sie <xref:System.Reflection.MethodInfo> die für `get` den `set` -oder-Accessor abrufen <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> , indem <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> Sie die-Methode oder <xref:System.Reflection.MethodBase.IsStatic%2A> die-Methode aufrufen und deren-Eigenschaft überprüfen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-105">To determine whether a property is `static`, you must obtain the <xref:System.Reflection.MethodInfo> for the `get` or `set` accessor, by calling the <xref:System.Reflection.PropertyInfo.GetGetMethod%2A> or the <xref:System.Reflection.PropertyInfo.GetSetMethod%2A> method, and examine its <xref:System.Reflection.MethodBase.IsStatic%2A> property.</span></span>  
  
 <span data-ttu-id="8bde7-106">Mehrere Methoden in dieser Klasse nehmen an, `get` dass die Accessormethoden und `set` Accessormethoden einer Eigenschaft bestimmte Formate aufweisen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-106">Several methods in this class assume that the `get` accessor and `set` accessor methods of a property have certain formats.</span></span> <span data-ttu-id="8bde7-107">Die Signaturen `get` der-Methode `set` und der-Methode müssen der folgenden Konvention entsprechen:</span><span class="sxs-lookup"><span data-stu-id="8bde7-107">The signatures of the `get` and `set` methods must match the following convention:</span></span>  
  
-   <span data-ttu-id="8bde7-108">Der Rückgabetyp `get` der-Methode und das letzte Argument `set` der-Methode müssen identisch sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-108">The return type of the `get` method and the last argument of the `set` method must be identical.</span></span> <span data-ttu-id="8bde7-109">Dies ist der Typ der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-109">This is the type of the property.</span></span>  
  
-   <span data-ttu-id="8bde7-110">Die `get` - `set` Methode und die-Methode müssen über dieselbe Anzahl, denselben Typ und dieselbe Reihenfolge von Indizes verfügen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-110">The `get` and `set` methods must have the same number, type, and order of indices.</span></span>  
  
 <span data-ttu-id="8bde7-111">Wenn dieses Format nicht eingehalten wird, ist das Verhalten `GetValue` der `SetValue` -Methode und der-Methode nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-111">If this format is not followed, the behavior of the `GetValue` and `SetValue` methods is undefined.</span></span>  
  
 <span data-ttu-id="8bde7-112"><xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> DerAufruf`inherit` von `GetCustomAttributes` ,`true` wenn der-Parameter von nicht die Typhierarchie `PropertyInfo` durchläuft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-112">Calling <xref:System.Reflection.ICustomAttributeProvider.GetCustomAttributes%2A?displayProperty=nameWithType> on `PropertyInfo` when the `inherit` parameter of `GetCustomAttributes` is `true` does not walk the type hierarchy.</span></span> <span data-ttu-id="8bde7-113">Verwenden <xref:System.Attribute?displayProperty=nameWithType> Sie, um benutzerdefinierte Attribute zu erben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-113">Use <xref:System.Attribute?displayProperty=nameWithType> to inherit custom attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-114">In diesem Beispiel wird gezeigt, wie verschiedene Reflektionsklassen verwendet werden, um die in einer Assembly enthaltenen Metadaten zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="8bde7-114">This example shows how to use various reflection classes to analyze the metadata contained in an assembly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-115">In diesem Beispiel werden ungefähr 55.000 Zeilen von Daten generiert, die Sie an der Eingabeaufforderung wie folgt an eine Textdatei umleiten können: **example. exe > PropertyInfo. txt**</span><span class="sxs-lookup"><span data-stu-id="8bde7-115">This example generates about 55,000 lines of data, which you can redirect to a text file at the command prompt, as follows: **example.exe > propertyinfo.txt**</span></span>  
  
 [!code-cpp[Reflection#1](~/samples/snippets/cpp/VS_Snippets_CLR/Reflection/CPP/reflection.cpp#1)]
 [!code-csharp[Reflection#1](~/samples/snippets/csharp/VS_Snippets_CLR/Reflection/CS/Reflection.cs#1)]
 [!code-vb[Reflection#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Reflection/VB/Reflection.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand"><span data-ttu-id="8bde7-116">für vollständige Vertrauenswürdigkeit für Vererber.</span><span class="sxs-lookup"><span data-stu-id="8bde7-116">for full trust for inheritors.</span></span> <span data-ttu-id="8bde7-117">Diese Klasse kann von teilweise vertrauenswürdigem Code nicht geerbt werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-117">This class cannot be inherited by partially trusted code.</span></span></permission>
    <threadsafe><span data-ttu-id="8bde7-118">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="8bde7-118">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="8bde7-119">Wenn <see cref="T:System.Reflection.PropertyInfo" />Sie von erben, müssen Sie die folgenden Member überschreiben <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />: <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, und <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-119">When you inherit from <see cref="T:System.Reflection.PropertyInfo" />, you must override the following members: <see cref="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />, <see cref="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />, <see cref="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />, and <see cref="M:System.Reflection.PropertyInfo.GetIndexParameters" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyInfo ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyInfo();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-120">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.PropertyInfo" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-120">Initializes a new instance of the <see cref="T:System.Reflection.PropertyInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-121">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-121">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-122">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-122">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.PropertyAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As PropertyAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::PropertyAttributes Attributes { System::Reflection::PropertyAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.PropertyAttributes" Usage="System.Reflection.PropertyInfo.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-123">Ruft die Attribute für diese Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-123">Gets the attributes for this property.</span></span></summary>
        <value><span data-ttu-id="8bde7-124">Die Attribute für diese Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-124">The attributes of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-125">Die <xref:System.Reflection.PropertyInfo.Attributes%2A> -Eigenschaft gibt die Attribute zurück, die der durch dieses <xref:System.Reflection.PropertyInfo> -Objekt dargestellten Eigenschaft zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-125">The <xref:System.Reflection.PropertyInfo.Attributes%2A> property returns the attributes associated with the property represented by this <xref:System.Reflection.PropertyInfo> object.</span></span>  <span data-ttu-id="8bde7-126">Die Attribute sind primär modifiziererer, die beim Erstellen einer Eigenschaft von einem Compiler angewendet werden. Sie geben an, ob eine Eigenschaft die Standard Eigenschaft, `SpecialName` eine Eigenschaft usw. ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-126">The attributes are primarily modifiers applied by a compiler when creating a property; they indicate whether a property is the default property, a `SpecialName` property, and so on.</span></span> <span data-ttu-id="8bde7-127">Beachten Sie, dass für fast alle Eigenschaften, die in Typen in der .NET Framework-Klassenbibliothek gefunden werden <xref:System.Reflection.PropertyInfo.Attributes%2A> , der <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>Wert der-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-127">Note that, for almost all properties found in types in the .NET Framework class library, the value of the <xref:System.Reflection.PropertyInfo.Attributes%2A> property is <xref:System.Reflection.PropertyAttributes.None?displayProperty=nameWithType>.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="8bde7-128">In den meisten Fällen möchten Sie wahrscheinlich die benutzerdefinierten Attribute, die einer Eigenschaft zugeordnet sind, abrufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-128">In most cases, you probably want to retrieve the custom attributes associated with a property.</span></span> <span data-ttu-id="8bde7-129">Rufen Sie hierzu den Wert der <xref:System.Reflection.MemberInfo.CustomAttributes%2A> -Eigenschaft ab, oder rufen Sie eine der über Ladungen <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> der-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="8bde7-129">To do this, retrieve the value of the <xref:System.Reflection.MemberInfo.CustomAttributes%2A> property, or call one of the overloads of the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span>  
  
 <span data-ttu-id="8bde7-130">So erhalten Sie <xref:System.Reflection.PropertyInfo.Attributes%2A> die Eigenschaft:</span><span class="sxs-lookup"><span data-stu-id="8bde7-130">To get the <xref:System.Reflection.PropertyInfo.Attributes%2A> property:</span></span>  
  
1.  <span data-ttu-id="8bde7-131">Ein <xref:System.Type> -Objekt, das den Typ darstellt, zu dem die Eigenschaft gehört.</span><span class="sxs-lookup"><span data-stu-id="8bde7-131">Get a <xref:System.Type> object that represents the type to which the property belongs.</span></span>  
  
2.  <span data-ttu-id="8bde7-132">Rufen Sie <xref:System.Reflection.PropertyInfo> das-Objekt, indem Sie eine <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> Überladung der-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-132">Get the <xref:System.Reflection.PropertyInfo> object by calling an overload of the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method.</span></span>  
  
3.  <span data-ttu-id="8bde7-133">Rufen Sie die Attribute der Eigenschaft aus <xref:System.Reflection.PropertyInfo.Attributes%2A> der-Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-133">Retrieve the property's attributes from the <xref:System.Reflection.PropertyInfo.Attributes%2A> property.</span></span>  
  
 <span data-ttu-id="8bde7-134">Sie können die Attribute einer Eigenschaft für einen Typ definieren, der mithilfe der Reflektionsausgabe dynamisch erstellt wurde, <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> indem Sie eine Überladung der- `attributes` Methode aufrufen und einen Wert für das-Argument angeben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-134">You can define the attributes of a property for a type created dynamically using reflection emit by calling an overload of the <xref:System.Reflection.Emit.TypeBuilder.DefineProperty%2A> method and supplying a value for the `attributes` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.CustomAttributes" />
        <altmember cref="M:System.Reflection.MemberInfo.GetCustomAttributes(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanRead">
      <MemberSignature Language="C#" Value="public abstract bool CanRead { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRead" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanRead" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanRead As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanRead { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRead : bool" Usage="System.Reflection.PropertyInfo.CanRead" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanRead</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-135">Ruft einen Wert ab, der angibt, ob die Eigenschaft gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="8bde7-135">Gets a value indicating whether the property can be read.</span></span></summary>
        <value><span data-ttu-id="8bde7-136"><see langword="true" />, wenn dieses Objekt gelesen werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-136"><see langword="true" /> if this property can be read; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-137">Wenn die Eigenschaft nicht über einen `get` -Accessor verfügt, kann Sie nicht gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-137">If the property does not have a `get` accessor, it cannot be read.</span></span>  
  
 <span data-ttu-id="8bde7-138">Um die `CanRead` Eigenschaft zu erhalten, holen Sie zuerst `Type`die Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-138">To get the `CanRead` property, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-139">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-139">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-140">Holen Sie `PropertyInfo`den `CanRead` Wert aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-140">From the `PropertyInfo`, get the `CanRead` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-141">Im folgenden Beispiel werden zwei Eigenschaften definiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-141">The following example defines two properties.</span></span> <span data-ttu-id="8bde7-142">Die erste Eigenschaft ist lesbar, und `CanRead` die- `true`Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-142">The first property is readable and the `CanRead` property is `true`.</span></span> <span data-ttu-id="8bde7-143">Die zweite Eigenschaft ist nicht lesbar (es ist kein get-Accessor vorhanden), `CanRead` und die `false`-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-143">The second property is not readable (there is no get accessor), and the `CanRead` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanRead Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanRead Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanWrite">
      <MemberSignature Language="C#" Value="public abstract bool CanWrite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanWrite" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.CanWrite" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanWrite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanWrite { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanWrite : bool" Usage="System.Reflection.PropertyInfo.CanWrite" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.CanWrite</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-144">Ruft einen Wert ab, der angibt, ob in die Eigenschaft geschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="8bde7-144">Gets a value indicating whether the property can be written to.</span></span></summary>
        <value><span data-ttu-id="8bde7-145"><see langword="true" />, wenn in diese Eigenschaft geschrieben werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-145"><see langword="true" /> if this property can be written to; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A>gibt `true` zurück, wenn die Eigenschaft `set` über einen-Accessor verfügt, auch wenn `private`der `internal` -Accessor, (oder `Friend` in `protected`Visual Basic) oder ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-146"><xref:System.Reflection.PropertyInfo.CanWrite%2A> returns `true` if the property has a `set` accessor, even if the accessor is `private`, `internal` (or `Friend` in Visual Basic), or `protected`.</span></span>   <span data-ttu-id="8bde7-147">Wenn die Eigenschaft nicht über einen `set` -Accessor verfügt, gibt die Methode zurück. `false`</span><span class="sxs-lookup"><span data-stu-id="8bde7-147">If the property does not have a `set` accessor, the method returns `false`.</span></span>  
  
 <span data-ttu-id="8bde7-148">So erhalten Sie den Wert <xref:System.Reflection.PropertyInfo.CanWrite%2A> der-Eigenschaft:</span><span class="sxs-lookup"><span data-stu-id="8bde7-148">To get the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property:</span></span>  
  
1.  <span data-ttu-id="8bde7-149">Das <xref:System.Type> Objekt des Typs, der die Eigenschaft enthält, wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-149">Get the <xref:System.Type> object of the type that includes the property.</span></span>  
  
2.  <span data-ttu-id="8bde7-150">Ruft den <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> auf, um <xref:System.Reflection.PropertyInfo> das Objekt abzurufen, das die Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-150">Call the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> to get the <xref:System.Reflection.PropertyInfo> object that represents the property.</span></span>  
  
3.  <span data-ttu-id="8bde7-151">Rufen Sie den Wert <xref:System.Reflection.PropertyInfo.CanWrite%2A> der-Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-151">Retrieve the value of the <xref:System.Reflection.PropertyInfo.CanWrite%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-152">Im folgenden Beispiel werden zwei Eigenschaften definiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-152">The following example defines two properties.</span></span> <span data-ttu-id="8bde7-153">Die erste Eigenschaft ist beschreibbar, `CanWrite` und die `true`-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-153">The first property is writable and the `CanWrite` property is `true`.</span></span> <span data-ttu-id="8bde7-154">Die zweite Eigenschaft ist nicht beschreibbar (es ist `set` kein-Accessor vorhanden) `CanWrite` , und `false`die-Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-154">The second property is not writable (there is no `set` accessor), and the `CanWrite` property is `false`.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.CanWrite Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.CanWrite Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="propertyInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-155">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-155">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8bde7-156">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-156">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8bde7-157"><see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-157"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAccessors">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bde7-158">Gibt ein Array der <see langword="get" />-Accessoren und <see langword="set" />-Accessoren für diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-158">Returns an array of the <see langword="get" /> and <see langword="set" /> accessors on this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo[] GetAccessors ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAccessors () As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors " FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : unit -&gt; System.Reflection.MethodInfo[]&#xA;override this.GetAccessors : unit -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-159">Gibt ein Array zurück, dessen Elemente den öffentlichen <see langword="get" />- und <see langword="set" />-Accessor der Eigenschaft reflektieren, die von der aktuellen Instanz reflektiert wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-159">Returns an array whose elements reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span></summary>
        <returns><span data-ttu-id="8bde7-160">Ein Array von <see cref="T:System.Reflection.MethodInfo" />-Objekten, die den öffentlichen <see langword="get" />- und <see langword="set" />-Accessor der Eigenschaft reflektieren, die von der aktuellen Instanz reflektiert wird, sofern gefunden. Andernfalls gibt diese Methode ein Array mit 0 (null) Elementen zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-160">An array of <see cref="T:System.Reflection.MethodInfo" /> objects that reflect the public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance, if found; otherwise, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-161">So wenden Sie <xref:System.Reflection.PropertyInfo.GetAccessors%2A> die-Methode an:</span><span class="sxs-lookup"><span data-stu-id="8bde7-161">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="8bde7-162">Ein <xref:System.Type> -Objekt, das die-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-162">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="8bde7-163">Holen Sie <xref:System.Type> das <xref:System.Reflection.PropertyInfo> -Objekt aus dem-Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-163">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="8bde7-164">Nennen Sie <xref:System.Reflection.PropertyInfo> aus dem-Objekt <xref:System.Reflection.PropertyInfo.GetAccessors%2A> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-164">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-165">Im folgenden Beispiel werden die öffentlichen Accessoren der `ClassWithProperty.Caption` -Eigenschaft abgerufen und Informationen darüber angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-165">The following example retrieves the public accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="8bde7-166">Außerdem wird die <xref:System.Reflection.MethodBase.Invoke%2A> -Methode des Setters aufgerufen, um den Eigenschafts Wert und des Getters zum Abrufen des Eigenschafts Werts festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-166">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/cs/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetAccessors#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getaccessors/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-167">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-167">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-168">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-168">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetAccessors">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo[] GetAccessors (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo[] GetAccessors(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetAccessors(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAccessors (nonPublic As Boolean) As MethodInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::MethodInfo ^&gt; ^ GetAccessors(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetAccessors : bool -&gt; System.Reflection.MethodInfo[]" Usage="propertyInfo.GetAccessors nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetAccessors(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="8bde7-169">Gibt an, ob nicht öffentliche Methoden im zurückgegebenen Array zurückgegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-169">Indicates whether non-public methods should be returned in the returned array.</span></span> <span data-ttu-id="8bde7-170"><see langword="true" />, wenn nicht öffentliche Methoden eingeschlossen werden sollen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-170"><see langword="true" /> if non-public methods are to be included; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8bde7-171">Gibt ein Array zurück, dessen Elemente den öffentlichen und, sofern angegeben, den nicht öffentlichen <see langword="get" />- und <see langword="set" />-Accessoren der Eigenschaft entsprechen, die durch die aktuelle Instanz angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-171">Returns an array whose elements reflect the public and, if specified, non-public <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span></summary>
        <returns><span data-ttu-id="8bde7-172">Ein Array, dessen Elemente den <see langword="get" />- und <see langword="set" />-Accessoren der Eigenschaft entsprechen, die durch die aktuelle Instanz angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-172">An array whose elements reflect the <see langword="get" /> and <see langword="set" /> accessors of the property reflected by the current instance.</span></span> <span data-ttu-id="8bde7-173">Wenn <paramref name="nonPublic" /> gleich <see langword="true" /> ist, enthält dieses Array die öffentlichen und die nicht öffentlichen <see langword="get" />- und <see langword="set" />-Accessoren.</span><span class="sxs-lookup"><span data-stu-id="8bde7-173">If <paramref name="nonPublic" /> is <see langword="true" />, this array contains public and non-public <see langword="get" /> and <see langword="set" /> accessors.</span></span> <span data-ttu-id="8bde7-174">Wenn <paramref name="nonPublic" /> gleich <see langword="false" /> ist, enthält dieses Array nur die öffentlichen <see langword="get" />- und <see langword="set" />-Accessoren.</span><span class="sxs-lookup"><span data-stu-id="8bde7-174">If <paramref name="nonPublic" /> is <see langword="false" />, this array contains only public <see langword="get" /> and <see langword="set" /> accessors.</span></span> <span data-ttu-id="8bde7-175">Wenn keine Accessoren mit der angegebenen Sichtbarkeit gefunden werden, gibt diese Methode ein Array mit 0 Elementen zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-175">If no accessors with the specified visibility are found, this method returns an array with zero (0) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-176">So wenden Sie <xref:System.Reflection.PropertyInfo.GetAccessors%2A> die-Methode an:</span><span class="sxs-lookup"><span data-stu-id="8bde7-176">To call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method:</span></span>  
  
1.  <span data-ttu-id="8bde7-177">Ein <xref:System.Type> -Objekt, das die-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-177">Get a <xref:System.Type> object that represents the class.</span></span>  
  
2.  <span data-ttu-id="8bde7-178">Holen Sie <xref:System.Type> das <xref:System.Reflection.PropertyInfo> -Objekt aus dem-Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-178">From the <xref:System.Type> object, get the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
3.  <span data-ttu-id="8bde7-179">Nennen Sie <xref:System.Reflection.PropertyInfo> aus dem-Objekt <xref:System.Reflection.PropertyInfo.GetAccessors%2A> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-179">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.GetAccessors%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-180">Im folgenden Beispiel werden die Accessoren der `ClassWithProperty.Caption` -Eigenschaft abgerufen und Informationen darüber angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-180">The following example retrieves the accessors of the `ClassWithProperty.Caption` property and displays information about them.</span></span> <span data-ttu-id="8bde7-181">Außerdem wird die <xref:System.Reflection.MethodBase.Invoke%2A> -Methode des Setters aufgerufen, um den Eigenschafts Wert und des Getters zum Abrufen des Eigenschafts Werts festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-181">It also calls the <xref:System.Reflection.MethodBase.Invoke%2A> method of the setter to set the property value and of the getter to retrieve the property value.</span></span>  
  
 [!code-csharp[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetAccessors1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetAccessors1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-182">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-182">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-183">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-183">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetConstantValue : unit -&gt; obj&#xA;override this.GetConstantValue : unit -&gt; obj" Usage="propertyInfo.GetConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-184">Gibt einen literalen Wert zurück, der der Eigenschaft von einem Compiler zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="8bde7-184">Returns a literal value associated with the property by a compiler.</span></span></summary>
        <returns><span data-ttu-id="8bde7-185">Ein <see cref="T:System.Object" />, das den literalen Wert enthält, der der Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-185">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span></span> <span data-ttu-id="8bde7-186">Wenn der literale Wert ein Klassentyp mit einem Elementwert von 0 (null) ist, lautet der Rückgabewert <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-186">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-187">Diese Methode wird für Designer verwalteter Compiler und Code Analysetools bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-187">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-188">Verwenden Sie diese Methode nicht im reflektionsbasierten Kontext, da dies dazu führen kann, dass Code ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-188">Do not use this method in the reflection-only context, because it might cause code to execute.</span></span> <span data-ttu-id="8bde7-189">Verwenden Sie stattdessen die <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-189">Use the <xref:System.Reflection.PropertyInfo.GetRawConstantValue%2A> method instead.</span></span>  
  
 <span data-ttu-id="8bde7-190">In nicht verwalteten Metadaten wird die Konstante Tabelle zum Speichern konstanter Werte für Felder, Parameter und Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="8bde7-190">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="8bde7-191">Konstante Informationen beeinflussen das Laufzeitverhalten nicht direkt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-191">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="8bde7-192">Compiler untersuchen diese Informationen zur Kompilierzeit beim Importieren von Metadaten.</span><span class="sxs-lookup"><span data-stu-id="8bde7-192">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="8bde7-193">Wenn diese Option verwendet wird, wird der Wert einer Konstanten in den MSIL-Stream (Microsoft Intermediate Language) eingebettet, den der Compiler ausgibt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-193">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="8bde7-194">Es sind keine MSIL-Anweisungen vorhanden, die für den Zugriff auf die Konstante Tabelle zur Laufzeit verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="8bde7-194">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-195">Weitere Informationen über konstante Werte und die Konstante Tabelle finden Sie in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8bde7-195">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="8bde7-196">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8bde7-196">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8bde7-197">Die Tabelle "Constant" in nicht verwalteten Metadaten enthält keinen konstanten Wert für die aktuelle Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-197">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8bde7-198">Der Typ des Werts ist keiner der Typen, die von der Common Language Specification (CLS) zugelassen sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-198">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="8bde7-199">Weitere Informationen finden Sie in der Spezifikation der ECMA Partition II zu Metadaten (auf Englisch).</span><span class="sxs-lookup"><span data-stu-id="8bde7-199">See the ECMA Partition II specification, Metadata.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bde7-200">Gibt eine <see langword="MethodInfo" /> zurück, die den <see langword="get" />-Accessor für diese Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-200">Returns a <see langword="MethodInfo" /> representing the <see langword="get" /> accessor for this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetGetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetGetMethod() cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetGetMethod();" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod " FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetGetMethod();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetGetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-201">Gibt den öffentlichen <see langword="get" />-Accessor für diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-201">Returns the public <see langword="get" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-202">Ein <see langword="MethodInfo" />-Objekt, das den öffentlichen <see langword="get" />-Accessor für diese Eigenschaft darstellt, oder <see langword="null" />, wenn der <see langword="get" />-Accessor nicht öffentlich oder nicht vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-202">A <see langword="MethodInfo" /> object representing the public <see langword="get" /> accessor for this property, or <see langword="null" /> if the <see langword="get" /> accessor is non-public or does not exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-203">Dies ist eine Hilfsmethode, die eine Implementierung für die abstrakte `GetGetMethod` Methode bereitstellt `nonPublic` , bei der `false`der-Parameter auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-203">This is a convenience method that provides an implementation for the abstract `GetGetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="8bde7-204">Um die `GetGetMethod` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-204">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-205">Erhalten Sie im <xref:System.Reflection.PropertyInfo>die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-205">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="8bde7-206">Verwenden Sie <xref:System.Reflection.PropertyInfo>die `GetGetMethod` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-206">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-207">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-207">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-208">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-208">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetGetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetGetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetGetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetGetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetGetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetGetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetGetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetGetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetGetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="8bde7-209">Gibt an, ob ein nicht öffentlicher <see langword="get" />-Accessor zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bde7-209">Indicates whether a non-public <see langword="get" /> accessor should be returned.</span></span> <span data-ttu-id="8bde7-210"><see langword="true" />, wenn ein nicht öffentlicher Accessor zurückgegeben werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-210"><see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8bde7-211">Gibt beim Überschreiben in einer abgeleiteten Klasse den öffentlichen oder nicht öffentlichen <see langword="get" />-Accessor für diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-211">When overridden in a derived class, returns the public or non-public <see langword="get" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-212">Ein <see langword="MethodInfo" />-Objekt, das den <see langword="get" />-Accessor für diese Eigenschaft darstellt, wenn <paramref name="nonPublic" /> den Wert <see langword="true" /> hat.</span><span class="sxs-lookup"><span data-stu-id="8bde7-212">A <see langword="MethodInfo" /> object representing the <see langword="get" /> accessor for this property, if <paramref name="nonPublic" /> is <see langword="true" />.</span></span> <span data-ttu-id="8bde7-213">Gibt <see langword="null" /> zurück, wenn <paramref name="nonPublic" /> den Wert <see langword="false" /> hat und der <see langword="get" />-Accessor nicht öffentlich ist oder wenn <paramref name="nonPublic" /> den Wert <see langword="true" /> hat, aber kein <see langword="get" />-Accessor vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-213">Returns <see langword="null" /> if <paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="get" /> accessor is non-public, or if <paramref name="nonPublic" /> is <see langword="true" /> but no <see langword="get" /> accessors exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-214">Diese Eigenschaft stellt <xref:System.Reflection.MethodInfo> den Get-Accessor dar.</span><span class="sxs-lookup"><span data-stu-id="8bde7-214">This property is the <xref:System.Reflection.MethodInfo> representing the get accessor.</span></span>  
  
 <span data-ttu-id="8bde7-215">Um die `GetGetMethod` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-215">To use the `GetGetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-216">Erhalten Sie im <xref:System.Reflection.PropertyInfo>die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-216">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="8bde7-217">Verwenden Sie <xref:System.Reflection.PropertyInfo>die `GetGetMethod` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-217">From the <xref:System.Reflection.PropertyInfo>, use the `GetGetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-218">Im folgenden Beispiel wird der öffentliche oder nicht öffentliche `get` -Accessor für die angegebene Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-218">The following example displays the public or non-public `get` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetGetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetGetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8bde7-219">Die angeforderte Methode ist nicht öffentlich, und der Aufrufer verfügt nicht über die <see cref="T:System.Security.Permissions.ReflectionPermission" /> zum Reflektieren dieser nicht öffentlichen Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-219">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-220">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-220">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-221">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-221">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="propertyInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-222">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-222">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8bde7-223">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-223">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIndexParameters">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.ParameterInfo[] GetIndexParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.ParameterInfo[] GetIndexParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetIndexParameters" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIndexParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetIndexParameters();" />
      <MemberSignature Language="F#" Value="abstract member GetIndexParameters : unit -&gt; System.Reflection.ParameterInfo[]" Usage="propertyInfo.GetIndexParameters " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIndexParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-224">Gibt beim Überschreiben in einer abgeleiteten Klasse ein Array aller Indexparameter für die Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-224">When overridden in a derived class, returns an array of all the index parameters for the property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-225">Ein Array vom Typ <see langword="ParameterInfo" /> , das die Parameter für die Indizes enthält.</span><span class="sxs-lookup"><span data-stu-id="8bde7-225">An array of type <see langword="ParameterInfo" /> containing the parameters for the indexes.</span></span> <span data-ttu-id="8bde7-226">Wenn die Eigenschaft nicht indiziert ist, enthält das Array 0 (null) Elemente.</span><span class="sxs-lookup"><span data-stu-id="8bde7-226">If the property is not indexed, the array has 0 (zero) elements.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-227">Extrahieren Sie alle erforderlichen Parameterinformationen aus dem zurückgegebenen Array.</span><span class="sxs-lookup"><span data-stu-id="8bde7-227">Extract any required parameter information from the returned array.</span></span>  
  
 <span data-ttu-id="8bde7-228">Um die `GetIndexParameters` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-228">To use the `GetIndexParameters` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-229">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-229">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-230">Verwenden Sie `PropertyInfo`die `GetIndexParameters` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-230">From the `PropertyInfo`, use the `GetIndexParameters` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-231">Im folgenden Beispiel werden die Index Parameter der angegebenen Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-231">The following example displays the index parameters of the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetIndexParameters Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetIndexParameters Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-232">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-233">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo GetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo GetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.GetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property GetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ GetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.GetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-234">Ruft den <see langword="get" />-Accessor für diese Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-234">Gets the <see langword="get" /> accessor for this property.</span></span></summary>
        <value><span data-ttu-id="8bde7-235">Der <see langword="get" />-Accessor für diese Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-235">The <see langword="get" /> accessor for this property.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-236">Gibt ein Array von Typen zurück, die die optionalen benutzerdefinierten Modifizierer der Eigenschaft darstellen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-236">Returns an array of types representing the optional custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-237">Ein Array von <see cref="T:System.Type" />-Objekten, die die optionalen benutzerdefinierten Modifizierer der aktuellen Eigenschaft identifizieren, z. B. <see cref="T:System.Runtime.CompilerServices.IsConst" /> oder <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-237">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-238">Die <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> - <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> Methode und die-Methode werden für Designer verwalteter Compiler bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-238">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="8bde7-239">Weitere Informationen über benutzerdefinierte Modifizierer finden <xref:System.Runtime.CompilerServices.IsBoxed> Sie unter und verwandte Klassen <xref:System.Runtime.CompilerServices> im-Namespace und in der-Metadatenspezifikation in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8bde7-239">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="8bde7-240">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8bde7-240">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetRawConstantValue : unit -&gt; obj&#xA;override this.GetRawConstantValue : unit -&gt; obj" Usage="propertyInfo.GetRawConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-241">Gibt einen literalen Wert zurück, der der Eigenschaft von einem Compiler zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="8bde7-241">Returns a literal value associated with the property by a compiler.</span></span></summary>
        <returns><span data-ttu-id="8bde7-242">Ein <see cref="T:System.Object" />, das den literalen Wert enthält, der der Eigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-242">An <see cref="T:System.Object" /> that contains the literal value associated with the property.</span></span> <span data-ttu-id="8bde7-243">Wenn der literale Wert ein Klassentyp mit einem Elementwert von 0 (null) ist, lautet der Rückgabewert <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-243">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-244">Diese Methode wird für Designer verwalteter Compiler und Code Analysetools bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-244">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="8bde7-245">Diese Methode kann sowohl im Ausführungs Kontext als auch im Reflektionskontext verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-245">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="8bde7-246">In nicht verwalteten Metadaten wird die Konstante Tabelle zum Speichern konstanter Werte für Felder, Parameter und Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="8bde7-246">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="8bde7-247">Konstante Informationen beeinflussen das Laufzeitverhalten nicht direkt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-247">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="8bde7-248">Compiler untersuchen diese Informationen zur Kompilierzeit beim Importieren von Metadaten.</span><span class="sxs-lookup"><span data-stu-id="8bde7-248">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="8bde7-249">Wenn diese Option verwendet wird, wird der Wert einer Konstanten in den MSIL-Stream (Microsoft Intermediate Language) eingebettet, den der Compiler ausgibt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-249">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="8bde7-250">Es sind keine MSIL-Anweisungen vorhanden, die für den Zugriff auf die Konstante Tabelle zur Laufzeit verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="8bde7-250">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-251">Weitere Informationen über konstante Werte und die Konstante Tabelle finden Sie in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8bde7-251">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="8bde7-252">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8bde7-252">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8bde7-253">Die Tabelle "Constant" in nicht verwalteten Metadaten enthält keinen konstanten Wert für die aktuelle Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-253">The Constant table in unmanaged metadata does not contain a constant value for the current property.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8bde7-254">Der Typ des Werts ist keiner der Typen, die von der Common Language Specification (CLS) zugelassen sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-254">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="8bde7-255">Informationen hierzu finden Sie in der ECMA Partition II-Spezifikation unter „Metadata Logical Format: Other Structures, Element Types used in Signatures“.</span><span class="sxs-lookup"><span data-stu-id="8bde7-255">See the ECMA Partition II specification, Metadata Logical Format: Other Structures, Element Types used in Signatures.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="propertyInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-256">Gibt ein Array von Typen zurück, die die erforderlichen benutzerdefinierten Modifizierer der Eigenschaft darstellen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-256">Returns an array of types representing the required custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-257">Ein Array von <see cref="T:System.Type" />-Objekten, die die erforderlichen benutzerdefinierten Modifizierer der aktuellen Eigenschaft identifizieren, z. B. <see cref="T:System.Runtime.CompilerServices.IsConst" /> oder <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-257">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-258">Die <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> - <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> Methode und die-Methode werden für Designer verwalteter Compiler bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-258">The <xref:System.Reflection.PropertyInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.PropertyInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="8bde7-259">Weitere Informationen über benutzerdefinierte Modifizierer finden <xref:System.Runtime.CompilerServices.IsBoxed> Sie unter und verwandte Klassen <xref:System.Runtime.CompilerServices> im-Namespace und in der-Metadatenspezifikation in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8bde7-259">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="8bde7-260">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8bde7-260">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSetMethod">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bde7-261">Gibt eine <see cref="T:System.Reflection.MethodInfo" /> zurück, die den <see langword="set" />-Accessor für diese Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-261">Returns a <see cref="T:System.Reflection.MethodInfo" /> representing the <see langword="set" /> accessor for this property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo GetSetMethod ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.MethodInfo GetSetMethod() cil managed" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSetMethod () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::MethodInfo ^ GetSetMethod();" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod " FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod() cil managed" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Reflection::MethodInfo ^ GetSetMethod();" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetSetMethod : unit -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod " FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-262">Gibt den öffentlichen <see langword="set" />-Accessor für diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-262">Returns the public <see langword="set" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-263">Das <see langword="MethodInfo" />-Objekt, das die <see langword="Set" />-Methode für diese Eigenschaft darstellt, wenn der <see langword="set" />-Accessor öffentlich ist, oder <see langword="null" />, wenn der <see langword="set" />-Accessor nicht öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-263">The <see langword="MethodInfo" /> object representing the <see langword="Set" /> method for this property if the <see langword="set" /> accessor is public, or <see langword="null" /> if the <see langword="set" /> accessor is not public.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-264">Dies ist eine Hilfsmethode, die eine Implementierung für die abstrakte `GetSetMethod` Methode bereitstellt `nonPublic` , bei der `false`der-Parameter auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-264">This is a convenience method that provides an implementation for the abstract `GetSetMethod` method with the `nonPublic` parameter set to `false`.</span></span>  
  
 <span data-ttu-id="8bde7-265">Um die `GetSetMethod` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-265">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-266">Erhalten Sie im <xref:System.Reflection.PropertyInfo>die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-266">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="8bde7-267">Verwenden Sie `PropertyInfo`die `GetSetMethod` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-267">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-268">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-268">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-269">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-269">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetSetMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodInfo GetSetMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodInfo GetSetMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetSetMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSetMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodInfo ^ GetSetMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="abstract member GetSetMethod : bool -&gt; System.Reflection.MethodInfo" Usage="propertyInfo.GetSetMethod nonPublic" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetSetMethod(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.5;netstandard-1.6;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="8bde7-270">Gibt an, ob der Accessor zurückgegeben werden soll, wenn er nicht öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-270">Indicates whether the accessor should be returned if it is non-public.</span></span> <span data-ttu-id="8bde7-271"><see langword="true" />, wenn ein nicht öffentlicher Accessor zurückgegeben werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-271"><see langword="true" /> if a non-public accessor is to be returned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8bde7-272">Gibt beim Überschreiben in einer abgeleiteten Klasse den <see langword="set" />-Accessor für diese Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-272">When overridden in a derived class, returns the <see langword="set" /> accessor for this property.</span></span></summary>
        <returns><span data-ttu-id="8bde7-273">Die <see langword="Set" />-Methode dieser Eigenschaft, oder <see langword="null" />, wie in der folgenden Tabelle gezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-273">This property's <see langword="Set" /> method, or <see langword="null" />, as shown in the following table.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="8bde7-274">Wert</span><span class="sxs-lookup"><span data-stu-id="8bde7-274">Value</span></span> 
 </term><description> <span data-ttu-id="8bde7-275">Bedingung</span><span class="sxs-lookup"><span data-stu-id="8bde7-275">Condition</span></span> 
 </description></listheader><item><term> <span data-ttu-id="8bde7-276">Die <see langword="Set" />-Methode für diese Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-276">The <see langword="Set" /> method for this property.</span></span>  
  
 </term><description> <span data-ttu-id="8bde7-277">Der <see langword="set" />-Accessor ist öffentlich.</span><span class="sxs-lookup"><span data-stu-id="8bde7-277">The <see langword="set" /> accessor is public.</span></span>  
  
<span data-ttu-id="8bde7-278">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-278">-or-</span></span> 
 <span data-ttu-id="8bde7-279"><paramref name="nonPublic" /> ist <see langword="true" />, und der <see langword="set" />-Accessor ist nicht öffentlich.</span><span class="sxs-lookup"><span data-stu-id="8bde7-279"><paramref name="nonPublic" /> is <see langword="true" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
 </description></item><item><term><see langword="null" /></term><description><span data-ttu-id="8bde7-280"><paramref name="nonPublic" /> ist <see langword="true" />, die Eigenschaft ist jedoch schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-280"><paramref name="nonPublic" /> is <see langword="true" />, but the property is read-only.</span></span>  
  
<span data-ttu-id="8bde7-281">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-281">-or-</span></span> 
 <span data-ttu-id="8bde7-282"><paramref name="nonPublic" /> ist <see langword="false" />, und der <see langword="set" />-Accessor ist nicht öffentlich.</span><span class="sxs-lookup"><span data-stu-id="8bde7-282"><paramref name="nonPublic" /> is <see langword="false" /> and the <see langword="set" /> accessor is non-public.</span></span>  
  
<span data-ttu-id="8bde7-283">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-283">-or-</span></span> 
<span data-ttu-id="8bde7-284">Es ist kein <see langword="set" />-Accessor vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-284">There is no <see langword="set" /> accessor.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-285">Um die `GetSetMethod` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-285">To use the `GetSetMethod` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-286">Erhalten Sie im <xref:System.Reflection.PropertyInfo>die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-286">From the `Type`, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="8bde7-287">Verwenden Sie `PropertyInfo`die `GetSetMethod` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-287">From the `PropertyInfo`, use the `GetSetMethod` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-288">Im folgenden Beispiel wird der `set` -Accessor für die angegebene Eigenschaft angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-288">The following example displays the `set` accessor for the specified property.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.GetSetMethod1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.GetSetMethod1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException"><span data-ttu-id="8bde7-289">Die angeforderte Methode ist nicht öffentlich, und der Aufrufer verfügt nicht über die <see cref="T:System.Security.Permissions.ReflectionPermission" /> zum Reflektieren dieser nicht öffentlichen Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-289">The requested method is non-public and the caller does not have <see cref="T:System.Security.Permissions.ReflectionPermission" /> to reflect on this non-public method.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-290">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-290">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-291">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-291">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="propertyInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bde7-292">Gibt den Eigenschaftswert eines angegebenen Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-292">Returns the property value of a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="member this.GetValue : obj -&gt; obj" Usage="propertyInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-293">Das Objekt, dessen Eigenschaftswert zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-293">The object whose property value will be returned.</span></span></param>
        <summary><span data-ttu-id="8bde7-294">Gibt den Eigenschaftswert eines angegebenen Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="8bde7-294">Returns the property value of a specified object.</span></span></summary>
        <returns><span data-ttu-id="8bde7-295">Der -Eigenschaftswert des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-295">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-296">Sie rufen die <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> -Überladung auf, um den Wert einer nicht indizierten Eigenschaft abzurufen. Wenn Sie versuchen, den Wert einer indizierten Eigenschaft abzurufen, löst <xref:System.Reflection.TargetParameterCountException> die Methode eine-Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="8bde7-296">You call the <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%29> overload to retrieve the value of a non-indexed property; if you try to retrieve the value of an indexed property, the method throws a <xref:System.Reflection.TargetParameterCountException> exception.</span></span> <span data-ttu-id="8bde7-297">Sie können bestimmen, ob eine Eigenschaft indiziert wird, indem Sie die <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> -Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-297">You can determine whether a property is indexed or not by calling the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-298">Wenn die Länge des zurückgegebenen <xref:System.Reflection.ParameterInfo> Arrays 0 (null) ist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-298">If the length of the returned <xref:System.Reflection.ParameterInfo> array is zero, the property is not indexed.</span></span>  
  
 <span data-ttu-id="8bde7-299">Dies ist eine Hilfsmethode, die eine Implementierung für die abstrakte <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> Methode bereitstellt <xref:System.Reflection.BindingFlags> , bei der <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>der- <xref:System.Reflection.Binder> Parameter auf `null`festgelegt ist, der auf festgelegt ist `null`, das Objekt Array von Indexwerten auf festgelegt ist. und der <xref:System.Globalization.CultureInfo> auf `null`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-299">This is a convenience method that provides an implementation for the abstract <xref:System.Reflection.PropertyInfo.GetValue%28System.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method with the <xref:System.Reflection.BindingFlags> parameter set to <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType>, the <xref:System.Reflection.Binder> set to `null`, the object array of index values set to `null`, and the <xref:System.Globalization.CultureInfo> set to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-300">Im folgenden Beispiel wird eine `Planet` Klasse definiert, die über zwei `Name`Eigenschaften verfügt:, den Namen des Planeten `Distance`und, den Abstand des Planeten von der Erde.</span><span class="sxs-lookup"><span data-stu-id="8bde7-300">The following example defines a `Planet` class that has two properties: `Name`, the name of the planet; and `Distance`, the planet's distance from Earth.</span></span> <span data-ttu-id="8bde7-301">Das Beispiel instanziiert ein `Planet` -Objekt, das den Planet Jupiter darstellt, und übergibt `GetPropertyValues` es an eine Methode, die Informationen zu den Eigenschaften <xref:System.Reflection.PropertyInfo.GetValue%2A> anzeigt und die-Methode verwendet, `Planet` um den Wert jeder Eigenschaft zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="8bde7-301">The example instantiates a `Planet` object that represents the planet Jupiter and passes it to a `GetPropertyValues` method that displays information about the properties and uses the <xref:System.Reflection.PropertyInfo.GetValue%2A> method to get the value of each `Planet` property.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/cs/getvalue1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.getvalue/vb/getvalue1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object obj, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (obj As Object, index As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ obj, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * obj[] -&gt; obj&#xA;override this.GetValue : obj * obj[] -&gt; obj" Usage="propertyInfo.GetValue (obj, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-302">Das Objekt, dessen Eigenschaftswert zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-302">The object whose property value will be returned.</span></span></param>
        <param name="index"><span data-ttu-id="8bde7-303">Optionale Indexwerte für indizierte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="8bde7-303">Optional index values for indexed properties.</span></span> <span data-ttu-id="8bde7-304">Die Indizes indizierter Eigenschaften sind nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-304">The indexes of indexed properties are zero-based.</span></span> <span data-ttu-id="8bde7-305">Dieser Wert sollte bei nicht indizierten Eigenschaften <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-305">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="8bde7-306">Gibt den Wert der Eigenschaft für das angegebene Objekt mit optionalen Indexwerten für indizierte Eigenschaften fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-306">Returns the property value of a specified object with optional index values for indexed properties.</span></span></summary>
        <returns><span data-ttu-id="8bde7-307">Der -Eigenschaftswert des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-307">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-308">Verwenden Sie die <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> -Methode, um zu bestimmen, ob eine Eigenschaft indiziert ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-308">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-309">Wenn das resultierende Array 0 (null) Elemente aufweist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-309">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="8bde7-310">Dies ist eine Hilfsmethode, die eine Implementierung für die abstrakte `GetValue` Methode mit einem `BindingFlags` Parameter von `Default`, der `Binder` auf `null`festgelegt ist, `CultureInfo` und der `null`auf festgelegte bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-310">This is a convenience method that provides an implementation for the abstract `GetValue` method with a `BindingFlags` parameter of `Default`, the `Binder` set to `null`, and the `CultureInfo` set to `null`.</span></span>  
  
 <span data-ttu-id="8bde7-311">Da statische Eigenschaften zum Typ und nicht zu einzelnen Objekten gehören, erhalten Sie statische Eigenschaften, `null` indem Sie als Objekt Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-311">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="8bde7-312">Verwenden Sie z. b. den folgenden Code, um `CurrentCulture` die statische `CultureInfo` -Eigenschaft von zu erhalten:</span><span class="sxs-lookup"><span data-stu-id="8bde7-312">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
    (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
    CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="8bde7-313">Um die `GetValue` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-313">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-314">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-314">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-315">Verwenden Sie `PropertyInfo`die `GetValue` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-315">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-316">Ab kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der Aufrufer mit dem <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> -Flag erteilt wurde, und wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge beschränkt ist. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Auslegung.</span><span class="sxs-lookup"><span data-stu-id="8bde7-316">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8bde7-317">(Siehe [Sicherheitsüberlegungen für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="8bde7-317">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="8bde7-318">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-318">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-319">Im folgenden Beispiel wird gezeigt, wie Sie den Wert einer indizierten Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="8bde7-319">The following example shows how to get the value of an indexed property.</span></span> <span data-ttu-id="8bde7-320">Die <xref:System.String.Chars%2A?displayProperty=nameWithType> -Eigenschaft ist die Standard Eigenschaft (der Indexer C#in) der <xref:System.String> -Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-320">The <xref:System.String.Chars%2A?displayProperty=nameWithType> property is the default property (the indexer in C#) of the <xref:System.String> class.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.GetValue Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.PropertyInfo.GetValue Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8bde7-321">Das <paramref name="index" />-Array enthält Argumente, die nicht den benötigten Typ haben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-321">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
<span data-ttu-id="8bde7-322">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-322">-or-</span></span> 
<span data-ttu-id="8bde7-323">Der <see langword="get" />-Accessor der Eigenschaft wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-323">The property's <see langword="get" /> accessor is not found.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-324">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-324">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-325">Das Objekt entspricht nicht dem Zieltyp, oder eine Eigenschaft ist eine Instanzeigenschaft, aber <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-325">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="8bde7-326">Die Anzahl von Parametern in <paramref name="index" /> entspricht nicht der Anzahl von Parametern, die die indizierte Eigenschaft akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-326">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-327">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-327">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-328">Es wurde unzulässigerweise versucht, auf eine private oder geschützte Methode innerhalb einer Klasse zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-328">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8bde7-329">Fehler beim Abrufen des Eigenschaftswerts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-329">An error occurred while retrieving the property value.</span></span> <span data-ttu-id="8bde7-330">Beispielsweise liegt ein Indexwert, der für eine indizierte Eigenschaft angegeben ist, außerhalb des gültigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8bde7-330">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="8bde7-331">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt die Ursache des Fehlers an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-331">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-332">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-332">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-333">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-333">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; obj" Usage="propertyInfo.GetValue (obj, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetValue(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="index" Type="System.Object[]" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-334">Das Objekt, dessen Eigenschaftswert zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-334">The object whose property value will be returned.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="8bde7-335">Eine bitweise Kombination der folgenden Enumerationsmember, die das Aufrufattribut angeben: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> und <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-335">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, and <see langword="SetProperty" />.</span></span> <span data-ttu-id="8bde7-336">Es muss ein geeignetes Aufrufattribut angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-336">You must specify a suitable invocation attribute.</span></span> <span data-ttu-id="8bde7-337">Um beispielsweise einen statischen Member aufzurufen, legen Sie das <see langword="Static" />-Flag fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-337">For example, to invoke a static member, set the <see langword="Static" /> flag.</span></span></param>
        <param name="binder"><span data-ttu-id="8bde7-338">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="8bde7-338">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="8bde7-339">Wenn <paramref name="binder" /> den Wert <see langword="null" /> aufweist, wird der Standardbinder verwendet.</span><span class="sxs-lookup"><span data-stu-id="8bde7-339">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="8bde7-340">Optionale Indexwerte für indizierte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="8bde7-340">Optional index values for indexed properties.</span></span> <span data-ttu-id="8bde7-341">Dieser Wert sollte bei nicht indizierten Eigenschaften <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-341">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="8bde7-342">Die Kultur, für die die Ressource lokalisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bde7-342">The culture for which the resource is to be localized.</span></span> <span data-ttu-id="8bde7-343">Die <see cref="P:System.Globalization.CultureInfo.Parent" />-Eigenschaft wird in der Folge für die Suche nach einer Übereinstimmung aufgerufen, wenn die Ressource nicht für diese Kultur lokalisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="8bde7-343">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span></span> <span data-ttu-id="8bde7-344">Wenn dieser Wert <see langword="null" /> ist, wird die kulturspezifische Information aus der <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />-Eigenschaft abgerufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-344">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="8bde7-345">Gibt beim Überschreiben in einer abgeleiteten Klasse den Eigenschaftswert eines angegebenen Objekts zurück, das die angegebene Bindung, den Index und kulturabhängige Informationen besitzt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-345">When overridden in a derived class, returns the property value of a specified object that has the specified binding, index, and culture-specific information.</span></span></summary>
        <returns><span data-ttu-id="8bde7-346">Der -Eigenschaftswert des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-346">The property value of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-347">Verwenden Sie die <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> -Methode, um zu bestimmen, ob eine Eigenschaft indiziert ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-347">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-348">Wenn das resultierende Array 0 (null) Elemente aufweist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-348">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="8bde7-349">Da statische Eigenschaften zum Typ und nicht zu einzelnen Objekten gehören, erhalten Sie statische Eigenschaften, `null` indem Sie als Objekt Argument übergeben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-349">Because static properties belong to the type, not individual objects, get static properties by passing `null` as the object argument.</span></span> <span data-ttu-id="8bde7-350">Verwenden Sie z. b. den folgenden Code, um `CurrentCulture` die statische `CultureInfo` -Eigenschaft von zu erhalten:</span><span class="sxs-lookup"><span data-stu-id="8bde7-350">For example, use the following code to get the static `CurrentCulture` property of `CultureInfo` :</span></span>  
  
```csharp  
PropertyInfo CurCultProp =   
       (typeof(CultureInfo)).GetProperty("CurrentCulture");   
Console.WriteLine("CurrCult: " +  
       CurCultProp.GetValue(null,null));  
```  
  
 <span data-ttu-id="8bde7-351">Um die `GetValue` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-351">To use the `GetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-352">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-352">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-353">Verwenden Sie `PropertyInfo`die `GetValue` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-353">From the `PropertyInfo`, use the `GetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-354">Ab kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der Aufrufer mit dem <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> -Flag erteilt wurde, und wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge beschränkt ist. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Auslegung.</span><span class="sxs-lookup"><span data-stu-id="8bde7-354">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8bde7-355">(Siehe [Sicherheitsüberlegungen für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="8bde7-355">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="8bde7-356">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-356">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8bde7-357">Das <paramref name="index" />-Array enthält Argumente, die nicht den benötigten Typ haben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-357">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
<span data-ttu-id="8bde7-358">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-358">-or-</span></span> 
<span data-ttu-id="8bde7-359">Der <see langword="get" />-Accessor der Eigenschaft wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-359">The property's <see langword="get" /> accessor is not found.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="8bde7-360">Das Objekt entspricht nicht dem Zieltyp, oder eine Eigenschaft ist eine Instanzeigenschaft, aber <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-360">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="8bde7-361">Die Anzahl von Parametern in <paramref name="index" /> entspricht nicht der Anzahl von Parametern, die die indizierte Eigenschaft akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-361">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="8bde7-362">Es wurde unzulässigerweise versucht, auf eine private oder geschützte Methode innerhalb einer Klasse zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-362">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8bde7-363">Fehler beim Abrufen des Eigenschaftswerts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-363">An error occurred while retrieving the property value.</span></span> <span data-ttu-id="8bde7-364">Beispielsweise liegt ein Indexwert, der für eine indizierte Eigenschaft angegeben ist, außerhalb des gültigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8bde7-364">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="8bde7-365">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt die Ursache des Fehlers an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-365">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-366">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-366">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-367">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-367">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Reflection.PropertyInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-368">Ruft einen Wert ab, der angibt, ob es sich bei der Eigenschaft um den besonderen Namen handelt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-368">Gets a value indicating whether the property is the special name.</span></span></summary>
        <value><span data-ttu-id="8bde7-369"><see langword="true" />, wenn es sich bei der Eigenschaft um den besonderen Namen handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-369"><see langword="true" /> if this property is the special name; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-370">Das `SpecialName` -Bit ist auf das Kennzeichnen von Membern festgelegt, die von einigen Compilern (z. b. Eigenschaftenaccessoren und Operator überlade Methoden) auf besondere Weise behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-370">The `SpecialName` bit is set to flag members that are treated in a special way by some compilers (such as property accessors and operator overloading methods).</span></span>  
  
 <span data-ttu-id="8bde7-371">Um die `IsSpecialName` Eigenschaft zu erhalten, holen Sie zuerst `Type`die Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-371">To get the `IsSpecialName` property, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-372">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-372">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-373">Holen Sie `PropertyInfo`den `IsSpecialName` Wert aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-373">From the `PropertyInfo`, get the `IsSpecialName` value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.PropertyInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-374">Ruft einen <see cref="T:System.Reflection.MemberTypes" />-Wert ab, der angibt, dass dieser Member eine Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-374">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span></span></summary>
        <value><span data-ttu-id="8bde7-375">Ein <see cref="T:System.Reflection.MemberTypes" />-Wert, der angibt, dass dieser Member eine Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-375">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-376">Diese Eigenschaft über <xref:System.Reflection.MemberInfo.MemberType%2A>schreibt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-376">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="8bde7-377">Wenn Sie also beispielsweise einen Satz von <xref:System.Reflection.MemberInfo> Objekten untersuchen, gibt das von <xref:System.Type.GetMembers%2A> -der <xref:System.Reflection.MemberInfo.MemberType%2A> -Eigenschaft zurückgegebene <xref:System.Reflection.MemberTypes.Property> Array nur dann zurück, wenn ein angegebenes Element eine Eigenschaft ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-377">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Property> only when a given member is a property.</span></span>  
  
 <span data-ttu-id="8bde7-378">`MemberType`ist eine abgeleitete Klasse `MemberInfo` von und gibt den Typ des Members an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-378">`MemberType` is a derived class of `MemberInfo` and specifies the type of member this is.</span></span> <span data-ttu-id="8bde7-379">Elementtypen sind Konstruktoren, Eigenschaften, Felder und Methoden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-379">Member types are constructors, properties, fields, and methods.</span></span> <span data-ttu-id="8bde7-380">Da es sich hierbei `PropertyInfo` um eine Eigenschaft handelt, ist der zurückgegebene Typ eine Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-380">Since this is a `PropertyInfo` property, the returned type is a property.</span></span>  
  
 <span data-ttu-id="8bde7-381">Um die `MemberType` Eigenschaft zu erhalten, holen Sie zuerst `Type`die Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-381">To get the `MemberType` property, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-382">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-382">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-383">Holen Sie `PropertyInfo`den `MemberType` Wert aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-383">From the `PropertyInfo`, get the `MemberType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-384">Im folgenden Beispiel wird der Typ des angegebenen Members angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-384">The following example displays the type of the specified member.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.MemberType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Equality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8bde7-385">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-385">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8bde7-386">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-386">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="8bde7-387">Gibt an, ob zwei <see cref="T:System.Reflection.PropertyInfo" />-Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-387">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="8bde7-388"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-388"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.PropertyInfo left, System.Reflection.PropertyInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.PropertyInfo left, class System.Reflection.PropertyInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.op_Inequality(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As PropertyInfo, right As PropertyInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::PropertyInfo ^ left, System::Reflection::PropertyInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.PropertyInfo * System.Reflection.PropertyInfo -&gt; bool" Usage="System.Reflection.PropertyInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.PropertyInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="right" Type="System.Reflection.PropertyInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8bde7-389">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-389">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8bde7-390">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-390">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="8bde7-391">Gibt an, ob zwei <see cref="T:System.Reflection.PropertyInfo" />-Objekte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-391">Indicates whether two <see cref="T:System.Reflection.PropertyInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="8bde7-392"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-392"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Reflection.PropertyInfo.PropertyType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.InteropServices._PropertyInfo.PropertyType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-393">Ruft den Typ dieser Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-393">Gets the type of this property.</span></span></summary>
        <value><span data-ttu-id="8bde7-394">Der Typ dieser Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-394">The type of this property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-395">Gehen Sie folgendermaßen vor, um den Typ einer bestimmten Eigenschaft zu ermitteln:</span><span class="sxs-lookup"><span data-stu-id="8bde7-395">To determine the type of a particular property, do the following:</span></span>  
  
1.  <span data-ttu-id="8bde7-396">Ein <xref:System.Type> -Objekt, das den Typ (die Klasse oder Struktur) darstellt, der die Eigenschaft enthält.</span><span class="sxs-lookup"><span data-stu-id="8bde7-396">Get a <xref:System.Type> object that represents the type (the class or structure) that contains the property.</span></span> <span data-ttu-id="8bde7-397">Wenn Sie mit einem Objekt arbeiten (eine Instanz eines Typs), können Sie die <xref:System.Object.GetType%2A> zugehörige-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-397">If you are working with an object (an instance of a type), you can call its <xref:System.Object.GetType%2A> method.</span></span> <span data-ttu-id="8bde7-398">Andernfalls können Sie den C# Operator oder den Visual Basic [GetType](~/docs/visual-basic/language-reference/operators/gettype-operator.md) -Operator verwenden, wie im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="8bde7-398">Otherwise, you can use the C#  operator or the Visual Basic [GetType](~/docs/visual-basic/language-reference/operators/gettype-operator.md) operator, as the example illustrates.</span></span>  
  
2.  <span data-ttu-id="8bde7-399">Ein <xref:System.Reflection.PropertyInfo> -Objekt, das die Eigenschaft darstellt, an der Sie interessiert sind.</span><span class="sxs-lookup"><span data-stu-id="8bde7-399">Get a <xref:System.Reflection.PropertyInfo> object that represents the property in which you're interested.</span></span> <span data-ttu-id="8bde7-400">Hierzu können Sie ein Array aller Eigenschaften aus der <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> Methode abrufen und dann die Elemente im Array durchlaufen, oder Sie können das <xref:System.Reflection.PropertyInfo> Objekt, das die Eigenschaft darstellt, direkt durch Aufrufen der <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> -Methode abrufen und angeben. der Eigenschaftsname.</span><span class="sxs-lookup"><span data-stu-id="8bde7-400">You can do this by getting an array of all properties from the <xref:System.Type.GetProperties%2A?displayProperty=nameWithType> method and then iterating the elements in the array, or you can retrieve the <xref:System.Reflection.PropertyInfo> object that represents the property directly by calling the <xref:System.Type.GetProperty%2A?displayProperty=nameWithType> method and specifying the property name.</span></span>  
  
3.  <span data-ttu-id="8bde7-401">Rufen Sie den Wert der <xref:System.Reflection.PropertyInfo.PropertyType%2A> -Eigenschaft aus <xref:System.Reflection.PropertyInfo> dem-Objekt ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-401">Retrieve the value of the <xref:System.Reflection.PropertyInfo.PropertyType%2A> property from the <xref:System.Reflection.PropertyInfo> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-402">Im folgenden Beispiel wird eine `Employee` -Klasse definiert, die über fünf Eigenschaften verfügt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-402">The following example defines an `Employee` class that has five properties.</span></span> <span data-ttu-id="8bde7-403">Anschließend wird ein Array von <xref:System.Reflection.PropertyInfo> -Objekten abgerufen, die diese Eigenschaften darstellen, und der Name und Typ der einzelnen Objekte werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-403">It then uses retrieves an array of <xref:System.Reflection.PropertyInfo> objects that represent those properties and displays the name and type of each.</span></span>  
  
 [!code-csharp[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/cs/propertytype1.cs#1)]
 [!code-vb[System.Reflection.PropertyInfo.PropertyType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.reflection.propertyinfo.propertytype/vb/propertytype1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMethod">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.MethodInfo SetMethod { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo SetMethod" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.PropertyInfo.SetMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SetMethod As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ SetMethod { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SetMethod : System.Reflection.MethodInfo" Usage="System.Reflection.PropertyInfo.SetMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8bde7-404">Ruft den <see langword="set" />-Accessor für diese Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-404">Gets the <see langword="set" /> accessor for this property.</span></span></summary>
        <value><span data-ttu-id="8bde7-405">Der <see langword="set" /> -Accessor für diese Eigenschaft oder <see langword="null" /> , wenn die Eigenschaft schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-405">The <see langword="set" /> accessor for this property, or <see langword="null" /> if the property is read-only.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-406">Das Abrufen des <xref:System.Reflection.PropertyInfo.SetMethod%2A> Werts der-Eigenschaft entspricht dem Aufrufen der <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> - `true` Methode mit dem-Wert für das `nonPublic` -Argument.</span><span class="sxs-lookup"><span data-stu-id="8bde7-406">Retrieving the value of the <xref:System.Reflection.PropertyInfo.SetMethod%2A> property is equivalent to calling the <xref:System.Reflection.PropertyInfo.GetSetMethod%28System.Boolean%29> method with a value of `true` for the `nonPublic` argument.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.PropertyInfo.GetMethod" />
        <altmember cref="P:System.Reflection.PropertyInfo.CanWrite" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8bde7-407">Legt den Eigenschaftswert für ein angegebenes Objekts fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-407">Sets the property value for a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * obj -&gt; unit" Usage="propertyInfo.SetValue (obj, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-408">Das Objekt, dessen Eigenschaftswert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-408">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="8bde7-409">Der neue Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-409">The new property value.</span></span></param>
        <summary><span data-ttu-id="8bde7-410">Legt den Eigenschaftswert des angegebenen Objekts fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-410">Sets the property value of a specified object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-411">Die <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> -Überladung legt den Wert einer nicht indizierten Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-411">The <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> overload sets the value of a non-indexed property.</span></span> <span data-ttu-id="8bde7-412">Um zu ermitteln, ob eine Eigenschaft indiziert ist, <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> müssen Sie die-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-412">To determine whether a property is indexed, call the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-413">Wenn das resultierende Array 0 (null) Elemente aufweist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-413">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span> <span data-ttu-id="8bde7-414">Um den Wert einer indizierten Eigenschaft festzulegen, müssen <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> Sie die-Überladung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-414">To set the value of an indexed property, call the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Object%5B%5D%29> overload.</span></span>  
  
 <span data-ttu-id="8bde7-415">Wenn der Eigenschaftentyp <xref:System.Reflection.PropertyInfo> dieses Objekts ein Werttyp `value` und `null`ist, wird die-Eigenschaft auf den Standardwert für diesen Typ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-415">If the property type of this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="8bde7-416">Dies ist eine Hilfsmethode, die die Lauf Zeit Implementierung der abstrakten <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> Methode aufruft und <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> `Binder`für `null` den `BindingFlags` Parameter, `null` `Object[]`für, und angibt.`null` für .`CultureInfo`</span><span class="sxs-lookup"><span data-stu-id="8bde7-416">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, `null` for `Object[]`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="8bde7-417">Um die <xref:System.Reflection.PropertyInfo.SetValue%2A> -Methode zu verwenden, erhalten <xref:System.Type> Sie zuerst ein-Objekt, das die-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-417">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="8bde7-418">Im können Sie das <xref:System.Reflection.PropertyInfo> -Objekt erhalten. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="8bde7-418">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo> object.</span></span> <span data-ttu-id="8bde7-419">Nennen Sie <xref:System.Reflection.PropertyInfo> aus dem-Objekt <xref:System.Reflection.PropertyInfo.SetValue%2A> die-Methode.</span><span class="sxs-lookup"><span data-stu-id="8bde7-419">From the <xref:System.Reflection.PropertyInfo> object, call the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-420">Ab kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der Aufrufer mit dem <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> -Flag erteilt wurde, und wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge beschränkt ist. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Auslegung.</span><span class="sxs-lookup"><span data-stu-id="8bde7-420">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8bde7-421">(Siehe [Sicherheitsüberlegungen für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="8bde7-421">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="8bde7-422">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-422">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-423">Im folgenden Beispiel wird eine Klasse mit `Example` dem Namen `static` mit`Shared` einer (in Visual Basic) und einer Instanzeigenschaft deklariert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-423">The following example declares a class named `Example` with one `static` (`Shared` in Visual Basic) and one instance property.</span></span> <span data-ttu-id="8bde7-424">Im Beispiel wird die <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> -Methode verwendet, um die ursprünglichen Eigenschaftswerte zu ändern und die ursprünglichen und abschließenden Werte anzeigen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-424">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%29> method to change the original property values and displays the original and final values.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#2](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/example2.cpp#2)]
 [!code-csharp[PropertyInfo.SetValue#2](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/example2.cs#2)]
 [!code-vb[PropertyInfo.SetValue#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8bde7-425">Der <see langword="set" />-Accessor der Eigenschaft wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-425">The property's <see langword="set" /> accessor is not found.</span></span>  
  
<span data-ttu-id="8bde7-426">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-426">-or-</span></span> 
 <span data-ttu-id="8bde7-427"><paramref name="value" /> kann nicht in den Typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" />konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-427"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-428">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-428">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-429">Der Typ von <paramref name="obj" /> entspricht nicht dem Zieltyp, oder eine Eigenschaft ist eine Instanzeigenschaft, aber <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-429">The type of <paramref name="obj" /> does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-430">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-430">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-431">Es wurde unzulässigerweise versucht, auf eine private oder geschützte Methode innerhalb einer Klasse zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-431">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8bde7-432">Fehler beim Festlegen des Eigenschaftswerts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-432">An error occurred while setting the property value.</span></span> <span data-ttu-id="8bde7-433">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt die Ursache des Fehlers an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-433">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-434">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-434">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-435">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-435">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object obj, object value, object[] index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, object[] index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (obj As Object, value As Object, index As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value, cli::array &lt;System::Object ^&gt; ^ index);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * obj[] -&gt; unit&#xA;override this.SetValue : obj * obj * obj[] -&gt; unit" Usage="propertyInfo.SetValue (obj, value, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Object[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-436">Das Objekt, dessen Eigenschaftswert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-436">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="8bde7-437">Der neue Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-437">The new property value.</span></span></param>
        <param name="index"><span data-ttu-id="8bde7-438">Optionale Indexwerte für indizierte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="8bde7-438">Optional index values for indexed properties.</span></span> <span data-ttu-id="8bde7-439">Dieser Wert sollte bei nicht indizierten Eigenschaften <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-439">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <summary><span data-ttu-id="8bde7-440">Legt den Wert der Eigenschaft für das angegebene Objekt mit optionalen Indexwerten für Indexeigenschaften fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-440">Sets the property value of a specified object with optional index values for index properties.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-441">Wenn dieses <xref:System.Reflection.PropertyInfo> -Objekt ein Werttyp `value` und `null`ist, wird die-Eigenschaft auf den Standardwert für diesen Typ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-441">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="8bde7-442">Verwenden Sie die <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> -Methode, um zu bestimmen, ob eine Eigenschaft indiziert ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-442">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-443">Wenn das resultierende Array 0 (null) Elemente aufweist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-443">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="8bde7-444">Dies ist eine Hilfsmethode, die die Lauf Zeit Implementierung der abstrakten <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> Methode aufruft, <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> wobei für `BindingFlags` den Parameter `null` , `Binder`für und `null` für `CultureInfo`angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-444">This is a convenience method that calls the runtime implementation of the abstract <xref:System.Reflection.PropertyInfo.SetValue%28System.Object%2CSystem.Object%2CSystem.Reflection.BindingFlags%2CSystem.Reflection.Binder%2CSystem.Object%5B%5D%2CSystem.Globalization.CultureInfo%29> method, specifying <xref:System.Reflection.BindingFlags.Default?displayProperty=nameWithType> for the `BindingFlags` parameter, `null` for `Binder`, and `null` for `CultureInfo`.</span></span>  
  
 <span data-ttu-id="8bde7-445">Um die <xref:System.Reflection.PropertyInfo.SetValue%2A> -Methode zu verwenden, erhalten <xref:System.Type> Sie zuerst ein-Objekt, das die-Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-445">To use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method, first get a <xref:System.Type> object that represents the class.</span></span> <span data-ttu-id="8bde7-446">Erhalten Sie im <xref:System.Reflection.PropertyInfo>die. <xref:System.Type></span><span class="sxs-lookup"><span data-stu-id="8bde7-446">From the <xref:System.Type>, get the <xref:System.Reflection.PropertyInfo>.</span></span> <span data-ttu-id="8bde7-447">Verwenden Sie <xref:System.Reflection.PropertyInfo>die <xref:System.Reflection.PropertyInfo.SetValue%2A> -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-447">From the <xref:System.Reflection.PropertyInfo>, use the <xref:System.Reflection.PropertyInfo.SetValue%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-448">Ab kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der Aufrufer mit dem <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> -Flag erteilt wurde, und wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge beschränkt ist. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Auslegung.</span><span class="sxs-lookup"><span data-stu-id="8bde7-448">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8bde7-449">(Siehe [Sicherheitsüberlegungen für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="8bde7-449">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="8bde7-450">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-450">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8bde7-451">Im folgenden Beispiel wird eine Klasse namens `TestClass` definiert, die eine Lese-/Schreibeigenschaft mit dem Namen `Caption`aufweist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-451">The following example defines a class named `TestClass` that has a read-write property named `Caption`.</span></span> <span data-ttu-id="8bde7-452">Es zeigt den Standardwert `Caption` der Eigenschaft an, ruft die <xref:System.Reflection.PropertyInfo.SetValue%2A> -Methode auf, um den Eigenschafts Wert zu ändern, und zeigt das Ergebnis an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-452">It  displays the default value of the `Caption` property, calls the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the property value, and displays the result.</span></span>  
  
 [!code-cpp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/CS/source.cs#1)]
 [!code-vb[Classic PropertyInfo.SetValue1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic PropertyInfo.SetValue1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8bde7-453">Beachten Sie, dass das `Caption` `index` -Argument ist `null`, da die-Eigenschaft kein Parameter Array ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-453">Note that, because the `Caption` property is not a parameter array, the `index` argument is `null`.</span></span>  
  
 <span data-ttu-id="8bde7-454">Im folgenden Beispiel wird eine Klasse mit `Example` dem Namen mit drei Eigenschaften `static` deklariert:`Shared` eine Eigenschaft (in Visual Basic), eine Instanzeigenschaft und eine indizierte Instanzeigenschaft.</span><span class="sxs-lookup"><span data-stu-id="8bde7-454">The following example declares a class named `Example` with three properties: a `static` property (`Shared` in Visual Basic), an instance property, and an indexed instance property.</span></span> <span data-ttu-id="8bde7-455">Im Beispiel wird die <xref:System.Reflection.PropertyInfo.SetValue%2A> -Methode verwendet, um die Standardwerte der Eigenschaften zu ändern und die ursprünglichen und abschließenden Werte anzeigen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-455">The example uses the <xref:System.Reflection.PropertyInfo.SetValue%2A> method to change the default values of the properties and displays the original and final values.</span></span>  
  
 <span data-ttu-id="8bde7-456">Der Name, der für die Suche nach einer indizierten Instanzeigenschaft mit Reflektion verwendet wird, unterscheidet sich von der Sprache und den Attributen, die auf die Eigenschaft angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-456">The name that is used to search for an indexed instance property with reflection is different depending on the language and on attributes applied to the property.</span></span>  
  
-   <span data-ttu-id="8bde7-457">In Visual Basic wird der Eigenschaftsname immer verwendet, um die Eigenschaft mit Reflektion zu suchen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-457">In Visual Basic, the property name is always used to search for the property with reflection.</span></span> <span data-ttu-id="8bde7-458">Sie können das- `Default` Schlüsselwort verwenden, um die Eigenschaft zu einer indizierten Standard Eigenschaft zu machen. in diesem Fall können Sie den Namen weglassen, wenn Sie auf die-Eigenschaft zugreifen, wie in diesem Beispiel.</span><span class="sxs-lookup"><span data-stu-id="8bde7-458">You can use the `Default` keyword to make the property a default indexed property, in which case you can omit the name when accessing the property, as in this example.</span></span> <span data-ttu-id="8bde7-459">Sie können auch den Eigenschaftsnamen verwenden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-459">You can also use the property name.</span></span>  
  
-   <span data-ttu-id="8bde7-460">In C#handelt es sich bei der Eigenschaft der indizierten Instanz um eine Standard Eigenschaft namens Indexer, die beim Zugriff auf die-Eigenschaft im Code niemals verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-460">In C#, the indexed instance property is a default property called an indexer, and the name is never used when accessing the property in code.</span></span> <span data-ttu-id="8bde7-461">Standardmäßig ist `Item`der Name der-Eigenschaft, und Sie müssen diesen Namen verwenden, wenn Sie die-Eigenschaft mit Reflektion suchen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-461">By default, the name of the property is `Item`, and you must use that name when you search for the property with reflection.</span></span> <span data-ttu-id="8bde7-462">Sie können das- <xref:System.Runtime.CompilerServices.IndexerNameAttribute> Attribut verwenden, um dem Indexer einen anderen Namen zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-462">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the indexer a different name.</span></span> <span data-ttu-id="8bde7-463">In diesem Beispiel lautet der Name `IndexedInstanceProperty`.</span><span class="sxs-lookup"><span data-stu-id="8bde7-463">In this example, the name is `IndexedInstanceProperty`.</span></span>  
  
-   <span data-ttu-id="8bde7-464">In C++kann der `default` Spezifizierer verwendet werden, um eine indizierte Eigenschaft als indizierte Standard Eigenschaft (Klassenindexer) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-464">In C++, the `default` specifier can be used to make an indexed property a default indexed property (class indexer).</span></span> <span data-ttu-id="8bde7-465">In diesem Fall ist `Item`der Name der Eigenschaft standardmäßig, und Sie müssen diesen Namen verwenden, wenn Sie nach der Eigenschaft mit Reflektion suchen, wie in diesem Beispiel.</span><span class="sxs-lookup"><span data-stu-id="8bde7-465">In that case, the name of the property by default is `Item`, and you must use that name when you search for the property with reflection, as in this example.</span></span> <span data-ttu-id="8bde7-466">Sie können das- <xref:System.Runtime.CompilerServices.IndexerNameAttribute> Attribut verwenden, um dem Klassen Indexer einen anderen Namen in der Reflektion zuzuweisen, aber Sie können diesen Namen nicht für den Zugriff auf die-Eigenschaft im Code verwenden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-466">You can use the <xref:System.Runtime.CompilerServices.IndexerNameAttribute> attribute to give the class indexer a different name in reflection, but you cannot use that name to access the property in code.</span></span> <span data-ttu-id="8bde7-467">Auf eine indizierte Eigenschaft, bei der es sich nicht um einen Klassenindexer handelt, wird über den Namen zugegriffen</span><span class="sxs-lookup"><span data-stu-id="8bde7-467">An indexed property that is not a class indexer is accessed using its name, both in code and in reflection.</span></span>  
  
 [!code-cpp[PropertyInfo.SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/PropertyInfo.SetValue/cpp/Example.cpp#1)]
 [!code-csharp[PropertyInfo.SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/PropertyInfo.SetValue/cs/Example.cs#1)]
 [!code-vb[PropertyInfo.SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/PropertyInfo.SetValue/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8bde7-468">Das <paramref name="index" />-Array enthält Argumente, die nicht den benötigten Typ haben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-468">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
<span data-ttu-id="8bde7-469">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-469">-or-</span></span> 
<span data-ttu-id="8bde7-470">Der <see langword="set" /> -Accessor der Eigenschaft wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-470">The property's <see langword="set" /> accessor is not found.</span></span>  
  
<span data-ttu-id="8bde7-471">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-471">-or-</span></span> 
 <span data-ttu-id="8bde7-472"><paramref name="value" /> kann nicht in den Typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" />konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-472"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-473">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-473">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-474">Das Objekt entspricht nicht dem Zieltyp, oder eine Eigenschaft ist eine Instanzeigenschaft, aber <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-474">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="8bde7-475">Die Anzahl von Parametern in <paramref name="index" /> entspricht nicht der Anzahl von Parametern, die die indizierte Eigenschaft akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-475">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8bde7-476">Fangen Sie in <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET für Windows Store-Apps</see> oder der <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8bde7-476">In the <see href="https://msdn.microsoft.com/library/windows/apps/br230232(v=vs.110).aspx">.NET for Windows Store apps</see> or the <see href="~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8bde7-477">Es wurde unzulässigerweise versucht, auf eine private oder geschützte Methode innerhalb einer Klasse zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-477">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8bde7-478">Fehler beim Festlegen des Eigenschaftswerts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-478">An error occurred while setting the property value.</span></span> <span data-ttu-id="8bde7-479">Beispielsweise liegt ein Indexwert, der für eine indizierte Eigenschaft angegeben ist, außerhalb des gültigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8bde7-479">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="8bde7-480">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt die Ursache des Fehlers an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-480">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-481">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-481">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-482">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-482">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] index, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] index, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ index, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * obj[] * System.Globalization.CultureInfo -&gt; unit" Usage="propertyInfo.SetValue (obj, value, invokeAttr, binder, index, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="index" Type="System.Object[]" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8bde7-483">Das Objekt, dessen Eigenschaftswert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-483">The object whose property value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="8bde7-484">Der neue Eigenschaftswert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-484">The new property value.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="8bde7-485">Eine bitweise Kombination der folgenden Enumerationsmember, die das Aufrufattribut angeben: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" /> oder <see langword="SetProperty" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-485">A bitwise combination of the following enumeration members that specify the invocation attribute: <see langword="InvokeMethod" />, <see langword="CreateInstance" />, <see langword="Static" />, <see langword="GetField" />, <see langword="SetField" />, <see langword="GetProperty" />, or <see langword="SetProperty" />.</span></span> <span data-ttu-id="8bde7-486">Es muss ein geeignetes Aufrufattribut angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-486">You must specify a suitable invocation attribute.</span></span> <span data-ttu-id="8bde7-487">Um beispielsweise einen statischen Member aufzurufen, legen Sie das <see langword="Static" />-Flag fest.</span><span class="sxs-lookup"><span data-stu-id="8bde7-487">For example, to invoke a static member, set the <see langword="Static" /> flag.</span></span></param>
        <param name="binder"><span data-ttu-id="8bde7-488">Ein Objekt, das die Bindung, die Umwandlung von Argumenttypen, das Aufrufen von Membern und das Abrufen von <see cref="T:System.Reflection.MemberInfo" />-Objekten über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="8bde7-488">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see cref="T:System.Reflection.MemberInfo" /> objects through reflection.</span></span> <span data-ttu-id="8bde7-489">Wenn <paramref name="binder" /> den Wert <see langword="null" /> aufweist, wird der Standardbinder verwendet.</span><span class="sxs-lookup"><span data-stu-id="8bde7-489">If <paramref name="binder" /> is <see langword="null" />, the default binder is used.</span></span></param>
        <param name="index"><span data-ttu-id="8bde7-490">Optionale Indexwerte für indizierte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="8bde7-490">Optional index values for indexed properties.</span></span> <span data-ttu-id="8bde7-491">Dieser Wert sollte bei nicht indizierten Eigenschaften <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-491">This value should be <see langword="null" /> for non-indexed properties.</span></span></param>
        <param name="culture"><span data-ttu-id="8bde7-492">Die Kultur, für die die Ressource lokalisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bde7-492">The culture for which the resource is to be localized.</span></span> <span data-ttu-id="8bde7-493">Die <see cref="P:System.Globalization.CultureInfo.Parent" />-Eigenschaft wird in der Folge für die Suche nach einer Übereinstimmung aufgerufen, wenn die Ressource nicht für diese Kultur lokalisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="8bde7-493">If the resource is not localized for this culture, the <see cref="P:System.Globalization.CultureInfo.Parent" /> property will be called successively in search of a match.</span></span> <span data-ttu-id="8bde7-494">Wenn dieser Wert <see langword="null" /> ist, wird die kulturspezifische Information aus der <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" />-Eigenschaft abgerufen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-494">If this value is <see langword="null" />, the culture-specific information is obtained from the <see cref="P:System.Globalization.CultureInfo.CurrentUICulture" /> property.</span></span></param>
        <summary><span data-ttu-id="8bde7-495">Legt beim Überschreiben in einer abgeleiteten Klasse den Eigenschaftswert für ein angegebenes Objekt fest, das die angegebene Bindung, den Index und kulturabhängige Informationen besitzt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-495">When overridden in a derived class, sets the property value for a specified object that has the specified binding, index, and culture-specific information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-496">Wenn dieses <xref:System.Reflection.PropertyInfo> -Objekt ein Werttyp `value` und `null`ist, wird die-Eigenschaft auf den Standardwert für diesen Typ festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-496">If this <xref:System.Reflection.PropertyInfo> object is a value type and `value` is `null`, then the property will be set to the default value for that type.</span></span>  
  
 <span data-ttu-id="8bde7-497">Verwenden Sie die <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> -Methode, um zu bestimmen, ob eine Eigenschaft indiziert ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-497">To determine whether a property is indexed, use the <xref:System.Reflection.PropertyInfo.GetIndexParameters%2A> method.</span></span> <span data-ttu-id="8bde7-498">Wenn das resultierende Array 0 (null) Elemente aufweist, wird die Eigenschaft nicht indiziert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-498">If the resulting array has 0 (zero) elements, the property is not indexed.</span></span>  
  
 <span data-ttu-id="8bde7-499">Zugriffs Einschränkungen werden bei voll vertrauenswürdigem Code ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-499">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="8bde7-500">Das heißt, dass auf Private Konstruktoren, Methoden, Felder und Eigenschaften zugegriffen werden kann und die über Reflektion aufgerufen werden, wenn der Code vollständig vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="8bde7-500">That is, private constructors, methods, fields, and properties can be accessed and invoked via Reflection whenever the code is fully trusted.</span></span>  
  
 <span data-ttu-id="8bde7-501">Um die `SetValue` -Methode zu verwenden, erhalten Sie `Type`zuerst die-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8bde7-501">To use the `SetValue` method, first get the class `Type`.</span></span> <span data-ttu-id="8bde7-502">Erhalten Sie im `PropertyInfo`die. `Type`</span><span class="sxs-lookup"><span data-stu-id="8bde7-502">From the `Type`, get the `PropertyInfo`.</span></span> <span data-ttu-id="8bde7-503">Verwenden Sie `PropertyInfo`die `SetValue` -Methode aus dem.</span><span class="sxs-lookup"><span data-stu-id="8bde7-503">From the `PropertyInfo`, use the `SetValue` method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8bde7-504">Ab kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der Aufrufer mit dem <xref:System.Security.Permissions.ReflectionPermission> <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> -Flag erteilt wurde, und wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge beschränkt ist. [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] Auslegung.</span><span class="sxs-lookup"><span data-stu-id="8bde7-504">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8bde7-505">(Siehe [Sicherheitsüberlegungen für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="8bde7-505">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="8bde7-506">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-506">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8bde7-507">Das <paramref name="index" />-Array enthält Argumente, die nicht den benötigten Typ haben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-507">The <paramref name="index" /> array does not contain the type of arguments needed.</span></span>  
  
<span data-ttu-id="8bde7-508">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-508">-or-</span></span> 
<span data-ttu-id="8bde7-509">Der <see langword="set" /> -Accessor der Eigenschaft wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-509">The property's <see langword="set" /> accessor is not found.</span></span>  
  
<span data-ttu-id="8bde7-510">- oder -</span><span class="sxs-lookup"><span data-stu-id="8bde7-510">-or-</span></span> 
 <span data-ttu-id="8bde7-511"><paramref name="value" /> kann nicht in den Typ <see cref="P:System.Reflection.PropertyInfo.PropertyType" /> konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-511"><paramref name="value" /> cannot be converted to the type of <see cref="P:System.Reflection.PropertyInfo.PropertyType" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="8bde7-512">Das Objekt entspricht nicht dem Zieltyp, oder eine Eigenschaft ist eine Instanzeigenschaft, aber <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8bde7-512">The object does not match the target type, or a property is an instance property but <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.TargetParameterCountException"><span data-ttu-id="8bde7-513">Die Anzahl von Parametern in <paramref name="index" /> entspricht nicht der Anzahl von Parametern, die die indizierte Eigenschaft akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-513">The number of parameters in <paramref name="index" /> does not match the number of parameters the indexed property takes.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="8bde7-514">Es wurde unzulässigerweise versucht, auf eine private oder geschützte Methode innerhalb einer Klasse zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-514">There was an illegal attempt to access a private or protected method inside a class.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="8bde7-515">Fehler beim Festlegen des Eigenschaftswerts.</span><span class="sxs-lookup"><span data-stu-id="8bde7-515">An error occurred while setting the property value.</span></span> <span data-ttu-id="8bde7-516">Beispielsweise liegt ein Indexwert, der für eine indizierte Eigenschaft angegeben ist, außerhalb des gültigen Bereichs.</span><span class="sxs-lookup"><span data-stu-id="8bde7-516">For example, an index value specified for an indexed property is out of range.</span></span> <span data-ttu-id="8bde7-517">Die <see cref="P:System.Exception.InnerException" />-Eigenschaft gibt die Ursache des Fehlers an.</span><span class="sxs-lookup"><span data-stu-id="8bde7-517">The <see cref="P:System.Exception.InnerException" /> property indicates the reason for the error.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="8bde7-518">Wenn Sie spät gebunden durch Mechanismen wie <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8bde7-518">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="8bde7-519">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="8bde7-519">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _PropertyInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_PropertyInfo::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="8bde7-520">Für zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-520">Reserved for future use.</span></span> <span data-ttu-id="8bde7-521">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-521">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="8bde7-522">Das übergebene Array von zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-522">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="8bde7-523">Die Anzahl der zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-523">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="8bde7-524">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-524">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="8bde7-525">Das vom Aufrufer zugewiesene Array, das die IDs entsprechend den Namen empfängt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-525">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="8bde7-526">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span><span class="sxs-lookup"><span data-stu-id="8bde7-526">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-527">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-527">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8bde7-528">Weitere Informationen zu `IDispatch::GetIDsOfNames`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8bde7-528">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8bde7-529">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-529">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetType">
      <MemberSignature Language="C#" Value="Type _PropertyInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._PropertyInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _PropertyInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._PropertyInfo.GetType() = System::Runtime::InteropServices::_PropertyInfo::GetType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8bde7-530">Ruft ein <see cref="T:System.Type" />-Objekt ab, das den <see cref="T:System.Reflection.PropertyInfo" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-530">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="8bde7-531">Ein <see cref="T:System.Type" />-Objekt, das den <see cref="T:System.Reflection.PropertyInfo" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-531">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.PropertyInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _PropertyInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="8bde7-532">Die zurückzugebenden Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-532">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="8bde7-533">Der Gebietsschemabezeichner für die Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-533">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="8bde7-534">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-534">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="8bde7-535">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="8bde7-535">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-536">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-536">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8bde7-537">Weitere Informationen zu `IDispatch::GetTypeInfo`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8bde7-537">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8bde7-538">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-538">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _PropertyInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _PropertyInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_PropertyInfo::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="8bde7-539">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-539">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="8bde7-540">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span><span class="sxs-lookup"><span data-stu-id="8bde7-540">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-541">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-541">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8bde7-542">Weitere Informationen zu `IDispatch::GetTypeInfoCount`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8bde7-542">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8bde7-543">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-543">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._PropertyInfo.Invoke">
      <MemberSignature Language="C#" Value="void _PropertyInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._PropertyInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.PropertyInfo.System#Runtime#InteropServices#_PropertyInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _PropertyInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._PropertyInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_PropertyInfo::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._PropertyInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="8bde7-544">Bezeichnet den Member.</span><span class="sxs-lookup"><span data-stu-id="8bde7-544">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="8bde7-545">Für zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="8bde7-545">Reserved for future use.</span></span> <span data-ttu-id="8bde7-546">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="8bde7-546">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="8bde7-547">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-547">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="8bde7-548">Flags, die den Kontext des Aufrufs beschreiben.</span><span class="sxs-lookup"><span data-stu-id="8bde7-548">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="8bde7-549">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span><span class="sxs-lookup"><span data-stu-id="8bde7-549">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="8bde7-550">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8bde7-550">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="8bde7-551">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span><span class="sxs-lookup"><span data-stu-id="8bde7-551">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="8bde7-552">Der Index des ersten Arguments mit einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="8bde7-552">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="8bde7-553">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="8bde7-553">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8bde7-554">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8bde7-554">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8bde7-555">Weitere Informationen zu `IDispatch::Invoke`finden Sie in der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8bde7-555">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8bde7-556">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8bde7-556">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
