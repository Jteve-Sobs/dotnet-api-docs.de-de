<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DefaultMemberAttribute.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a1b6ba1f6b901f690dec748b76a421a04a325333.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a1b6ba1f6b901f690dec748b76a421a04a325333</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>Defines the member of a type that is the default member used by <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Definiert den Member eines Typs, der der von <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph> verwendete Standardmember ist.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>A property is imported as an indexer (default indexed property in Visual Basic) if the property has arguments and if the name of the property or one of its accessors matches the name specified by the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>.</source>
          <target state="translated">Eine Eigenschaft wird als Indexer importiert (indizierte Standardeigenschaft in Visual Basic), wenn die Eigenschaft Argumente verfügt und der Namen der Eigenschaft oder eines seiner Accessoren entspricht, indem der angegebene Name der <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>If the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> is not present on the containing type, then the type does not have an indexer.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> befindet sich nicht auf den enthaltenden Typ haben, und klicken Sie dann den Typ ein Indexers nicht vorhanden ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The C# compiler emits the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> on any type containing an indexer.</source>
          <target state="translated">Der c#-Compiler gibt die <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> für jeden Typ, der einen Indexer enthält.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>In C# it is an error to manually attribute a type with the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> if the type also declares an indexer.</source>
          <target state="translated">In C# geschrieben, die es tritt ein Fehler in "Attribut" manuell einen Typ mit dem <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> , wenn der Typ auch ein Indexer deklariert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Reflection.DefaultMemberAttribute">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> attribute to make the <ph id="ph2">`Age`</ph> property the default member of the <ph id="ph3">`MyClass`</ph> class.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Reflection.DefaultMemberAttribute&gt;</ph> Attribut stellen die <ph id="ph2">`Age`</ph> Eigenschaft das Standardelement von der <ph id="ph3">`MyClass`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing the name of the member to invoke.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see langword="String" /&gt;</ph> mit dem Namen des aufzurufenden Members.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>This may be a constructor, method, property, or field.</source>
          <target state="translated">Dies kann ein Konstruktor, eine Methode, eine Eigenschaft oder ein Feld sein.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>A suitable invocation attribute must be specified when the member is invoked.</source>
          <target state="translated">Beim Aufruf des Members muss ein geeignetes Aufrufattribut angegeben werden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a class can be specified by passing an empty <ph id="ph1">&lt;see langword="String" /&gt;</ph> as the name of the member.</source>
          <target state="translated">Der Standardmember einer Klasse kann durch Übergeben eines leeren <ph id="ph1">&lt;see langword="String" /&gt;</ph> als Name des Members angegeben werden.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>The default member of a type is marked with the <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph> custom attribute or marked in COM in the usual way.</source>
          <target state="translated">Der Standardmember eines Typs wird mit dem benutzerdefinierten <ph id="ph1">&lt;see langword="DefaultMemberAttribute" /&gt;</ph>-Attribut oder in COM auf die übliche Weise gekennzeichnet.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Reflection.DefaultMemberAttribute.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Reflection.DefaultMemberAttribute" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>Gets the name from the attribute.</source>
          <target state="translated">Ruft den Namen des Attributs ab.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>A string representing the member name.</source>
          <target state="translated">Eine Zeichenfolge, die den Membernamen darstellt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>There is no set accessor because the name must be provided to the constructor.</source>
          <target state="translated">Es gibt keinen Set-Accessor auf, da der Name der an den Konstruktor bereitgestellt werden muss.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Reflection.DefaultMemberAttribute.MemberName">
          <source>The name is not optional.</source>
          <target state="translated">Der Name ist nicht optional.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>