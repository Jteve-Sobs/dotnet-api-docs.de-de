<Type Name="CustomAttributeExtensions" FullName="System.Reflection.CustomAttributeExtensions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a36f3354133203b3545b56af35d12c3e109abaa6" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69067760" /></Metadata><TypeSignature Language="C#" Value="public static class CustomAttributeExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit CustomAttributeExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.CustomAttributeExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module CustomAttributeExtensions" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomAttributeExtensions abstract sealed" />
  <TypeSignature Language="F#" Value="type CustomAttributeExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e8643-101">Enthält statische Methoden zum Abrufen von benutzerdefinierten Attributen.</span><span class="sxs-lookup"><span data-stu-id="e8643-101">Contains static methods for retrieving custom attributes.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8643-102">Ruft ein benutzerdefiniertes Attribut ab, das auf ein angegebene Element angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-102">Retrieves a custom attribute that is applied to a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As Assembly, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-103">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-103">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-104">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-104">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-105">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für eine angegebene Assembly angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-105">Retrieves a custom attribute of a specified type that is applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-106">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-106">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-107">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-107">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-108"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-108"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-109"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-109"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-110">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-110">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As MemberInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-111">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-111">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-112">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-112">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-113">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Member angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-113">Retrieves a custom attribute of a specified type that is applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-114">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-114">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-115">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-115">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-116"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-116"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-117"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-117"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-118"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-118"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-119">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-119">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-120">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-120">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As Module, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-121">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-121">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-122">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-122">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-123">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für ein angegebenes Modul angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-123">Retrieves a custom attribute of a specified type that is applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-124">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-124">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-125">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-125">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-126"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-126"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-127"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-127"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-128">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-128">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As ParameterInfo, attributeType As Type) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-129">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-129">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-130">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-130">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-131">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Parameter angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-131">Retrieves a custom attribute of a specified type that is applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-132">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-132">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-133">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-133">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-134"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-134"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-135"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-135"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-136">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-136">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-137">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-137">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As MemberInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * Type * bool -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-138">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-138">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-139">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-139">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-140"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-140"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-141">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Member angewendet wird, und überprüft optional die Vorgänger dieses Members.</span><span class="sxs-lookup"><span data-stu-id="e8643-141">Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="e8643-142">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-142">A custom attribute that matches <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-143">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-143">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-144"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-144"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-145"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-145"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-146"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-146"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-147">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-147">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-148">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-148">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute">
      <MemberSignature Language="C#" Value="public static Attribute GetCustomAttribute (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Attribute GetCustomAttribute(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Attribute" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static Attribute ^ GetCustomAttribute(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * Type * bool -&gt; Attribute" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Attribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-149">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-149">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-150">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-150">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-151"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-151"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-152">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Parameter angewendet wird, und überprüft optional die Vorgänger dieses Parameters.</span><span class="sxs-lookup"><span data-stu-id="e8643-152">Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-153">Ein benutzerdefiniertes Attribut, das mit <paramref name="attributeType" /> übereinstimmt, oder <see langword="null" />, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-153">A custom attribute matching <paramref name="attributeType" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-154">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-154">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-155"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-155"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-156"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-156"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-157">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-157">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-158">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-158">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As Assembly) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Assembly -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-159">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-159">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-160">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-160">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-161">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für eine angegebene Assembly angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-161">Retrieves a custom attribute of a specified type that is applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-162">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-162">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-163">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-163">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-164"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-164"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-165">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-165">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As MemberInfo) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-166">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-166">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-167">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-167">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-168">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Member angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-168">Retrieves a custom attribute of a specified type that is applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-169">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-169">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-170">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-170">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-171"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-171"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-172"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-172"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-173">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-173">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-174">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-174">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As Module) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.Module -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-175">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-175">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-176">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-176">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-177">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für ein angegebenes Modul angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-177">Retrieves a custom attribute of a specified type that is applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-178">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-178">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-179">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-179">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-180"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-180"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-181">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-181">More than one of the requested attributes was found.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As ParameterInfo) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-182">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-182">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-183">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-183">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-184">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Parameter angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-184">Retrieves a custom attribute of a specified type that is applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-185">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-185">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-186">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-186">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-187"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-187"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-188"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-188"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-189">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-189">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-190">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-190">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As MemberInfo, inherit As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.MemberInfo * bool -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-191">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-191">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-192">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-192">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-193"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-193"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-194">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Member angewendet wird, und überprüft optional die Vorgänger dieses Members.</span><span class="sxs-lookup"><span data-stu-id="e8643-194">Retrieves a custom attribute of a specified type that is applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="e8643-195">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-195">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-196">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-196">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-197"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-197"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-198"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-198"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-199">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-199">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-200">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-200">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttribute&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T GetCustomAttribute&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T GetCustomAttribute&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttribute``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttribute(Of T As Attribute) (element As ParameterInfo, inherit As Boolean) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static T GetCustomAttribute(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttribute : System.Reflection.ParameterInfo * bool -&gt; 'T (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttribute (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-201">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-201">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-202">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-202">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-203"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-203"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-204">Ruft ein benutzerdefiniertes Attribut eines angegebenen Typs ab, der für einen angegebenen Parameter angewendet wird, und überprüft optional die Vorgänger dieses Parameters.</span><span class="sxs-lookup"><span data-stu-id="e8643-204">Retrieves a custom attribute of a specified type that is applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-205">Ein benutzerdefiniertes Attribut, das mit <paramref name="T" /> oder <see langword="null" /> übereinstimmt, wenn kein entsprechendes Attribut gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="e8643-205">A custom attribute that matches <paramref name="T" />, or <see langword="null" /> if no such attribute is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8643-206">Verwenden Sie <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> die-Erweiterungsmethode, wenn Sie davon ausgehen, dass mehr als ein <xref:System.Reflection.AmbiguousMatchException> Wert zurückgegeben werden soll, oder wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="e8643-206">Use the <xref:System.Reflection.CustomAttributeExtensions.GetCustomAttributes%2A> extension method if you expect more than one value to be returned, or <xref:System.Reflection.AmbiguousMatchException> will be thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-207"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-207"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-208"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-208"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="e8643-209">Es wurden mehrere der erforderlichen Attribute gefunden.</span><span class="sxs-lookup"><span data-stu-id="e8643-209">More than one of the requested attributes was found.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-210">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-210">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8643-211">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für ein angegebenes Element angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-211">Retrieves a collection of custom attributes that are applied to a specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Assembly) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-212">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-212">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-213">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für eine angegebene Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-213">Retrieves a collection of custom attributes that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-214">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-214">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-215"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-215"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-216">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-216">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-217">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für einen angegebenen Member angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-217">Retrieves a collection of custom attributes that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-218">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-218">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-219"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-219"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-220"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-220"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-221">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-221">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Module) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-222">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-222">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-223">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für ein angegebenes Modul angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-223">Retrieves a collection of custom attributes that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-224">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-224">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-225"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-225"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-226">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-226">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-227">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für einen angegebenen Parameter angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-227">Retrieves a collection of custom attributes that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-228">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-228">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-229"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-229"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-230"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-230"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-231">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-231">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Assembly, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-232">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-232">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-233">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-233">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-234">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebene Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-234">Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-235">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-235">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-236"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-236"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-237"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-237"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-238">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-238">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-239"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-239"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-240">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für einen angegebenen Member angewendet werden, und überprüft optional die Vorgänger dieses Members.</span><span class="sxs-lookup"><span data-stu-id="e8643-240">Retrieves a collection of custom attributes that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="e8643-241">Eine Sammlung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, die den angegebenen Kriterien entsprechen, oder eine leere Sammlung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-241">A collection of the custom attributes that are applied to <paramref name="element" /> that match the specified criteria, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-242"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-242"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-243"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-243"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-244">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-244">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-245">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-245">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-246">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-246">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-247">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebenen Member angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-247">Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-248">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-248">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-249"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-249"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-250"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-250"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-251"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-251"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-252">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-252">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As Module, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-253">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-253">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-254">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-254">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-255">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für ein angegebenes Modul angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-255">Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-256">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-256">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-257"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-257"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-258"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-258"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-259">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-259">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-260"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-260"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-261">Ruft eine Auflistung benutzerdefinierter Attribute ab, die für einen angegebenen Parameter angewendet werden, und überprüft optional die Vorgänger dieses Parameters.</span><span class="sxs-lookup"><span data-stu-id="e8643-261">Retrieves a collection of custom attributes that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-262">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-262">A collection of the custom attributes that are applied to <paramref name="element" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-263"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-263"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-264"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-264"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-265">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-265">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, attributeType As Type) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-266">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-266">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-267">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-267">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-268">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebenen Parameter angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-268">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-269">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-269">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-270"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-270"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-271"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-271"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-272"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-272"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-273">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-273">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As MemberInfo, attributeType As Type, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * Type * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-274">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-274">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-275">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-275">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-276"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-276"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-277">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für einen angegebenen Member angewendet werden, und überprüft optional die Vorgänger dieses Members.</span><span class="sxs-lookup"><span data-stu-id="e8643-277">Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="e8643-278">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-278">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-279"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-279"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-280"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-280"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-281"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-281"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-282">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-282">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;Attribute&gt; GetCustomAttributes (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; GetCustomAttributes(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes (element As ParameterInfo, attributeType As Type, inherit As Boolean) As IEnumerable(Of Attribute)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * Type * bool -&gt; seq&lt;Attribute&gt;" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-283">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-283">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-284">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-284">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-285"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-285"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-286">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für einen angegebenen Parameter angewendet werden, und überprüft optional die Vorgänger dieses Parameters.</span><span class="sxs-lookup"><span data-stu-id="e8643-286">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-287">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="attributeType" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-287">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="attributeType" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-288"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-288"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-289"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-289"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-290"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-290"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-291">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-291">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Assembly element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Assembly element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Assembly)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As Assembly) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::Assembly ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Assembly -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-292">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-292">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-293">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-293">The assembly to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-294">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebene Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-294">Retrieves a collection of custom attributes of a specified type that are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-295">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-295">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-296"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-296"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As MemberInfo) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-297">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-297">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-298">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-298">The member to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-299">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebenen Member angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-299">Retrieves a collection of custom attributes of a specified type that are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-300">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-300">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-301"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-301"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-302"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-302"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-303">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-303">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.Module element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.Module element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As Module) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::Module ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.Module -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-304">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-304">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-305">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-305">The module to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-306">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für ein angegebenes Modul angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-306">Retrieves a collection of custom attributes of a specified type that are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-307">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-307">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-308"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-308"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As ParameterInfo) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-309">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-309">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-310">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-310">The parameter to inspect.</span></span></param>
        <summary><span data-ttu-id="e8643-311">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für eine angegebenen Parameter angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-311">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-312">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-312">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-313"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-313"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-314"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-314"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-315">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-315">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.MemberInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.MemberInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.MemberInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As MemberInfo, inherit As Boolean) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.MemberInfo * bool -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-316">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-316">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-317">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-317">The member to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-318"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-318"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-319">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für einen angegebenen Member angewendet werden, und überprüft optional die Vorgänger dieses Members.</span><span class="sxs-lookup"><span data-stu-id="e8643-319">Retrieves a collection of custom attributes of a specified type that are applied to a specified member, and optionally inspects the ancestors of that member.</span></span></summary>
        <returns><span data-ttu-id="e8643-320">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-320">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-321"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-321"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-322"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-322"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-323">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-323">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IEnumerable&lt;T&gt; GetCustomAttributes&lt;T&gt; (this System.Reflection.ParameterInfo element, bool inherit) where T : Attribute;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetCustomAttributes&lt;(class System.Attribute) T&gt;(class System.Reflection.ParameterInfo element, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.GetCustomAttributes``1(System.Reflection.ParameterInfo,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function GetCustomAttributes(Of T As Attribute) (element As ParameterInfo, inherit As Boolean) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : Attribute[System::Runtime::CompilerServices::Extension]&#xA; static System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ element, bool inherit);" />
      <MemberSignature Language="F#" Value="static member GetCustomAttributes : System.Reflection.ParameterInfo * bool -&gt; seq&lt;'T (requires 'T :&gt; Attribute)&gt; (requires 'T :&gt; Attribute)" Usage="System.Reflection.CustomAttributeExtensions.GetCustomAttributes (element, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <BaseTypeName>System.Attribute</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="e8643-324">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-324">The type of attribute to search for.</span></span></typeparam>
        <param name="element"><span data-ttu-id="e8643-325">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-325">The parameter to inspect.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-326"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-326"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-327">Ruft eine Auflistung benutzerdefinierter Attribute eines angegebenen Typs ab, die für einen angegebenen Parameter angewendet werden, und überprüft optional die Vorgänger dieses Parameters.</span><span class="sxs-lookup"><span data-stu-id="e8643-327">Retrieves a collection of custom attributes of a specified type that are applied to a specified parameter, and optionally inspects the ancestors of that parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-328">Eine Auflistung der benutzerdefinierten Attribute, die auf <paramref name="element" /> angewendet werden und die <paramref name="T" /> entsprechen, oder eine leere Auflistung, wenn keine solchen Attribute vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="e8643-328">A collection of the custom attributes that are applied to <paramref name="element" /> and that match <paramref name="T" />, or an empty collection if no such attributes exist.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-329"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-329"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-330"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-330"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="e8643-331">Ein benutzerdefinierter Attributtyp kann nicht geladen werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-331">A custom attribute type cannot be loaded.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsDefined">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e8643-332">Gibt an, ob benutzerdefinierte Attribute auf ein Element angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-332">Indicates whether custom attributes are applied to an element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Assembly element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Assembly element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Assembly,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As Assembly, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::Assembly ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Assembly * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Assembly" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-333">Die zu überprüfende Assembly.</span><span class="sxs-lookup"><span data-stu-id="e8643-333">The assembly to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-334">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-334">The type of the attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-335">Gibt an, ob irgend welche benutzerdefinierten Attribute eines bestimmten Typs auf eine angegebene Assembly angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-335">Indicates whether custom attributes of a specified type are applied to a specified assembly.</span></span></summary>
        <returns><span data-ttu-id="e8643-336"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-336"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-337"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-337"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-338"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-338"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As MemberInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-339">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-339">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-340">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-340">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-341">Gibt an, ob irgend welche benutzerdefinierten Attribute eines bestimmten Typs auf eines angegebenen Members angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-341">Indicates whether custom attributes of a specified type are applied to a specified member.</span></span></summary>
        <returns><span data-ttu-id="e8643-342"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-342"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-343"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-343"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-344"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-344"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-345"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-345"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.Module element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.Module element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.Module,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As Module, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::Module ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.Module * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.Module" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-346">Der zu überprüfende Modul.</span><span class="sxs-lookup"><span data-stu-id="e8643-346">The module to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-347">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-347">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-348">Gibt an, ob irgend welche benutzerdefinierten Attribute eines bestimmten Typs auf eines angegebenen Moduls angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-348">Indicates whether custom attributes of a specified type are applied to a specified module.</span></span></summary>
        <returns><span data-ttu-id="e8643-349"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-349"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-350"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-350"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-351"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-351"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As ParameterInfo, attributeType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-352">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-352">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-353">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-353">The type of attribute to search for.</span></span></param>
        <summary><span data-ttu-id="e8643-354">Gibt an, ob irgend welche benutzerdefinierten Attribute eines bestimmten Typs auf einen angegebenen Parameters angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-354">Indicates whether custom attributes of a specified type are applied to a specified parameter.</span></span></summary>
        <returns><span data-ttu-id="e8643-355"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-355"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-356"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-356"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-357"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-357"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.MemberInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.MemberInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.MemberInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As MemberInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::MemberInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.MemberInfo * Type * bool -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.MemberInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-358">Der zu überprüfende Member.</span><span class="sxs-lookup"><span data-stu-id="e8643-358">The member to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-359">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-359">The type of the attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-360"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-360"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-361">Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs auf einen angegebenen Member und optional auf dessen Vorgänger angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-361">Indicates whether custom attributes of a specified type are applied to a specified member, and, optionally, applied to its ancestors.</span></span></summary>
        <returns><span data-ttu-id="e8643-362"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-362"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-363"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-363"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-364"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-364"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="e8643-365"><paramref name="element" /> ist kein Konstruktor, keine Methode, keine Eigenschaft, kein Ereignis, kein Typ und kein Feld.</span><span class="sxs-lookup"><span data-stu-id="e8643-365"><paramref name="element" /> is not a constructor, method, property, event, type, or field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (this System.Reflection.ParameterInfo element, Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Reflection.ParameterInfo element, class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.CustomAttributeExtensions.IsDefined(System.Reflection.ParameterInfo,System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function IsDefined (element As ParameterInfo, attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;[System::Runtime::CompilerServices::Extension]&#xA; static bool IsDefined(System::Reflection::ParameterInfo ^ element, Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="static member IsDefined : System.Reflection.ParameterInfo * Type * bool -&gt; bool" Usage="System.Reflection.CustomAttributeExtensions.IsDefined (element, attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Reflection.ParameterInfo" RefType="this" />
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="e8643-366">Der zu überprüfende Parameter.</span><span class="sxs-lookup"><span data-stu-id="e8643-366">The parameter to inspect.</span></span></param>
        <param name="attributeType"><span data-ttu-id="e8643-367">Der Typ des zu suchenden Attributs.</span><span class="sxs-lookup"><span data-stu-id="e8643-367">The type of attribute to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="e8643-368"><see langword="true" />, um die Vorgänger von <paramref name="element" /> zu überprüfen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-368"><see langword="true" /> to inspect the ancestors of <paramref name="element" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e8643-369">Gibt an, ob benutzerdefinierte Attribute eines angegebenen Typs auf einen angegebenen Parameter und optional auf dessen Vorgänger angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="e8643-369">Indicates whether custom attributes of a specified type are applied to a specified parameter, and, optionally, applied to its ancestors.</span></span></summary>
        <returns><span data-ttu-id="e8643-370"><see langword="true" />, wenn ein Attribut vom angegebenen Typ auf <paramref name="element" /> angewendet wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-370"><see langword="true" /> if an attribute of the specified type is applied to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="e8643-371"><paramref name="element" /> oder <paramref name="attributeType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="e8643-371"><paramref name="element" /> or <paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="e8643-372"><paramref name="attributeType" /> ist nicht von <see cref="T:System.Attribute" /> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="e8643-372"><paramref name="attributeType" /> is not derived from <see cref="T:System.Attribute" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
