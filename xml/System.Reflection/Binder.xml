<Type Name="Binder" FullName="System.Reflection.Binder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e0142a661b1141e2e3bba7687cc7d0339c82b79e" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83540612" /></Metadata><TypeSignature Language="C#" Value="public abstract class Binder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Binder extends System.Object" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Binder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Binder" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binder abstract" />
  <TypeSignature Language="F#" Value="type Binder = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Binder extends System.Object" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="273ab-101">Wählt einen Member aus einer Liste von Kandidaten aus und führt eine Typkonvertierung vom tatsächlichen Argumenttyp zum formalen Argumenttyp durch.</span><span class="sxs-lookup"><span data-stu-id="273ab-101">Selects a member from a list of candidates, and performs type conversion from actual argument type to formal argument type.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-102">Implementierungen der <xref:System.Reflection.Binder>-Klasse werden von Methoden wie <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>verwendet, die basierend auf einem Satz von Parametertypen und Argument Werten aus einer Reihe möglicher Member auswählen, die ausgeführt werden sollen. <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, das eine Methode auf Grundlage von Parametertypen auswählt. Und so weiter.</span><span class="sxs-lookup"><span data-stu-id="273ab-102">Implementations of the <xref:System.Reflection.Binder> class are used by methods such as <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>, which selects from a set of possible members to execute, based on a set of parameter types and argument values; <xref:System.Type.GetMethod%2A?displayProperty=nameWithType>, which selects a method based on parameter types; and so on.</span></span>  
  
 <span data-ttu-id="273ab-103">Eine Standard Implementierung der <xref:System.Reflection.Binder>-Klasse wird von der <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType>-Eigenschaft bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="273ab-103">A default implementation of the <xref:System.Reflection.Binder> class is provided by the <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="273ab-104">Im folgenden Beispiel werden alle Member der `Binder`-Klasse implementiert und veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="273ab-104">The following example implements and demonstrates all members of the `Binder` class.</span></span> <span data-ttu-id="273ab-105">Die private-Methode `CanConvertFrom` findet kompatible Typen für einen bestimmten Typ.</span><span class="sxs-lookup"><span data-stu-id="273ab-105">The private method `CanConvertFrom` finds compatible types for a given type.</span></span>  
  
 [!code-cpp[Binder_1#1](~/samples/snippets/cpp/VS_Snippets_CLR/Binder_1/CPP/binder.cpp#1)]
 [!code-csharp[Binder_1#1](~/samples/snippets/csharp/VS_Snippets_CLR/Binder_1/CS/binder.cs#1)]
 [!code-vb[Binder_1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Binder_1/VB/binder.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="273ab-106">Wenn Sie von <see cref="T:System.Reflection.Binder" />erben, müssen Sie die folgenden Member überschreiben: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />und <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="273ab-106">When you inherit from <see cref="T:System.Reflection.Binder" />, you must override the following members: <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, <see cref="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />, <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />, <see cref="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />, <see cref="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />, and <see cref="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />.</span></span></para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Binder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Binder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="273ab-107">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.Binder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="273ab-107">Initializes a new instance of the <see cref="T:System.Reflection.Binder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-108">Dieser Konstruktor wird von den Konstruktoren abgeleiteter Klassen aufgerufen, um den Zustand in diesem Typ zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="273ab-108">This constructor is called by the constructors of derived classes, to initialize state in this type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToField">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldInfo BindToField (System.Reflection.BindingFlags bindingAttr, System.Reflection.FieldInfo[] match, object value, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.FieldInfo BindToField(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.FieldInfo[] match, object value, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToField(System.Reflection.BindingFlags,System.Reflection.FieldInfo[],System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToField (bindingAttr As BindingFlags, match As FieldInfo(), value As Object, culture As CultureInfo) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::FieldInfo ^ BindToField(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::FieldInfo ^&gt; ^ match, System::Object ^ value, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member BindToField : System.Reflection.BindingFlags * System.Reflection.FieldInfo[] * obj * System.Globalization.CultureInfo -&gt; System.Reflection.FieldInfo" Usage="binder.BindToField (bindingAttr, match, value, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="273ab-109">Eine bitweise Kombination von <see cref="T:System.Reflection.BindingFlags" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="273ab-109">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="273ab-110">Die Reihe der Felder, die Kandidaten für Übereinstimmungen sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-110">The set of fields that are candidates for matching.</span></span> <span data-ttu-id="273ab-111">Wenn beispielsweise ein <see cref="T:System.Reflection.Binder" />-Objekt von <see cref="Overload:System.Type.InvokeMember" /> verwendet wird, gibt dieser Parameter die Reihe von Feldern an, die von der Reflektion als mögliche Übereinstimmungen bestimmt wurden, typischerweise weil sie den entsprechenden Membernamen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="273ab-111">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of fields that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="273ab-112">Die von <see cref="P:System.Type.DefaultBinder" /> bereitgestellte Standardimplementierung ändert die Reihenfolge dieses Arrays.</span><span class="sxs-lookup"><span data-stu-id="273ab-112">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="value"><span data-ttu-id="273ab-113">Der Feldwert, mit dem ein übereinstimmendes Feld gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-113">The field value used to locate a matching field.</span></span></param>
        <param name="culture"><span data-ttu-id="273ab-114">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" />, mit der in Binderimplementierungen mit Typumwandlungen die Umwandlung von Datentypen gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-114">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="273ab-115">Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="273ab-115">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="273ab-116">Wählt anhand der angegebenen Kriterien ein Feld aus der angegebenen Gruppe von Feldern aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-116">Selects a field from the given set of fields, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="273ab-117">Das entsprechende Feld.</span><span class="sxs-lookup"><span data-stu-id="273ab-117">The matching field.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-118">Wenn `bindingAttr` <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>nicht enthält, gibt die von <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> bereitgestellte Standard Binder Implementierung einfach das erste Element der `match`zurück.</span><span class="sxs-lookup"><span data-stu-id="273ab-118">If `bindingAttr` does not include <xref:System.Reflection.BindingFlags.SetField?displayProperty=nameWithType>, the default binder implementation provided by <xref:System.Type.DefaultBinder%2A?displayProperty=nameWithType> simply returns the first element of `match`.</span></span> <span data-ttu-id="273ab-119">Es wird keine Auswahl getroffen.</span><span class="sxs-lookup"><span data-stu-id="273ab-119">No selection is done.</span></span>  
  
 <span data-ttu-id="273ab-120">Diese Methode steuert die von <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>bereitgestellte Bindung.</span><span class="sxs-lookup"><span data-stu-id="273ab-120">This method controls the binding provided by <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="273ab-121">Wenn eine Binder Implementierung die Umwandlung von Zeichen folgen Werten in numerische Typen zulässt, ist der `culture`-Parameter erforderlich, um eine Zeichenfolge, die 1000 darstellt, in einen <xref:System.Double>-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-121">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="273ab-122">Der Standardbinder führt keine solchen Zeichenfolgenumwandlungen aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-122">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="273ab-123">Für den Standardbinder enthält <paramref name="bindingAttr" /><see cref="F:System.Reflection.BindingFlags.SetField" />, und <paramref name="match" /> enthält mehrere Felder, die gleichwertige Übereinstimmungen für <paramref name="value" /> sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-123">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains multiple fields that are equally good matches for <paramref name="value" />.</span></span> <span data-ttu-id="273ab-124"><paramref name="value" /> enthält beispielsweise ein <c>MyClass</c>-Objekt, das die <c>IMyClass</c>-Schnittstelle implementiert, und <paramref name="match" /> enthält ein Feld vom Typ <c>MyClass</c> sowie ein Feld vom Typ <c>IMyClass</c>.</span><span class="sxs-lookup"><span data-stu-id="273ab-124">For example, <paramref name="value" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a field of type <c>MyClass</c> and a field of type <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingFieldException"><span data-ttu-id="273ab-125">Für den Standardbinder enthält <paramref name="bindingAttr" /><see cref="F:System.Reflection.BindingFlags.SetField" />, und <paramref name="match" /> enthält keine Felder, die <paramref name="value" /> annehmen können.</span><span class="sxs-lookup"><span data-stu-id="273ab-125">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> contains no fields that can accept <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="273ab-126">Für den Standardbinder enthält <paramref name="bindingAttr" /><see cref="F:System.Reflection.BindingFlags.SetField" />, und <paramref name="match" /> ist <see langword="null" /> oder ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="273ab-126">For the default binder, <paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="273ab-127">- oder -</span><span class="sxs-lookup"><span data-stu-id="273ab-127">-or-</span></span> 
 <span data-ttu-id="273ab-128"><paramref name="bindingAttr" /> enthält <see cref="F:System.Reflection.BindingFlags.SetField" />, und <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="273ab-128"><paramref name="bindingAttr" /> includes <see cref="F:System.Reflection.BindingFlags.SetField" />, and <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Reflection.FieldInfo" />
      </Docs>
    </Member>
    <Member MemberName="BindToMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase BindToMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, ref object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] names, out object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase BindToMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, object[]&amp; args, valuetype System.Reflection.ParameterModifier[] modifiers, class System.Globalization.CultureInfo culture, string[] names, [out] object&amp; state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function BindToMethod (bindingAttr As BindingFlags, match As MethodBase(), ByRef args As Object(), modifiers As ParameterModifier(), culture As CultureInfo, names As String(), ByRef state As Object) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ BindToMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;System::Object ^&gt; ^ % args, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers, System::Globalization::CultureInfo ^ culture, cli::array &lt;System::String ^&gt; ^ names, [Runtime::InteropServices::Out] System::Object ^ % state);" />
      <MemberSignature Language="F#" Value="abstract member BindToMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Object[] * System.Reflection.ParameterModifier[] * System.Globalization.CultureInfo * string[] * obj -&gt; System.Reflection.MethodBase" Usage="binder.BindToMethod (bindingAttr, match, args, modifiers, culture, names, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="names" Type="System.String[]" />
        <Parameter Name="state" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="273ab-129">Eine bitweise Kombination von <see cref="T:System.Reflection.BindingFlags" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="273ab-129">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="273ab-130">Die Reihe der Methoden, die Kandidaten für Übereinstimmungen sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-130">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="273ab-131">Wenn beispielsweise ein <see cref="T:System.Reflection.Binder" />-Objekt von <see cref="Overload:System.Type.InvokeMember" /> verwendet wird, gibt dieser Parameter die Reihe von Methoden an, die von der Reflektion als mögliche Übereinstimmungen bestimmt wurden, typischerweise weil sie den entsprechenden Membernamen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="273ab-131">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="273ab-132">Die von <see cref="P:System.Type.DefaultBinder" /> bereitgestellte Standardimplementierung ändert die Reihenfolge dieses Arrays.</span><span class="sxs-lookup"><span data-stu-id="273ab-132">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="args"><span data-ttu-id="273ab-133">Die übergebenen Argumente.</span><span class="sxs-lookup"><span data-stu-id="273ab-133">The arguments that are passed in.</span></span> <span data-ttu-id="273ab-134">Der Binder kann die Reihenfolge der Argumente in diesem Array ändern. Der Standardbinder ändert beispielsweise die Reihenfolge der Argumente, wenn mit dem <paramref name="names" />-Parameter eine andere Reihenfolge als eine positionelle Reihenfolge angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-134">The binder can change the order of the arguments in this array; for example, the default binder changes the order of arguments if the <paramref name="names" /> parameter is used to specify an order other than positional order.</span></span> <span data-ttu-id="273ab-135">Wenn eine Binderimplementierung Argumenttypen umwandelt, können auch die Typen und Werte der Argumente geändert werden.</span><span class="sxs-lookup"><span data-stu-id="273ab-135">If a binder implementation coerces argument types, the types and values of the arguments can be changed as well.</span></span></param>
        <param name="modifiers"><span data-ttu-id="273ab-136">Ein Array von Parametermodifizierern, die bei Bindungen die Verwendung von Parametersignaturen ermöglichen, in denen die Typen geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="273ab-136">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span> <span data-ttu-id="273ab-137">Dieser Parameter wird von der Standardbinderimplementierung nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="273ab-137">The default binder implementation does not use this parameter.</span></span></param>
        <param name="culture"><span data-ttu-id="273ab-138">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" />, mit der in Binderimplementierungen mit Typumwandlungen die Umwandlung von Datentypen gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-138">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types, in binder implementations that coerce types.</span></span> <span data-ttu-id="273ab-139">Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="273ab-139">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <param name="names"><span data-ttu-id="273ab-140">Die Parameternamen, wenn Parameternamen bei Zuordnungen berücksichtigt werden müssen, oder <see langword="null" />, wenn Argumente als rein positionell behandelt werden müssen.</span><span class="sxs-lookup"><span data-stu-id="273ab-140">The parameter names, if parameter names are to be considered when matching, or <see langword="null" /> if arguments are to be treated as purely positional.</span></span> <span data-ttu-id="273ab-141">Parameternamen müssen beispielsweise verwendet werden, wenn Argumente nicht in positioneller Reihenfolge angegeben sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-141">For example, parameter names must be used if arguments are not supplied in positional order.</span></span></param>
        <param name="state"><span data-ttu-id="273ab-142">Nach der Rückgabe der Methode enthält <paramref name="state" /> ein vom Binder bereitgestelltes Objekt, das die Änderung der Reihenfolge von Argumenten verfolgt.</span><span class="sxs-lookup"><span data-stu-id="273ab-142">After the method returns, <paramref name="state" /> contains a binder-provided object that keeps track of argument reordering.</span></span> <span data-ttu-id="273ab-143">Der Binder erstellt dieses Objekt und ist der einzige Consumer dieses Objekts.</span><span class="sxs-lookup"><span data-stu-id="273ab-143">The binder creates this object, and the binder is the sole consumer of this object.</span></span> <span data-ttu-id="273ab-144">Wenn <paramref name="state" /> bei der Rückgabe von <see langword="null" /> nicht <see langword="BindToMethod" /> ist, müssen Sie <paramref name="state" /> an die <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />-Methode übergeben, wenn Sie <paramref name="args" /> mit der ursprünglichen Reihenfolge wiederherstellen möchten, damit Sie beispielsweise die Werte von <see langword="ref" />-Parametern (<see langword="ByRef" />-Parametern in Visual Basic) abrufen können.</span><span class="sxs-lookup"><span data-stu-id="273ab-144">If <paramref name="state" /> is not <see langword="null" /> when <see langword="BindToMethod" /> returns, you must pass <paramref name="state" /> to the <see cref="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" /> method if you want to restore <paramref name="args" /> to its original order, for example, so that you can retrieve the values of <see langword="ref" /> parameters (<see langword="ByRef" /> parameters in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="273ab-145">Wählt eine aufzurufende Methode anhand der bereitgestellten Argumente aus der angegebenen Gruppe von Methoden aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-145">Selects a method to invoke from the given set of methods, based on the supplied arguments.</span></span></summary>
        <returns><span data-ttu-id="273ab-146">Die entsprechende Methode.</span><span class="sxs-lookup"><span data-stu-id="273ab-146">The matching method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-147">Der Standard Binder berücksichtigt sowohl Parameter, die Werte aufweisen, als auch `params` Arrays (`ParamArray` Arrays in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="273ab-147">The default binder takes into account both parameters that have values and `params` arrays (`ParamArray` arrays in Visual Basic).</span></span> <span data-ttu-id="273ab-148">Daher ist es möglich, eine Übereinstimmung in Fällen zu finden, in denen `args` und `match` nicht die gleiche Anzahl von Elementen enthalten.</span><span class="sxs-lookup"><span data-stu-id="273ab-148">Thus, it is possible to find a match in cases where `args` and `match` do not contain the same number of elements.</span></span>  
  
 <span data-ttu-id="273ab-149">Der Binder ermöglicht einem Client, das Array von Argumenten wieder seiner ursprünglichen Form zuzuordnen, wenn das Argument Array durch <xref:System.Reflection.Binder.BindToMethod%2A>manipuliert wurde.</span><span class="sxs-lookup"><span data-stu-id="273ab-149">The binder enables a client to map the array of arguments back to its original form if the argument array has been manipulated by <xref:System.Reflection.Binder.BindToMethod%2A>.</span></span> <span data-ttu-id="273ab-150">Verwenden Sie diese Umwandlungs-Funktion, um durch Verweis Argumente zurückzukehren, wenn solche Argumente vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-150">Use this remap capability to get back by-reference arguments when such arguments are present.</span></span> <span data-ttu-id="273ab-151">Wenn Sie Argumente anhand des Namens übergeben, ordnet der Binder das Argument Array neu an.</span><span class="sxs-lookup"><span data-stu-id="273ab-151">When you pass arguments by name, the binder reorders the argument array.</span></span> <span data-ttu-id="273ab-152">Der `state`-Parameter verfolgt die Neuanordnung von Argumenten und ermöglicht so der <xref:System.Reflection.Binder.ReorderArgumentArray%2A>-Methode des Binders, das Argument Array in seiner ursprünglichen Form neu anzuordnen.</span><span class="sxs-lookup"><span data-stu-id="273ab-152">The `state` parameter keeps track of argument reordering, thus enabling the binder's <xref:System.Reflection.Binder.ReorderArgumentArray%2A> method to reorder the argument array to its original form.</span></span>  
  
 <span data-ttu-id="273ab-153">Die <xref:System.Reflection.Binder.BindToMethod%2A>-Methode wird von der <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType>-Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="273ab-153">The <xref:System.Reflection.Binder.BindToMethod%2A> method is used by the <xref:System.Type.InvokeMember%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="273ab-154">Wenn eine Binder Implementierung die Umwandlung von Zeichen folgen Werten in numerische Typen zulässt, ist der `culture`-Parameter erforderlich, um eine Zeichenfolge, die 1000 darstellt, in einen <xref:System.Double>-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-154">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="273ab-155">Der Standardbinder führt keine solchen Zeichenfolgenumwandlungen aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-155">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="273ab-156">Für den Standardbinder enthält <paramref name="match" /> mehrere Methoden, die gleichwertige Übereinstimmungen für <paramref name="args" /> darstellen.</span><span class="sxs-lookup"><span data-stu-id="273ab-156">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for <paramref name="args" />.</span></span> <span data-ttu-id="273ab-157"><paramref name="args" /> enthält beispielsweise ein <c>MyClass</c>-Objekt, das die <c>IMyClass</c>-Schnittstelle implementiert, und <paramref name="match" /> enthält eine Methode, die <c>MyClass</c> annimmt, sowie eine Methode, die <c>IMyClass</c> annimmt.</span><span class="sxs-lookup"><span data-stu-id="273ab-157">For example, <paramref name="args" /> contains a <c>MyClass</c> object that implements the <c>IMyClass</c> interface, and <paramref name="match" /> contains a method that takes <c>MyClass</c> and a method that takes <c>IMyClass</c>.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="273ab-158">Für den Standardbinder enthält <paramref name="match" /> keine Methoden, die die in <paramref name="args" /> bereitgestellten Argumente annehmen können.</span><span class="sxs-lookup"><span data-stu-id="273ab-158">For the default binder, <paramref name="match" /> contains no methods that can accept the arguments supplied in <paramref name="args" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="273ab-159">Für den Standardbinder ist <paramref name="match" /> gleich <see langword="null" /> oder ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="273ab-159">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.MethodBase" />
      </Docs>
    </Member>
    <Member MemberName="CanChangeType">
      <MemberSignature Language="C#" Value="public virtual bool CanChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.CanChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanChangeType (value As Object, type As Type, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool&#xA;override this.CanChangeType : obj * Type * System.Globalization.CultureInfo -&gt; bool" Usage="binder.CanChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="type" Type="System.Type" Index="1" FrameworkAlternate="xamarinios-10.8" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="2" FrameworkAlternate="xamarinios-10.8" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="type">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public abstract object ChangeType (object value, Type type, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ChangeType(object value, class System.Type type, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ChangeType(System.Object,System.Type,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ChangeType (value As Object, type As Type, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ChangeType(System::Object ^ value, Type ^ type, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ChangeType : obj * Type * System.Globalization.CultureInfo -&gt; obj" Usage="binder.ChangeType (value, type, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="273ab-160">Das Objekt, das in einen neuen <see langword="Type" /> geändert werden soll.</span><span class="sxs-lookup"><span data-stu-id="273ab-160">The object to change into a new <see langword="Type" />.</span></span></param>
        <param name="type"><span data-ttu-id="273ab-161">Der neue <see langword="Type" />, den <paramref name="value" /> annimmt.</span><span class="sxs-lookup"><span data-stu-id="273ab-161">The new <see langword="Type" /> that <paramref name="value" /> will become.</span></span></param>
        <param name="culture"><span data-ttu-id="273ab-162">Eine Instanz von <see cref="T:System.Globalization.CultureInfo" />, mit der die Umwandlung von Datentypen gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-162">An instance of <see cref="T:System.Globalization.CultureInfo" /> that is used to control the coercion of data types.</span></span> <span data-ttu-id="273ab-163">Wenn <paramref name="culture" /> den Wert <see langword="null" /> hat, wird die <see cref="T:System.Globalization.CultureInfo" /> des aktuellen Threads verwendet.</span><span class="sxs-lookup"><span data-stu-id="273ab-163">If <paramref name="culture" /> is <see langword="null" />, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="273ab-164">Ändert den Typ des angegebenen <see langword="Object" /> in den angegebenen <see langword="Type" />.</span><span class="sxs-lookup"><span data-stu-id="273ab-164">Changes the type of the given <see langword="Object" /> to the given <see langword="Type" />.</span></span></summary>
        <returns><span data-ttu-id="273ab-165">Ein Objekt, das den gegebenen Wert als neuen Typ enthält.</span><span class="sxs-lookup"><span data-stu-id="273ab-165">An object that contains the given value as the new type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-166">Reflektion modelliert die Zugriffsregeln für das allgemeine Typsystem.</span><span class="sxs-lookup"><span data-stu-id="273ab-166">Reflection models the accessibility rules of the common type system.</span></span> <span data-ttu-id="273ab-167">Wenn sich der Aufrufer z. b. in derselben Assembly befindet, benötigt der Aufrufer keine speziellen Berechtigungen für interne Member.</span><span class="sxs-lookup"><span data-stu-id="273ab-167">For example, if the caller is in the same assembly, the caller does not need special permissions for internal members.</span></span> <span data-ttu-id="273ab-168">Andernfalls benötigt der Aufrufer <xref:System.Security.Permissions.ReflectionPermission>.</span><span class="sxs-lookup"><span data-stu-id="273ab-168">Otherwise, the caller needs <xref:System.Security.Permissions.ReflectionPermission>.</span></span> <span data-ttu-id="273ab-169">Dies entspricht der Suche nach Elementen, die geschützt, privat sind usw.</span><span class="sxs-lookup"><span data-stu-id="273ab-169">This is consistent with lookup of members that are protected, private, and so on.</span></span>  
  
 <span data-ttu-id="273ab-170">Das allgemeine Prinzip ist, dass `ChangeType` nur erweiternde Umwandlungen durchführen soll, bei denen Daten niemals verloren gehen.</span><span class="sxs-lookup"><span data-stu-id="273ab-170">The general principle is that `ChangeType` should perform only widening coercions, which never lose data.</span></span> <span data-ttu-id="273ab-171">Ein Beispiel für eine erweiternde Umwandlung ist das Umwandeln eines Werts, bei dem es sich um eine 32-Bit-Ganzzahl mit Vorzeichen handelt, zu einem Wert, der eine 64-Bit-Ganzzahl</span><span class="sxs-lookup"><span data-stu-id="273ab-171">An example of a widening coercion is coercing a value that is a 32-bit signed integer to a value that is a 64-bit signed integer.</span></span> <span data-ttu-id="273ab-172">Dies unterscheidet sich von einer einschränkenden Umwandlung, bei der Daten verloren gehen können.</span><span class="sxs-lookup"><span data-stu-id="273ab-172">This is distinguished from a narrowing coercion, which may lose data.</span></span> <span data-ttu-id="273ab-173">Ein Beispiel für eine einschränkende Umwandlung ist das Umwandeln einer 64-Bit-Ganzzahl mit Vorzeichen in eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="273ab-173">An example of a narrowing coercion is coercing a 64-bit signed integer to a 32-bit signed integer.</span></span>  
  
 <span data-ttu-id="273ab-174">In der folgenden Tabelle werden die vom Standard `ChangeType`ausgeführten Umwandlungen aufgelistet.</span><span class="sxs-lookup"><span data-stu-id="273ab-174">The following table lists the coercions performed by the default `ChangeType`.</span></span>  
  
|<span data-ttu-id="273ab-175">Quelltyp</span><span class="sxs-lookup"><span data-stu-id="273ab-175">Source type</span></span>|<span data-ttu-id="273ab-176">Zieltyp</span><span class="sxs-lookup"><span data-stu-id="273ab-176">Target type</span></span>|  
|-----------------|-----------------|  
|<span data-ttu-id="273ab-177">Beliebiger Typ</span><span class="sxs-lookup"><span data-stu-id="273ab-177">Any type</span></span>|<span data-ttu-id="273ab-178">Der Basistyp.</span><span class="sxs-lookup"><span data-stu-id="273ab-178">Its base type.</span></span>|  
|<span data-ttu-id="273ab-179">Beliebiger Typ</span><span class="sxs-lookup"><span data-stu-id="273ab-179">Any type</span></span>|<span data-ttu-id="273ab-180">Die Schnittstelle, die implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-180">The interface it implements.</span></span>|  
|<span data-ttu-id="273ab-181">Char</span><span class="sxs-lookup"><span data-stu-id="273ab-181">Char</span></span>|<span data-ttu-id="273ab-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-182">UInt16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-183">Byte</span><span class="sxs-lookup"><span data-stu-id="273ab-183">Byte</span></span>|<span data-ttu-id="273ab-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-184">Char, UInt16, Int16, UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-185">SByte</span><span class="sxs-lookup"><span data-stu-id="273ab-185">SByte</span></span>|<span data-ttu-id="273ab-186">Int16, Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-186">Int16, Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-187">UInt16</span><span class="sxs-lookup"><span data-stu-id="273ab-187">UInt16</span></span>|<span data-ttu-id="273ab-188">UInt32, Int32, UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-188">UInt32, Int32, UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-189">Int16</span><span class="sxs-lookup"><span data-stu-id="273ab-189">Int16</span></span>|<span data-ttu-id="273ab-190">Int32, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-190">Int32, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-191">UInt32</span><span class="sxs-lookup"><span data-stu-id="273ab-191">UInt32</span></span>|<span data-ttu-id="273ab-192">UInt64, Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-192">UInt64, Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-193">Int32</span><span class="sxs-lookup"><span data-stu-id="273ab-193">Int32</span></span>|<span data-ttu-id="273ab-194">Int64, Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-194">Int64, Single, Double</span></span>|  
|<span data-ttu-id="273ab-195">UInt64</span><span class="sxs-lookup"><span data-stu-id="273ab-195">UInt64</span></span>|<span data-ttu-id="273ab-196">Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-196">Single, Double</span></span>|  
|<span data-ttu-id="273ab-197">Int64</span><span class="sxs-lookup"><span data-stu-id="273ab-197">Int64</span></span>|<span data-ttu-id="273ab-198">Single, Double</span><span class="sxs-lookup"><span data-stu-id="273ab-198">Single, Double</span></span>|  
|<span data-ttu-id="273ab-199">Single</span><span class="sxs-lookup"><span data-stu-id="273ab-199">Single</span></span>|<span data-ttu-id="273ab-200">Double</span><span class="sxs-lookup"><span data-stu-id="273ab-200">Double</span></span>|  
|<span data-ttu-id="273ab-201">Nicht Verweis</span><span class="sxs-lookup"><span data-stu-id="273ab-201">Non-reference</span></span>|<span data-ttu-id="273ab-202">Nach Verweis.</span><span class="sxs-lookup"><span data-stu-id="273ab-202">By-reference.</span></span>|  
  
 <span data-ttu-id="273ab-203">Wenn eine Binder Implementierung die Umwandlung von Zeichen folgen Werten in numerische Typen zulässt, ist der `culture`-Parameter erforderlich, um eine Zeichenfolge, die 1000 darstellt, in einen <xref:System.Double>-Wert zu konvertieren, da 1000 in verschiedenen Kulturen unterschiedlich dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-203">If a binder implementation allows coercion of string values to numeric types, the `culture` parameter is necessary to convert a string that represents 1000 to a <xref:System.Double> value, because 1000 is represented differently by different cultures.</span></span> <span data-ttu-id="273ab-204">Der Standardbinder führt keine solchen Zeichenfolgenumwandlungen aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-204">The default binder does not do such string coercions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReorderArgumentArray">
      <MemberSignature Language="C#" Value="public abstract void ReorderArgumentArray (ref object[] args, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReorderArgumentArray(object[]&amp; args, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.ReorderArgumentArray(System.Object[]@,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ReorderArgumentArray (ByRef args As Object(), state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ReorderArgumentArray(cli::array &lt;System::Object ^&gt; ^ % args, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member ReorderArgumentArray : Object[] * obj -&gt; unit" Usage="binder.ReorderArgumentArray (args, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" RefType="ref" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="273ab-205">Die übergebenen tatsächlichen Argumente.</span><span class="sxs-lookup"><span data-stu-id="273ab-205">The actual arguments that are passed in.</span></span> <span data-ttu-id="273ab-206">Sowohl die Typen als auch die Werte der Argumente können geändert werden.</span><span class="sxs-lookup"><span data-stu-id="273ab-206">Both the types and values of the arguments can be changed.</span></span></param>
        <param name="state"><span data-ttu-id="273ab-207">Ein vom Binder bereitgestelltes Objekt, das die Neuanordnung von Argumenten verfolgt.</span><span class="sxs-lookup"><span data-stu-id="273ab-207">A binder-provided object that keeps track of argument reordering.</span></span></param>
        <summary><span data-ttu-id="273ab-208">Stellt nach dem Beenden der <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />-Methode das <paramref name="args" />-Argument in der Form wieder her, wie es von der <see langword="BindToMethod" />-Methode übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="273ab-208">Upon returning from <see cref="M:System.Reflection.Binder.BindToMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Object[]@,System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[],System.Object@)" />, restores the <paramref name="args" /> argument to what it was when it came from <see langword="BindToMethod" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-209">Der Common Language Runtime ruft diese Methode auf, wenn `state` nach einer Rückgabe von `BindToMethod`nicht `null` wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-209">The common language runtime calls this method if `state` is not `null` after a return from `BindToMethod`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.MethodBase SelectMethod (System.Reflection.BindingFlags bindingAttr, System.Reflection.MethodBase[] match, Type[] types, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.MethodBase SelectMethod(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.MethodBase[] match, class System.Type[] types, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectMethod(System.Reflection.BindingFlags,System.Reflection.MethodBase[],System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectMethod (bindingAttr As BindingFlags, match As MethodBase(), types As Type(), modifiers As ParameterModifier()) As MethodBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::MethodBase ^ SelectMethod(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::MethodBase ^&gt; ^ match, cli::array &lt;Type ^&gt; ^ types, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectMethod : System.Reflection.BindingFlags * System.Reflection.MethodBase[] * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.MethodBase" Usage="binder.SelectMethod (bindingAttr, match, types, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
        <Parameter Name="types" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="273ab-210">Eine bitweise Kombination von <see cref="T:System.Reflection.BindingFlags" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="273ab-210">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="273ab-211">Die Reihe der Methoden, die Kandidaten für Übereinstimmungen sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-211">The set of methods that are candidates for matching.</span></span> <span data-ttu-id="273ab-212">Wenn beispielsweise ein <see cref="T:System.Reflection.Binder" />-Objekt von <see cref="Overload:System.Type.InvokeMember" /> verwendet wird, gibt dieser Parameter die Reihe von Methoden an, die von der Reflektion als mögliche Übereinstimmungen bestimmt wurden, typischerweise weil sie den entsprechenden Membernamen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="273ab-212">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of methods that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="273ab-213">Die von <see cref="P:System.Type.DefaultBinder" /> bereitgestellte Standardimplementierung ändert die Reihenfolge dieses Arrays.</span><span class="sxs-lookup"><span data-stu-id="273ab-213">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="types"><span data-ttu-id="273ab-214">Die Parametertypen, mit denen nach einer übereinstimmenden Methode gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-214">The parameter types used to locate a matching method.</span></span></param>
        <param name="modifiers"><span data-ttu-id="273ab-215">Ein Array von Parametermodifizierern, die bei Bindungen die Verwendung von Parametersignaturen ermöglichen, in denen die Typen geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="273ab-215">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="273ab-216">Wählt anhand des Argumenttyps eine Methode aus der angegebenen Gruppe von Methoden aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-216">Selects a method from the given set of methods, based on the argument type.</span></span></summary>
        <returns><span data-ttu-id="273ab-217">Die entsprechende Methode, sofern eine solche gefunden wurde, andernfalls <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="273ab-217">The matching method, if found; otherwise, <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-218">Diese Methode sollte `null` zurückgeben, wenn keine Methode den Kriterien entspricht.</span><span class="sxs-lookup"><span data-stu-id="273ab-218">This method should return `null` if no method matches the criteria.</span></span> <span data-ttu-id="273ab-219">Diese Methode steuert die Auswahl, die von den Methoden `GetConstructor` und `GetMethod` in `Type`bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-219">This method controls the selection provided by the `GetConstructor` and `GetMethod` methods on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="273ab-220">Für den Standardbinder enthält <paramref name="match" /> mehrere Methoden, die gleichwertige Übereinstimmungen für die von <paramref name="types" /> beschriebenen Parametertypen darstellen.</span><span class="sxs-lookup"><span data-stu-id="273ab-220">For the default binder, <paramref name="match" /> contains multiple methods that are equally good matches for the parameter types described by <paramref name="types" />.</span></span> <span data-ttu-id="273ab-221">Das Array in <paramref name="types" /> enthält beispielsweise ein <see cref="T:System.Type" />-Objekt für <c>MyClass</c>, und das Array in <paramref name="match" /> enthält eine Methode, die eine Basisklasse von <c>MyClass</c> annimmt, sowie eine Methode, die eine von <c>MyClass</c> implementierte Schnittstelle annimmt.</span><span class="sxs-lookup"><span data-stu-id="273ab-221">For example, the array in <paramref name="types" /> contains a <see cref="T:System.Type" /> object for <c>MyClass</c> and the array in <paramref name="match" /> contains a method that takes a base class of <c>MyClass</c> and a method that takes an interface that <c>MyClass</c> implements.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="273ab-222">Für den Standardbinder ist <paramref name="match" /> gleich <see langword="null" /> oder ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="273ab-222">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span>  
  
<span data-ttu-id="273ab-223">- oder -</span><span class="sxs-lookup"><span data-stu-id="273ab-223">-or-</span></span> 
<span data-ttu-id="273ab-224">Ein Element von <paramref name="types" /> ist von <see cref="T:System.Type" /> abgeleitet, weist jedoch nicht den Typ <see langword="RuntimeType" /> auf.</span><span class="sxs-lookup"><span data-stu-id="273ab-224">An element of <paramref name="types" /> derives from <see cref="T:System.Type" />, but is not of type <see langword="RuntimeType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SelectProperty">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.PropertyInfo SelectProperty (System.Reflection.BindingFlags bindingAttr, System.Reflection.PropertyInfo[] match, Type returnType, Type[] indexes, System.Reflection.ParameterModifier[] modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.PropertyInfo SelectProperty(valuetype System.Reflection.BindingFlags bindingAttr, class System.Reflection.PropertyInfo[] match, class System.Type returnType, class System.Type[] indexes, valuetype System.Reflection.ParameterModifier[] modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Binder.SelectProperty(System.Reflection.BindingFlags,System.Reflection.PropertyInfo[],System.Type,System.Type[],System.Reflection.ParameterModifier[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SelectProperty (bindingAttr As BindingFlags, match As PropertyInfo(), returnType As Type, indexes As Type(), modifiers As ParameterModifier()) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::PropertyInfo ^ SelectProperty(System::Reflection::BindingFlags bindingAttr, cli::array &lt;System::Reflection::PropertyInfo ^&gt; ^ match, Type ^ returnType, cli::array &lt;Type ^&gt; ^ indexes, cli::array &lt;System::Reflection::ParameterModifier&gt; ^ modifiers);" />
      <MemberSignature Language="F#" Value="abstract member SelectProperty : System.Reflection.BindingFlags * System.Reflection.PropertyInfo[] * Type * Type[] * System.Reflection.ParameterModifier[] -&gt; System.Reflection.PropertyInfo" Usage="binder.SelectProperty (bindingAttr, match, returnType, indexes, modifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="indexes" Type="System.Type[]" />
        <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
      </Parameters>
      <Docs>
        <param name="bindingAttr"><span data-ttu-id="273ab-225">Eine bitweise Kombination von <see cref="T:System.Reflection.BindingFlags" />-Werten.</span><span class="sxs-lookup"><span data-stu-id="273ab-225">A bitwise combination of <see cref="T:System.Reflection.BindingFlags" /> values.</span></span></param>
        <param name="match"><span data-ttu-id="273ab-226">Die Reihe der Eigenschaften, die Kandidaten für Übereinstimmungen sind.</span><span class="sxs-lookup"><span data-stu-id="273ab-226">The set of properties that are candidates for matching.</span></span> <span data-ttu-id="273ab-227">Wenn beispielsweise ein <see cref="T:System.Reflection.Binder" />-Objekt von <see cref="Overload:System.Type.InvokeMember" /> verwendet wird, gibt dieser Parameter die Reihe von Eigenschaften an, die von der Reflektion als mögliche Übereinstimmungen bestimmt wurden, typischerweise weil sie den entsprechenden Membernamen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="273ab-227">For example, when a <see cref="T:System.Reflection.Binder" /> object is used by <see cref="Overload:System.Type.InvokeMember" />, this parameter specifies the set of properties that reflection has determined to be possible matches, typically because they have the correct member name.</span></span> <span data-ttu-id="273ab-228">Die von <see cref="P:System.Type.DefaultBinder" /> bereitgestellte Standardimplementierung ändert die Reihenfolge dieses Arrays.</span><span class="sxs-lookup"><span data-stu-id="273ab-228">The default implementation provided by <see cref="P:System.Type.DefaultBinder" /> changes the order of this array.</span></span></param>
        <param name="returnType"><span data-ttu-id="273ab-229">Der Rückgabewert, den die übereinstimmende Eigenschaft aufweisen muss.</span><span class="sxs-lookup"><span data-stu-id="273ab-229">The return value the matching property must have.</span></span></param>
        <param name="indexes"><span data-ttu-id="273ab-230">Die Indextypen der gesuchten Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="273ab-230">The index types of the property being searched for.</span></span> <span data-ttu-id="273ab-231">Wird für Indexeigenschaften verwendet, z. B. den Indexer für eine Klasse.</span><span class="sxs-lookup"><span data-stu-id="273ab-231">Used for index properties such as the indexer for a class.</span></span></param>
        <param name="modifiers"><span data-ttu-id="273ab-232">Ein Array von Parametermodifizierern, die bei Bindungen die Verwendung von Parametersignaturen ermöglichen, in denen die Typen geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="273ab-232">An array of parameter modifiers that enable binding to work with parameter signatures in which the types have been modified.</span></span></param>
        <summary><span data-ttu-id="273ab-233">Wählt anhand der angegebenen Kriterien eine Eigenschaft aus der angegebenen Gruppe von Eigenschaften aus.</span><span class="sxs-lookup"><span data-stu-id="273ab-233">Selects a property from the given set of properties, based on the specified criteria.</span></span></summary>
        <returns><span data-ttu-id="273ab-234">Die entsprechende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="273ab-234">The matching property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="273ab-235">Diese Methode steuert die Auswahl, die von der `GetProperty`-Methode auf `Type`bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="273ab-235">This method controls the selection provided by the `GetProperty` method on `Type`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.AmbiguousMatchException"><span data-ttu-id="273ab-236">Für den Standardbinder enthält <paramref name="match" /> mehrere Eigenschaften, die gleichwertige Übereinstimmungen für <paramref name="returnType" /> und <paramref name="indexes" /> darstellen.</span><span class="sxs-lookup"><span data-stu-id="273ab-236">For the default binder, <paramref name="match" /> contains multiple properties that are equally good matches for <paramref name="returnType" /> and <paramref name="indexes" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="273ab-237">Für den Standardbinder ist <paramref name="match" /> gleich <see langword="null" /> oder ein leeres Array.</span><span class="sxs-lookup"><span data-stu-id="273ab-237">For the default binder, <paramref name="match" /> is <see langword="null" /> or an empty array.</span></span></exception>
        <altmember cref="T:System.Reflection.PropertyInfo" />
      </Docs>
    </Member>
  </Members>
</Type>
