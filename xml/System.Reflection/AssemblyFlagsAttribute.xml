<Type Name="AssemblyFlagsAttribute" FullName="System.Reflection.AssemblyFlagsAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6415ecfda009d8765e3f91b8c7484e459ebd8356" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30477054" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyFlagsAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AssemblyFlagsAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.AssemblyFlagsAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyFlagsAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyFlagsAttribute sealed : Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags für eine Assembly an. Diese dienen zur Beschreibung von Optionen für den JIT-Compiler (Just In Time) und geben an, ob die Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Reflection.AssemblyNameFlags> Enumeration beschreibt die Assembly-Eigenschaften, die mit diesem Attribut festgelegt werden können.  
  
 Verwenden, um die Flags zuzugreifen, die für eine Assembly angegeben wurden die <xref:System.Reflection.Assembly.GetName%2A?displayProperty=nameWithType> -Eigenschaft zum Abrufen einer <xref:System.Reflection.AssemblyName> Objekt, der <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> -Eigenschaft zum Abrufen einer <xref:System.Reflection.AssemblyNameFlags> Wert.  
  
 An <xref:System.Reflection.AssemblyNameFlags> Flags für eine dynamische Assembly festgelegt, die <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> Eigenschaft der <xref:System.Reflection.AssemblyName> -Objekt, das Sie übergeben die <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> Methode.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anwenden der <xref:System.Reflection.AssemblyFlagsAttribute> einer Assembly, und wie die Flags zur Laufzeit gelesen. Im Beispiel wird auch eine Instanz des Attributs erstellt und verwendet die <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> Eigenschaft zum Anzeigen der Flags. Ein Beispiel zur Anwendung von der <xref:System.Reflection.AssemblyFlagsAttribute> auf eine dynamische Assembly finden Sie in der <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Reflection.AssemblyNameFlags" />
    <altmember cref="Overload:System.Reflection.Assembly.GetName" />
    <altmember cref="P:System.Reflection.AssemblyName.Flags" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFlagsAttribute" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (int assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(int assemblyFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">Eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags, die in Ganzzahlwerte umgewandelt wurden. Diese stehen für JIT-Compileroptionen (Just In Time) sowie Gültigkeitsdauer und geben an, ob eine Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFlagsAttribute" />-Klasse mit der angegebenen Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags, die in einen Ganzzahlwert umgewandelt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser nicht typisierte Konstruktor ist mittlerweile veraltet. Nicht verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (System.Reflection.AssemblyNameFlags assemblyFlags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Reflection.AssemblyNameFlags assemblyFlags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (assemblyFlags As AssemblyNameFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::Reflection::AssemblyNameFlags assemblyFlags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="assemblyFlags" Type="System.Reflection.AssemblyNameFlags" />
      </Parameters>
      <Docs>
        <param name="assemblyFlags">Eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags. Diese stehen für JIT-Compileroptionen (Just In Time) sowie Gültigkeitsdauer und geben an, ob die Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFlagsAttribute" />-Klasse mit der angegebenen Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anwenden der <xref:System.Reflection.AssemblyFlagsAttribute> einer Assembly, und wie die Flags zur Laufzeit gelesen. Im Beispiel wird auch eine Instanz des Attributs erstellt und verwendet die <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> Eigenschaft zum Anzeigen der Flags. Ein Beispiel zur Anwendung von der <xref:System.Reflection.AssemblyFlagsAttribute> auf eine dynamische Assembly finden Sie in der <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyFlagsAttribute (uint flags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int32 flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (flags As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyFlagsAttribute(System::UInt32 flags);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This constructor has been deprecated. Please use AssemblyFlagsAttribute(AssemblyNameFlags) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="flags" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="flags">Eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags, die in einen Ganzzahlwert ohne Vorzeichen umgewandelt wurden. Diese Flags stehen für JIT-Compileroptionen (Just In Time) sowie Gültigkeitsdauer und geben an, ob eine Assembly erneut zugewiesen werden kann und ob sie einen vollen bzw. einen mit Token versehenen öffentlichen Schlüssel besitzt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Reflection.AssemblyFlagsAttribute" />-Klasse mit der angegebenen Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags, die in einen Ganzzahlwert ohne Vorzeichen umgewandelt wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser nicht typisierte Konstruktor ist mittlerweile veraltet. Nicht verwenden.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.AssemblyFlagsAttribute.#ctor(System.Reflection.AssemblyNameFlags)" />
      </Docs>
    </Member>
    <Member MemberName="AssemblyFlags">
      <MemberSignature Language="C#" Value="public int AssemblyFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AssemblyFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AssemblyFlags As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AssemblyFlags { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Ganzzahlwert ab, der die Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt, die nach dem Erstellen dieser Attributinstanz angegeben werden.</summary>
        <value>Ein Ganzzahlwert, der eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt eine ganze Zahl für die Abwärtskompatibilität. Wandelt den Wert, der <xref:System.Reflection.AssemblyNameFlags> Typ, bevor Sie ihn verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie zum Anwenden der <xref:System.Reflection.AssemblyFlagsAttribute> einer Assembly, und wie die Flags zur Laufzeit gelesen. Im Beispiel wird auch eine Instanz des Attributs erstellt und verwendet die <xref:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags%2A> Eigenschaft zum Anzeigen der Flags. Ein Beispiel zur Anwendung von der <xref:System.Reflection.AssemblyFlagsAttribute> auf eine dynamische Assembly finden Sie in der <xref:System.Reflection.AssemblyName.Flags%2A?displayProperty=nameWithType> Eigenschaft.  
  
 [!code-cpp[AssemblyFlagsAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyFlagsAttribute/CPP/source.cpp#1)]
 [!code-csharp[AssemblyFlagsAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyFlagsAttribute/CS/source.cs#1)]
 [!code-vb[AssemblyFlagsAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyFlagsAttribute/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
    <Member MemberName="Flags">
      <MemberSignature Language="C#" Value="public uint Flags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 Flags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.AssemblyFlagsAttribute.Flags" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Flags As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::UInt32 Flags { System::UInt32 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use AssemblyFlags instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Ganzzahlwert ohne Vorzeichen ab, der die Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt, die nach dem Erstellen dieser Attributinstanz angegeben werden.</summary>
        <value>Ein Ganzzahlwert ohne Vorzeichen, der eine bitweise Kombination von <see cref="T:System.Reflection.AssemblyNameFlags" />-Flags darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt eine ganze Zahl für die Abwärtskompatibilität. Wandelt den Wert, der <xref:System.Reflection.AssemblyNameFlags> Typ, bevor Sie ihn verwenden.  
  
 ]]></format>
        </remarks>
        <altCompliant cref="P:System.Reflection.AssemblyFlagsAttribute.AssemblyFlags" />
        <altmember cref="T:System.Reflection.AssemblyNameFlags" />
      </Docs>
    </Member>
  </Members>
</Type>