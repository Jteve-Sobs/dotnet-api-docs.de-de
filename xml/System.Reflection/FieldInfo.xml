<Type Name="FieldInfo" FullName="System.Reflection.FieldInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3a877e2ef413e5a60bd62cac8c03fb47ac96aed" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86789029" /></Metadata><TypeSignature Language="C#" Value="public abstract class FieldInfo : System.Reflection.MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit FieldInfo extends System.Reflection.MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.FieldInfo" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FieldInfo&#xA;Inherits MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldInfo abstract : System::Reflection::MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="F#" Value="type FieldInfo = class&#xA;    inherit MemberInfo" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
  <TypeSignature Language="C#" Value="public abstract class FieldInfo : System.Reflection.MemberInfo, System.Runtime.InteropServices._FieldInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit FieldInfo extends System.Reflection.MemberInfo implements class System.Runtime.InteropServices._FieldInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class FieldInfo&#xA;Inherits MemberInfo&#xA;Implements _FieldInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class FieldInfo abstract : System::Reflection::MemberInfo, System::Runtime::InteropServices::_FieldInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type FieldInfo = class&#xA;    inherit MemberInfo&#xA;    interface _FieldInfo" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit FieldInfo extends System.Reflection.MemberInfo" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Reflection" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="5.0.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.0.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.1.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Reflection" FromVersion="4.2.2.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Reflection.MemberInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <InterfaceName>System.Runtime.InteropServices._FieldInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldInfo))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._FieldInfo))&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="8ded3-101">Ermittelt die Attribute eines Felds und ermöglicht den Zugriff auf die Metadaten des Felds.</span><span class="sxs-lookup"><span data-stu-id="8ded3-101">Discovers the attributes of a field and provides access to field metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-102">Die Feldinformationen werden aus den Metadaten abgerufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-102">The field information is obtained from metadata.</span></span> <span data-ttu-id="8ded3-103">Die <xref:System.Reflection.FieldInfo> Klasse verfügt über keinen öffentlichen Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="8ded3-103">The <xref:System.Reflection.FieldInfo> class does not have a public constructor.</span></span> <span data-ttu-id="8ded3-104"><xref:System.Reflection.FieldInfo> -Objekte werden durch Aufrufen der- <xref:System.Type.GetFields%2A> oder- <xref:System.Type.GetField%2A> Methode eines- `Type` Objekts abgerufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-104"><xref:System.Reflection.FieldInfo> objects are obtained by calling either the <xref:System.Type.GetFields%2A> or <xref:System.Type.GetField%2A> method of a `Type` object.</span></span>  
  
 <span data-ttu-id="8ded3-105">Felder sind in der-Klasse definierte Variablen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-105">Fields are variables defined in the class.</span></span> <span data-ttu-id="8ded3-106"><xref:System.Reflection.FieldInfo> bietet Zugriff auf die Metadaten für ein Feld in einer Klasse und stellt dynamische Set-und Get-Funktionen für das Feld bereit.</span><span class="sxs-lookup"><span data-stu-id="8ded3-106"><xref:System.Reflection.FieldInfo> provides access to the metadata for a field within a class and provides dynamic set and get functionality for the field.</span></span> <span data-ttu-id="8ded3-107">Die Klasse wird erst dann in den Arbeitsspeicher geladen, wenn aufrufen oder Get für das Objekt aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-107">The class is not loaded into memory until invoke or get is called on the object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-108">Im folgenden Beispiel wird die <xref:System.Type.GetFields%2A?displayProperty=nameWithType> -Methode verwendet, um die Feld bezogenen Informationen aus der-Klasse zu erhalten <xref:System.Reflection.FieldInfo> , und dann werden die Feld Attribute angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-108">The following example uses the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get the field-related information from the <xref:System.Reflection.FieldInfo> class, and then displays field attributes.</span></span>  
  
 [!code-cpp[FieldInfo#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo/CPP/fieldinfo.cpp#1)]
 [!code-csharp[FieldInfo#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo/CS/fieldinfo.cs#1)]
 [!code-vb[FieldInfo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo/VB/fieldinfo.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="8ded3-109">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="8ded3-109">This type is thread safe.</span></span></threadsafe>
    <block subset="none" type="overrides"><para><span data-ttu-id="8ded3-110">Wenn Sie von <see cref="T:System.Reflection.FieldInfo" /> erben, müssen die folgenden Member überschrieben werden: <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> und <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-110">When you inherit from <see cref="T:System.Reflection.FieldInfo" />, you must override the following members: <see cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" /> and <see cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />.</span></span></para></block>
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FieldInfo ();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.#ctor" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FieldInfo();" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netcore-3.1;net-5.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-111">Initialisiert eine neue Instanz der <see langword="FieldInfo" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="8ded3-111">Initializes a new instance of the <see langword="FieldInfo" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.FieldAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.FieldAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As FieldAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Reflection::FieldAttributes Attributes { System::Reflection::FieldAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.FieldAttributes" Usage="System.Reflection.FieldInfo.Attributes" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.Attributes</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-112">Ruft die Attribute ab, die diesem Feld zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-112">Gets the attributes associated with this field.</span></span></summary>
        <value><span data-ttu-id="8ded3-113">Die <see langword="FieldAttributes" /> für das Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-113">The <see langword="FieldAttributes" /> for this field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-114">Alle Elemente verfügen über eine Reihe von Attributen, die in Bezug auf den jeweiligen Elementtyp definiert sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-114">All members have a set of attributes, which are defined in relation to the specific type of member.</span></span> <span data-ttu-id="8ded3-115">`FieldAttributes` informiert den Benutzer darüber, ob dieses Feld das private Feld, ein statisches Feld usw. ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-115">`FieldAttributes` informs the user whether this field is the private field, a static field, and so on.</span></span>  
  
 <span data-ttu-id="8ded3-116">Um die Eigenschaft zu erhalten `Attributes` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-116">To get the `Attributes` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-117">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-117">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-118">`FieldInfo`Erhalten Sie im die `Attributes` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-118">From the `FieldInfo`, get the `Attributes`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-119">Im folgenden Codebeispiel werden drei Felder erstellt und deren Feld Attribute angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-119">The following code example builds three fields and displays their field attributes.</span></span> <span data-ttu-id="8ded3-120">Ein `FieldAttributes` -Wert kann mehr als ein Attribut enthalten, wie z `Public` `Literal` . b. und, wie im dritten Feld gezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-120">A `FieldAttributes` value can contain more than one attribute, such as both `Public` and `Literal`, as shown in the third field.</span></span>  
  
 [!code-cpp[Classic FieldAttributes Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldAttributes Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldAttributes Example/CS/source.cs#1)]
 [!code-vb[Classic FieldAttributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldAttributes Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="fieldInfo.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.Equals(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-121">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-121">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="8ded3-122">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-122">Returns a value that indicates whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="8ded3-123"><see langword="true" />, wenn <paramref name="obj" /> dem Typ und dem Wert dieser Instanz entspricht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-123"><see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldHandle">
      <MemberSignature Language="C#" Value="public abstract RuntimeFieldHandle FieldHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeFieldHandle FieldHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.FieldHandle" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldHandle As RuntimeFieldHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property RuntimeFieldHandle FieldHandle { RuntimeFieldHandle get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldHandle : RuntimeFieldHandle" Usage="System.Reflection.FieldInfo.FieldHandle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.FieldHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeFieldHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-124">Ruft ein <see langword="RuntimeFieldHandle" /> ab, das das Handle für die interne Metadatendarstellung eines Felds darstellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-124">Gets a <see langword="RuntimeFieldHandle" />, which is a handle to the internal metadata representation of a field.</span></span></summary>
        <value><span data-ttu-id="8ded3-125">Ein Handle für die interne Metadatendarstellung eines Felds.</span><span class="sxs-lookup"><span data-stu-id="8ded3-125">A handle to the internal metadata representation of a field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-126">Die Handles sind nur in der AppDomain gültig, in der Sie abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-126">The handles are valid only in the appdomain in which they were obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-127">Im folgenden Beispiel werden die Feldinformationen MyClass. MyField abgerufen und das Feld angezeigt, das dem Feld Handle zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-127">The following example retrieves MyClass.MyField field information and displays the field associated with the field handle.</span></span>  
  
 [!code-cpp[FieldInfo_FieldHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_FieldHandle/CPP/fieldinfo_fieldhandle.cpp#1)]
 [!code-csharp[FieldInfo_FieldHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_FieldHandle/CS/fieldinfo_fieldhandle.cs#1)]
 [!code-vb[FieldInfo_FieldHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_FieldHandle/VB/fieldinfo_fieldhandle.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FieldType">
      <MemberSignature Language="C#" Value="public abstract Type FieldType { get; }" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type FieldType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.FieldType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property FieldType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ FieldType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FieldType : Type" Usage="System.Reflection.FieldInfo.FieldType" />
      <MemberSignature Language="C#" Value="public abstract Type? FieldType { get; }" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.FieldType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-128">Ruft den Typ dieses Feldobjekts ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-128">Gets the type of this field object.</span></span></summary>
        <value><span data-ttu-id="8ded3-129">Der Typ dieses Feldobjekts.</span><span class="sxs-lookup"><span data-stu-id="8ded3-129">The type of this field object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-130">Der Typ ist ein primitiver Datentyp, z `String` `Boolean` . b., oder `GUID` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-130">The type is some primitive data type, such as `String`, `Boolean`, or `GUID`.</span></span>  
  
 <span data-ttu-id="8ded3-131">Um die Eigenschaft zu erhalten `FieldType` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-131">To get the `FieldType` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-132">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-132">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-133">`FieldInfo`Holen Sie den Wert aus dem `FieldType` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-133">From the `FieldInfo`, get the `FieldType` value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-134">Im folgenden Beispiel wird ein-Feld erstellt, dessen Typ und abgerufen <xref:System.Reflection.FieldInfo> , und das-Feld wird angezeigt <xref:System.Reflection.FieldInfo.FieldType%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-134">The following example creates a field, gets its type and <xref:System.Reflection.FieldInfo>, and displays its <xref:System.Reflection.FieldInfo.FieldType%2A>.</span></span>  
  
 [!code-cpp[Classic FieldInfo.FieldType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.FieldType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.FieldType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.FieldType Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFieldFromHandle">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ded3-135">Ruft eine <see cref="T:System.Reflection.FieldInfo" /> für das durch ein Handle dargestellte Feld ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-135">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by a handle.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFieldFromHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetFieldFromHandle(valuetype System.RuntimeFieldHandle handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldFromHandle (handle As RuntimeFieldHandle) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetFieldFromHandle(RuntimeFieldHandle handle);" />
      <MemberSignature Language="F#" Value="static member GetFieldFromHandle : RuntimeFieldHandle -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.FieldInfo.GetFieldFromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.RuntimeFieldHandle" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="8ded3-136">Eine <see cref="T:System.RuntimeFieldHandle" />-Struktur, die das Handle für die interne Metadatendarstellung eines Felds enthält.</span><span class="sxs-lookup"><span data-stu-id="8ded3-136">A <see cref="T:System.RuntimeFieldHandle" /> structure that contains the handle to the internal metadata representation of a field.</span></span></param>
        <summary><span data-ttu-id="8ded3-137">Ruft eine <see cref="T:System.Reflection.FieldInfo" /> für das durch das angegebene Handle dargestellte Feld ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-137">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by the specified handle.</span></span></summary>
        <returns><span data-ttu-id="8ded3-138">Ein <see cref="T:System.Reflection.FieldInfo" />-Objekt, das das durch <paramref name="handle" /> angegebene Feld darstellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-138">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field specified by <paramref name="handle" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-139">Handles sind nur in der Anwendungsdomäne gültig, in der Sie abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-139">Handles are valid only in the application domain in which they were obtained.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-140">Im folgenden Codebeispiel wird die-Methode verwendet, <xref:System.Type.GetFields%2A?displayProperty=nameWithType> um- <xref:System.Reflection.FieldInfo> Objekte für die Felder eines Typs abzurufen, eine <xref:System.RuntimeFieldHandle> -Struktur für jedes Feld abzurufen und dann die-Objekte mithilfe dieser Überladung der- <xref:System.Reflection.FieldInfo> Methode von den Handles abzurufen <xref:System.Reflection.FieldInfo.GetFieldFromHandle%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-140">The following code example uses the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get <xref:System.Reflection.FieldInfo> objects for the fields of a type, gets a <xref:System.RuntimeFieldHandle> structure for each field, and then retrieves the <xref:System.Reflection.FieldInfo> objects from the handles using this overload of the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%2A> method.</span></span>  
  
 [!code-cpp[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/CPP/fieldinfo_getfieldfromhandle.cpp#1)]
 [!code-csharp[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/CS/fieldinfo_getfieldfromhandle.cs#1)]
 [!code-vb[FieldInfo_GetFieldFromHandle#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle/VB/fieldinfo_getfieldfromhandle.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ded3-141"><paramref name="handle" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="8ded3-141"><paramref name="handle" /> is invalid.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFieldFromHandle">
      <MemberSignature Language="C#" Value="public static System.Reflection.FieldInfo GetFieldFromHandle (RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.FieldInfo GetFieldFromHandle(valuetype System.RuntimeFieldHandle handle, valuetype System.RuntimeTypeHandle declaringType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetFieldFromHandle(System.RuntimeFieldHandle,System.RuntimeTypeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldFromHandle (handle As RuntimeFieldHandle, declaringType As RuntimeTypeHandle) As FieldInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::FieldInfo ^ GetFieldFromHandle(RuntimeFieldHandle handle, RuntimeTypeHandle declaringType);" />
      <MemberSignature Language="F#" Value="static member GetFieldFromHandle : RuntimeFieldHandle * RuntimeTypeHandle -&gt; System.Reflection.FieldInfo" Usage="System.Reflection.FieldInfo.GetFieldFromHandle (handle, declaringType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.FieldInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.RuntimeFieldHandle" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="declaringType" Type="System.RuntimeTypeHandle" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="8ded3-142">Eine <see cref="T:System.RuntimeFieldHandle" />-Struktur, die das Handle für die interne Metadatendarstellung eines Felds enthält.</span><span class="sxs-lookup"><span data-stu-id="8ded3-142">A <see cref="T:System.RuntimeFieldHandle" /> structure that contains the handle to the internal metadata representation of a field.</span></span></param>
        <param name="declaringType"><span data-ttu-id="8ded3-143">Eine <see cref="T:System.RuntimeTypeHandle" />-Struktur, die das Handle für den generischen Typ enthält, der das Feld definiert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-143">A <see cref="T:System.RuntimeTypeHandle" /> structure that contains the handle to the generic type that defines the field.</span></span></param>
        <summary><span data-ttu-id="8ded3-144">Ruft eine <see cref="T:System.Reflection.FieldInfo" /> für das durch das angegebene Handle dargestellte Feld für den angegebenen generischen Typ ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-144">Gets a <see cref="T:System.Reflection.FieldInfo" /> for the field represented by the specified handle, for the specified generic type.</span></span></summary>
        <returns><span data-ttu-id="8ded3-145">Ein <see cref="T:System.Reflection.FieldInfo" />-Objekt, das das von <paramref name="handle" /> angegebene Feld darstellt, in dem durch <paramref name="declaringType" /> angegebenen generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="8ded3-145">A <see cref="T:System.Reflection.FieldInfo" /> object representing the field specified by <paramref name="handle" />, in the generic type specified by <paramref name="declaringType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-146">Handles sind nur in der Anwendungsdomäne gültig, in der Sie abgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-146">Handles are valid only in the application domain in which they were obtained.</span></span>  
  
 <span data-ttu-id="8ded3-147">Die empfohlene Vorgehensweise ist, dass `declaringType` immer der Lauf Zeittyp Handle des konstruierten Typs sein sollte, der `handle` zu gehört.</span><span class="sxs-lookup"><span data-stu-id="8ded3-147">The recommended practice is that `declaringType` should always be the runtime type handle of the constructed type that `handle` belongs to.</span></span> <span data-ttu-id="8ded3-148">Das heißt, wenn `handle` ein Lauf Zeit Feld Handle für ein Feld ist, das zu `MyType<int>` ( `MyType(Of Integer)` in Visual Basic) gehört, `declaringType` ist das Lauf Zeit-Typhandle für `MyType<int>` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-148">That is, if `handle` is a runtime field handle for a field that belongs to `MyType<int>` (`MyType(Of Integer)` in Visual Basic), `declaringType` is the runtime type handle for `MyType<int>`.</span></span> <span data-ttu-id="8ded3-149">Verwenden Sie nicht das Laufzeittyp Handle der generischen Typdefinition, es sei denn, das Lauf Zeit Feld Handle stellt ein Feld für die generische Typdefinition dar.</span><span class="sxs-lookup"><span data-stu-id="8ded3-149">Do not use the runtime type handle of the generic type definition, unless the runtime field handle represents a field on the generic type definition.</span></span>  
  
 <span data-ttu-id="8ded3-150">Implementierungen sind in einigen Fällen kompatibel.</span><span class="sxs-lookup"><span data-stu-id="8ded3-150">Implementations are compatible in some cases.</span></span> <span data-ttu-id="8ded3-151">Beispielsweise wird eine einzelne Implementierung von allen Typen gemeinsam genutzt, die aus einer bestimmten generischen Typdefinition erstellt werden, indem Verweis Typen für die generischen Typargumente verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-151">For example, a single implementation is shared by all types that are constructed from a particular generic type definition by using reference types for the generic type arguments.</span></span> <span data-ttu-id="8ded3-152">Beispielsweise verwenden `MyType<string>` , `MyType<object>` und `MyType<ArrayList>` alle dieselbe-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="8ded3-152">For example, `MyType<string>`, `MyType<object>`, and `MyType<ArrayList>` all share the same implementation.</span></span> <span data-ttu-id="8ded3-153">In dieser Situation stellt das <xref:System.Reflection.FieldInfo> zurückgegebene-Objekt ein Feld für den Typ dar, das `declaringType` angibt, unabhängig von der ursprünglichen Quelle von `handle` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-153">In this situation, the <xref:System.Reflection.FieldInfo> object that is returned represents a field on the type that `declaringType` specifies, regardless of the original source of `handle`.</span></span> <span data-ttu-id="8ded3-154">Diese Vorgehensweise wird nicht empfohlen, da Sie nur funktioniert, wenn die generischen Typargumente des konstruierten Typs Verweis Typen sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-154">This practice is not recommended, because it works only if the generic type arguments of the constructed type are reference types.</span></span>  
  
 <span data-ttu-id="8ded3-155">Wenn ein generisches Argument ein Werttyp ist, ist das Lauf Zeit-Typhandle des konstruierten Typs nicht mit Lauf Zeit Feld Handles von Konstruktionen kompatibel, die einen Verweistyp in derselben generischen Parameter Position aufweisen oder einen anderen Werttyp an dieser Position aufweisen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-155">If a generic argument is a value type, the runtime type handle of the constructed type is not compatible with runtime field handles from constructions that have a reference type in the same generic parameter position, or that have a different value type in that position.</span></span> <span data-ttu-id="8ded3-156">In diesem Fall besteht die einzige Möglichkeit zur Verwendung der-Überladung darin, <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%2CSystem.RuntimeTypeHandle%29?displayProperty=nameWithType> sicherzustellen, dass `declaringType` der Lauf Zeittyp Handle für den konstruierten Typ ist, der `handle` zu gehört.</span><span class="sxs-lookup"><span data-stu-id="8ded3-156">In that case, the only way to use the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%2CSystem.RuntimeTypeHandle%29?displayProperty=nameWithType> overload is to ensure that `declaringType` is the runtime type handle for the constructed type that `handle` belongs to.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-157">Im folgenden Beispiel wird gezeigt, wie <xref:System.Reflection.FieldInfo> Objekte für Felder für konstruierte generische Klassen abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-157">The following example shows how to retrieve <xref:System.Reflection.FieldInfo> objects for fields on constructed generic classes.</span></span> <span data-ttu-id="8ded3-158">Im Beispiel wird der generische Typ `Test<T>` ( `Test(Of T)` in Visual Basic) mit einem einzelnen Feld namens `TestField` vom Typ definiert `T` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-158">The example defines the generic type `Test<T>` (`Test(Of T)` in Visual Basic) with a single field named `TestField`, of type `T`.</span></span> <span data-ttu-id="8ded3-159">Im Beispiel wird der <xref:System.RuntimeFieldHandle> und <xref:System.RuntimeTypeHandle> für den Fall abgerufen, dass den Wert `T` <xref:System.String> hat, und Folgendes veranschaulicht:</span><span class="sxs-lookup"><span data-stu-id="8ded3-159">The example gets the <xref:System.RuntimeFieldHandle> and <xref:System.RuntimeTypeHandle> for the case where `T` is <xref:System.String>, and demonstrates the following:</span></span>  
  
-   <span data-ttu-id="8ded3-160">Eine-Ausnahme wird ausgelöst, wenn die- <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%29> Methoden Überladung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-160">An exception is thrown if the <xref:System.Reflection.FieldInfo.GetFieldFromHandle%28System.RuntimeFieldHandle%29> method overload is used.</span></span> <span data-ttu-id="8ded3-161">Dies gilt auch, wenn das Feld nicht vom Typ ist `T` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-161">This is true even if the field is not of type `T`.</span></span>  
  
-   <span data-ttu-id="8ded3-162">Eine <xref:System.Reflection.FieldInfo> wird erfolgreich abgerufen, wenn das Laufzeittyp Handle von der gleichen Konstruktion wie das Lauf Zeit Feld Handle ist, in diesem Fall `Test<string>` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-162">A <xref:System.Reflection.FieldInfo> is retrieved successfully if the runtime type handle is from the same construction as the runtime field handle, in this case `Test<string>`.</span></span>  
  
-   <span data-ttu-id="8ded3-163">Wenn das Laufzeittyp Handle von einer kompatiblen Konstruktion ist, wird in diesem Fall `Test<object>` ein <xref:System.Reflection.FieldInfo> für das Feld in der kompatiblen Konstruktion abgerufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-163">If the runtime type handle is from a compatible construction, in this case `Test<object>`, a <xref:System.Reflection.FieldInfo> for the field on the compatible construction is retrieved.</span></span>  
  
-   <span data-ttu-id="8ded3-164">Wenn das Laufzeittyp Handle nicht aus einer kompatiblen Konstruktion besteht, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="8ded3-164">If the runtime type handle is not from a compatible construction, an exception is thrown.</span></span> <span data-ttu-id="8ded3-165">In diesem Fall wird ein Werttyp für angegeben `T` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-165">In this case, a value type is specified for `T`.</span></span>  
  
 [!code-csharp[FieldInfo_GetFieldFromHandle2#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle2/cs/source.cs#1)]
 [!code-vb[FieldInfo_GetFieldFromHandle2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetFieldFromHandle2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ded3-166"><paramref name="handle" /> ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="8ded3-166"><paramref name="handle" /> is invalid.</span></span>  
  
<span data-ttu-id="8ded3-167">- oder -</span><span class="sxs-lookup"><span data-stu-id="8ded3-167">-or-</span></span> 
 <span data-ttu-id="8ded3-168"><paramref name="declaringType" /> ist nicht kompatibel mit <paramref name="handle" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-168"><paramref name="declaringType" /> is not compatible with <paramref name="handle" />.</span></span> <span data-ttu-id="8ded3-169">Beispielsweise ist <paramref name="declaringType" /> das Laufzeittyphandle der generischen Typdefinition, und <paramref name="handle" /> stammt von einem konstruierten Typ.</span><span class="sxs-lookup"><span data-stu-id="8ded3-169">For example, <paramref name="declaringType" /> is the runtime type handle of the generic type definition, and <paramref name="handle" /> comes from a constructed type.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="fieldInfo.GetHashCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.GetHashCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-170">Gibt den Hashcode für diese Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="8ded3-170">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="8ded3-171">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-171">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetOptionalCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetOptionalCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetOptionalCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetOptionalCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOptionalCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetOptionalCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetOptionalCustomModifiers : unit -&gt; Type[]&#xA;override this.GetOptionalCustomModifiers : unit -&gt; Type[]" Usage="fieldInfo.GetOptionalCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-172">Ruft ein Array von Typen ab, die die optionalen benutzerdefinierten Modifizierer des Felds identifizieren.</span><span class="sxs-lookup"><span data-stu-id="8ded3-172">Gets an array of types that identify the optional custom modifiers of the field.</span></span></summary>
        <returns><span data-ttu-id="8ded3-173">Ein Array von <see cref="T:System.Type" />-Objekten, die die optionalen benutzerdefinierten Modifizierer des aktuellen Felds identifizieren, z.B. <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-173">An array of <see cref="T:System.Type" /> objects that identify the optional custom modifiers of the current field, such as <see cref="T:System.Runtime.CompilerServices.IsConst" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-174">Die <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> -Methode und die- <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> Methode werden für Designer verwalteter Compiler bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-174">The <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="8ded3-175">Weitere Informationen über benutzerdefinierte Modifizierer finden Sie unter <xref:System.Runtime.CompilerServices.IsBoxed> und verwandte Klassen im- <xref:System.Runtime.CompilerServices> Namespace und in der-Metadatenspezifikation in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8ded3-175">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="8ded3-176">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8ded3-176">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRawConstantValue">
      <MemberSignature Language="C#" Value="public virtual object GetRawConstantValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetRawConstantValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetRawConstantValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRawConstantValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetRawConstantValue();" />
      <MemberSignature Language="F#" Value="abstract member GetRawConstantValue : unit -&gt; obj&#xA;override this.GetRawConstantValue : unit -&gt; obj" Usage="fieldInfo.GetRawConstantValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-177">Gibt einen literalen Wert zurück, der dem Feld durch einen Compiler zugeordnet wurde.</span><span class="sxs-lookup"><span data-stu-id="8ded3-177">Returns a literal value associated with the field by a compiler.</span></span></summary>
        <returns><span data-ttu-id="8ded3-178">Ein <see cref="T:System.Object" />, das den literalen Wert enthält, der dem Feld zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-178">An <see cref="T:System.Object" /> that contains the literal value associated with the field.</span></span> <span data-ttu-id="8ded3-179">Wenn der literale Wert ein Klassentyp mit einem Elementwert von 0 (null) ist, lautet der Rückgabewert <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-179">If the literal value is a class type with an element value of zero, the return value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-180">Diese Methode wird für Designer verwalteter Compiler und Code Analysetools bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-180">This method is provided for designers of managed compilers and code analyzers.</span></span>  
  
 <span data-ttu-id="8ded3-181">Diese Methode kann sowohl im Ausführungs Kontext als auch im Reflektionskontext verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-181">This method can be used in both the execution context and the reflection-only context.</span></span>  
  
 <span data-ttu-id="8ded3-182">In nicht verwalteten Metadaten wird die Konstante Tabelle zum Speichern konstanter Werte für Felder, Parameter und Eigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="8ded3-182">In unmanaged metadata, the Constant table is used to store constant values for fields, parameters, and properties.</span></span> <span data-ttu-id="8ded3-183">Konstante Informationen beeinflussen das Laufzeitverhalten nicht direkt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-183">Constant information does not directly influence runtime behavior.</span></span> <span data-ttu-id="8ded3-184">Compiler untersuchen diese Informationen zur Kompilierzeit beim Importieren von Metadaten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-184">Compilers inspect this information, at compile time, when importing metadata.</span></span> <span data-ttu-id="8ded3-185">Wenn diese Option verwendet wird, wird der Wert einer Konstanten in den MSIL-Stream (Microsoft Intermediate Language) eingebettet, den der Compiler ausgibt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-185">If used, the value of a constant is embedded in the Microsoft intermediate language (MSIL) stream the compiler emits.</span></span> <span data-ttu-id="8ded3-186">Es sind keine MSIL-Anweisungen vorhanden, die für den Zugriff auf die Konstante Tabelle zur Laufzeit verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="8ded3-186">There are no MSIL instructions that can be used to access the Constant table at run time.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-187">Weitere Informationen über konstante Werte und die Konstante Tabelle finden Sie in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8ded3-187">For more information on constant values and the Constant table, see the ECMA Partition II documentation.</span></span> <span data-ttu-id="8ded3-188">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8ded3-188">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="8ded3-189">Die Constant-Tabelle in nicht verwalteten Metadaten enthält keinen konstanten Wert für das aktuelle Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-189">The Constant table in unmanaged metadata does not contain a constant value for the current field.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="8ded3-190">Der Typ des Werts ist keiner der Typen, die von der Common Language Specification (CLS) zugelassen sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-190">The type of the value is not one of the types permitted by the Common Language Specification (CLS).</span></span> <span data-ttu-id="8ded3-191">Weitere Informationen finden Sie in der ECMA Partition II-Spezifikation für „Metadata Logical Format: Other Structures, Element Types used in Signatures“.</span><span class="sxs-lookup"><span data-stu-id="8ded3-191">See the ECMA Partition II specification Metadata Logical Format: Other Structures, Element Types used in Signatures.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8ded3-192">Der konstante Wert für das Feld ist nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-192">The constant value for the field is not set.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredCustomModifiers">
      <MemberSignature Language="C#" Value="public virtual Type[] GetRequiredCustomModifiers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type[] GetRequiredCustomModifiers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetRequiredCustomModifiers" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequiredCustomModifiers () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetRequiredCustomModifiers();" />
      <MemberSignature Language="F#" Value="abstract member GetRequiredCustomModifiers : unit -&gt; Type[]&#xA;override this.GetRequiredCustomModifiers : unit -&gt; Type[]" Usage="fieldInfo.GetRequiredCustomModifiers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-193">Ruft ein Array von Typen ab, die die erforderlichen benutzerdefinierten Modifizierer der Eigenschaft identifizieren.</span><span class="sxs-lookup"><span data-stu-id="8ded3-193">Gets an array of types that identify the required custom modifiers of the property.</span></span></summary>
        <returns><span data-ttu-id="8ded3-194">Ein Array von <see cref="T:System.Type" />-Objekten, die die erforderlichen benutzerdefinierten Modifizierer der aktuellen Eigenschaft identifizieren, z. B. <see cref="T:System.Runtime.CompilerServices.IsConst" /> oder <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-194">An array of <see cref="T:System.Type" /> objects that identify the required custom modifiers of the current property, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsImplicitlyDereferenced" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-195">Die <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> -Methode und die- <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> Methode werden für Designer verwalteter Compiler bereitgestellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-195">The <xref:System.Reflection.FieldInfo.GetOptionalCustomModifiers%2A> and <xref:System.Reflection.FieldInfo.GetRequiredCustomModifiers%2A> methods are provided for designers of managed compilers.</span></span> <span data-ttu-id="8ded3-196">Weitere Informationen über benutzerdefinierte Modifizierer finden Sie unter <xref:System.Runtime.CompilerServices.IsBoxed> und verwandte Klassen im- <xref:System.Runtime.CompilerServices> Namespace und in der-Metadatenspezifikation in der ECMA Partition II-Dokumentation.</span><span class="sxs-lookup"><span data-stu-id="8ded3-196">For more information on custom modifiers, see <xref:System.Runtime.CompilerServices.IsBoxed> and related classes in the <xref:System.Runtime.CompilerServices> namespace and the metadata specification in the ECMA Partition II documentation.</span></span> <span data-ttu-id="8ded3-197">Die Dokumentation ist online verfügbar. Sie finden sie unter [ECMA C# and Common Language Infrastructure Standards (Standards von ECMA C# und Common Language Infrastructure)](https://go.microsoft.com/fwlink/?LinkID=99212) auf MSDN und [Standard ECMA-335 - Common Language Infrastructure (CLI) (Standard ECMA-335 – Common Language Infrastructure (CLI))](https://go.microsoft.com/fwlink/?LinkID=65552) auf der Ecma International-Website.</span><span class="sxs-lookup"><span data-stu-id="8ded3-197">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public Type GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetType () As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType();" />
      <MemberSignature Language="F#" Value="override this.GetType : unit -&gt; Type" Usage="fieldInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-198">Ermittelt die Attribute eines Klassen Felds und ermöglicht den Zugriff auf die Metadaten des Felds.</span><span class="sxs-lookup"><span data-stu-id="8ded3-198">Discovers the attributes of a class field and provides access to field metadata.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public abstract object GetValue (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValue (obj As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetValue(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : obj -&gt; obj" Usage="fieldInfo.GetValue obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.GetValue(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-199">Das Objekt, dessen Feldwert zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-199">The object whose field value will be returned.</span></span></param>
        <summary><span data-ttu-id="8ded3-200">Gibt beim Überschreiben in einer abgeleiteten Klasse den Wert eines Felds zurück, der durch ein angegebenes Objekt unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-200">When overridden in a derived class, returns the value of a field supported by a given object.</span></span></summary>
        <returns><span data-ttu-id="8ded3-201">Ein Objekt mit dem Wert des Felds, das von dieser Instanz reflektiert wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-201">An object containing the value of the field reflected by this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-202">Wenn das Feld statisch ist, `obj` wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-202">If the field is static, `obj` is ignored.</span></span> <span data-ttu-id="8ded3-203">Bei nicht statischen Feldern `obj` sollte eine Instanz einer Klasse sein, die das Feld erbt oder deklariert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-203">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="8ded3-204">Beachten Sie, dass der Rückgabetyp von `GetValue` ist `Object` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-204">Note that the return type of `GetValue` is `Object`.</span></span> <span data-ttu-id="8ded3-205">Wenn das Feld z. b. einen booleschen primitiven Wert enthält, wird eine Instanz von `Object` mit dem entsprechenden booleschen Wert zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="8ded3-205">For example, if the field holds a Boolean primitive value, an instance of `Object` with the appropriate Boolean value is returned.</span></span> <span data-ttu-id="8ded3-206">Vor dem Zurückgeben des Werts `GetValue` überprüft, ob der Benutzer über die Zugriffsberechtigung verfügt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-206">Before returning the value, `GetValue` checks to see if the user has access permission.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-207">Zugriffs Einschränkungen werden bei voll vertrauenswürdigem Code ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-207">Access restrictions are ignored for fully trusted code.</span></span> <span data-ttu-id="8ded3-208">Das heißt, dass auf Private Konstruktoren, Methoden, Felder und Eigenschaften zugegriffen werden kann und die über Reflektion aufgerufen werden, wenn der Code vollständig vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-208">That is, private constructors, methods, fields, and properties can be accessed and invoked through reflection whenever the code is fully trusted.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-209">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der <xref:System.Security.Permissions.ReflectionPermission> Aufrufer mit dem-Flag erteilt wurde, <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> und, wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge des Aufrufers beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-209">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8ded3-210">(Siehe [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span><span class="sxs-lookup"><span data-stu-id="8ded3-210">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="8ded3-211">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="8ded3-211">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-212">Im folgenden Beispiel wird die- <xref:System.Reflection.FieldInfo.GetValue%2A> Methode verwendet, um den Wert eines statischen Felds abzurufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-212">The following example uses the <xref:System.Reflection.FieldInfo.GetValue%2A> method to retrieve the value of a static field.</span></span> <span data-ttu-id="8ded3-213">Beachten Sie, dass der Wert des- `obj` Arguments ist `null` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-213">Note that the value of the `obj` argument is `null`.</span></span>  
  
 [!code-cpp[getfldval#1](~/samples/snippets/cpp/VS_Snippets_CLR/GetFldVal/CPP/getfldval.cpp#1)]
 [!code-csharp[getfldval#1](~/samples/snippets/csharp/VS_Snippets_CLR/GetFldVal/CS/getfldval.cs#1)]
 [!code-vb[getfldval#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/GetFldVal/VB/getfldval.vb#1)]  
  
 <span data-ttu-id="8ded3-214">Im folgenden Beispiel wird ein Array von <xref:System.Reflection.FieldInfo> -Objekten abgerufen, das die Felder des `FieldsClass` -Typs darstellt. Anschließend wird aufgerufen, <xref:System.Reflection.FieldInfo.GetValue%2A> um den Wert jedes Felds für das- `fieldsInst` Objekt anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-214">The following example retrieves an array of <xref:System.Reflection.FieldInfo> objects that represents the fields of the `FieldsClass` type, and then calls the <xref:System.Reflection.FieldInfo.GetValue%2A> to display the value of each field for the `fieldsInst` object.</span></span>  
  
 [!code-cpp[FieldInfo_GetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_GetValue/CPP/fieldinfo_getvalue.cpp#1)]
 [!code-csharp[FieldInfo_GetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_GetValue/CS/fieldinfo_getvalue.cs#1)]
 [!code-vb[FieldInfo_GetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_GetValue/VB/fieldinfo_getvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8ded3-215">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.  </span><span class="sxs-lookup"><span data-stu-id="8ded3-215">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8ded3-216">Das Feld ist nicht statisch, und <paramref name="obj" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-216">The field is non-static and <paramref name="obj" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8ded3-217">Ein Feld ist als Literal markiert, aber das Feld verfügt über keinen der akzeptierten Literaltypen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-217">A field is marked literal, but the field does not have one of the accepted literal types.</span></span></exception>
        <exception cref="T:System.FieldAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8ded3-218">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder der <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-218">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8ded3-219">Der Aufrufer hat nicht die Berechtigung für den Zugriff auf dieses Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-219">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ded3-220">Die Methode ist weder deklariert noch von der Klasse von <paramref name="obj" /> geerbt worden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-220">The method is neither declared nor inherited by the class of <paramref name="obj" />.</span></span></exception>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetValueDirect">
      <MemberSignature Language="C#" Value="public virtual object GetValueDirect (TypedReference obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValueDirect(valuetype System.TypedReference obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.GetValueDirect(System.TypedReference)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValueDirect (obj As TypedReference) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValueDirect(TypedReference obj);" />
      <MemberSignature Language="F#" Value="abstract member GetValueDirect : TypedReference -&gt; obj&#xA;override this.GetValueDirect : TypedReference -&gt; obj" Usage="fieldInfo.GetValueDirect obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.GetValueDirect(System.TypedReference)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-221">Eine <see cref="T:System.TypedReference" />-Struktur, die einen verwalteten Zeiger auf einen Speicherort und eine Laufzeitdarstellung des Typs kapselt, der an diesem Speicherort gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8ded3-221">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that might be stored at that location.</span></span></param>
        <summary><span data-ttu-id="8ded3-222">Gibt den Wert eines Felds zurück, das von einem angegebenen Objekt unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-222">Returns the value of a field supported by a given object.</span></span></summary>
        <returns><span data-ttu-id="8ded3-223">Ein <see langword="Object" />, das einen Feldwert enthält.</span><span class="sxs-lookup"><span data-stu-id="8ded3-223">An <see langword="Object" /> containing a field value.</span></span></returns>
        <remarks>To be added.</remarks>
        <altCompliant cref="M:System.Reflection.FieldInfo.GetValue(System.Object)" />
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8ded3-224">Der Aufrufer erfordert die CLS-Alternative (Common Language Specification), hat jedoch stattdessen diese Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-224">The caller requires the Common Language Specification (CLS) alternative, but called this method instead.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAssembly">
      <MemberSignature Language="C#" Value="public bool IsAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAssembly : bool" Usage="System.Reflection.FieldInfo.IsAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-225">Ruft einen Wert ab, der angibt, ob die potenzielle Sichtbarkeit dieses Felds von <see cref="F:System.Reflection.FieldAttributes.Assembly" /> beschrieben wird, d h. ob das Feld höchstens für andere Typen in derselben Assembly und nicht für abgeleitete Typen außerhalb der Assembly sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-225">Gets a value indicating whether the potential visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.Assembly" />; that is, the field is visible at most to other types in the same assembly, and is not visible to derived types outside the assembly.</span></span></summary>
        <value><span data-ttu-id="8ded3-226"><see langword="true" />, wenn die Sichtbarkeit dieses Felds von <see cref="F:System.Reflection.FieldAttributes.Assembly" /> genau beschrieben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-226"><see langword="true" /> if the visibility of this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.Assembly" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-227">Die tatsächliche Sichtbarkeit eines Felds wird durch die Sichtbarkeit seines Typs beschränkt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-227">The actual visibility of a field is limited by the visibility of its type.</span></span> <span data-ttu-id="8ded3-228">Die- <xref:System.Reflection.FieldInfo.IsAssembly%2A> Eigenschaft kann `true` für ein Feld sein, aber wenn es sich um ein Feld eines privaten, nicht untergeordneten Typs handelt, ist das Feld außerhalb des enthaltenden Typs nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="8ded3-228">The <xref:System.Reflection.FieldInfo.IsAssembly%2A> property might be `true` for a field, but if it is a field of a private nested type then the field is not visible outside the containing type.</span></span>  
  
 <span data-ttu-id="8ded3-229">Die Sichtbarkeit eines Felds wird von genau beschrieben, <xref:System.Reflection.FieldAttributes.Assembly?displayProperty=nameWithType> Wenn der einzige Sichtbarkeitsmodifizierer `internal` ( `Friend` in Visual Basic) ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-229">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.Assembly?displayProperty=nameWithType> if the only visibility modifier is `internal` (`Friend` in Visual Basic).</span></span> <span data-ttu-id="8ded3-230">Diese Eigenschaft ist `false` für Felder `protected internal` in c# ( `Protected Friend` in Visual Basic in `protected public` C++). verwenden Sie die- <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> Eigenschaft, um solche Felder zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="8ded3-230">This property is `false` for fields that are `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++); use the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property to identify such fields.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-231">Im folgenden Codebeispiel werden Felder mit unterschiedlichen Sichtbarkeits Ebenen definiert, und die Werte der <xref:System.Reflection.FieldInfo.IsAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamily%2A> Eigenschaften,, und werden angezeigt <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-231">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-232">Die Visual Basic-und c#-Sprachen können keine Felder mit <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> Sichtbarkeit definieren; diese Zugriffsebene wird nur im C++-Beispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-232">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      </Docs>
    </Member>
    <Member MemberName="IsFamily">
      <MemberSignature Language="C#" Value="public bool IsFamily { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamily" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamily" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamily As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamily { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamily : bool" Usage="System.Reflection.FieldInfo.IsFamily" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsFamily</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-233">Ruft einen Wert ab, der angibt, ob die Sichtbarkeit dieses Felds von <see cref="F:System.Reflection.FieldAttributes.Family" /> beschrieben wird, d. h., das Feld ist nur innerhalb seiner Klasse und in den abgeleiteten Klassen sichtbar.</span><span class="sxs-lookup"><span data-stu-id="8ded3-233">Gets a value indicating whether the visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.Family" />; that is, the field is visible only within its class and derived classes.</span></span></summary>
        <value><span data-ttu-id="8ded3-234"><see langword="true" />, wenn der Zugriff auf dieses Feld von <see cref="F:System.Reflection.FieldAttributes.Family" /> genau beschrieben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-234"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.Family" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-235">Die Sichtbarkeit eines Felds wird von genau beschrieben, <xref:System.Reflection.FieldAttributes.Family?displayProperty=nameWithType> Wenn der einzige Sichtbarkeitsmodifizierer ist `protected` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-235">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.Family?displayProperty=nameWithType> if the only visibility modifier is `protected`.</span></span> <span data-ttu-id="8ded3-236">Diese Eigenschaft ist `false` für Felder `protected internal` in c# ( `Protected Friend` in Visual Basic in `protected public` C++). verwenden Sie die- <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> Eigenschaft, um solche Felder zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="8ded3-236">This property is `false` for fields that are `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++); use the <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property to identify such fields.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-237">Im folgenden Codebeispiel werden Felder mit unterschiedlichen Sichtbarkeits Ebenen definiert, und die Werte der <xref:System.Reflection.FieldInfo.IsAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamily%2A> Eigenschaften,, und werden angezeigt <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-237">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-238">Die Visual Basic-und c#-Sprachen können keine Felder mit <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> Sichtbarkeit definieren; diese Zugriffsebene wird nur im C++-Beispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-238">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Type" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      </Docs>
    </Member>
    <Member MemberName="IsFamilyAndAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyAndAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyAndAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyAndAssembly : bool" Usage="System.Reflection.FieldInfo.IsFamilyAndAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsFamilyAndAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-239">Ruft einen Wert ab, der angibt, ob die Sichtbarkeit dieses Felds von <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" /> beschrieben wird, d. h., auf das Feld kann von abgeleiteten Klassen zugegriffen werden, jedoch nur, wenn sich diese in derselben Assembly befinden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-239">Gets a value indicating whether the visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" />; that is, the field can be accessed from derived classes, but only if they are in the same assembly.</span></span></summary>
        <value><span data-ttu-id="8ded3-240"><see langword="true" />, wenn der Zugriff auf dieses Feld von <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" /> genau beschrieben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-240"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.FamANDAssem" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-241">Wenn ein Feld <xref:System.Reflection.FieldAttributes.FamANDAssem> Sichtbarkeit der Ebene aufweist, kann es von jedem beliebigen Member in einer abgeleiteten Klasse aufgerufen werden, die sich ebenfalls in derselben Assembly, aber nicht in einem anderen Typ befindet.</span><span class="sxs-lookup"><span data-stu-id="8ded3-241">If a field has <xref:System.Reflection.FieldAttributes.FamANDAssem> level visibility, it can be called from any member in a derived class that is also in the same assembly, but not from any other type.</span></span>  
  
 <span data-ttu-id="8ded3-242">Die Sichtbarkeit eines Felds wird von genau beschrieben, <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> Wenn sich der Sichtbarkeits Modifizierer `protected private` in C++ befindet.</span><span class="sxs-lookup"><span data-stu-id="8ded3-242">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> if the visibility modifier is `protected private` in C++.</span></span> <span data-ttu-id="8ded3-243">Felder mit dieser Sichtbarkeit können nicht in Visual Basic oder c# definiert werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-243">Fields with this visibility cannot be defined in Visual Basic or C#.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-244">Im folgenden Codebeispiel werden Felder mit unterschiedlichen Sichtbarkeits Ebenen definiert, und die Werte der <xref:System.Reflection.FieldInfo.IsAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamily%2A> Eigenschaften,, und werden angezeigt <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-244">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-245">Die Visual Basic-und c#-Sprachen können keine Felder mit <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> Sichtbarkeit definieren; diese Zugriffsebene wird nur im C++-Beispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-245">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
      </Docs>
    </Member>
    <Member MemberName="IsFamilyOrAssembly">
      <MemberSignature Language="C#" Value="public bool IsFamilyOrAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFamilyOrAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsFamilyOrAssembly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFamilyOrAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFamilyOrAssembly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFamilyOrAssembly : bool" Usage="System.Reflection.FieldInfo.IsFamilyOrAssembly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsFamilyOrAssembly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-246">Ruft einen Wert ab, der angibt, ob die potenzielle Sichtbarkeit dieses Felds von <see cref="F:System.Reflection.FieldAttributes.FamORAssem" /> beschrieben wird, d. h., auf das Feld kann von Klassen in derselben Assembly und von abgeleiteten Klassen zugegriffen werden, wobei deren Position keine Rolle spielt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-246">Gets a value indicating whether the potential visibility of this field is described by <see cref="F:System.Reflection.FieldAttributes.FamORAssem" />; that is, the field can be accessed by derived classes wherever they are, and by classes in the same assembly.</span></span></summary>
        <value><span data-ttu-id="8ded3-247"><see langword="true" />, wenn der Zugriff auf dieses Feld von <see cref="F:System.Reflection.FieldAttributes.FamORAssem" /> genau beschrieben wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-247"><see langword="true" /> if access to this field is exactly described by <see cref="F:System.Reflection.FieldAttributes.FamORAssem" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-248">Wenn ein Feld <xref:System.Reflection.FieldAttributes.FamORAssem> Sichtbarkeit der Ebene aufweist, kann es von jedem Element in einer abgeleiteten Klasse oder einem beliebigen Member in derselben Assembly, jedoch nicht von einem anderen Typ aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-248">If a field has <xref:System.Reflection.FieldAttributes.FamORAssem> level visibility, it can be called from any member in a derived class or any member in the same assembly, but not from any other type.</span></span>  
  
 <span data-ttu-id="8ded3-249">Die tatsächliche Sichtbarkeit eines Felds wird durch die Sichtbarkeit seines Typs beschränkt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-249">The actual visibility of a field is limited by the visibility of its type.</span></span> <span data-ttu-id="8ded3-250">Die- <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> Eigenschaft kann `true` für ein Feld sein, aber wenn es sich um ein Feld eines privaten, nicht untergeordneten Typs handelt, ist das Feld außerhalb des enthaltenden Typs nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="8ded3-250">The <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> property might be `true` for a field, but if it is a field of a private nested type then the field is not visible outside the containing type.</span></span>  
  
 <span data-ttu-id="8ded3-251">Die Sichtbarkeit eines Felds wird von genau beschrieben, <xref:System.Reflection.FieldAttributes.FamORAssem?displayProperty=nameWithType> Wenn sich der Sichtbarkeitsmodifizierer `protected internal` in c# befindet ( `Protected Friend` in Visual Basic in `protected public` C++).</span><span class="sxs-lookup"><span data-stu-id="8ded3-251">The visibility of a field is exactly described by <xref:System.Reflection.FieldAttributes.FamORAssem?displayProperty=nameWithType> if the visibility modifier is `protected internal` in C# (`Protected Friend` in Visual Basic, `protected public` in C++).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-252">Im folgenden Codebeispiel werden Felder mit unterschiedlichen Sichtbarkeits Ebenen definiert, und die Werte der <xref:System.Reflection.FieldInfo.IsAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamily%2A> Eigenschaften,, und werden angezeigt <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A> <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-252">The following code example defines fields with varying levels of visibility, and displays the values of their <xref:System.Reflection.FieldInfo.IsAssembly%2A>, <xref:System.Reflection.FieldInfo.IsFamily%2A>, <xref:System.Reflection.FieldInfo.IsFamilyOrAssembly%2A>, and <xref:System.Reflection.FieldInfo.IsFamilyAndAssembly%2A> properties.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-253">Die Visual Basic-und c#-Sprachen können keine Felder mit <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> Sichtbarkeit definieren; diese Zugriffsebene wird nur im C++-Beispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-253">The Visual Basic and C# languages cannot define fields with <xref:System.Reflection.FieldAttributes.FamANDAssem?displayProperty=nameWithType> visibility; that access level appears only in the C++ example.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsAssembly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsAssembly Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="P:System.Reflection.FieldInfo.IsAssembly" />
        <altmember cref="P:System.Reflection.FieldInfo.IsFamily" />
      </Docs>
    </Member>
    <Member MemberName="IsInitOnly">
      <MemberSignature Language="C#" Value="public bool IsInitOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsInitOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitOnly : bool" Usage="System.Reflection.FieldInfo.IsInitOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsInitOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-254">Ruft einen Wert ab, der angibt, ob das Feld nur im Rumpf des Konstruktors festgelegt werden kann.</span><span class="sxs-lookup"><span data-stu-id="8ded3-254">Gets a value indicating whether the field can only be set in the body of the constructor.</span></span></summary>
        <value><span data-ttu-id="8ded3-255"><see langword="true" />, wenn für das Feld das <see langword="InitOnly" />-Attribut festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-255"><see langword="true" /> if the field has the <see langword="InitOnly" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-256">Wenn der zurückgegebene Wert ist `true` , kann das Feld nur initialisiert werden und ist danach schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-256">If the returned value is `true`, the field can only be initialized, and is read-only thereafter.</span></span>  
  
 <span data-ttu-id="8ded3-257">Um die Eigenschaft zu erhalten `IsInitOnly` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-257">To get the `IsInitOnly` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-258">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-258">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-259">Im `FieldInfo` können Sie die- `IsInitOnly` Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-259">From the `FieldInfo`, get the `IsInitOnly` property.</span></span> <span data-ttu-id="8ded3-260">Wenn Sie auf ein nicht öffentliches Feld zugreifen möchten, kombinieren Sie <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> entweder mit oder mit <xref:System.Reflection.BindingFlags.Static?displayProperty=nameWithType> und <xref:System.Reflection.BindingFlags.Instance?displayProperty=nameWithType> in der- `GetField` Methode.</span><span class="sxs-lookup"><span data-stu-id="8ded3-260">To access a non-public field, combine <xref:System.Reflection.BindingFlags.NonPublic?displayProperty=nameWithType> with either or both of <xref:System.Reflection.BindingFlags.Static?displayProperty=nameWithType> and <xref:System.Reflection.BindingFlags.Instance?displayProperty=nameWithType> in the `GetField` method.</span></span>  
  
 <span data-ttu-id="8ded3-261">Die- `IsInitOnly` Eigenschaft wird festgelegt, wenn das- <xref:System.Reflection.FieldAttributes.InitOnly?displayProperty=nameWithType> Attribut festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-261">The `IsInitOnly` property is set when the <xref:System.Reflection.FieldAttributes.InitOnly?displayProperty=nameWithType> attribute is set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-262">Im folgenden Beispiel werden zwei Felder erstellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-262">In the following example, two fields are created.</span></span> <span data-ttu-id="8ded3-263">Das zweite Feld ist schreibgeschützt, hat keinen Set-Accessor und `IsInitOnly` ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-263">The second field is read-only, having no set accessor, and `IsInitOnly` is set to `true`.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsInitOnly Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsInitOnly Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8ded3-264">Dieser Code erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="8ded3-264">This code produces the following output:</span></span>  
  
 <span data-ttu-id="8ded3-265">Reflection. FieldInfo</span><span class="sxs-lookup"><span data-stu-id="8ded3-265">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="8ded3-266">Myfielda-A-modified, IsInitOnly = false</span><span class="sxs-lookup"><span data-stu-id="8ded3-266">Myfielda - A- modified, IsInitOnly = False</span></span>  
  
 <span data-ttu-id="8ded3-267">Myfieldb-B Schreib geschütztes Feld, IsInitOnly = true</span><span class="sxs-lookup"><span data-stu-id="8ded3-267">Myfieldb - B readonly field, IsInitOnly = True</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="IsLiteral">
      <MemberSignature Language="C#" Value="public bool IsLiteral { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLiteral" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsLiteral" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLiteral As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLiteral { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLiteral : bool" Usage="System.Reflection.FieldInfo.IsLiteral" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsLiteral</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-268">Ruft einen Wert ab, der angibt, ob der Wert während der Kompilierung geschrieben wird und nicht geändert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8ded3-268">Gets a value indicating whether the value is written at compile time and cannot be changed.</span></span></summary>
        <value><span data-ttu-id="8ded3-269"><see langword="true" />, wenn für das Feld das <see langword="Literal" />-Attribut festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-269"><see langword="true" /> if the field has the <see langword="Literal" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-270">Die- `IsLiteral` Eigenschaft wird festgelegt, wenn das- `FieldAttributes.Literal` Attribut festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-270">The `IsLiteral` property is set when the `FieldAttributes.Literal` attribute is set.</span></span> <span data-ttu-id="8ded3-271">Wenn dieses Attribut festgelegt ist, kann das Feld nicht geändert werden und ist konstant.</span><span class="sxs-lookup"><span data-stu-id="8ded3-271">If this attribute is set, the field cannot be changed and is constant.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsNotSerialized">
      <MemberSignature Language="C#" Value="public bool IsNotSerialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNotSerialized" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsNotSerialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNotSerialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNotSerialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNotSerialized : bool" Usage="System.Reflection.FieldInfo.IsNotSerialized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsNotSerialized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-272">Ruft einen Wert ab, der angibt, ob dieses Feld über das <see langword="NotSerialized" />-Attribut verfügt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-272">Gets a value indicating whether this field has the <see langword="NotSerialized" /> attribute.</span></span></summary>
        <value><span data-ttu-id="8ded3-273"><see langword="true" />, wenn für das Feld das <see langword="NotSerialized" />-Attribut festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-273"><see langword="true" /> if the field has the <see langword="NotSerialized" /> attribute set; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-274">Die- `IsNotSerialized` Eigenschaft gibt zurück, `true` Wenn das Feld mit dem-Flag markiert ist `FieldAttributes.NotSerialized` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-274">The `IsNotSerialized` property returns `true` when the field is marked with the `FieldAttributes.NotSerialized` flag.</span></span> <span data-ttu-id="8ded3-275">Wenn dieses Flag für ein Feld festgelegt ist, gibt es an, dass das Feld nicht serialisiert werden muss, wenn der Typ Remote ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-275">When this flag is set on a field, it indicates that the field does not have to be serialized when the type is remoted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-276">Im folgenden Beispiel werden die Feldinformationen der Felder von MyClass abgerufen, und es wird bestimmt, ob die Felder serialisiert werden können, und die Ergebnisse werden angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-276">The following example gets the field information of the fields of MyClass, determines if the fields can be serialized, and displays the results.</span></span>  
  
 [!code-cpp[FieldInfo_IsNotSerialized#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsNotSerialized/CPP/fieldinfo_isnotserialized.cpp#1)]
 [!code-csharp[FieldInfo_IsNotSerialized#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsNotSerialized/CS/fieldinfo_isnotserialized.cs#1)]
 [!code-vb[FieldInfo_IsNotSerialized#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsNotSerialized/VB/fieldinfo_isnotserialized.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsPinvokeImpl">
      <MemberSignature Language="C#" Value="public bool IsPinvokeImpl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPinvokeImpl" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPinvokeImpl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPinvokeImpl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPinvokeImpl { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPinvokeImpl : bool" Usage="System.Reflection.FieldInfo.IsPinvokeImpl" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsPinvokeImpl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-277">Ruft einen Wert ab, der angibt, ob das entsprechende <see langword="PinvokeImpl" />-Attribut in <see cref="T:System.Reflection.FieldAttributes" /> festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="8ded3-277">Gets a value indicating whether the corresponding <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />.</span></span></summary>
        <value><span data-ttu-id="8ded3-278"><see langword="true" />, wenn das <see langword="PinvokeImpl" />-Attribut in <see cref="T:System.Reflection.FieldAttributes" /> festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-278"><see langword="true" /> if the <see langword="PinvokeImpl" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="8ded3-279">Im folgenden Beispiel wird eine-Klasse erstellt und der Name, das Feld und der <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> Eigenschafts Wert des Felds angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-279">The following example creates a class and displays the name, field and <xref:System.Reflection.FieldInfo.IsPinvokeImpl%2A> property value of the field.</span></span>  
  
 [!code-cpp[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/CPP/fieldinfo_ispinvokeimpl.cpp#1)]
 [!code-csharp[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/CS/fieldinfo_ispinvokeimpl.cs#1)]
 [!code-vb[FieldInfo_IsPInvokeImpl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsPInvokeImpl/VB/fieldinfo_ispinvokeimpl.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsPrivate">
      <MemberSignature Language="C#" Value="public bool IsPrivate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrivate" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPrivate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPrivate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPrivate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPrivate : bool" Usage="System.Reflection.FieldInfo.IsPrivate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsPrivate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-280">Ruft einen Wert ab, der angibt, ob das Feld privat ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-280">Gets a value indicating whether the field is private.</span></span></summary>
        <value><span data-ttu-id="8ded3-281"><see langword="true" />, wenn das Feld privat ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-281"><see langword="true" /> if the field is private; otherwise; <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-282">Auf private Felder kann nur von Element Funktionen aus zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-282">Private fields are accessible only from member functions.</span></span>  
  
 <span data-ttu-id="8ded3-283">Die- `IsPrivate` Eigenschaft wird festgelegt, wenn das- `FieldAttributes.Private` Attribut festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-283">The `IsPrivate` property is set when the `FieldAttributes.Private` attribute is set.</span></span>  
  
 <span data-ttu-id="8ded3-284">Um die Eigenschaft zu erhalten `IsPrivate` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-284">To get the `IsPrivate` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-285">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-285">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-286">Im `FieldInfo` können Sie die- `IsPrivate` Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-286">From the `FieldInfo`, get the `IsPrivate` property.</span></span> <span data-ttu-id="8ded3-287">Wenn Sie auf ein nicht öffentliches Feld zugreifen möchten, legen `BindingFlags` Sie den auf `NonPublic` und entweder `Static` oder `Instance` in der-Methode fest `GetField` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-287">To access a non-public field, set the `BindingFlags` to `NonPublic`, and either `Static` or `Instance` in the `GetField` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-288">Im folgenden Beispiel wird ein Wert zurückgegeben, der angibt, ob das-Feld der-Klasse privat ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-288">The following example returns a value indicating whether or not the field of the class is private.</span></span>  
  
 [!code-cpp[FieldInfo_IsPrivate#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsPrivate/CPP/fieldinfo_isprivate.cpp#1)]
 [!code-csharp[FieldInfo_IsPrivate#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsPrivate/CS/fieldinfo_isprivate.cs#1)]
 [!code-vb[FieldInfo_IsPrivate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsPrivate/VB/fieldinfo_isprivate.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.BindingFlags" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsPublic : bool" Usage="System.Reflection.FieldInfo.IsPublic" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsPublic</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-289">Ruft einen Wert ab, der angibt, ob das Feld öffentlich ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-289">Gets a value indicating whether the field is public.</span></span></summary>
        <value><span data-ttu-id="8ded3-290"><see langword="true" />, wenn das Feld öffentlich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-290"><see langword="true" /> if this field is public; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-291">Auf öffentliche Felder kann überall zugegriffen werden, wo ihre entsprechenden Klassen sichtbar sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-291">Public fields are accessible everywhere their corresponding classes are visible.</span></span>  
  
 <span data-ttu-id="8ded3-292">Die- `IsPublic` Eigenschaft wird festgelegt, wenn das- `FieldAttributes.Public` Attribut festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-292">The `IsPublic` property is set when the `FieldAttributes.Public` attribute is set.</span></span>  
  
 <span data-ttu-id="8ded3-293">Um die Eigenschaft zu erhalten `IsPublic` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-293">To get the `IsPublic` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-294">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-294">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-295">Im `FieldInfo` können Sie die- `IsPublic` Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-295">From the `FieldInfo`, get the `IsPublic` property.</span></span> <span data-ttu-id="8ded3-296">Wenn das Feld nicht öffentlich ist, wird es geschützt, und es kann nicht auf den Zugriff zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-296">If the field is other than public, it is protected and cannot be readily accessed.</span></span> <span data-ttu-id="8ded3-297">Wenn Sie auf ein nicht öffentliches Feld zugreifen möchten, legen `BindingFlags` Sie auf fest `NonPublic` , geben Sie entweder `BindingFlags.Instance` oder an `BindingFlags.Static` , und verwenden Sie dieses für die- `GetField` Methode.</span><span class="sxs-lookup"><span data-stu-id="8ded3-297">To access a nonpublic field, set the `BindingFlags` to `NonPublic`, specify either `BindingFlags.Instance` or `BindingFlags.Static`, and use this for the `GetField` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-298">Im folgenden Beispiel wird ein Wert zurückgegeben, der angibt, ob das-Feld der-Klasse öffentlich oder privat ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-298">The following example returns a value indicating whether or not the field of the class is public or private.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsPublic Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsPublic Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityCritical">
      <MemberSignature Language="C#" Value="public virtual bool IsSecurityCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecurityCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecurityCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityCritical : bool" Usage="System.Reflection.FieldInfo.IsSecurityCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-299">Ruft einen Wert ab, der angibt, ob das aktuelle Feld auf der aktuellen Vertrauensebene sicherheitsrelevant oder sicherheitsrelevant und sicher zugänglich ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-299">Gets a value that indicates whether the current field is security-critical or security-safe-critical at the current trust level.</span></span></summary>
        <value><span data-ttu-id="8ded3-300"><see langword="true" />, wenn das aktuelle Feld auf der aktuellen Vertrauensebene sicherheitsrelevant oder sicherheitsrelevant und sicher zugänglich ist, <see langword="false" />, wenn es sicherheitstransparent ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-300"><see langword="true" /> if the current field is security-critical or security-safe-critical at the current trust level; <see langword="false" /> if it is transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-301">Die <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A> <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> melden die Transparenz Ebene des Felds auf der aktuellen Vertrauens Ebene, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-301">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="8ded3-302">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="8ded3-302">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="8ded3-303">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="8ded3-303">Security level</span></span>|<span data-ttu-id="8ded3-304">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-304">IsSecurityCritical</span></span>|<span data-ttu-id="8ded3-305">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-305">IsSecuritySafeCritical</span></span>|<span data-ttu-id="8ded3-306">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-306">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="8ded3-307">Kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-307">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="8ded3-308">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-308">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="8ded3-309">Transparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-309">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="8ded3-310">Die Verwendung dieser Eigenschaften ist viel einfacher als das Untersuchen der Sicherheits Anmerkungen einer Assembly und ihrer Typen und Member, das Überprüfen der aktuellen Vertrauens Ebene und das Duplizieren der Lauf Zeit Regeln.</span><span class="sxs-lookup"><span data-stu-id="8ded3-310">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ded3-311">Für teilweise vertrauenswürdige Assemblys hängt der Wert dieser Eigenschaft von der aktuellen Vertrauens Ebene der Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-311">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="8ded3-312">Wenn die Assembly in eine teilweise vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in eine Sandbox-Anwendungsdomäne), werden die Sicherheits Anmerkungen der Assembly von der Laufzeit ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-312">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="8ded3-313">Die Assembly und alle zugehörigen Typen werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-313">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="8ded3-314">Die Laufzeit achtet auf die Sicherheits Anmerkungen einer teilweise vertrauenswürdigen Assembly nur, wenn diese Assembly in eine voll vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung).</span><span class="sxs-lookup"><span data-stu-id="8ded3-314">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="8ded3-315">Im Gegensatz dazu wird eine vertrauenswürdige Assembly (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist) immer mit voller Vertrauenswürdigkeit geladen, unabhängig von der Vertrauens Ebene der Anwendungsdomäne, sodass die aktuelle Vertrauens Ebene immer voll vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-315">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="8ded3-316">Mithilfe der-Eigenschaft und der-Eigenschaft können Sie die aktuellen Vertrauens Ebenen von Assemblys und Anwendungs Domänen ermitteln <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-316">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="8ded3-317">Weitere Informationen zur Reflektion und Transparenz finden Sie unter [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span><span class="sxs-lookup"><span data-stu-id="8ded3-317">For more information about reflection and transparency, see [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span></span> <span data-ttu-id="8ded3-318">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="8ded3-318">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      </Docs>
    </Member>
    <Member MemberName="IsSecuritySafeCritical">
      <MemberSignature Language="C#" Value="public virtual bool IsSecuritySafeCritical { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecuritySafeCritical" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecuritySafeCritical As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecuritySafeCritical { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecuritySafeCritical : bool" Usage="System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-319">Ruft einen Wert ab, der angibt, ob das aktuelle Feld auf der aktuellen Vertrauensebene sicherheitsrelevant und sicher zugänglich ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-319">Gets a value that indicates whether the current field is security-safe-critical at the current trust level.</span></span></summary>
        <value><span data-ttu-id="8ded3-320"><see langword="true" />, wenn das aktuelle Feld auf der aktuellen Vertrauensebene sicherheitsrelevant und sicher zugänglich ist, <see langword="false" />, wenn es sicherheitsrelevant und sicherheitstransparent ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-320"><see langword="true" /> if the current field is security-safe-critical at the current trust level; <see langword="false" /> if it is security-critical or transparent.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-321">Die <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A> <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> melden die Transparenz Ebene des Felds auf der aktuellen Vertrauens Ebene, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-321">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="8ded3-322">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="8ded3-322">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="8ded3-323">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="8ded3-323">Security level</span></span>|<span data-ttu-id="8ded3-324">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-324">IsSecurityCritical</span></span>|<span data-ttu-id="8ded3-325">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-325">IsSecuritySafeCritical</span></span>|<span data-ttu-id="8ded3-326">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-326">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="8ded3-327">Kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-327">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="8ded3-328">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-328">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="8ded3-329">Transparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-329">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="8ded3-330">Die Verwendung dieser Eigenschaften ist viel einfacher als das Untersuchen der Sicherheits Anmerkungen einer Assembly und ihrer Typen und Member, das Überprüfen der aktuellen Vertrauens Ebene und das Duplizieren der Lauf Zeit Regeln.</span><span class="sxs-lookup"><span data-stu-id="8ded3-330">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ded3-331">Für teilweise vertrauenswürdige Assemblys hängt der Wert dieser Eigenschaft von der aktuellen Vertrauens Ebene der Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-331">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="8ded3-332">Wenn die Assembly in eine teilweise vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in eine Sandbox-Anwendungsdomäne), werden die Sicherheits Anmerkungen der Assembly von der Laufzeit ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-332">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="8ded3-333">Die Assembly und alle zugehörigen Typen werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-333">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="8ded3-334">Die Laufzeit achtet auf die Sicherheits Anmerkungen einer teilweise vertrauenswürdigen Assembly nur, wenn diese Assembly in eine voll vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung).</span><span class="sxs-lookup"><span data-stu-id="8ded3-334">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="8ded3-335">Im Gegensatz dazu wird eine vertrauenswürdige Assembly (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist) immer mit voller Vertrauenswürdigkeit geladen, unabhängig von der Vertrauens Ebene der Anwendungsdomäne, sodass die aktuelle Vertrauens Ebene immer voll vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-335">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="8ded3-336">Mithilfe der-Eigenschaft und der-Eigenschaft können Sie die aktuellen Vertrauens Ebenen von Assemblys und Anwendungs Domänen ermitteln <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-336">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="8ded3-337">Weitere Informationen zur Reflektion und Transparenz finden Sie unter [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span><span class="sxs-lookup"><span data-stu-id="8ded3-337">For more information about reflection and transparency, see [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span></span> <span data-ttu-id="8ded3-338">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="8ded3-338">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      </Docs>
    </Member>
    <Member MemberName="IsSecurityTransparent">
      <MemberSignature Language="C#" Value="public virtual bool IsSecurityTransparent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecurityTransparent" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSecurityTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsSecurityTransparent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsSecurityTransparent { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityTransparent : bool" Usage="System.Reflection.FieldInfo.IsSecurityTransparent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-339">Ruft einen Wert ab, der angibt, ob das aktuelle Feld auf der aktuellen Vertrauensebene sicherheitstransparent ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-339">Gets a value that indicates whether the current field is transparent at the current trust level.</span></span></summary>
        <value><span data-ttu-id="8ded3-340"><see langword="true" />, wenn das Feld auf der aktuellen Vertrauensebene sicherheitstransparent ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-340"><see langword="true" /> if the field is security-transparent at the current trust level; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-341">Die <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A> <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A> Eigenschaften, und <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> melden die Transparenz Ebene des Felds auf der aktuellen Vertrauens Ebene, wie vom Common Language Runtime (CLR) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-341">The <xref:System.Reflection.FieldInfo.IsSecurityCritical%2A>, <xref:System.Reflection.FieldInfo.IsSecuritySafeCritical%2A>, and <xref:System.Reflection.FieldInfo.IsSecurityTransparent%2A> properties report the transparency level of the field at its current trust level, as determined by the common language runtime (CLR).</span></span> <span data-ttu-id="8ded3-342">Die Kombinationen dieser Eigenschaften werden in der folgenden Tabelle gezeigt:</span><span class="sxs-lookup"><span data-stu-id="8ded3-342">The combinations of these properties are shown in the following table:</span></span>  
  
|<span data-ttu-id="8ded3-343">Sicherheitsstufe</span><span class="sxs-lookup"><span data-stu-id="8ded3-343">Security level</span></span>|<span data-ttu-id="8ded3-344">IsSecurityCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-344">IsSecurityCritical</span></span>|<span data-ttu-id="8ded3-345">IsSecuritySafeCritical</span><span class="sxs-lookup"><span data-stu-id="8ded3-345">IsSecuritySafeCritical</span></span>|<span data-ttu-id="8ded3-346">IsSecurityTransparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-346">IsSecurityTransparent</span></span>|  
|--------------------|------------------------|----------------------------|---------------------------|  
|<span data-ttu-id="8ded3-347">Kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-347">Critical</span></span>|`true`|`false`|`false`|  
|<span data-ttu-id="8ded3-348">Sicher kritisch</span><span class="sxs-lookup"><span data-stu-id="8ded3-348">Safe critical</span></span>|`true`|`true`|`false`|  
|<span data-ttu-id="8ded3-349">Transparent</span><span class="sxs-lookup"><span data-stu-id="8ded3-349">Transparent</span></span>|`false`|`false`|`true`|  
  
 <span data-ttu-id="8ded3-350">Die Verwendung dieser Eigenschaften ist viel einfacher als das Untersuchen der Sicherheits Anmerkungen einer Assembly und ihrer Typen und Member, das Überprüfen der aktuellen Vertrauens Ebene und das Duplizieren der Lauf Zeit Regeln.</span><span class="sxs-lookup"><span data-stu-id="8ded3-350">Using these properties is much simpler than examining the security annotations of an assembly and its types and members, checking the current trust level, and attempting to duplicate the runtime's rules.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="8ded3-351">Für teilweise vertrauenswürdige Assemblys hängt der Wert dieser Eigenschaft von der aktuellen Vertrauens Ebene der Assembly ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-351">For partial-trust assemblies, the value of this property depends on the current trust level of the assembly.</span></span> <span data-ttu-id="8ded3-352">Wenn die Assembly in eine teilweise vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in eine Sandbox-Anwendungsdomäne), werden die Sicherheits Anmerkungen der Assembly von der Laufzeit ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-352">If the assembly is loaded into a partially trusted application domain (for example, into a sandboxed application domain), then the runtime ignores the security annotations of the assembly.</span></span> <span data-ttu-id="8ded3-353">Die Assembly und alle zugehörigen Typen werden als transparent behandelt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-353">The assembly and all its types are treated as transparent.</span></span> <span data-ttu-id="8ded3-354">Die Laufzeit achtet auf die Sicherheits Anmerkungen einer teilweise vertrauenswürdigen Assembly nur, wenn diese Assembly in eine voll vertrauenswürdige Anwendungsdomäne geladen wird (z. b. in die Standard Anwendungsdomäne einer Desktop Anwendung).</span><span class="sxs-lookup"><span data-stu-id="8ded3-354">The runtime pays attention to the security annotations of a partial-trust assembly only when that assembly is loaded into a fully trusted application domain (for example, into the default application domain of a desktop application).</span></span> <span data-ttu-id="8ded3-355">Im Gegensatz dazu wird eine vertrauenswürdige Assembly (d. h. eine Assembly mit starkem Namen, die im globalen Assemblycache installiert ist) immer mit voller Vertrauenswürdigkeit geladen, unabhängig von der Vertrauens Ebene der Anwendungsdomäne, sodass die aktuelle Vertrauens Ebene immer voll vertrauenswürdig ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-355">By contrast, a trusted assembly (that is, a strong-named assembly that is installed in the global assembly cache) is always loaded with full trust regardless of the trust level of the application domain, so its current trust level is always fully trusted.</span></span> <span data-ttu-id="8ded3-356">Mithilfe der-Eigenschaft und der-Eigenschaft können Sie die aktuellen Vertrauens Ebenen von Assemblys und Anwendungs Domänen ermitteln <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-356">You can determine the current trust levels of assemblies and application domains by using the <xref:System.Reflection.Assembly.IsFullyTrusted%2A?displayProperty=nameWithType> and <xref:System.AppDomain.IsFullyTrusted%2A?displayProperty=nameWithType> properties.</span></span>  
  
 <span data-ttu-id="8ded3-357">Weitere Informationen zur Reflektion und Transparenz finden Sie unter [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span><span class="sxs-lookup"><span data-stu-id="8ded3-357">For more information about reflection and transparency, see [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).</span></span> <span data-ttu-id="8ded3-358">Informationen zur Transparenz finden Sie unter [Sicherheitsänderungen](/dotnet/framework/security/security-changes).</span><span class="sxs-lookup"><span data-stu-id="8ded3-358">For information about transparency, see [Security Changes](/dotnet/framework/security/security-changes).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.FieldInfo.IsSecurityCritical" />
        <altmember cref="P:System.Reflection.FieldInfo.IsSecuritySafeCritical" />
      </Docs>
    </Member>
    <Member MemberName="IsSpecialName">
      <MemberSignature Language="C#" Value="public bool IsSpecialName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSpecialName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsSpecialName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSpecialName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSpecialName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSpecialName : bool" Usage="System.Reflection.FieldInfo.IsSpecialName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsSpecialName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-359">Ruft einen Wert ab, der angibt, ob das entsprechende <see langword="SpecialName" />-Attribut für den <see cref="T:System.Reflection.FieldAttributes" />-Enumerator festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="8ded3-359">Gets a value indicating whether the corresponding <see langword="SpecialName" /> attribute is set in the <see cref="T:System.Reflection.FieldAttributes" /> enumerator.</span></span></summary>
        <value><span data-ttu-id="8ded3-360"><see langword="true" />, wenn das <see langword="SpecialName" />-Attribut in <see cref="T:System.Reflection.FieldAttributes" /> festgelegt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-360"><see langword="true" /> if the <see langword="SpecialName" /> attribute is set in <see cref="T:System.Reflection.FieldAttributes" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-361">Namen, die mit oder beginnen, enthalten einen Unterstrich (_), Eigenschaftenaccessoren und Operator Überladungsmethoden sind Beispiele für Namen, die von einigen Compilern möglicherweise eine besondere Behandlung erfordern.</span><span class="sxs-lookup"><span data-stu-id="8ded3-361">Names that begin with or contain an underscore character (_), property accessors, and operator overloading methods are examples of names that might require special treatment by some compilers.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-362">Im folgenden Beispiel wird ein Wert zurückgegeben, der angibt, ob die Felder in der Klasse ein SpecialName-Attribut enthalten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-362">The following example returns a value indicating whether or not the fields in the class contain a SpecialName attribute.</span></span>  
  
 [!code-cpp[FieldInfo_IsSpecialName#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_IsSpecialName/CPP/fieldinfo_isspecialname.cpp#1)]
 [!code-csharp[FieldInfo_IsSpecialName#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_IsSpecialName/CS/fieldinfo_isspecialname.cs#1)]
 [!code-vb[FieldInfo_IsSpecialName#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_IsSpecialName/VB/fieldinfo_isspecialname.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IsStatic">
      <MemberSignature Language="C#" Value="public bool IsStatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStatic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.IsStatic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStatic { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStatic : bool" Usage="System.Reflection.FieldInfo.IsStatic" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.IsStatic</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-363">Ruft einen Wert ab, der angibt, ob das Feld statisch ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-363">Gets a value indicating whether the field is static.</span></span></summary>
        <value><span data-ttu-id="8ded3-364"><see langword="true" />, wenn das Feld statisch ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-364"><see langword="true" /> if this field is static; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-365">Wenn ein Feld statisch ist, wird eine Kopie des Felds von allen Instanzen des Typs gemeinsam genutzt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-365">When a field is static, one copy of the field is shared by all instances of the type.</span></span>  
  
 <span data-ttu-id="8ded3-366">Die- `IsStatic` Eigenschaft wird festgelegt, wenn das- `FieldAttributes.Static` Attribut festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-366">The `IsStatic` property is set when the `FieldAttributes.Static` attribute is set.</span></span>  
  
 <span data-ttu-id="8ded3-367">Um die Eigenschaft zu erhalten `IsStatic` , holen Sie zuerst die Klasse `Type` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-367">To get the `IsStatic` property, first get the class `Type`.</span></span> <span data-ttu-id="8ded3-368">`Type`Erhalten Sie im die `FieldInfo` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-368">From the `Type`, get the `FieldInfo`.</span></span> <span data-ttu-id="8ded3-369">Im `FieldInfo` können Sie die- `IsStatic` Eigenschaft erhalten.</span><span class="sxs-lookup"><span data-stu-id="8ded3-369">From the `FieldInfo`, get the `IsStatic` property.</span></span> <span data-ttu-id="8ded3-370">Wenn Sie auf ein nicht öffentliches Feld zugreifen möchten, legen `BindingFlags` Sie `NonPublic` in der-Methode auf fest, `GetField` und legen Sie den Zugriff auf `Instance` oder fest `Static` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-370">To access a non-public field, set the `BindingFlags` to `NonPublic` in the `GetField` method and set the accessibility to `Instance` or `Static`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-371">Im folgenden Beispiel wird bestimmt, ob das angegebene Feld statisch ist und das Ergebnis anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-371">The following example determines whether the specified field is static and displays the result.</span></span>  
  
 [!code-cpp[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.IsStatic Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.IsStatic Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8ded3-372">Dieser Code erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="8ded3-372">This code produces the following output:</span></span>  
  
 <span data-ttu-id="8ded3-373">Reflection. FieldInfo</span><span class="sxs-lookup"><span data-stu-id="8ded3-373">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="8ded3-374">Myfielda-ein privates Feld; IsStatic-false</span><span class="sxs-lookup"><span data-stu-id="8ded3-374">Myfielda - A private field; IsStatic - False</span></span>  
  
 <span data-ttu-id="8ded3-375">Statisches Feld Myfieldb-B; IsStatic-true</span><span class="sxs-lookup"><span data-stu-id="8ded3-375">Myfieldb - B static field; IsStatic - True</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldAttributes" />
        <altmember cref="M:System.Type.GetField(System.String,System.Reflection.BindingFlags)" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="MemberType">
      <MemberSignature Language="C#" Value="public override System.Reflection.MemberTypes MemberType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MemberTypes MemberType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.FieldInfo.MemberType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MemberType As MemberTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MemberTypes MemberType { System::Reflection::MemberTypes get(); };" />
      <MemberSignature Language="F#" Value="member this.MemberType : System.Reflection.MemberTypes" Usage="System.Reflection.FieldInfo.MemberType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">P:System.Runtime.InteropServices._FieldInfo.MemberType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8ded3-376">Ruft einen <see cref="T:System.Reflection.MemberTypes" />-Wert ab, der angibt, dass dieser Member ein Feld ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-376">Gets a <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span></span></summary>
        <value><span data-ttu-id="8ded3-377">Ein <see cref="T:System.Reflection.MemberTypes" />-Wert, der angibt, dass dieser Member ein Feld ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-377">A <see cref="T:System.Reflection.MemberTypes" /> value indicating that this member is a field.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-378">Diese Eigenschaft überschreibt <xref:System.Reflection.MemberInfo.MemberType%2A> .</span><span class="sxs-lookup"><span data-stu-id="8ded3-378">This property overrides <xref:System.Reflection.MemberInfo.MemberType%2A>.</span></span> <span data-ttu-id="8ded3-379">Wenn Sie also beispielsweise einen Satz von <xref:System.Reflection.MemberInfo> Objekten untersuchen, gibt das von <xref:System.Type.GetMembers%2A> -der-Eigenschaft zurückgegebene Array <xref:System.Reflection.MemberInfo.MemberType%2A> <xref:System.Reflection.MemberTypes.Field?displayProperty=nameWithType> nur dann zurück, wenn ein angegebenes Element ein Feld ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-379">Therefore, when you examine a set of <xref:System.Reflection.MemberInfo> objects - for example, the array returned by <xref:System.Type.GetMembers%2A> - the <xref:System.Reflection.MemberInfo.MemberType%2A> property returns <xref:System.Reflection.MemberTypes.Field?displayProperty=nameWithType> only when a given member is a field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-380">Im folgenden Beispiel wird ermittelt, ob der angegebene Member ein Feld ist und das Ergebnis anzeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-380">The following example determines whether the specified member is a field and displays the result.</span></span>  
  
 [!code-cpp[Classic FieldInfo.MemberType Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/CPP/source.cpp#1)]
 [!code-csharp[Classic FieldInfo.MemberType Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/CS/source.cs#1)]
 [!code-vb[Classic FieldInfo.MemberType Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic FieldInfo.MemberType Example/VB/source.vb#1)]  
  
 <span data-ttu-id="8ded3-381">Dieser Code erzeugt die folgende Ausgabe:</span><span class="sxs-lookup"><span data-stu-id="8ded3-381">This code produces the following output:</span></span>  
  
 <span data-ttu-id="8ded3-382">Reflection. FieldInfo</span><span class="sxs-lookup"><span data-stu-id="8ded3-382">Reflection.FieldInfo</span></span>  
  
 <span data-ttu-id="8ded3-383">MyField. field-ein privates Feld; Der Mitgliedstyp ist ein Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-383">Myfield.field - a private field; MemberType is a Field</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.FieldInfo" />
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.op_Equality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As FieldInfo, right As FieldInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::FieldInfo ^ left, System::Reflection::FieldInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.FieldInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="right" Type="System.Reflection.FieldInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8ded3-384">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-384">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8ded3-385">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-385">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="8ded3-386">Gibt an, ob zwei <see cref="T:System.Reflection.FieldInfo" />-Objekte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-386">Indicates whether two <see cref="T:System.Reflection.FieldInfo" /> objects are equal.</span></span></summary>
        <returns><span data-ttu-id="8ded3-387"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-387"><see langword="true" /> if <paramref name="left" /> is equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.FieldInfo left, System.Reflection.FieldInfo right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Reflection.FieldInfo left, class System.Reflection.FieldInfo right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.op_Inequality(System.Reflection.FieldInfo,System.Reflection.FieldInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As FieldInfo, right As FieldInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::FieldInfo ^ left, System::Reflection::FieldInfo ^ right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Reflection.FieldInfo * System.Reflection.FieldInfo -&gt; bool" Usage="System.Reflection.FieldInfo.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Reflection.FieldInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="right" Type="System.Reflection.FieldInfo" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="8ded3-388">Das erste zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-388">The first object to compare.</span></span></param>
        <param name="right"><span data-ttu-id="8ded3-389">Das zweite zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-389">The second object to compare.</span></span></param>
        <summary><span data-ttu-id="8ded3-390">Gibt an, ob zwei <see cref="T:System.Reflection.FieldInfo" />-Objekte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="8ded3-390">Indicates whether two <see cref="T:System.Reflection.FieldInfo" /> objects are not equal.</span></span></summary>
        <returns><span data-ttu-id="8ded3-391"><see langword="true" />, wenn <paramref name="left" /> und <paramref name="right" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-391"><see langword="true" /> if <paramref name="left" /> is not equal to <paramref name="right" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8ded3-392">Legt den Wert des Felds für das angegebene Objekt auf den angegebenen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="8ded3-392">Sets the value of the field for the given object to the given value.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object obj, object value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (obj As Object, value As Object)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ obj, System::Object ^ value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj -&gt; unit&#xA;override this.SetValue : obj * obj -&gt; unit" Usage="fieldInfo.SetValue (obj, value)" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;xamarinmac-3.0" />
      <MemberSignature Language="C#" Value="public void SetValue (object obj, object value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object obj, object value) cil managed" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (obj As Object, value As Object)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ obj, System::Object ^ value);" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * obj -&gt; unit" Usage="fieldInfo.SetValue (obj, value)" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-393">Das Objekt, dessen Feldwert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-393">The object whose field value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="8ded3-394">Der Wert, der dem Feld zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8ded3-394">The value to assign to the field.</span></span></param>
        <summary><span data-ttu-id="8ded3-395">Legt den Wert des Felds fest, das durch das angegebene Objekt unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-395">Sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-396">Diese Methode wird `value` dem Feld zugewiesen, das von dieser Instanz für das-Objekt reflektiert wird `obj` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-396">This method will assign `value` to the field reflected by this instance on object `obj`.</span></span> <span data-ttu-id="8ded3-397">Wenn das Feld statisch ist, `obj` wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-397">If the field is static, `obj` will be ignored.</span></span> <span data-ttu-id="8ded3-398">Bei nicht statischen Feldern `obj` sollte eine Instanz einer Klasse sein, die das Feld erbt oder deklariert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-398">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="8ded3-399">Der neue Wert wird als an den Wert übermittelt `Object` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-399">The new value is passed as an `Object`.</span></span> <span data-ttu-id="8ded3-400">Wenn der Typ des Felds beispielsweise Boolean ist, wird eine Instanz von `Object` mit dem entsprechenden booleschen Wert übermittelt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-400">For example, if the field's type is Boolean, an instance of `Object` with the appropriate Boolean value is passed.</span></span> <span data-ttu-id="8ded3-401">Vor dem Festlegen des Werts `SetValue` überprüft, ob der Benutzer über die Zugriffsberechtigung verfügt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-401">Before setting the value, `SetValue` checks to see if the user has access permission.</span></span> <span data-ttu-id="8ded3-402">Diese abschließende Methode ist eine bequeme Methode zum Aufrufen der folgenden `SetValue` Methode.</span><span class="sxs-lookup"><span data-stu-id="8ded3-402">This final method is a convenience method for calling the following `SetValue` method.</span></span>  
  
<span data-ttu-id="8ded3-403">Diese Methode kann nicht verwendet werden, um die Werte statischer, init-only- `readonly` Felder (in c#) zuverlässig festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-403">This method cannot be used to set values of static, init-only (`readonly` in C#) fields reliably.</span></span> <span data-ttu-id="8ded3-404">In .net Core 3,0 und höheren Versionen wird eine Ausnahme ausgelöst, wenn Sie versuchen, einen Wert für ein statisches, nur-init-Feld festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-404">In .NET Core 3.0 and later versions, an exception is thrown if you attempt to set a value on a static, init-only field.</span></span>

> [!NOTE]
>  <span data-ttu-id="8ded3-405">Voll vertrauenswürdiger Code verfügt über die erforderlichen Berechtigungen für den Zugriff auf und das Aufrufen privater Konstruktoren, Methoden, Felder und Eigenschaften mithilfe von Reflektion.</span><span class="sxs-lookup"><span data-stu-id="8ded3-405">Fully trusted code has the permissions that are needed to access and invoke private constructors, methods, fields, and properties using reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-406">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der <xref:System.Security.Permissions.ReflectionPermission> Aufrufer mit dem-Flag erteilt wurde, <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> und, wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge des Aufrufers beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-406">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8ded3-407">(Siehe [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span><span class="sxs-lookup"><span data-stu-id="8ded3-407">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="8ded3-408">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="8ded3-408">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8ded3-409">Im folgenden Beispiel wird der Wert eines Felds festgelegt, der Wert abgerufen und angezeigt, das Feld geändert und das Ergebnis angezeigt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-409">The following example sets the value of a field, gets and displays the value, modifies the field, and displays the result.</span></span>  
  
 [!code-cpp[FieldInfo_SetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR/FieldInfo_SetValue/CPP/fieldinfo_setvalue.cpp#1)]
 [!code-csharp[FieldInfo_SetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR/FieldInfo_SetValue/CS/fieldinfo_setvalue.cs#1)]
 [!code-vb[FieldInfo_SetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/FieldInfo_SetValue/VB/fieldinfo_setvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FieldAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8ded3-410">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder der <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">portablen Klassenbibliothek</see> stattdessen die Basisklassenausnahme <see cref="T:System.MemberAccessException" /> ab.</span><span class="sxs-lookup"><span data-stu-id="8ded3-410">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8ded3-411">Der Aufrufer hat nicht die Berechtigung für den Zugriff auf dieses Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-411">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="8ded3-412">Fangen Sie in <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET für Windows Store-Apps</see> oder <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Klassenbibliothek</see> stattdessen <see cref="T:System.Exception" /> ab.  </span><span class="sxs-lookup"><span data-stu-id="8ded3-412">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="8ded3-413">Der <paramref name="obj" />-Parameter ist <see langword="null" />, und das Feld ist ein Instanzfeld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-413">The <paramref name="obj" /> parameter is <see langword="null" /> and the field is an instance field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ded3-414">Das Feld ist im Objekt nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-414">The field does not exist on the object.</span></span>  
  
<span data-ttu-id="8ded3-415">- oder -</span><span class="sxs-lookup"><span data-stu-id="8ded3-415">-or-</span></span> 
<span data-ttu-id="8ded3-416">Der <paramref name="value" />-Parameter kann nicht konvertiert und im Feld gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-416">The <paramref name="value" /> parameter cannot be converted and stored in the field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public abstract void SetValue (object obj, object value, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object obj, object value, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub SetValue (obj As Object, value As Object, invokeAttr As BindingFlags, binder As Binder, culture As CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void SetValue(System::Object ^ obj, System::Object ^ value, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member SetValue : obj * obj * System.Reflection.BindingFlags * System.Reflection.Binder * System.Globalization.CultureInfo -&gt; unit" Usage="fieldInfo.SetValue (obj, value, invokeAttr, binder, culture)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="binder" Type="System.Reflection.Binder" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-417">Das Objekt, dessen Feldwert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-417">The object whose field value will be set.</span></span></param>
        <param name="value"><span data-ttu-id="8ded3-418">Der Wert, der dem Feld zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8ded3-418">The value to assign to the field.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="8ded3-419">Ein Feld von <see langword="Binder" />, das die Art der gewünschten Bindung angibt, z. B. <see langword="Binder.CreateInstance" /> oder <see langword="Binder.ExactBinding" />.</span><span class="sxs-lookup"><span data-stu-id="8ded3-419">A field of <see langword="Binder" /> that specifies the type of binding that is desired (for example, <see langword="Binder.CreateInstance" /> or <see langword="Binder.ExactBinding" />).</span></span></param>
        <param name="binder"><span data-ttu-id="8ded3-420">Eine Gruppe von Eigenschaften, die die Bindung, Umwandlung der Argumenttypen und das Aufrufen von Membern über Reflektion ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="8ded3-420">A set of properties that enables the binding, coercion of argument types, and invocation of members through reflection.</span></span> <span data-ttu-id="8ded3-421">Wenn <paramref name="binder" /> den Wert <see langword="null" /> hat, wird <see langword="Binder.DefaultBinding" /> verwendet.</span><span class="sxs-lookup"><span data-stu-id="8ded3-421">If <paramref name="binder" /> is <see langword="null" />, then <see langword="Binder.DefaultBinding" /> is used.</span></span></param>
        <param name="culture"><span data-ttu-id="8ded3-422">Die Softwareeinstellungen für eine bestimmte Kultur.</span><span class="sxs-lookup"><span data-stu-id="8ded3-422">The software preferences of a particular culture.</span></span></param>
        <summary><span data-ttu-id="8ded3-423">Legt den Wert eines Felds fest, das durch ein angegebenes Objekt unterstützt wird, wenn es in einer abgeleiteten Klasse überschrieben wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-423">When overridden in a derived class, sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-424">Diese Methode wird `value` dem Feld zugewiesen, das von dieser Instanz in reflektiert wird `obj` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-424">This method will assign `value` to the field reflected by this instance on `obj`.</span></span> <span data-ttu-id="8ded3-425">Wenn das Feld statisch ist, `obj` wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-425">If the field is static, `obj` will be ignored.</span></span> <span data-ttu-id="8ded3-426">Bei nicht statischen Feldern `obj` sollte eine Instanz einer Klasse sein, die das Feld erbt oder deklariert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-426">For non-static fields, `obj` should be an instance of a class that inherits or declares the field.</span></span> <span data-ttu-id="8ded3-427">Der neue Wert wird als an den Wert übermittelt `Object` .</span><span class="sxs-lookup"><span data-stu-id="8ded3-427">The new value is passed as an `Object`.</span></span> <span data-ttu-id="8ded3-428">Wenn der Typ des Felds beispielsweise ist `Boolean` , wird eine Instanz von `Object` mit dem entsprechenden booleschen Wert übermittelt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-428">For example, if the field's type is `Boolean`, an instance of `Object` with the appropriate Boolean value is passed.</span></span> <span data-ttu-id="8ded3-429">Vor dem Festlegen des Werts `SetValue` überprüft, ob der Benutzer über die Zugriffsberechtigung verfügt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-429">Before setting the value, `SetValue` checks to see if the user has access permission.</span></span>  

<span data-ttu-id="8ded3-430">Diese Methode kann nicht verwendet werden, um die Werte statischer, init-only- `readonly` Felder (in c#) zuverlässig festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-430">This method cannot be used to set values of static, init-only (`readonly` in C#) fields reliably.</span></span> <span data-ttu-id="8ded3-431">In .net Core 3,0 und höheren Versionen wird eine Ausnahme ausgelöst, wenn Sie versuchen, einen Wert für ein statisches, nur-init-Feld festzulegen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-431">In .NET Core 3.0 and later versions, an exception is thrown if you attempt to set a value on a static, init-only field.</span></span>
  
> [!NOTE]
>  <span data-ttu-id="8ded3-432">Voll vertrauenswürdiger Code verfügt über die erforderlichen Berechtigungen für den Zugriff auf und das Aufrufen privater Konstruktoren, Methoden, Felder und Eigenschaften mithilfe von Reflektion.</span><span class="sxs-lookup"><span data-stu-id="8ded3-432">Fully trusted code has the permissions that are needed to access and invoke private constructors, methods, fields, and properties using reflection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-433">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der <xref:System.Security.Permissions.ReflectionPermission> Aufrufer mit dem-Flag erteilt wurde, <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> und, wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge des Aufrufers beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-433">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8ded3-434">(Siehe [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span><span class="sxs-lookup"><span data-stu-id="8ded3-434">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="8ded3-435">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="8ded3-435">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FieldAccessException"><span data-ttu-id="8ded3-436">Der Aufrufer hat nicht die Berechtigung für den Zugriff auf dieses Feld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-436">The caller does not have permission to access this field.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><span data-ttu-id="8ded3-437">Der <paramref name="obj" />-Parameter ist <see langword="null" />, und das Feld ist ein Instanzfeld.</span><span class="sxs-lookup"><span data-stu-id="8ded3-437">The <paramref name="obj" /> parameter is <see langword="null" /> and the field is an instance field.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="8ded3-438">Das Feld ist im Objekt nicht vorhanden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-438">The field does not exist on the object.</span></span>  
  
<span data-ttu-id="8ded3-439">- oder -</span><span class="sxs-lookup"><span data-stu-id="8ded3-439">-or-</span></span> 
<span data-ttu-id="8ded3-440">Der <paramref name="value" />-Parameter kann nicht konvertiert und im Feld gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-440">The <paramref name="value" /> parameter cannot be converted and stored in the field.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetValueDirect">
      <MemberSignature Language="C#" Value="public virtual void SetValueDirect (TypedReference obj, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValueDirect(valuetype System.TypedReference obj, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.SetValueDirect(System.TypedReference,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValueDirect (obj As TypedReference, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValueDirect(TypedReference obj, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValueDirect : TypedReference * obj -&gt; unit&#xA;override this.SetValueDirect : TypedReference * obj -&gt; unit" Usage="fieldInfo.SetValueDirect (obj, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">M:System.Runtime.InteropServices._FieldInfo.SetValueDirect(System.TypedReference,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.TypedReference" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="8ded3-441">Eine <see cref="T:System.TypedReference" />-Struktur, die einen verwalteten Zeiger auf einen Speicherort und eine Laufzeitdarstellung des Typs kapselt, der an diesem Ort gespeichert werden kann.</span><span class="sxs-lookup"><span data-stu-id="8ded3-441">A <see cref="T:System.TypedReference" /> structure that encapsulates a managed pointer to a location and a runtime representation of the type that can be stored at that location.</span></span></param>
        <param name="value"><span data-ttu-id="8ded3-442">Der Wert, der dem Feld zugewiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="8ded3-442">The value to assign to the field.</span></span></param>
        <summary><span data-ttu-id="8ded3-443">Legt den Wert des Felds fest, das durch das angegebene Objekt unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="8ded3-443">Sets the value of the field supported by the given object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8ded3-444">Ab [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] kann diese Methode verwendet werden, um auf nicht öffentliche Member zuzugreifen, wenn der <xref:System.Security.Permissions.ReflectionPermission> Aufrufer mit dem-Flag erteilt wurde, <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> und, wenn der Berechtigungs Satz der nicht öffentlichen Member auf den Berechtigungs Satz des Aufrufers oder eine Teilmenge des Aufrufers beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="8ded3-444">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public members if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public members is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="8ded3-445">(Siehe [Sicherheitsüberlegungen für die Reflektion](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span><span class="sxs-lookup"><span data-stu-id="8ded3-445">(See [Security Considerations for Reflection](/dotnet/framework/reflection-and-codedom/security-considerations-for-reflection).)</span></span>  
>   
>  <span data-ttu-id="8ded3-446">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="8ded3-446">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Reflection.FieldInfo.SetValue(System.Object,System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Globalization.CultureInfo)" />
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8ded3-447">Der Aufrufer erfordert die CLS-Alternative (Common Language Specification), hat jedoch stattdessen diese Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-447">The caller requires the Common Language Specification (CLS) alternative, but called this method instead.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _FieldInfo.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_FieldInfo::GetIDsOfNames;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._FieldInfo.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames : Guid * nativeint * uint32 * uint32 * nativeint -&gt; unit" Usage="fieldInfo.System.Runtime.InteropServices._FieldInfo.GetIDsOfNames (riid, rgszNames, cNames, lcid, rgDispId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgszNames" Type="System.IntPtr" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="cNames" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="rgDispId" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="8ded3-448">Für zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-448">Reserved for future use.</span></span> <span data-ttu-id="8ded3-449">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="8ded3-449">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="8ded3-450">Das übergebene Array von zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-450">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="8ded3-451">Die Anzahl der zuzuordnenden Namen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-451">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="8ded3-452">Der Gebietsschemakontext, in dem die Namen interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-452">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="8ded3-453">Das vom Aufrufer zugewiesene Array, das die IDs entsprechend den Namen empfängt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-453">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="8ded3-454">Ordnet eine Reihe von Namen einer entsprechenden Reihe von Dispatchbezeichnern zu.</span><span class="sxs-lookup"><span data-stu-id="8ded3-454">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-455">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-455">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8ded3-456">Weitere Informationen zu finden Sie in `IDispatch::GetIDsOfNames` der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8ded3-456">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8ded3-457">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-457">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetType">
      <MemberSignature Language="C#" Value="Type _FieldInfo.GetType ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Type System.Runtime.InteropServices._FieldInfo.GetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetType" />
      <MemberSignature Language="VB.NET" Value="Function GetType () As Type Implements _FieldInfo.GetType" />
      <MemberSignature Language="C++ CLI" Value=" virtual Type ^ System.Runtime.InteropServices._FieldInfo.GetType() = System::Runtime::InteropServices::_FieldInfo::GetType;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._FieldInfo.GetType : unit -&gt; Type&#xA;override this.System.Runtime.InteropServices._FieldInfo.GetType : unit -&gt; Type" Usage="fieldInfo.System.Runtime.InteropServices._FieldInfo.GetType " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8ded3-458">Ruft ein <see cref="T:System.Type" />-Objekt ab, das den <see cref="T:System.Reflection.FieldInfo" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-458">Gets a <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.FieldInfo" /> type.</span></span></summary>
        <returns><span data-ttu-id="8ded3-459">Ein <see cref="T:System.Type" />-Objekt, das den <see cref="T:System.Reflection.FieldInfo" />-Typ darstellt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-459">A <see cref="T:System.Type" /> object representing the <see cref="T:System.Reflection.FieldInfo" /> type.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _FieldInfo.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_FieldInfo::GetTypeInfo;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._FieldInfo.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._FieldInfo.GetTypeInfo : uint32 * uint32 * nativeint -&gt; unit" Usage="fieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfo (iTInfo, lcid, ppTInfo)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="8ded3-460">Die zurückzugebenden Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-460">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="8ded3-461">Der Gebietsschemabezeichner für die Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-461">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="8ded3-462">Empfängt einen Zeiger auf das angeforderte Objekt mit den Typinformationen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-462">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="8ded3-463">Ruft die Typinformationen für ein Objekt ab, die dann zum Abrufen der Typinformationen für eine Schnittstelle verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="8ded3-463">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-464">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-464">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8ded3-465">Weitere Informationen zu finden Sie in `IDispatch::GetTypeInfo` der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8ded3-465">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8ded3-466">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-466">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _FieldInfo.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _FieldInfo.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_FieldInfo::GetTypeInfoCount;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount : uint32 -&gt; unit&#xA;override this.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount : uint32 -&gt; unit" Usage="fieldInfo.System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount pcTInfo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="8ded3-467">Zeigt auf einen Speicherort, der die Anzahl der Schnittstellen mit Typinformationen empfängt, die vom Objekt bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-467">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="8ded3-468">Ruft die Anzahl der Schnittstellen mit Typinformationen ab, die von einem Objekt bereitgestellt werden (0 oder 1).</span><span class="sxs-lookup"><span data-stu-id="8ded3-468">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-469">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-469">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8ded3-470">Weitere Informationen zu finden Sie in `IDispatch::GetTypeInfoCount` der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8ded3-470">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8ded3-471">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-471">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._FieldInfo.Invoke">
      <MemberSignature Language="C#" Value="void _FieldInfo.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._FieldInfo.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.FieldInfo.System#Runtime#InteropServices#_FieldInfo#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _FieldInfo.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._FieldInfo.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_FieldInfo::Invoke;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.InteropServices._FieldInfo.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit&#xA;override this.System.Runtime.InteropServices._FieldInfo.Invoke : uint32 * Guid * uint32 * int16 * nativeint * nativeint * nativeint * nativeint -&gt; unit" Usage="fieldInfo.System.Runtime.InteropServices._FieldInfo.Invoke (dispIdMember, riid, lcid, wFlags, pDispParams, pVarResult, pExcepInfo, puArgErr)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._FieldInfo.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" Index="0" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" Index="1" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="lcid" Type="System.UInt32" Index="2" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="wFlags" Type="System.Int16" Index="3" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pDispParams" Type="System.IntPtr" Index="4" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pVarResult" Type="System.IntPtr" Index="5" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" Index="6" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
        <Parameter Name="puArgErr" Type="System.IntPtr" Index="7" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="8ded3-472">Bezeichnet den Member.</span><span class="sxs-lookup"><span data-stu-id="8ded3-472">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="8ded3-473">Für zukünftige Verwendung reserviert.</span><span class="sxs-lookup"><span data-stu-id="8ded3-473">Reserved for future use.</span></span> <span data-ttu-id="8ded3-474">Muss IID_NULL sein.</span><span class="sxs-lookup"><span data-stu-id="8ded3-474">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="8ded3-475">Der Gebietsschemakontext, in dem Argumente interpretiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-475">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="8ded3-476">Flags, die den Kontext des Aufrufs beschreiben.</span><span class="sxs-lookup"><span data-stu-id="8ded3-476">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="8ded3-477">Ein Zeiger auf eine Struktur, die ein Array von Argumenten und ein Array von Argument-DISPIDs für benannte Argumente sowie Zähler für die Anzahl der Elemente in jedem Array enthält.</span><span class="sxs-lookup"><span data-stu-id="8ded3-477">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="8ded3-478">Ein Verweis auf den Speicherort, an dem das Ergebnis gespeichert werden soll.</span><span class="sxs-lookup"><span data-stu-id="8ded3-478">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="8ded3-479">Ein Zeiger auf eine Struktur mit Ausnahmeinformationen.</span><span class="sxs-lookup"><span data-stu-id="8ded3-479">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="8ded3-480">Der Index des ersten Arguments mit einem Fehler.</span><span class="sxs-lookup"><span data-stu-id="8ded3-480">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="8ded3-481">Stellt den Zugriff auf von einem Objekt verfügbar gemachte Eigenschaften und Methoden bereit.</span><span class="sxs-lookup"><span data-stu-id="8ded3-481">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8ded3-482">Diese Methode ist für den Zugriff auf verwaltete Klassen aus nicht verwaltetem Code vorgesehen und sollte nicht aus verwaltetem Code aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="8ded3-482">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8ded3-483">Weitere Informationen zu finden Sie in `IDispatch::Invoke` der MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8ded3-483">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="8ded3-484">Spät gebundener Zugriff mithilfe der <c>IDispatch</c>-Schnittstelle in COM wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="8ded3-484">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
