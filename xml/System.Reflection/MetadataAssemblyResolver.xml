<Type Name="MetadataAssemblyResolver" FullName="System.Reflection.MetadataAssemblyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fafd31106ff69b2cc404819d43f9bbc3b3cb00cd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70610932" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataAssemblyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MetadataAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAssemblyResolver abstract" />
  <TypeSignature Language="F#" Value="type MetadataAssemblyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="5500b-101">Gibt die Basisklasse für Bindungsalgorithmen an, die von <see cref="T:System.Reflection.MetadataLoadContext" /> verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5500b-101">Provides the base class for binding algorithms used by <see cref="T:System.Reflection.MetadataLoadContext" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataAssemblyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetadataAssemblyResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="5500b-102">Initialisiert eine Instanz von <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</span><span class="sxs-lookup"><span data-stu-id="5500b-102">Initializes an instance of <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Resolve (System.Reflection.MetadataLoadContext context, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Resolve(class System.Reflection.MetadataLoadContext context, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.Resolve(System.Reflection.MetadataLoadContext,System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ Resolve(System::Reflection::MetadataLoadContext ^ context, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Reflection.MetadataLoadContext * System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="metadataAssemblyResolver.Resolve (context, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Reflection.MetadataLoadContext" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="5500b-103">Das Kontextobjekt zum Laden von Metadaten, das die isolierte Umgebung mit <see cref="T:System.Type" />-Objekten darstellt, die nur zu Untersuchungszwecken geladen werden.</span><span class="sxs-lookup"><span data-stu-id="5500b-103">The metadata load context object that represents the closed universe of <see cref="T:System.Type" /> objects loaded for inspection-only purposes.</span></span></param>
        <param name="assemblyName"><span data-ttu-id="5500b-104">Der Name der Assembly.</span><span class="sxs-lookup"><span data-stu-id="5500b-104">The name of the assembly.</span></span></param>
        <summary><span data-ttu-id="5500b-105">Gibt eine Assembly aus einem angegebenen Assemblynamen zurück.</span><span class="sxs-lookup"><span data-stu-id="5500b-105">Returns an assembly from a given assembly name.</span></span></summary>
        <returns><span data-ttu-id="5500b-106">Die Assembly für den angegebenen <paramref name="assemblyName" />.</span><span class="sxs-lookup"><span data-stu-id="5500b-106">The assembly for the provided <paramref name="assemblyName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="5500b-107">Das Binden eines Assemblynamens an eine <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> Assembly tritt auf, wenn aufgerufen wird oder wenn ein Typ aus einer Assembly eine Abhängigkeit von einer anderen Assembly aufweist.</span><span class="sxs-lookup"><span data-stu-id="5500b-107">Binding an assembly name to an assembly occurs when <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> is called or when a type from one assembly has a dependency on another assembly.</span></span> <span data-ttu-id="5500b-108">Der Handler, den von `Resolve` der über <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>Schreibung <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> verwendet <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> werden soll, oder, um die angeforderte Assembly zu laden und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="5500b-108">The handler that overrides `Resolve` should use <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>, <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> or <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> to load the requested assembly and return it.</span></span>

<span data-ttu-id="5500b-109">Um anzugeben, dass eine Assembly nicht gefunden werden kann, sollte der `null` Handler zurückgeben, anstatt eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="5500b-109">To indicate the failure to find an assembly, the handler should return `null` rather than throwing an exception.</span></span> <span data-ttu-id="5500b-110">`null` Wenn Sie einen Commit für den Fehler ausführen, tritt bei zukünftigen versuchen, diesen Namen zu laden, ein Fehler auf, ohne den Handler erneut aufzurufen</span><span class="sxs-lookup"><span data-stu-id="5500b-110">Returning `null` commits the failure so that future attempts to load that name will fail without re-invoking the handler.</span></span>

<span data-ttu-id="5500b-111">Wenn der Handler eine Ausnahme auslöst, wird die Ausnahme an die Anwendung übermittelt, die den Vorgang aufgerufen hat, der die Bindung ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="5500b-111">If the handler throws an exception, the exception will be passed through to the application that invoked the operation that triggered the binding.</span></span> <span data-ttu-id="5500b-112">Der <xref:System.Reflection.MetadataLoadContext> fängt ihn nicht ab, und es wird keine Bindung stattfinden.</span><span class="sxs-lookup"><span data-stu-id="5500b-112">The <xref:System.Reflection.MetadataLoadContext> will not catch it, and no binding will occur.</span></span>

<span data-ttu-id="5500b-113">Der Handler wird in der Regel nicht mehr als einmal für denselben Namen aufgerufen, es sei denn, zwei Threads laden dieselbe Assembly.</span><span class="sxs-lookup"><span data-stu-id="5500b-113">The handler will generally not be called more than once for the same name, unless two threads race to load the same assembly.</span></span> <span data-ttu-id="5500b-114">Selbst in diesem Fall gewinnt ein Ergebnis und ist atomarisch an den Namen gebunden.</span><span class="sxs-lookup"><span data-stu-id="5500b-114">Even in that case, one result will win and be atomically bound to the name.</span></span>

<span data-ttu-id="5500b-115">Führt <xref:System.Reflection.MetadataLoadContext> absichtlich keinen Ref-DEF-Abgleich für die zurückgegebene Assembly aus, da eine Ref-DEF-Übereinstimmung eine Richtlinie darstellt.</span><span class="sxs-lookup"><span data-stu-id="5500b-115">The <xref:System.Reflection.MetadataLoadContext> intentionally performs no ref-def matching on the returned assembly as what constitutes a ref-def match is a policy.</span></span> <span data-ttu-id="5500b-116">Es ist auch die Art der willkürlichen Einschränkung, <xref:System.Reflection.MetadataLoadContext> die zu vermeiden versucht.</span><span class="sxs-lookup"><span data-stu-id="5500b-116">It is also the kind of arbitrary restriction that <xref:System.Reflection.MetadataLoadContext> strives to avoid.</span></span>

<span data-ttu-id="5500b-117"><xref:System.Reflection.MetadataLoadContext> Kann keine Assemblys aus anderen Metadaten-Lade Kontexten oder anderen typanbietern (z. b. dem eigenen Reflektionssystem der zugrunde liegenden Laufzeit) nutzen</span><span class="sxs-lookup"><span data-stu-id="5500b-117">The <xref:System.Reflection.MetadataLoadContext> cannot consume assemblies from other metadata load contexts or other type providers (such as the underlying runtime's own reflection system).</span></span> <span data-ttu-id="5500b-118">Wenn ein Handler eine solche Assembly zurückgibt, <xref:System.Reflection.MetadataLoadContext> löst eine <xref:System.IO.FileLoadException>aus.</span><span class="sxs-lookup"><span data-stu-id="5500b-118">If a handler returns such an assembly, the <xref:System.Reflection.MetadataLoadContext> throws a <xref:System.IO.FileLoadException>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
