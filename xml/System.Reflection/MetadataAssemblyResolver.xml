<Type Name="MetadataAssemblyResolver" FullName="System.Reflection.MetadataAssemblyResolver">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0bb0b96189a8cffc4b438bd0a7e96a28c8bcb654" /><Meta Name="ms.sourcegitcommit" Value="0807ab0a64414edc9b4d09d3877857e83cb7f7a4" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/13/2019" /><Meta Name="ms.locfileid" Value="68972693" /></Metadata><TypeSignature Language="C#" Value="public abstract class MetadataAssemblyResolver" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MetadataAssemblyResolver extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.MetadataAssemblyResolver" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MetadataAssemblyResolver" />
  <TypeSignature Language="C++ CLI" Value="public ref class MetadataAssemblyResolver abstract" />
  <TypeSignature Language="F#" Value="type MetadataAssemblyResolver = class" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gibt die Basisklasse für Bindungsalgorithmen an, die von <see cref="T:System.Reflection.MetadataLoadContext" /> verwendet werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MetadataAssemblyResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MetadataAssemblyResolver();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine Instanz von <see cref="T:System.Reflection.MetadataAssemblyResolver" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resolve">
      <MemberSignature Language="C#" Value="public abstract System.Reflection.Assembly Resolve (System.Reflection.MetadataLoadContext context, System.Reflection.AssemblyName assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Reflection.Assembly Resolve(class System.Reflection.MetadataLoadContext context, class System.Reflection.AssemblyName assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.MetadataAssemblyResolver.Resolve(System.Reflection.MetadataLoadContext,System.Reflection.AssemblyName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Reflection::Assembly ^ Resolve(System::Reflection::MetadataLoadContext ^ context, System::Reflection::AssemblyName ^ assemblyName);" />
      <MemberSignature Language="F#" Value="abstract member Resolve : System.Reflection.MetadataLoadContext * System.Reflection.AssemblyName -&gt; System.Reflection.Assembly" Usage="metadataAssemblyResolver.Resolve (context, assemblyName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.MetadataLoadContext</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Reflection.MetadataLoadContext" />
        <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
      </Parameters>
      <Docs>
        <param name="context">Das Kontextobjekt zum Laden von Metadaten, das die isolierte Umgebung mit <see cref="T:System.Type" />-Objekten darstellt, die nur zu Untersuchungszwecken geladen werden.</param>
        <param name="assemblyName">Der Name der Assembly.</param>
        <summary>Gibt eine Assembly aus einem angegebenen Assemblynamen zurück.</summary>
        <returns>Die Assembly für den angegebenen <paramref name="assemblyName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

Das Binden eines Assemblynamens an eine <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyName%2A> Assembly tritt auf, wenn aufgerufen wird oder wenn ein Typ aus einer Assembly eine Abhängigkeit von einer anderen Assembly aufweist. Der Handler, den von `Resolve` der über <xref:System.Reflection.MetadataLoadContext.LoadFromStream%2A?displayProperty=nameWithType>Schreibung <xref:System.Reflection.MetadataLoadContext.LoadFromAssemblyPath%2A?displayProperty=nameWithType> verwendet <xref:System.Reflection.MetadataLoadContext.LoadFromByteArray%2A?displayProperty=nameWithType> werden soll, oder, um die angeforderte Assembly zu laden und zurückzugeben.

Um anzugeben, dass eine Assembly nicht gefunden werden kann, sollte der `null` Handler zurückgeben, anstatt eine Ausnahme auszulösen. `null` Wenn Sie einen Commit für den Fehler ausführen, tritt bei zukünftigen versuchen, diesen Namen zu laden, ein Fehler auf, ohne den Handler erneut aufzurufen

Wenn der Handler eine Ausnahme auslöst, wird die Ausnahme an die Anwendung übermittelt, die den Vorgang aufgerufen hat, der die Bindung ausgelöst hat. Der <xref:System.Reflection.MetadataLoadContext> fängt ihn nicht ab, und es wird keine Bindung stattfinden.

Der Handler wird in der Regel nicht mehr als einmal für denselben Namen aufgerufen, es sei denn, zwei Threads laden dieselbe Assembly. Selbst in diesem Fall gewinnt ein Ergebnis und ist atomarisch an den Namen gebunden.

Führt <xref:System.Reflection.MetadataLoadContext> absichtlich keinen Ref-DEF-Abgleich für die zurückgegebene Assembly aus, da eine Ref-DEF-Übereinstimmung eine Richtlinie darstellt. Es ist auch die Art der willkürlichen Einschränkung, <xref:System.Reflection.MetadataLoadContext> die zu vermeiden versucht.

<xref:System.Reflection.MetadataLoadContext> Kann keine Assemblys aus anderen Metadaten-Lade Kontexten oder anderen typanbietern (z. b. dem eigenen Reflektionssystem der zugrunde liegenden Laufzeit) nutzen Wenn ein Handler eine solche Assembly zurückgibt, <xref:System.Reflection.MetadataLoadContext> löst eine <xref:System.IO.FileLoadException>aus.

          ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
