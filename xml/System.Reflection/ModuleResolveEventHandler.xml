<Type Name="ModuleResolveEventHandler" FullName="System.Reflection.ModuleResolveEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="62463fd4ba44aee852d8dc68f43ff697c1d9031a" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78800484" /></Metadata><TypeSignature Language="C#" Value="public delegate System.Reflection.Module ModuleResolveEventHandler(object sender, ResolveEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ModuleResolveEventHandler extends System.MulticastDelegate" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.ModuleResolveEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function ModuleResolveEventHandler(sender As Object, e As ResolveEventArgs) As Module " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Reflection::Module ^ ModuleResolveEventHandler(System::Object ^ sender, ResolveEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ModuleResolveEventHandler = delegate of obj * ResolveEventArgs -&gt; Module" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed ModuleResolveEventHandler extends System.MulticastDelegate" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.ResolveEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Reflection.Module</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Die Assembly, die die Quelle des Ereignisses war.</param>
    <param name="e">Die Argumente, die vom Objekt bereitgestellt wurden, das das Ereignis beschreibt.</param>
    <summary>Stellt die Methode dar, die das <see cref="E:System.Reflection.Assembly.ModuleResolve" />-Ereignis eines <see cref="T:System.Reflection.Assembly" /> behandelt.</summary>
    <returns>Das Modul, das die Anforderung erfüllt.</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Common Language Runtime Klassenlader einen Verweis auf ein internes Modul einer Assembly nicht auf normale Weise auflösen kann, wird dieses Ereignis ausgelöst. Der Ereignishandler für diesen Delegaten muss ein Modul suchen und zurückgeben, das die Anforderung erfüllt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die Ausführungsreihenfolge veranschaulicht, in der ein Ereignishandler aufgerufen wird. In diesem Beispiel ist Server1 ein externes Modul der mysample-Klasse.  
  
### <a name="to-compile-and-run-the-example"></a>So kompilieren Sie das Beispiel und führen es aus  
  
1.  Öffnen Sie ein Eingabe Aufforderungs Fenster, und navigieren Sie zu dem Verzeichnis, das mysample.cs enthält.  
  
2.  Kompilieren Sie Server1 mit dem folgenden Befehl:  
  
    ```console  
    csc /out:subfolder\Server1.netmodule /t:module Server1.cs  
    ```  
  
3.  Kompilieren Sie MySample mit dem folgenden Befehl:  
  
    ```console  
    csc /out:MySample.exe /t:exe /addmodule:subfolder\Server1.netmodule MySample.cs  
    ```  
  
4.  Führen Sie mysample. exe aus.  
  
> [!NOTE]
>  Die Modul Datei server1. netmodule muss sich in einem Unterverzeichnis namens "Unterordner" befinden, damit dieses Beispiel ordnungsgemäß funktioniert.  
  
 [!code-csharp[System.Reflection.ModuleResolveEventHandler#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/mysample.cs#1)]  
[!code-csharp[System.Reflection.ModuleResolveEventHandler#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.moduleresolveeventhandler/cs/server1.cs#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
</Type>
