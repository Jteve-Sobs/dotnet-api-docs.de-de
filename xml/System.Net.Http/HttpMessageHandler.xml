<Type Name="HttpMessageHandler" FullName="System.Net.Http.HttpMessageHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="228fa71be226c29f6b8ba69954b8d8e600a83165" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70707685" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpMessageHandler : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpMessageHandler extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpMessageHandler&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpMessageHandler abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpMessageHandler = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="6d5af-101">Ein Basistyp für HTTP-Meldungshandler.</span><span class="sxs-lookup"><span data-stu-id="6d5af-101">A base type for HTTP message handlers.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5af-102">Es gibt verschiedene HTTP-Nachrichten Handles, die verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="6d5af-102">There are various HTTP message handles that can be used.</span></span> <span data-ttu-id="6d5af-103">Hierzu gehören die folgenden.</span><span class="sxs-lookup"><span data-stu-id="6d5af-103">These include the following.</span></span>  
  
1.  <span data-ttu-id="6d5af-104"><xref:System.Net.Http.DelegatingHandler>-Eine Klasse, die zum Einbinden eines Handlers in eine handlerkette verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="6d5af-104"><xref:System.Net.Http.DelegatingHandler> - A class used to plug a handler into a handler chain.</span></span>  
  
2.  <span data-ttu-id="6d5af-105"><xref:System.Net.Http.HttpMessageHandler>-Eine einfache Klasse, von der abgeleitet werden muss, die die gängigsten Anforderungen für die meisten Anwendungen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="6d5af-105"><xref:System.Net.Http.HttpMessageHandler> - A simple class to derive from that supports the most common requirements for most applications.</span></span>  
  
3.  <span data-ttu-id="6d5af-106"><xref:System.Net.Http.HttpClientHandler>-Eine Klasse, die am unteren Rand der handlerkette operiert, die die http-Transportvorgänge tatsächlich verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="6d5af-106"><xref:System.Net.Http.HttpClientHandler> - A class that operates at the bottom of the handler chain that actually handles the HTTP transport operations.</span></span>  
  
4.  <span data-ttu-id="6d5af-107"><xref:System.Net.Http.WebRequestHandler>-Eine spezielle Klasse, die am unteren Rand der handlerketten-Klasse arbeitet und http-Transportvorgänge mit Optionen verarbeitet, die <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> für das-Objekt spezifisch sind.</span><span class="sxs-lookup"><span data-stu-id="6d5af-107"><xref:System.Net.Http.WebRequestHandler> - A specialty class that operates at the bottom of the handler chain class that handles HTTP transport operations with options that are specific to the <xref:System.Net.HttpWebRequest?displayProperty=nameWithType> object.</span></span>  
  
 <span data-ttu-id="6d5af-108">Wenn Entwickler Klassen von <xref:System.Net.Http.HttpMessageHandler> ableiten und die <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> -Methode überschreiben, müssen Sie sicher <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> stellen, dass von unterschiedlichen Threads gleichzeitig aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="6d5af-108">If developers derive classes from <xref:System.Net.Http.HttpMessageHandler> and override the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method, they must make sure that <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> can get called concurrently by different threads.</span></span>  
  
 <span data-ttu-id="6d5af-109">Dies ist erforderlich, da Methoden <xref:System.Net.Http.HttpClient> für gleichzeitig aufgerufen werden können und eine Garantie der Thread Sicherheit benötigen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-109">This is necessary since methods on <xref:System.Net.Http.HttpClient> can be called concurrently and need a guarantee of thread safety.</span></span> <span data-ttu-id="6d5af-110">Wenn also ein Handler einer <xref:System.Net.Http.HttpClient> Instanz zugewiesen wird, kann die <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> -Methode des-Handlers gleichzeitig von der <xref:System.Net.Http.HttpClient> -Instanz aufgerufen werden und muss Thread sicher sein.</span><span class="sxs-lookup"><span data-stu-id="6d5af-110">So if a handler is assigned to an <xref:System.Net.Http.HttpClient> instance, the <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method of the handler may get called concurrently by the <xref:System.Net.Http.HttpClient> instance and needs to be thread safe.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpMessageHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpMessageHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d5af-111">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpMessageHandler" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d5af-111">Initializes a new instance of the <see cref="T:System.Net.Http.HttpMessageHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6d5af-112">Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-112">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpMessageHandler.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6d5af-113">Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-113">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="httpMessageHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="6d5af-114"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-114"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="6d5af-115">Gibt die vom <see cref="T:System.Net.Http.HttpMessageHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-115">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpMessageHandler" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5af-116">Diese Methode wird von der öffentlichen `Dispose()` -Methode und der <xref:System.Object.Finalize%2A> -Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-116">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="6d5af-117">`Dispose()`Ruft die geschützte `Dispose(Boolean)` Methode auf, `disposing` wobei der- `true`Parameter auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="6d5af-117">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="6d5af-118"><xref:System.Object.Finalize%2A>Ruft `Dispose` auf `disposing` , wobei `false`auf gesetzt ist. Wenn der `disposing` -Parameter `true`ist, gibt diese Methode alle Ressourcen frei, die von allen verwalteten <xref:System.Net.Http.HttpMessageHandler> Objekten gehalten werden, auf die dieser verweist.</span><span class="sxs-lookup"><span data-stu-id="6d5af-118"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpMessageHandler> references.</span></span> <span data-ttu-id="6d5af-119">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="6d5af-119">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpMessageHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="abstract member SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpMessageHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="6d5af-120">Die zu sendende HTTP-Anforderungsmeldung.</span><span class="sxs-lookup"><span data-stu-id="6d5af-120">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="6d5af-121">Das Abbruchtoken, um den Vorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="6d5af-121">The cancellation token to cancel operation.</span></span></param>
        <summary><span data-ttu-id="6d5af-122">Senden Sie eine HTTP-Anforderung als asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="6d5af-122">Send an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="6d5af-123">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="6d5af-123">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d5af-124">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="6d5af-124">This operation will not block.</span></span> <span data-ttu-id="6d5af-125">Das zurück <xref:System.Threading.Tasks.Task%601> gegebene Objekt wird beendet, sobald die gesamte Antwort einschließlich Inhalt gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="6d5af-125">The returned <xref:System.Threading.Tasks.Task%601> object will complete once the entire response including content is read.</span></span>  
  
 <span data-ttu-id="6d5af-126">Die <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> -Methode wird hauptsächlich vom System verwendet.</span><span class="sxs-lookup"><span data-stu-id="6d5af-126">The <xref:System.Net.Http.HttpMessageHandler.SendAsync%2A> method is used primarily by the system.</span></span> <span data-ttu-id="6d5af-127">Diese Methode wird von dem System aufgerufen, von dem <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> eine der-Methoden aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="6d5af-127">This method is called by the system one of the  <xref:System.Net.Http.HttpClient.SendAsync%2A?displayProperty=nameWithType> methods is called.</span></span> <span data-ttu-id="6d5af-128">Die meisten apps werden diese Methode niemals aufruft.</span><span class="sxs-lookup"><span data-stu-id="6d5af-128">Most apps will never call this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="6d5af-129"><paramref name="request" /> war <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6d5af-129">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
