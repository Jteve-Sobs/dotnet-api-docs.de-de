<Type Name="SocketsHttpHandler" FullName="System.Net.Http.SocketsHttpHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad548507025cf859172aabe513a2f15e9af29430" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86801444" /></Metadata><TypeSignature Language="C#" Value="public sealed class SocketsHttpHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SocketsHttpHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.SocketsHttpHandler" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SocketsHttpHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class SocketsHttpHandler sealed : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type SocketsHttpHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a7a7c-101">Stellt den Standardnachrichtenhandler bereit, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 und höher verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-101">Provides the default message handler used by <see cref="T:System.Net.Http.HttpClient" /> in .NET Core 2.1 and later.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

<span data-ttu-id="a7a7c-102">Ab .net Core 2,1 stellt die- `SocketsHttpHandler` Klasse die-Implementierung bereit, die von http-Netzwerk Klassen der höheren Ebene verwendet wird, z <xref:System.Net.Http.HttpClient> . b..</span><span class="sxs-lookup"><span data-stu-id="a7a7c-102">Starting with .NET Core 2.1, the `SocketsHttpHandler` class provides the implementation used by higher-level HTTP networking classes such as <xref:System.Net.Http.HttpClient>.</span></span> <span data-ttu-id="a7a7c-103">Die Verwendung von `SocketsHttpHandler` bietet eine Reihe von Vorteilen:</span><span class="sxs-lookup"><span data-stu-id="a7a7c-103">The use of `SocketsHttpHandler` offers a number of advantages:</span></span>

- <span data-ttu-id="a7a7c-104">Eine beträchtliche Leistungssteigerung im Vergleich zur früheren Implementierung.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-104">A significant performance improvement when compared with the previous implementation.</span></span>

- <span data-ttu-id="a7a7c-105">Die Beseitigung von Platt Form Abhängigkeiten, die die Bereitstellung und Wartung vereinfachen.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-105">The elimination of platform dependencies, which simplifies deployment and servicing.</span></span> <span data-ttu-id="a7a7c-106">Beispielsweise `libcurl` ist keine Abhängigkeit mehr von .net Core für macOS und .net Core für Linux.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-106">For example, `libcurl` is no longer a dependency on .NET Core for macOS and .NET Core for Linux.</span></span>

- <span data-ttu-id="a7a7c-107">Konsistentes Verhalten für alle .net-Plattformen.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-107">Consistent behavior across all .NET platforms.</span></span>

<span data-ttu-id="a7a7c-108">Wenn diese Änderung nicht erwünscht ist, können Sie die Anwendung so konfigurieren, dass Sie stattdessen die ältere <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> Klasse verwendet:</span><span class="sxs-lookup"><span data-stu-id="a7a7c-108">If this change is undesirable, you can configure your application to use the older <xref:System.Net.Http.HttpClientHandler?displayProperty=nameWithType> class instead in a number of ways:</span></span>

- <span data-ttu-id="a7a7c-109">Durch Aufrufen der- <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType> Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="a7a7c-109">By calling the <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType> method as follows:</span></span>

   ```csharp
   AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", false);
   ```

   ```vb
   AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", False)
   ```
- <span data-ttu-id="a7a7c-110">Durch die Definition des `System.Net.Http.UseSocketsHttpHandler` Schalters in der *.netcore.runtimeconfig.jsfür* die Konfigurationsdatei:</span><span class="sxs-lookup"><span data-stu-id="a7a7c-110">By defining the `System.Net.Http.UseSocketsHttpHandler` switch in the *.netcore.runtimeconfig.json* configuration file:</span></span>

  ```json
  "runtimeOptions": {
    "configProperties": {
        "System.Net.Http.UseSocketsHttpHandler": false
    }
  }
  ```

- <span data-ttu-id="a7a7c-111">Definieren Sie eine Umgebungsvariable mit dem Namen `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER` , und legen Sie Sie entweder auf `false` oder auf 0 fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-111">By defining an environment variable named `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER` and setting it to either `false` or 0.</span></span>

         ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SocketsHttpHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SocketsHttpHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a7a7c-112">Erstellt eine Instanz einer <see cref="T:System.Net.Http.SocketsHttpHandler" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-112">Creates an instance of a <see cref="T:System.Net.Http.SocketsHttpHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-113">Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-113">Gets or sets a value that indicates whether the handler should follow redirection responses.</span></span></summary>
        <value><span data-ttu-id="a7a7c-114"><see langword="true" />, wenn der Handler Umleitungs Antworten folgen soll. andernfalls <see langword="false" /> .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-114"><see langword="true" /> if the handler should follow redirection responses; otherwise <see langword="false" />.</span></span> <span data-ttu-id="a7a7c-115">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-115">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a7a7c-116">Legen Sie diese Einstellung auf fest, <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> `true` Wenn der Handler http-Umleitungs Header automatisch an den neuen Speicherort der Ressource weiterleiten soll.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-116">Set <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="a7a7c-117">Die maximale Anzahl der nachfolgenden Umleitungen wird von der-Eigenschaft festgelegt <xref:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections%2A> .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-117">The maximum number of redirections to follow is set by the <xref:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections%2A> property.</span></span>

 <span data-ttu-id="a7a7c-118">Wenn <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> auf festgelegt ist `false` , werden alle HTTP-Antworten mit einem HTTP-Statuscode zwischen 300 und 399 an die Anwendung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-118">If <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are returned to the application.</span></span>

 <span data-ttu-id="a7a7c-119">Der Autorisierungs Header wird bei automatischen Umleitungen gelöscht, und der Handler versucht automatisch, sich am umgeleiteten Speicherort erneut zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-119">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="a7a7c-120">In der Praxis bedeutet dies, dass eine Anwendung keine benutzerdefinierten Authentifizierungsinformationen im Autorisierungs Header ablegen kann, wenn eine Umleitung möglich ist.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-120">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="a7a7c-121">Stattdessen muss die Anwendung ein benutzerdefiniertes Authentifizierungs Modul implementieren und registrieren.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-121">Instead, the application must implement and register a custom authentication module.</span></span>

> [!NOTE]
>  <span data-ttu-id="a7a7c-122">Der Handler befolgt nie eine Umleitung von HTTPS zu http, auch wenn <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> auf festgelegt ist `true` .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-122">The handler never follows a redirection from HTTPS to HTTP even if <xref:System.Net.Http.SocketsHttpHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.SocketsHttpHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-123">Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-123">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></summary>
        <value><span data-ttu-id="a7a7c-124">Der Typ der dekomprimierungsmethode, die vom Handler für die automatische Dekomprimierung der http-Inhalts Antwort verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-124">The type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ConnectTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ConnectTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ConnectTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.ConnectTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-125">Ruft den Zeitraum ab, der gewartet werden soll, bevor ein Timeout der Verbindung hergestellt wird, oder legt diesen fest</span><span class="sxs-lookup"><span data-stu-id="a7a7c-125">Gets or sets the timespan to wait before the connection establishing times out.</span></span></summary>
        <value><span data-ttu-id="a7a7c-126">Die Zeitspanne, die gewartet werden soll, bevor ein Timeout für die Verbindung hergestellt wird. Der Standardwert ist <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" /> .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-126">The timespan to wait before the connection establishing times out. The default value is <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer? CookieContainer { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.SocketsHttpHandler.CookieContainer" />
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-127">Ruft das Containerobjekt für verwaltete Cookies ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-127">Gets or sets the managed cookie container object.</span></span></summary>
        <value><span data-ttu-id="a7a7c-128">Das verwaltete cookiecontainerobjekt.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-128">The managed cookie container object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.SocketsHttpHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-129">Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-129">Gets or sets authentication information used by this handler.</span></span></summary>
        <value><span data-ttu-id="a7a7c-130">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-130">The authentication credentials associated with the handler.</span></span> <span data-ttu-id="a7a7c-131">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-131">The default value is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.SocketsHttpHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-132">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die verwendet werden, um den Standardproxyserver für die Authentifizierung zu übermitteln.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-132">When the default (system) proxy is used, gets or sets the credentials used to submit to the default proxy server for authentication.</span></span></summary>
        <value><span data-ttu-id="a7a7c-133">Die Anmelde Informationen, die zum Authentifizieren des Benutzers bei einem authentifizier enden Proxy verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-133">The credentials used to authenticate the user to an authenticating proxy.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="a7a7c-134">Der Standardproxy wird nur verwendet, wenn <xref:System.Net.Http.SocketsHttpHandler.UseProxy> auf `true` und <xref:System.Net.Http.SocketsHttpHandler.Proxy> auf `null` festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-134">The default proxy is used only when <xref:System.Net.Http.SocketsHttpHandler.UseProxy> is set to `true` and <xref:System.Net.Http.SocketsHttpHandler.Proxy> is set to `null`.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="socketsHttpHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Expect100ContinueTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan Expect100ContinueTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan Expect100ContinueTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property Expect100ContinueTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan Expect100ContinueTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.Expect100ContinueTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-135">Ruft den Timeout Wert für die Antwort des Servers "http 100 Continue" ab oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-135">Gets or sets the time-out value for server HTTP 100 Continue response.</span></span></summary>
        <value><span data-ttu-id="a7a7c-136">Die Zeitspanne, die auf den HTTP 100-Vorgang gewartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-136">The timespan to wait for the HTTP 100 Continue.</span></span> <span data-ttu-id="a7a7c-137">Der Standardwert ist 1 Sekunde.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-137">The default value is 1 second.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a7a7c-138">Wenn die Anforderung einen Header enthält, `Expect: 100-continue` muss der Server den HTTP-Status Antworten, `100 Continue` bevor der Client den Text sendet.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-138">When request contain `Expect: 100-continue` header the server should respond HTTP status `100 Continue` before the client sends the body.</span></span> <span data-ttu-id="a7a7c-139"><xref:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout%2A?displayProperty=nameWithType>Hiermit wird das Timeout für die `100 Continue` Serverantwort definiert.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-139"><xref:System.Net.Http.SocketsHttpHandler.Expect100ContinueTimeout%2A?displayProperty=nameWithType> define the timeout for the `100 Continue` server response.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-140">Ruft die maximale Anzahl von zulässigen HTTP-Umleitungen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-140">Gets or sets the maximum number of allowed HTTP redirects.</span></span></summary>
        <value><span data-ttu-id="a7a7c-141">Die maximal zulässige Anzahl von HTTP-Umleitungen.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-141">The maximum number of allowed HTTP redirects.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-142">Ruft die maximale Anzahl gleichzeitiger TCP-Verbindungen ab, die für einen einzelnen Server zulässig sind, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-142">Gets or sets the maximum number of simultaneous TCP connections allowed to a single server.</span></span></summary>
        <value><span data-ttu-id="a7a7c-143">Die maximale Anzahl gleichzeitiger TCP-Verbindungen, die für einen einzelnen Server zulässig sind.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-143">The maximum number of simultaneous TCP connections allowed to a single server.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseDrainSize">
      <MemberSignature Language="C#" Value="public int MaxResponseDrainSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseDrainSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseDrainSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseDrainSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseDrainSize : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxResponseDrainSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-144">Ruft die maximale Datenmenge aus Antworten in Byte ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-144">Gets or sets the maximum amount of data that can be drained from responses in bytes.</span></span></summary>
        <value><span data-ttu-id="a7a7c-145">Die maximale Datenmenge, die von Antworten in Bytes abgezogen werden kann.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-145">The maximum amount of data that can be drained from responses in bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="a7a7c-146">Die Ableitung tritt auf, wenn eine Anforderung abgebrochen oder eine Antwort vor dem vollständigen Lesen des Inhalts verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-146">Draining occurs when a request is cancelled or a response is disposed prior to fully reading the content.</span></span> <span data-ttu-id="a7a7c-147">Wenn die Anzahl der abgesperrten Bytes diesen Wert überschreitet, wird die Verbindung geschlossen und nicht wieder verwendet.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-147">If the number of bytes drained exceeds this amount, the connection will be closed rather than reused.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.SocketsHttpHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-148">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-148">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span></span></summary>
        <value><span data-ttu-id="a7a7c-149">Die maximale Größe des Header Teils aus der Serverantwort in Kilobyte.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-149">The maximum size of the header portion from the server response, in kilobytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="a7a7c-150">Wenn der Wert z. b. 64 ist, sind 65.536 Bytes für die maximale Länge der Antwortheader zulässig.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-150">For example, if the value is 64, then 65,536 bytes are allowed for the maximum response headers' length.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PooledConnectionIdleTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan PooledConnectionIdleTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PooledConnectionIdleTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property PooledConnectionIdleTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PooledConnectionIdleTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PooledConnectionIdleTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.PooledConnectionIdleTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-151">Ruft ab oder legt fest, wie lange sich eine Verbindung im Leerlauf im Pool befinden kann, damit sie als wiederverwendbar eingestuft wird.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-151">Gets or sets how long a connection can be idle in the pool to be considered reusable.</span></span></summary>
        <value><span data-ttu-id="a7a7c-152">Die maximale Leerlaufzeit für eine Verbindung im Pool.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-152">The maximum idle time for a connection in the pool.</span></span> <span data-ttu-id="a7a7c-153">Der Standardwert für diese Eigenschaft ist 2 Minuten.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-153">The default value for this property is 2 minutes.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a7a7c-154">Der angegebene Wert ist kleiner als <see cref="F:System.TimeSpan.Zero" /> oder gleich <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-154">The value specified is less than <see cref="F:System.TimeSpan.Zero" /> or is equal to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PooledConnectionLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan PooledConnectionLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan PooledConnectionLifetime" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property PooledConnectionLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan PooledConnectionLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.PooledConnectionLifetime : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.PooledConnectionLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-155">Ruft ab oder legt fest, wie lange eine Verbindung der Pool sein kann, um als wiederverwendbar angesehen zu werden</span><span class="sxs-lookup"><span data-stu-id="a7a7c-155">Gets or sets how long a connection can be the pool to be considered reusable.</span></span></summary>
        <value><span data-ttu-id="a7a7c-156">Die maximale Zeit für eine Verbindung im Pool.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-156">The maximum time for a connection to be in the pool.</span></span> <span data-ttu-id="a7a7c-157">Der Standardwert dieser Eigenschaft ist <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-157">The default value for this property is <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="a7a7c-158">Diese Eigenschaft definiert die maximale Verbindungs Lebensdauer im Pool, sodass sich die Verbindung im Leerlauf befindet oder aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-158">This property define maximal connection lifetime in the pool regardles the connection is idle or active.</span></span> <span data-ttu-id="a7a7c-159">Die Verbindung wird in regelmäßigen Abständen wieder hergestellt, um die DNS-oder andere Netzwerk Änderungen widerzuspiegeln.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-159">The connection is reestablished periodically to reflect the DNS or other network changes.</span></span>
 
 <span data-ttu-id="a7a7c-160">Wenn der Verbindungs Endpunkt nicht der doamin-Name, sondern die IP-Adresse ist, kann der Wert lauten <xref:System.Threading.Timeout.InfiniteTimeSpan> .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-160">If the connection endpoint is not the Doamin name but the IP address, the value can be <xref:System.Threading.Timeout.InfiniteTimeSpan>.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a7a7c-161">Der angegebene Wert ist kleiner als <see cref="F:System.TimeSpan.Zero" /> oder gleich <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-161">The value specified is less than <see cref="F:System.TimeSpan.Zero" /> or is equal to <see cref="F:System.Threading.Timeout.InfiniteTimeSpan" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-162">Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-162">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span></span></summary>
        <value><span data-ttu-id="a7a7c-163"><see langword="true" />, wenn der Handler einen Autorisierungs Header mit der Anforderung sendet. andernfalls <see langword="false" /> .</span><span class="sxs-lookup"><span data-stu-id="a7a7c-163"><see langword="true" /> if the handler sends an Authorization header with the request; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt;? Properties { get; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.SocketsHttpHandler.Properties" />
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.SocketsHttpHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-164">Ruft den benutzerdefinierten Proxy ab, wenn die  <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" />-Eigenschaft <see langword="true" /> ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-164">Gets or sets the custom proxy when the <see cref="P:System.Net.Http.SocketsHttpHandler.UseProxy" /> property is <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="a7a7c-165">Der benutzerdefinierte Proxy.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-165">The custom proxy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseDrainTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ResponseDrainTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ResponseDrainTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ResponseDrainTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ResponseDrainTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.ResponseDrainTimeout : TimeSpan with get, set" Usage="System.Net.Http.SocketsHttpHandler.ResponseDrainTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-166">Ruft den Zeitraum ab oder legt diesen fest, der darauf gewartet wird, dass Daten aus Antworten entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-166">Gets or sets the timespan to wait for data to be drained from responses.</span></span></summary>
        <value><span data-ttu-id="a7a7c-167">Die Zeitspanne, die darauf gewartet werden soll, dass Daten aus Antworten entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-167">The timespan to wait for data to be drained from responses.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

<span data-ttu-id="a7a7c-168">Die Ableitung tritt auf, wenn eine Anforderung abgebrochen oder eine Antwort vor dem vollständigen Lesen des Inhalts verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-168">Draining occurs when a request is cancelled or a response is disposed prior to fully reading the content.</span></span> <span data-ttu-id="a7a7c-169">Wenn die Zeit den Wert überschreitet, wird die Verbindung geschlossen und nicht wieder verwendet.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-169">If the time exceeds the value, the connection will be closed rather than reused.</span></span>

         ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.SocketsHttpHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="socketsHttpHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="a7a7c-170">Die zu sendende HTTP-Anforderungsmeldung.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-170">The HTTP request message to send.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a7a7c-171">Das Abbruchtoken.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-171">The cancellation token.</span></span></param>
        <summary><span data-ttu-id="a7a7c-172">Sendet eine HTTP-Anforderung als asynchronen Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-172">Sends an HTTP request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="a7a7c-173">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-173">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslOptions">
      <MemberSignature Language="C#" Value="public System.Net.Security.SslClientAuthenticationOptions? SslOptions { get; set; }" FrameworkAlternate="net-5.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Security.SslClientAuthenticationOptions SslOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.SslOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property SslOptions As SslClientAuthenticationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Security::SslClientAuthenticationOptions ^ SslOptions { System::Net::Security::SslClientAuthenticationOptions ^ get(); void set(System::Net::Security::SslClientAuthenticationOptions ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SslOptions : System.Net.Security.SslClientAuthenticationOptions with get, set" Usage="System.Net.Http.SocketsHttpHandler.SslOptions" />
      <MemberSignature Language="C#" Value="public System.Net.Security.SslClientAuthenticationOptions SslOptions { get; set; }" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Security.SslClientAuthenticationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-174">Ruft die Optionen ab, die für die TLS-Clientauthentifizierung verwendet werden, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-174">Gets or sets the set of options used for client TLS authentication.</span></span></summary>
        <value><span data-ttu-id="a7a7c-175">Der Satz von Optionen, die für die TLS-Client Authentifizierung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-175">The set of options used for client TLS authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-176">Ruft einen Wert ab, der angibt, ob der Handler Cookies verwenden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-176">Gets or sets a value that indicates whether the handler should use cookies.</span></span></summary>
        <value><span data-ttu-id="a7a7c-177">Ein Wert, der angibt, ob der Handler Cookies verwenden soll.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-177">A value that indicates whether the handler should use cookies.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.SocketsHttpHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.SocketsHttpHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a7a7c-178">Ruft einen Wert ab, der angibt, ob der Handler einen Proxy verwenden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-178">Gets or sets a value that indicates whether the handler should use a proxy.</span></span></summary>
        <value><span data-ttu-id="a7a7c-179">Ein Wert, der angibt, ob der Handler einen Proxy verwenden soll.</span><span class="sxs-lookup"><span data-stu-id="a7a7c-179">A value that indicates whether the handler should use a proxy.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
