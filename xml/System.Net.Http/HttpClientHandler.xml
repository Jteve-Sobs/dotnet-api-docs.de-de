<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1b95d0a2fafd970f36ef9a1b7ba146648ce3b6f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39846614" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type HttpClientHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7e046-101">Der standardmäßige Meldungshandler für <see cref="T:System.Net.Http.HttpClient" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7e046-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-102">Die <xref:System.Net.Http.HttpClientHandler> -Klasse und davon abgeleitete Klassen können Entwickler eine Vielzahl von Optionen, die von Proxys bis hin zu Authentifizierung konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="7e046-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
### <a name="httpclienthandler-in-net-core"></a><span data-ttu-id="7e046-103">HttpClientHandler in .NET Core</span><span class="sxs-lookup"><span data-stu-id="7e046-103">HttpClientHandler in .NET Core</span></span>

<span data-ttu-id="7e046-104">Beginnend mit .NET Core 2.1, die <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> -Klasse anstelle von `HttpClientHandler` stellt die Implementierung von Netzwerk-APIs auf höherer Ebene-HTTP-verwendet.</span><span class="sxs-lookup"><span data-stu-id="7e046-104">Starting with .NET Core 2.1, the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class instead of `HttpClientHandler` provides the implementation used by higher-level HTTP networking APIs.</span></span> <span data-ttu-id="7e046-105">Sie können konfigurieren, dass Ihre Anwendung zur Verwendung `HttpClientHandler` stattdessen durch den Aufruf der <xref:System.AppContext.SetSwitch%2A> -Methode wie folgt:</span><span class="sxs-lookup"><span data-stu-id="7e046-105">You can configure your application to use `HttpClientHandler` instead by calling the <xref:System.AppContext.SetSwitch%2A> method as follows:</span></span>

```csharp
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", false);
```
```vb
AppContext.SetSwitch("System.Net.Http.useSocketsHttpHandler", False)
``` 
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 <span data-ttu-id="7e046-106">Im vorherigen Codebeispiel verwendet eine `async Task Main()` Einstiegspunkt.</span><span class="sxs-lookup"><span data-stu-id="7e046-106">The preceding code example uses an `async Task Main()` entry point.</span></span> <span data-ttu-id="7e046-107">Dieses Feature erfordert c# 7.1 oder höher.</span><span class="sxs-lookup"><span data-stu-id="7e046-107">That feature requires C# 7.1 or later.</span></span>
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7e046-108">Erstellt eine Instanz einer <see cref="T:System.Net.Http.HttpClientHandler" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-108">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-109">Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-109">Gets or sets a value that indicates whether the handler should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-110">
            <see langword="true" />, wenn der Handler Umleitungsantworten folgen soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-110">
              <see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-111">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-111">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-112">Legen Sie <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> zu `true` Wunsch den Handler, der automatisch HTTP-Umleitung-Header an den neuen Speicherort der Ressource.</span><span class="sxs-lookup"><span data-stu-id="7e046-112">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="7e046-113">Die maximale Anzahl von umleitungen befolgt wird festgelegt, durch die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7e046-113">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="7e046-114">Wenn <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> nastaven NA hodnotu `false`, alle HTTP-Antworten mit HTTP-Statuscode zwischen 300 und 399 an die Anwendung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="7e046-114">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="7e046-115">Der Authorization-Header auf Auto-umleitungen deaktiviert ist, und der Handler versucht automatisch am Umleitungsspeicherort belassen erneut zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="7e046-115">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="7e046-116">In der Praxis bedeutet dies, dass eine Anwendung Informationen für die benutzerdefinierte Authentifizierung in der Authorization-Header versetzt werden kann, wenn es möglich ist, die Umleitung auftreten.</span><span class="sxs-lookup"><span data-stu-id="7e046-116">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="7e046-117">Stattdessen muss die Anwendung zu implementieren und registrieren ein benutzerdefiniertes Authentifizierungsmodul.</span><span class="sxs-lookup"><span data-stu-id="7e046-117">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="7e046-118">Mit <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> festgelegt `true`, .NET Framework wird umleitungen folgen, selbst wenn aus einem HTTPS-URI in einen HTTP-URI umgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="7e046-118">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="7e046-119">.NET Core-Versionen 1.0, 1.1 und 2.0 folgt eine Umleitung von HTTPS-, selbst wenn der HTTP- <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> nastaven NA hodnotu `true`.</span><span class="sxs-lookup"><span data-stu-id="7e046-119">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-120">Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-120">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-121">Die automatische Dekomprimierungsmethode, die der Handler verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-121">The automatic decompression method used by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="7e046-122">Für .NET Framework 4.x `System.Net.Http` binär Sie in den globalen Assemblycache (GAC), der Standardwert ist <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="7e046-122">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="7e046-123">Wenn die [ `System.Net.Http` NuGet-Paket](https://www.nuget.org/packages/System.Net.Http/) Verze 4.1.0, v4.3.2 verwendet wird, ist die Standardeinstellung <xref:System.Net.DecompressionMethods.GZip> und <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="7e046-123">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="7e046-124">Nach dem NuGet-Paket v4.3.2, der Standardwert von <xref:System.Net.DecompressionMethods.None> verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7e046-124">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-125">Ruft einen Wert ab, der angibt, ob das Zertifikat anhand der Sperrliste der Zertifizierungsstelle überprüft wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-125">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-126">
            <see langword="true" />, wenn die Zertifikatsperrliste überprüft wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-126">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7e046-127">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-127">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateOptions : System.Net.Http.ClientCertificateOption with get, set" Usage="System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-128">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Zertifikat automatisch aus dem Zertifikatspeicher ausgewählt wird oder ob der Aufrufer ein bestimmtes Clientzertifikat übergeben darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-128">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-129">Die diesem Handler zugeordnete Auflistung von Sicherheitszertifikaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-129">The collection of security certificates associated with this handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-130">Ruft die dieser Anforderungen an den Server zugeordnete Auflistung von Sicherheitszertifikaten ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-130">Gets the collection of security certificates that are associated requests to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-131">Die X509CertificateCollection, die an den Server, beim Ausführen der Zertifikat angezeigt werden-basierte Clientauthentifizierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-131">The X509CertificateCollection that is presented to the server when performing certificate based client authentication.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-132">Ruft den zum Speichern von Servercookies vom Handler verwendeten Cookiecontainer ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-132">Gets or sets the cookie container used to store server cookies by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-133">Der zum Speichern von Servercookies vom Handler verwendete Cookiecontainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-133">The cookie container used to store server cookies by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-134">Die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Eigenschaft stellt eine Instanz der <xref:System.Net.CookieContainer> -Klasse, die diesem Handler zugeordnete Cookies enthält.</span><span class="sxs-lookup"><span data-stu-id="7e046-134">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="7e046-135">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> Eigenschaft `true`, <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Eigenschaft darstellt, den Cookie-Container verwendet, um die servercookies zu speichern.</span><span class="sxs-lookup"><span data-stu-id="7e046-135">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="7e046-136">Der Benutzer kann benutzerdefinierte Cookies vor dem Senden von Anforderungen, die mit dieser Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="7e046-136">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="7e046-137">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> Eigenschaft ist "false", und der Benutzer fügt Cookies <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, Cookies werden ignoriert und nicht an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="7e046-137">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="7e046-138">Festlegen der <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> zu `null` wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7e046-138">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-139">Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-139">Gets or sets authentication information used by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-140">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-140">The authentication credentials associated with the handler.</span>
          </span>
          <span data-ttu-id="7e046-141">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-141">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DangerousAcceptAnyServerCertificateValidator : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt;" Usage="System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-142">Ruft einen zwischengespeicherten Delegaten ab, der immer <see langword="True" /> zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-142">Gets a cached delegate that always returns <see langword="True" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-143">Ein zwischengespeicherter Delegat, der immer <see langword="True" /> zurückgibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-143">A cached delegate that always returns <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-144">Insbesondere in Testszenarien, eine gemeinsame Verwendung Muster <xref:System.Net.Http.HttpClient> zur Verbindung mit eines Servers mit einem Zertifikat, das überprüft werden sollte nicht, wie z. B. ein selbstsigniertes Zertifikat.</span><span class="sxs-lookup"><span data-stu-id="7e046-144">Particularly in test scenarios, a common pattern use <xref:System.Net.Http.HttpClient> to connect to a server with a certificate that shouldn't be validated, such as a self-signed certificate.</span></span> <span data-ttu-id="7e046-145">Im Allgemeinen dazu mit <xref:System.Net.Http.HttpClientHandler> durch Festlegen der <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> Eigenschaft, um einen Delegaten, der immer zurückgegeben `True`; Dies bedeutet, dass das Zertifikat die Überprüfung bestanden hat.</span><span class="sxs-lookup"><span data-stu-id="7e046-145">You commonly do this with <xref:System.Net.Http.HttpClientHandler> by setting the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property to a delegate that always returns `True`; this indicates that the certificate has passed validation.</span></span> <span data-ttu-id="7e046-146">Allerdings nicht alle Implementierungen unterstützt dieser Rückruf, und lösen einige <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="7e046-146">However, not all implementations support this callback, and some throw <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="7e046-147">Die <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> Eigenschaft besteht diese Einschränkung nicht.</span><span class="sxs-lookup"><span data-stu-id="7e046-147">The <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property addresses this limitation.</span></span> <span data-ttu-id="7e046-148">Der Delegat zurückgegeben wird, indem die <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> Eigenschaft zugewiesen werden kann die <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> -Eigenschaft, wie im folgenden Beispiel wird:</span><span class="sxs-lookup"><span data-stu-id="7e046-148">The delegate returned by the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property can be assigned to the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property, as the following example does:</span></span>  
  
```cs
handler.ServerCertificateCustomValidationCallback = httpClientHandler.DangerousAcceptAnyServerCertificateValidator;
```

 <span data-ttu-id="7e046-149">Dadurch werden <xref:System.Net.Http.HttpClientHandler> Implementierungen ein bekanntes Objekt Verweisidentität, die der Entwickler Absicht ausdrückt.</span><span class="sxs-lookup"><span data-stu-id="7e046-149">This gives <xref:System.Net.Http.HttpClientHandler> implementations a known object reference identity that expresses the developer's intention.</span></span> <span data-ttu-id="7e046-150">Wenn das Objekt, in gespeichert der <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> -Eigenschaft ist der Verweis gleich <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, die Laufzeit kann die Überprüfung auf einer Plattform vollständig zu deaktivieren, die andernfalls eine Ausnahme ausgelöst eine <xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="7e046-150">If the object stored in the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property is reference equals to <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, the runtime is able to entirely disable validation on a platform that would otherwise throw a <xref:System.PlatformNotSupportedException>.</span></span>  
  
 <span data-ttu-id="7e046-151">Als positiven Nebeneffekt können Entwickler diese Eigenschaft verwenden, um ihn leichter für Tools, um die Gefahr der Deaktivierung der Überprüfung des Zertifikats, dadurch wird es einfacher für Entwickler, um zu vermeiden, entstehen unsichere Anwendungen Versand zu kennzeichnen.</span><span class="sxs-lookup"><span data-stu-id="7e046-151">As a side benefit, developers can use this property to make it easier for tools to flag the danger of disabling certificate validation, which makes it easier for developers to avoid shipping insecure applications.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-152">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die an den Standardproxyserver für die Authentifizierung übermittelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-152">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span>
          </span>
          <span data-ttu-id="7e046-153">Der Standardproxy wird nur verwendet, wenn <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> auf <see langword="true" /> und <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> auf <see langword="null" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-153">The default proxy is used only when <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> is set to <see langword="true" /> and <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> is set to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-154">Die Anmeldeinformationen zum Authentifizieren einer Anforderung an den Standardproxyserver erforderlich sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-154">The credentials needed to authenticate a request to the default proxy server.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClientHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7e046-155">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-155">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e046-156">Gibt die vom <see cref="T:System.Net.Http.HttpClientHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-156">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-157">Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7e046-157">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7e046-158">`Dispose()` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`.</span><span class="sxs-lookup"><span data-stu-id="7e046-158">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7e046-159"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="7e046-159"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7e046-160">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Net.Http.HttpClientHandler> verweist.</span><span class="sxs-lookup"><span data-stu-id="7e046-160">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="7e046-161">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7e046-161">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-162">Ruft die maximale Anzahl von Umleitungen ab, denen der Handler folgt, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-162">Gets or sets the maximum number of redirects that the handler follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-163">Die maximale Anzahl von Umleitungsantworten, denen der Handler folgt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-163">The maximum number of redirection responses that the handler follows.</span>
          </span>
          <span data-ttu-id="7e046-164">Der Standardwert ist 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-164">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-165">Die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Eigenschaft legt die maximale Anzahl von umleitungen für die Anforderung, wenn führen die <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> Eigenschaft `true`.</span><span class="sxs-lookup"><span data-stu-id="7e046-165">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-166">Ruft die maximal zulässige Anzahl gleichzeitiger Verbindungen (pro Serverendpunkt), wenn eine Anforderung mithilfe eines <see cref="T:System.Net.Http.HttpClient" />-Objekts durchgeführt wird, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-166">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
          <span data-ttu-id="7e046-167">Beachten Sie, dass der Grenzwert pro Serverendpunkt gilt. Ein Wert von 256 würde beispielsweise 256 gleichzeitige Verbindungen zu „http://www.adatum.com/“ und weitere 256 zu „http://www.adventure-works.com/“ ermöglichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-167">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-168">Die maximale Anzahl von gleichzeitigen Verbindungen (pro Serverendpunkt), zulässig sind ein <see cref="T:System.Net.Http.HttpClient" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-168">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-169">Dient zum Abrufen oder Festlegen der maximalen Größe des Anforderungsinhaltspuffers, die vom Handler verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-169">Gets or sets the maximum request content buffer size used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-170">Der maximale Größe des Anforderungsinhaltspuffers in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-170">The maximum request content buffer size in bytes.</span>
          </span>
          <span data-ttu-id="7e046-171">Der Standardwert ist 2 GB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-171">The default value is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-172">Legen Sie eine app kann die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> Eigenschaft auf einen niedrigeren Wert die Größe des Puffers Anforderung beschränken.</span><span class="sxs-lookup"><span data-stu-id="7e046-172">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="7e046-173">Wenn die Größe der Inhalt der Anforderung überschreitet die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> -Eigenschaft, die eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="7e046-173">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-174">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-174">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
          <span data-ttu-id="7e046-175">Wenn der Wert beispielsweise 64 ist, sind 65536 Byte für die maximale Länge des Antwortheaders zulässig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-175">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-176">Die maximale Länge in Kilobyte (1024 Bytes), der die Header der Antwort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-176">The maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-177">Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-177">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-178">
            <see langword="true" />, um nach der Authentifizierung einen HTTP-Authorization-Header mit Anforderungen vom Handler zu senden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-178">
              <see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-179">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-179">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-180">Nach der eine Clientanforderung auf eine bestimmte <xref:System.Uri> erfolgreich authentifiziert wurde, wenn die <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> -Eigenschaft ist `true` und Anmeldeinformationen angegeben werden, <xref:System.Net.Http.HttpClientHandler> Übereinstimmungen mit der Liste mit den Anmeldeinformationen angegeben werden, der <xref:System.Net.Http.HttpClientHandler.Credentials%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7e046-180">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="7e046-181">Der Authorization-Header wird mit jeder Anforderung gesendet, in einen <xref:System.Uri> , entspricht die spezifischen <xref:System.Uri> bis zum letzten Schrägstrich.</span><span class="sxs-lookup"><span data-stu-id="7e046-181">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="7e046-182">Wenn der Client für eine bestimmte Anforderung <xref:System.Uri> ist nicht erfolgreich authentifiziert, das die Anforderung Standardauthentifizierungsprozeduren verwendet.</span><span class="sxs-lookup"><span data-stu-id="7e046-182">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="7e046-183">Mit Ausnahme der ersten Anforderung der <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> Eigenschaft gibt an, ob Authentifizierungsinformationen mit nachfolgenden Anforderungen zum Senden einer <xref:System.Uri> , entspricht die spezifischen <xref:System.Uri> bis zum letzten Schrägstrich ohne darauf warten, werden Durchlaufen vom Server.</span><span class="sxs-lookup"><span data-stu-id="7e046-183">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.HttpClientHandler.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-184">Ruft ein beschreibares Wörterbuch (d.h. eine Zuordnung) von benutzerdefinierten Eigenschaften für die <see cref="T:System.Net.Http.HttpClient" />-Anforderungen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-184">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span>
          </span>
          <span data-ttu-id="7e046-185">Das Wörterbuch ist zunächst leer. Sie können Schlüssel-Wert-Paare für benutzerdefinierte Handler und die spezielle Verarbeitung einfügen und abfragen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-185">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-186">ein beschreibares Wörterbuch von benutzerdefinierten Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-186">a writable dictionary of custom properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.HttpClientHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-187">Ruft vom Handler verwendete Proxyinformationen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-187">Gets or sets proxy information used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-188">Die vom Handler verwendeten Proxyinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-188">The proxy information used by the handler.</span>
          </span>
          <span data-ttu-id="7e046-189">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-189">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-190">Die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> identifiziert die <xref:System.Net.WebProxy> Objekt, das zum Verarbeiten von Anforderungen und Ressourcen im Internet verwendet.</span><span class="sxs-lookup"><span data-stu-id="7e046-190">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="7e046-191">Um anzugeben, dass kein Proxy verwendet werden soll, legen die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> -Eigenschaft auf die Proxyinstanz, die zurückgegeben werden, indem die <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7e046-191">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="7e046-192">Dem lokalen Computer oder eine Anwendungskonfigurationsdatei können Sie angeben, dass ein standardmäßige Proxy verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="7e046-192">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="7e046-193">Wenn die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> -Eigenschaft angegeben ist, klicken Sie dann auf die Proxy-Einstellungen aus der <xref:System.Net.Http.HttpClientHandler.Proxy%2A> Eigenschaft überschreiben, den lokalen Computer oder die Anwendungskonfigurationsdatei und den Handler für den angegebenen Proxyeinstellungen verwenden.</span><span class="sxs-lookup"><span data-stu-id="7e046-193">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="7e046-194">Wenn kein Proxy in einer Konfigurationsdatei angegeben ist und die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> Eigenschaft nicht angegeben ist, der Handler verwendet die Proxyeinstellungen von Internet Explorer geerbt werden, auf dem lokalen Computer.</span><span class="sxs-lookup"><span data-stu-id="7e046-194">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="7e046-195">Wenn es keine Proxyeinstellungen in Internet Explorer sind, wird die Anforderung direkt an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="7e046-195">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="7e046-196">Die <xref:System.Net.Http.HttpClientHandler> Klasse analysiert eine Proxyumgehungsliste mit Platzhalterzeichen geerbt von Internet Explorer identisch wie der Umgehungsliste aufgeführt, die direkt von Internet Explorer analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="7e046-196">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="7e046-197">Z. B. die <xref:System.Net.Http.HttpClientHandler> -Klasse analysiert eine Umgehungsliste der "nt *" von Internet Explorer als regulärer Ausdruck des "nt.\*".</span><span class="sxs-lookup"><span data-stu-id="7e046-197">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="7e046-198">Daher eine URL in der " http://nt.com" den Proxy mithilfe der <xref:System.Net.Http.HttpClientHandler> -Klasse und Internet Explorer verwenden.</span><span class="sxs-lookup"><span data-stu-id="7e046-198">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="7e046-199">Die <xref:System.Net.Http.HttpClientHandler> -Klasse unterstützt die Umgehung von lokalen Proxys.</span><span class="sxs-lookup"><span data-stu-id="7e046-199">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="7e046-200">Die Klasse betrachtet ein Ziel lokal, wenn eine der folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="7e046-200">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="7e046-201">Das Ziel enthält einen flachen Name (keine Punkte in der URL).</span><span class="sxs-lookup"><span data-stu-id="7e046-201">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="7e046-202">Das Ziel enthält eine Loopback-Adresse (<xref:System.Net.IPAddress.Loopback> oder <xref:System.Net.IPAddress.IPv6Loopback>) oder das Ziel enthält eine <xref:System.Net.IPAddress> zugewiesen, auf dem lokalen Computer.</span><span class="sxs-lookup"><span data-stu-id="7e046-202">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="7e046-203">Das Domänensuffix des Ziels entspricht Domänensuffix des lokalen Computers (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="7e046-203">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClientHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="7e046-204">Die HTTP-Anforderungsnachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-204">The HTTP request message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="7e046-205">Ein Abbruchtoken, um den Vorgang abzubrechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-205">A cancellation token to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7e046-206">Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen als nicht blockierender Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-206">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7e046-207">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-207">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-208">Dieser Vorgang ist nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="7e046-208">This operation is does not block.</span></span> <span data-ttu-id="7e046-209">Es gibt eine Instanz des <xref:System.Threading.Tasks.Task%601> auf den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="7e046-209">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="7e046-210">Wenn der Vorgang abgeschlossen ist, <xref:System.Threading.Tasks.Task%601.Result%2A> enthält die Response-Nachricht.</span><span class="sxs-lookup"><span data-stu-id="7e046-210">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7e046-211">
            <paramref name="request" /> war <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-211">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateCustomValidationCallback : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt; with get, set" Usage="System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-212">Ruft eine Rückrufmethode zur Überprüfung des Serverzertifikats ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-212">Gets or sets a callback method to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-213">Eine Rückrufmethode zur Überprüfung des Serverzertifikats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-213">A callback method to validate the server certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocols : System.Security.Authentication.SslProtocols with get, set" Usage="System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-214">Ruft das TSL-/SSL-Protokoll ab, das von den <see cref="T:System.Net.Http.HttpClient" />-Objekten verwendet wird, die vom HttpClientHandler-Objekt verwaltet werden, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-214">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-215">Einer der in der <see cref="T:System.Security.Authentication.SslProtocols" />-Enumeration definierten Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-215">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException">
          <span data-ttu-id="7e046-216">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-216">.NET Framework 4.7.1 only: This property is not implemented.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAutomaticDecompression : bool" Usage="System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-217">Ruft einen Wert ab, der angibt, ob der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-217">Gets a value that indicates whether the handler supports automatic response content decompression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-218">
            <see langword="true" />, wenn der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-218">
              <see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-219">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-219">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsProxy : bool" Usage="System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-220">Ruft einen Wert ab, der angibt, ob der Handler Proxyeinstellungen unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-220">Gets a value that indicates whether the handler supports proxy settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-221">
            <see langword="true" />, wenn der Handler Proxyeinstellungen unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-221">
              <see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-222">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-222">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectConfiguration : bool" Usage="System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-223">Ruft einen Wert ab, der angibt, ob der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-223">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-224">
            <see langword="true" />, wenn der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-224">
              <see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-225">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-225">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-226">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-226">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-227">
            <see langword="true" />, wenn der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-227">
              <see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-228">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-228">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-229">Ruft einen Wert ab, der steuert, ob vom Handler mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-229">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-230">
            <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-230">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-231">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-231">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e046-232">Legen Sie diese Eigenschaft auf `true` Wenn Anforderungen von der <xref:System.Net.Http.HttpClientHandler> Objekt sollte, wenn vom Server angefordert authentifiziert werden mit den Anmeldeinformationen des aktuell angemeldeten Benutzers.</span><span class="sxs-lookup"><span data-stu-id="7e046-232">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="7e046-233">Bei Clientanwendungen ist dies das gewünschte Verhalten in den meisten Szenarien.</span><span class="sxs-lookup"><span data-stu-id="7e046-233">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="7e046-234">Für Anwendungen der mittleren Ebene, z. B. ASP.NET-Anwendungen anstelle dieser Eigenschaft legen Sie in der Regel die <xref:System.Net.Http.HttpClientHandler.Credentials%2A> Eigenschaft, um die Anmeldeinformationen des Clients in deren Auftrag die Anforderung wird ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="7e046-234">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7e046-235">Ruft einen Wert ab, der angibt, ob der Handler einen Proxy für Anforderungen verwendet, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-235">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7e046-236">
            <see langword="true" />, wenn der Handler einen Proxy für Anforderungen verwenden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-236">
              <see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7e046-237">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7e046-237">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>