<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b7647a3dccb682e4e27930e588d294947929dc5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5f73a-101">Der standardmäßige Meldungshandler für <see cref="T:System.Net.Http.HttpClient" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5f73a-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-102">Die <xref:System.Net.Http.HttpClientHandler> Klasse und davon abgeleitete Klassen können Entwickler eine Vielzahl von Optionen im Bereich von Proxys zur Authentifizierung zu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="5f73a-102">The <xref:System.Net.Http.HttpClientHandler> class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>  
  
   
  
## Examples  
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-103">Erstellt eine Instanz einer <see cref="T:System.Net.Http.HttpClientHandler" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-103">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-104">Ruft einen Wert ab, der angibt, ob der Handler Umleitungsantworten folgen soll, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-104">Gets or sets a value that indicates whether the handler should follow redirection responses.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-105">
            <see langword="true" />, wenn der Handler Umleitungsantworten folgen soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-105">
              <see langword="true" /> if the if the handler should follow redirection responses; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-106">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-106">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-107">Legen Sie <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> zu `true` , wenn den Handler, der Header der HTTP-Umleitung an den neuen Speicherort der Ressource automatisch folgen soll.</span><span class="sxs-lookup"><span data-stu-id="5f73a-107">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="5f73a-108">Die maximale Anzahl von umleitungen folgen wird festgelegt, indem die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5f73a-108">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>  
  
 <span data-ttu-id="5f73a-109">Wenn <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> festgelegt ist, um `false`, alle HTTP-Antworten mit HTTP-Statuscode zwischen 300 und 399 an die Anwendung zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="5f73a-109">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>  
  
 <span data-ttu-id="5f73a-110">Der Authorization-Header auf automatische umleitungen deaktiviert ist, und der Ereignishandler wird automatisch versucht, die an umgeleiteten Speicherort erneut zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="5f73a-110">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="5f73a-111">In der Praxis bedeutet dies, dass eine Anwendung kann nicht benutzerdefinierte Authentifizierungsinformationen in der Authorization-Header nehmen, wenn es möglich ist, die Umleitung auftreten.</span><span class="sxs-lookup"><span data-stu-id="5f73a-111">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="5f73a-112">Stattdessen muss die Anwendung implementieren, und registrieren ein benutzerdefiniertes Authentifizierungsmodul.</span><span class="sxs-lookup"><span data-stu-id="5f73a-112">Instead, the application must implement and register a custom authentication module.</span></span>  

> [!NOTE]
>  <span data-ttu-id="5f73a-113">Mit <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> festgelegt `true`, .NET Framework wird umleitungen folgen, selbst wenn eine HTTPS-URI in einen HTTP-URI umgeleitet wird.</span><span class="sxs-lookup"><span data-stu-id="5f73a-113">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="5f73a-114">.NET Core-Versionen 1.0, 1.1 und 2.0 werden nicht führen Sie eine Umleitung von HTTPS, selbst wenn der HTTP- <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> festgelegt ist, um `true`.</span><span class="sxs-lookup"><span data-stu-id="5f73a-114">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-115">Ruft den Typ der Dekomprimierungsmethode ab, die vom Handler für die automatische Dekomprimierung von Antworten mit HTTP-Inhalt verwendet wird, oder legt den Typ fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-115">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-116">Die automatische Dekomprimierungsmethode, die der Handler verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-116">The automatic decompression method used by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  

## Remarks  
<span data-ttu-id="5f73a-117">Für .NET Framework 4.x `System.Net.Http` binäre im globalen Assemblycache (GAC) der Standardwert ist <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="5f73a-117">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="5f73a-118">Wenn die [ `System.Net.Http` NuGet-Paket](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 zu v4.3.2 verwendet wird, ist die Standardeinstellung <xref:System.Net.DecompressionMethods.GZip> und <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="5f73a-118">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="5f73a-119">Nach dem NuGet-Paket v4.3.2, der Standardwert von <xref:System.Net.DecompressionMethods.None> verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="5f73a-119">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-120">Ruft einen Wert ab, der angibt, ob das Zertifikat anhand der Sperrliste der Zertifizierungsstelle überprüft wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-120">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-121">
            <see langword="true" />, wenn die Zertifikatsperrliste überprüft wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-121">
              <see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-122">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Zertifikat automatisch aus dem Zertifikatspeicher ausgewählt wird oder ob der Aufrufer ein bestimmtes Clientzertifikat übergeben darf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-122">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-123">Die diesem Handler zugeordnete Auflistung von Sicherheitszertifikaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-123">The collection of security certificates associated with this handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-124">Ruft die maximal zulässige Länge der Antwortheader ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-124">Gets the maximum allowed length of the response headers.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-125">Die Länge der Antwortheader in KB (1024 Bytes).</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-125">The length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-126">Ruft den zum Speichern von Servercookies vom Handler verwendeten Cookiecontainer ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-126">Gets or sets the cookie container used to store server cookies by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-127">Der zum Speichern von Servercookies vom Handler verwendete Cookiecontainer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-127">The cookie container used to store server cookies by the handler.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-128">Die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Eigenschaft enthält eine Instanz von der <xref:System.Net.CookieContainer> -Klasse, die diesem Handler zugeordnete Cookies enthält.</span><span class="sxs-lookup"><span data-stu-id="5f73a-128">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>  
  
 <span data-ttu-id="5f73a-129">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> Eigenschaft `true`die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> Eigenschaft stellt den CookieContainer verwendet, um die servercookies zu speichern.</span><span class="sxs-lookup"><span data-stu-id="5f73a-129">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="5f73a-130">Der Benutzer kann benutzerdefinierte Cookies vor dem Senden von Anforderungen, die mit dieser Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="5f73a-130">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="5f73a-131">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> Eigenschaft auf "false" festgelegt ist und der Benutzer fügt Cookies <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, Cookies werden ignoriert und nicht an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="5f73a-131">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="5f73a-132">Festlegen der <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> auf `null` wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5f73a-132">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-133">Ruft von diesem Handler verwendete Authentifizierungsinformationen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-133">Gets or sets authentication information used by this handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-134">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-134">The authentication credentials associated with the handler.</span>
          </span>
          <span data-ttu-id="5f73a-135">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-135">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-136">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die an den Standardproxyserver für die Authentifizierung übermittelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-136">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span>
          </span>
          <span data-ttu-id="5f73a-137">Der Standardproxy wird nur verwendet, wenn <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> auf <see langword="true" /> und <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> auf <see langword="null" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-137">The default proxy is used only when <see cref="T:System.Net.Http.HttpClientHandler.UseProxy%2A" /> is set to <see langword="true" /> and <see cref="T:System.Net.Http.HttpClientHandler.Proxy%2A" /> is set to <see langword="null" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-138">Die Anmeldeinformationen zum Authentifizieren einer Anforderung mit dem Standard-Proxyserver erforderlich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-138">The credentials needed to authenticate a request to the default proxy server.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="5f73a-139">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-139">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f73a-140">Gibt die vom <see cref="T:System.Net.Http.HttpClientHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-140">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-141">Diese Methode wird aufgerufen, der öffentlich `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5f73a-141">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="5f73a-142">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode mit dem `disposing` Parametersatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="5f73a-142">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="5f73a-143"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="5f73a-143"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="5f73a-144">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Net.Http.HttpClientHandler> verweist.</span><span class="sxs-lookup"><span data-stu-id="5f73a-144">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="5f73a-145">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="5f73a-145">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-146">Ruft die maximale Anzahl von Umleitungen ab, denen der Handler folgt, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-146">Gets or sets the maximum number of redirects that the handler follows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-147">Die maximale Anzahl von Umleitungsantworten, denen der Handler folgt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-147">The maximum number of redirection responses that the handler follows.</span>
          </span>
          <span data-ttu-id="5f73a-148">Der Standardwert ist 50.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-148">The default value is 50.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-149">Die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> Eigenschaft legt die maximale Anzahl von umleitungen für die Anforderung, wenn führen die <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> Eigenschaft ist `true`.</span><span class="sxs-lookup"><span data-stu-id="5f73a-149">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-150">Ruft die maximal zulässige Anzahl gleichzeitiger Verbindungen (pro Serverendpunkt), wenn eine Anforderung mithilfe eines <see cref="T:System.Net.Http.HttpClient" />-Objekts durchgeführt wird, oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-150">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
          <span data-ttu-id="5f73a-151">Beachten Sie, dass der Grenzwert pro Serverendpunkt gilt. Ein Wert von 256 würde beispielsweise 256 gleichzeitige Verbindungen zu „http://www.adatum.com/“ und weitere 256 zu „http://www.adventure-works.com/“ ermöglichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-151">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-152">Die maximale Anzahl gleichzeitiger Verbindungen (pro Endpunkt des Servers) zulässig sind durch ein <see cref="T:System.Net.Http.HttpClient" /> Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-152">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-153">Dient zum Abrufen oder Festlegen der maximalen Größe des Anforderungsinhaltspuffers, die vom Handler verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-153">Gets or sets the maximum request content buffer size used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-154">Der maximale Größe des Anforderungsinhaltspuffers in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-154">The maximum request content buffer size in bytes.</span>
          </span>
          <span data-ttu-id="5f73a-155">Der Standardwert ist 2 GB.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-155">The default value is 2 gigabytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-156">Legen Sie eine app kann die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> Eigenschaft auf einen niedrigeren Wert die Größe des Puffers Anforderung beschränkt.</span><span class="sxs-lookup"><span data-stu-id="5f73a-156">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="5f73a-157">Wenn die Größe des anforderungsinhalts größer ist die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> -Eigenschaft, eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="5f73a-157">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-158">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-158">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
          <span data-ttu-id="5f73a-159">Wenn der Wert beispielsweise 64 ist, sind 65536 Byte für die maximale Länge des Antwortheaders zulässig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-159">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-160">Die maximale Länge in KB (1024 Bytes) der Antwortheader.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-160">The maximum length, in kilobytes (1024 bytes), of the response headers.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-161">Ruft einen Wert ab, der angibt, ob vom Handler mit der Anforderung ein Autorisierungsheader gesendet wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-161">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-162">
            <see langword="true" />, um nach der Authentifizierung einen HTTP-Authorization-Header mit Anforderungen vom Handler zu senden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-162">
              <see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-163">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-163">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-164">Nach einer Clientanforderung für einen bestimmten <xref:System.Uri> erfolgreich authentifiziert ist, wenn die <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> Eigenschaft ist `true` und Anmeldeinformationen angegeben werden, <xref:System.Net.Http.HttpClientHandler> Übereinstimmungen mit der Liste mit den Anmeldeinformationen angegeben werden, der <xref:System.Net.Http.HttpClientHandler.Credentials%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="5f73a-164">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="5f73a-165">Der Authorization-Header wird mit jeder Anforderung gesendet, an ein beliebiges <xref:System.Uri> entspricht den jeweiligen <xref:System.Uri> bis zum letzten Schrägstrich.</span><span class="sxs-lookup"><span data-stu-id="5f73a-165">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>  
  
 <span data-ttu-id="5f73a-166">Wenn die Clientanforderung zu einem bestimmten <xref:System.Uri> ist nicht erfolgreich authentifiziert die Anforderung Standardauthentifizierung-Prozeduren verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f73a-166">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>  
  
 <span data-ttu-id="5f73a-167">Mit Ausnahme der ersten Anforderung der <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> Eigenschaft gibt an, ob Authentifizierungsinformationen mit nachfolgenden Anforderungen zum Senden einer <xref:System.Uri> entspricht den jeweiligen <xref:System.Uri> bis zum letzten Schrägstrich ohne zu warten, werden vom Server behindert.</span><span class="sxs-lookup"><span data-stu-id="5f73a-167">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-168">Ruft ein beschreibares Wörterbuch (d.h. eine Zuordnung) von benutzerdefinierten Eigenschaften für die <see cref="T:System.Net.Http.HttpClient" />-Anforderungen ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-168">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span>
          </span>
          <span data-ttu-id="5f73a-169">Das Wörterbuch ist zunächst leer. Sie können Schlüssel-Wert-Paare für benutzerdefinierte Handler und die spezielle Verarbeitung einfügen und abfragen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-169">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-170">eine schreibbare Wörterbuch der benutzerdefinierten Eigenschaften.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-170">a writable dictionary of custom properties.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-171">Ruft vom Handler verwendete Proxyinformationen ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-171">Gets or sets proxy information used by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-172">Die vom Handler verwendeten Proxyinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-172">The proxy information used by the handler.</span>
          </span>
          <span data-ttu-id="5f73a-173">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-173">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-174">Die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> Eigenschaft identifiziert die <xref:System.Net.WebProxy> Objekt, das zur Verarbeitung von Anforderungen und Ressourcen im Internet verwendet.</span><span class="sxs-lookup"><span data-stu-id="5f73a-174">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="5f73a-175">Um anzugeben, dass kein Proxy verwendet werden soll, legen die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> -Eigenschaft auf die Proxyinstanz, die zurückgegeben werden, indem Sie die <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="5f73a-175">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>  
  
 <span data-ttu-id="5f73a-176">Dem lokalen Computer oder eine Anwendungskonfigurationsdatei kann angeben, dass ein standardmäßige Proxy verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="5f73a-176">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="5f73a-177">Wenn die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> Eigenschaft angegeben ist, klicken Sie dann auf die Proxy-Einstellungen aus der <xref:System.Net.Http.HttpClientHandler.Proxy%2A> zum Überschreiben der Eigenschaft des lokalen Computers oder die Anwendungskonfigurationsdatei und den Ereignishandler verwendet die angegebenen Proxyeinstellungen.</span><span class="sxs-lookup"><span data-stu-id="5f73a-177">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="5f73a-178">Wenn kein Proxy in eine Datei "App.config" angegeben ist und die <xref:System.Net.Http.HttpClientHandler.Proxy%2A> Eigenschaft ist nicht angegeben ist, der Handler verwendet die Proxyeinstellungen von Internet Explorer geerbt werden, auf dem lokalen Computer.</span><span class="sxs-lookup"><span data-stu-id="5f73a-178">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="5f73a-179">Wenn es keine Proxyeinstellungen in Internet Explorer sind, wird die Anforderung direkt an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="5f73a-179">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>  
  
 <span data-ttu-id="5f73a-180">Die <xref:System.Net.Http.HttpClientHandler> -Klasse analysiert eine Proxyumgehungsliste mit Platzhalterzeichen geerbt von Internet Explorer die gleiche wie die Umgehungsliste direkt vom Internet Explorer analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="5f73a-180">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="5f73a-181">Z. B. die <xref:System.Net.Http.HttpClientHandler> -Klasse analysiert eine Umgehungsliste des "nt *" von Internet Explorer als regulären Ausdruck "nt.\*".</span><span class="sxs-lookup"><span data-stu-id="5f73a-181">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="5f73a-182">Daher eine URL " http://nt.com" den Proxy mithilfe der <xref:System.Net.Http.HttpClientHandler> -Klasse und Internet Explorer verwenden.</span><span class="sxs-lookup"><span data-stu-id="5f73a-182">So a URL of " http://nt.com" would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>  
  
 <span data-ttu-id="5f73a-183">Die <xref:System.Net.Http.HttpClientHandler> -Klasse unterstützt die Umgehung von lokalen Proxy.</span><span class="sxs-lookup"><span data-stu-id="5f73a-183">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="5f73a-184">Die Klasse hält ein Ziel werden lokal, wenn eine der folgenden Bedingungen erfüllt sind:</span><span class="sxs-lookup"><span data-stu-id="5f73a-184">The class considers a destination to be local if any of the following conditions are met:</span></span>  
  
1.  <span data-ttu-id="5f73a-185">Das Ziel enthält einen flachen Namen (keine Punkte in der URL).</span><span class="sxs-lookup"><span data-stu-id="5f73a-185">The destination contains a flat name (no dots in the URL).</span></span>  
  
2.  <span data-ttu-id="5f73a-186">Das Ziel enthält eine Loopbackadresse (<xref:System.Net.IPAddress.Loopback> oder <xref:System.Net.IPAddress.IPv6Loopback>) oder das Ziel enthält eine <xref:System.Net.IPAddress> auf dem lokalen Computer zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="5f73a-186">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>  
  
3.  <span data-ttu-id="5f73a-187">Das Domänensuffix des Ziels übereinstimmt Domänensuffix des lokalen Computers (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span><span class="sxs-lookup"><span data-stu-id="5f73a-187">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.AsyncStateMachine(typeof(System.Net.Http.HttpClientHandler/&lt;SendAsync&gt;c__async0))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="5f73a-188">Die HTTP-Anforderungsnachricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-188">The HTTP request message.</span>
          </span>
        </param>
        <param name="cancellationToken">
          <span data-ttu-id="5f73a-189">Ein Abbruchtoken, um den Vorgang abzubrechen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-189">A cancellation token to cancel the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5f73a-190">Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen als nicht blockierender Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-190">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5f73a-191">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-191">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-192">Dieser Vorgang ist nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="5f73a-192">This operation is does not block.</span></span> <span data-ttu-id="5f73a-193">Es gibt eine Instanz des <xref:System.Threading.Tasks.Task%601> auf den asynchronen Vorgang darstellen.</span><span class="sxs-lookup"><span data-stu-id="5f73a-193">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="5f73a-194">Bei Abschluss des Vorgangs <xref:System.Threading.Tasks.Task%601.Result%2A> die Antwortnachricht enthält.</span><span class="sxs-lookup"><span data-stu-id="5f73a-194">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5f73a-195">
            <paramref name="request" /> war <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-195">The <paramref name="request" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-196">Ruft eine Rückrufmethode zur Überprüfung des Serverzertifikats ab oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-196">Gets or sets a callback method to validate the server certificate.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-197">Eine Rückrufmethode zur Überprüfung des Serverzertifikats.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-197">A callback method to validate the server certificate.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-198">Ruft das TSL-/SSL-Protokoll ab, das von den <see cref="T:System.Net.Http.HttpClient" />-Objekten verwendet wird, die vom HttpClientHandler-Objekt verwaltet werden, oder legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-198">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-199">Einer der in der <see cref="T:System.Security.Authentication.SslProtocols" />-Enumeration definierten Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-199">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-200">Ruft einen Wert ab, der angibt, ob der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-200">Gets a value that indicates whether the handler supports automatic response content decompression.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-201">
            <see langword="true" />, wenn der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-201">
              <see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-202">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-202">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-203">Ruft einen Wert ab, der angibt, ob der Handler Proxyeinstellungen unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-203">Gets a value that indicates whether the handler supports proxy settings.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-204">
            <see langword="true" />, wenn der Handler Proxyeinstellungen unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-204">
              <see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-205">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-205">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-206">Ruft einen Wert ab, der angibt, ob der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-206">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-207">
            <see langword="true" />, wenn der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-207">
              <see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-208">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-208">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-209">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-209">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-210">
            <see langword="true" />, wenn der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-210">
              <see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-211">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-211">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-212">Ruft einen Wert ab, der steuert, ob vom Handler mit den Anforderungen Standardanmeldeinformationen gesendet werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-212">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-213">
            <see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-213">
              <see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-214">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-214">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5f73a-215">Legen Sie diese Eigenschaft auf `true` Wenn Anforderungen die <xref:System.Net.Http.HttpClientHandler> Objekt sollte, wenn vom Server angefordert authentifiziert werden mit den Anmeldeinformationen des angemeldeten Benutzers.</span><span class="sxs-lookup"><span data-stu-id="5f73a-215">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="5f73a-216">Bei Clientanwendungen ist dies das gewünschte Verhalten in den meisten Szenarien.</span><span class="sxs-lookup"><span data-stu-id="5f73a-216">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="5f73a-217">Für Anwendungen der mittleren Ebene, z. B. ASP.NET-Anwendungen, anstatt Sie mithilfe dieser Eigenschaft, legen Sie in der Regel die <xref:System.Net.Http.HttpClientHandler.Credentials%2A> Eigenschaft, um die Anmeldeinformationen des Clients auf, deren Namen die Anforderung erfolgt.</span><span class="sxs-lookup"><span data-stu-id="5f73a-217">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5f73a-218">Ruft einen Wert ab, der angibt, ob der Handler einen Proxy für Anforderungen verwendet, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-218">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5f73a-219">
            <see langword="true" />, wenn der Handler einen Proxy für Anforderungen verwenden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-219">
              <see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="5f73a-220">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5f73a-220">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>