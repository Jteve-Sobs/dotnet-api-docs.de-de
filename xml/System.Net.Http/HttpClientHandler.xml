<Type Name="HttpClientHandler" FullName="System.Net.Http.HttpClientHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="448949482a1413f29891f37c52c2bcb081e2e8d7" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83531827" /></Metadata><TypeSignature Language="C#" Value="public class HttpClientHandler : System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpClientHandler extends System.Net.Http.HttpMessageHandler" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpClientHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpClientHandler&#xA;Inherits HttpMessageHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpClientHandler : System::Net::Http::HttpMessageHandler" />
  <TypeSignature Language="F#" Value="type HttpClientHandler = class&#xA;    inherit HttpMessageHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Http" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Net.Http.HttpMessageHandler</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="073eb-101">Den Standardnachrichtenhandler, der von <see cref="T:System.Net.Http.HttpClient" /> in .NET Framework und .NET Core 2.0 und früheren Versionen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-101">The default message handler used by <see cref="T:System.Net.Http.HttpClient" /> in .NET Framework and .NET Core 2.0 and earlier.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="073eb-102">Die `HttpClientHandler` Klasse und die daraus abgeleiteten Klassen ermöglichen es Entwicklern, eine Vielzahl von Optionen zu konfigurieren, die von Proxys bis zur Authentifizierung reichen.</span><span class="sxs-lookup"><span data-stu-id="073eb-102">The `HttpClientHandler` class and classes derived from it enable developers to configure a variety of options ranging from proxies to authentication.</span></span>

### <a name="httpclienthandler-in-net-core"></a><span data-ttu-id="073eb-103">Httpclienthandler in .net Core</span><span class="sxs-lookup"><span data-stu-id="073eb-103">HttpClientHandler in .NET Core</span></span>

<span data-ttu-id="073eb-104">Ab .net Core 2,1 wurde die Implementierung der `HttpClientHandler`-Klasse so geändert, dass Sie auf dem plattformübergreifenden HTTP-Protokollstapel basiert, der von der <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType>-Klasse verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-104">Starting in .NET Core 2.1, the implementation of the `HttpClientHandler` class was changed to be based on the cross-platform HTTP protocol stack used by the <xref:System.Net.Http.SocketsHttpHandler?displayProperty=nameWithType> class.</span></span> <span data-ttu-id="073eb-105">Vor .net Core 2,1 verwendete die `HttpClientHandler`-Klasse ältere HTTP-Protokollstapel (<xref:System.Net.Http.WinHttpHandler> unter Windows und `CurlHandler`, eine interne Klasse, die auf der systemeigenen libcurl-Komponente von Linux implementiert ist, unter Linux).</span><span class="sxs-lookup"><span data-stu-id="073eb-105">Prior to .NET Core 2.1, the `HttpClientHandler` class used older HTTP protocol stacks (<xref:System.Net.Http.WinHttpHandler> on Windows and `CurlHandler`, an internal class implemented on top of Linux's native libcurl component, on Linux).</span></span>

<span data-ttu-id="073eb-106">Sie können Ihre APP so konfigurieren, dass die älteren HTTP-Protokollstapel auf eine der folgenden drei Arten verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="073eb-106">You can configure your app to use the older HTTP protocol stacks in one of the following three ways:</span></span>

- <span data-ttu-id="073eb-107">Wenden Sie die <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType>-Methode an:</span><span class="sxs-lookup"><span data-stu-id="073eb-107">Call the <xref:System.AppContext.SetSwitch%2A?displayProperty=nameWithType> method:</span></span>

  ```csharp
  AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", false);
  ```

  ```vb
  AppContext.SetSwitch("System.Net.Http.UseSocketsHttpHandler", False)
  ```

- <span data-ttu-id="073eb-108">Definieren Sie den `System.Net.Http.UseSocketsHttpHandler`-Schalter in der Konfigurationsdatei " *. Netcore. runtimeconfig. JSON* ":</span><span class="sxs-lookup"><span data-stu-id="073eb-108">Define the `System.Net.Http.UseSocketsHttpHandler` switch in the *.netcore.runtimeconfig.json* configuration file:</span></span>

  ```json
  "runtimeOptions": {
    "configProperties": {
        "System.Net.Http.UseSocketsHttpHandler": false
    }
  }
  ```

- <span data-ttu-id="073eb-109">Definieren Sie eine Umgebungsvariable mit dem Namen `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER`, und legen Sie Sie entweder auf `false` oder auf **0**fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-109">Define an environment variable named `DOTNET_SYSTEM_NET_HTTP_USESOCKETSHTTPHANDLER` and set it to either `false` or **0**.</span></span>

## Examples
 [!code-csharp[System.Net.Http.HttpClientHandler#1](~/samples/snippets/csharp/VS_Snippets_Misc/system.net.http.httpclienthandler/cs/source.cs#1)]

 <span data-ttu-id="073eb-110">Im vorangehenden Codebeispiel wird ein `async Task Main()` Einstiegspunkt verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-110">The preceding code example uses an `async Task Main()` entry point.</span></span> <span data-ttu-id="073eb-111">Für dieses Feature C# ist 7,1 oder höher erforderlich.</span><span class="sxs-lookup"><span data-stu-id="073eb-111">That feature requires C# 7.1 or later.</span></span>

 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=245696"><span data-ttu-id="073eb-112">Herstellen einer Verbindung mit einem Webdienst</span><span class="sxs-lookup"><span data-stu-id="073eb-112">Connecting to a web service</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=245697"><span data-ttu-id="073eb-113">Schnellstart: Herstellen einer Verbindung mithilfe von httpclient</span><span class="sxs-lookup"><span data-stu-id="073eb-113">Quickstart: Connecting using HttpClient</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=245699"><span data-ttu-id="073eb-114">Verwenden des HttpClient-Handlers</span><span class="sxs-lookup"><span data-stu-id="073eb-114">How to use HttpClient handlers</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=245698"><span data-ttu-id="073eb-115">Sichern von HttpClient-Verbindungen</span><span class="sxs-lookup"><span data-stu-id="073eb-115">How to secure HttpClient connections</span></span></related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=242550"><span data-ttu-id="073eb-116">HttpClient Sample (HttpClient-Beispiel)</span><span class="sxs-lookup"><span data-stu-id="073eb-116">HttpClient Sample</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpClientHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpClientHandler();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="073eb-117">Erstellt eine Instanz einer <see cref="T:System.Net.Http.HttpClientHandler" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="073eb-117">Creates an instance of a <see cref="T:System.Net.Http.HttpClientHandler" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowAutoRedirect">
      <MemberSignature Language="C#" Value="public bool AllowAutoRedirect { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAutoRedirect" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowAutoRedirect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowAutoRedirect { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowAutoRedirect : bool with get, set" Usage="System.Net.Http.HttpClientHandler.AllowAutoRedirect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-118">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Handler Umleitungsantworten folgen soll.</span><span class="sxs-lookup"><span data-stu-id="073eb-118">Gets or sets a value that indicates whether the handler should follow redirection responses.</span></span></summary>
        <value><span data-ttu-id="073eb-119"><see langword="true" />, wenn der Handler Umleitungs Antworten folgen soll. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-119"><see langword="true" /> if the handler should follow redirection responses; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-120">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-120">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-121">Legen Sie <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> auf `true` fest, wenn der Handler http-Umleitungs Header automatisch an den neuen Speicherort der Ressource weiterleiten soll.</span><span class="sxs-lookup"><span data-stu-id="073eb-121">Set <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> to `true` if you want the handler to automatically follow HTTP redirection headers to the new location of the resource.</span></span> <span data-ttu-id="073eb-122">Die maximale Anzahl der nachfolgenden Umleitungen wird durch die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>-Eigenschaft festgelegt.</span><span class="sxs-lookup"><span data-stu-id="073eb-122">The maximum number of redirections to follow is set by the <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property.</span></span>

 <span data-ttu-id="073eb-123">Wenn <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> auf `false`festgelegt ist, werden alle HTTP-Antworten mit einem HTTP-Statuscode zwischen 300 und 399 an die Anwendung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="073eb-123">If <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `false`, all HTTP responses with an HTTP status code from 300 to 399 are  returned to the application.</span></span>

 <span data-ttu-id="073eb-124">Der Autorisierungs Header wird bei automatischen Umleitungen gelöscht, und der Handler versucht automatisch, sich am umgeleiteten Speicherort erneut zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="073eb-124">The Authorization header is cleared on auto-redirects and the handler automatically tries to re-authenticate to the redirected location.</span></span> <span data-ttu-id="073eb-125">In der Praxis bedeutet dies, dass eine Anwendung keine benutzerdefinierten Authentifizierungsinformationen im Autorisierungs Header ablegen kann, wenn eine Umleitung möglich ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-125">In practice, this means that an application can't put custom authentication information into the Authorization header if it is possible to encounter redirection.</span></span> <span data-ttu-id="073eb-126">Stattdessen muss die Anwendung ein benutzerdefiniertes Authentifizierungs Modul implementieren und registrieren.</span><span class="sxs-lookup"><span data-stu-id="073eb-126">Instead, the application must implement and register a custom authentication module.</span></span>

> [!NOTE]
>  <span data-ttu-id="073eb-127">Wenn <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> auf `true`festgelegt ist, folgen die .NET Framework Umleitungen, auch wenn Sie von einem HTTPS-URI an einen HTTP-URI umgeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="073eb-127">With <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> set to `true`, the .NET Framework will follow redirections even when being redirected to an HTTP URI from an HTTPS URI.</span></span>
<span data-ttu-id="073eb-128">Die .net Core-Versionen 1,0, 1,1 und 2,0 folgen keiner Umleitung von HTTPS zu http, auch wenn <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-128">.NET Core versions 1.0, 1.1 and 2.0 will not follow a redirection from HTTPS to HTTP even if <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> is set to `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutomaticDecompression">
      <MemberSignature Language="C#" Value="public System.Net.DecompressionMethods AutomaticDecompression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.DecompressionMethods AutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Property AutomaticDecompression As DecompressionMethods" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::DecompressionMethods AutomaticDecompression { System::Net::DecompressionMethods get(); void set(System::Net::DecompressionMethods value); };" />
      <MemberSignature Language="F#" Value="member this.AutomaticDecompression : System.Net.DecompressionMethods with get, set" Usage="System.Net.Http.HttpClientHandler.AutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.DecompressionMethods</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-129">Ruft den Typ der Dekomprimierungsmethode ab (bzw. legt ihn fest), die vom Handler für die automatische Dekomprimierung des Inhalts der HTTP-Antwort verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-129">Gets or sets the type of decompression method used by the handler for automatic decompression of the HTTP content response.</span></span></summary>
        <value><span data-ttu-id="073eb-130">Die automatische Dekomprimierungsmethode, die der Handler verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-130">The automatic decompression method used by the handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
<span data-ttu-id="073eb-131">Der Standardwert für die .NET Framework 4. x-`System.Net.Http` Binärdatei im globalen Assemblycache (GAC) ist <xref:System.Net.DecompressionMethods.None>.</span><span class="sxs-lookup"><span data-stu-id="073eb-131">For the .NET Framework 4.x `System.Net.Http` binary in the Global Assembly Cache (GAC), the default value is <xref:System.Net.DecompressionMethods.None>.</span></span>

<span data-ttu-id="073eb-132">Wenn das [`System.Net.Http` nuget-Paket](https://www.nuget.org/packages/System.Net.Http/) v 4.1.0 bis v 4.3.2 verwendet wird, lautet der Standardwert <xref:System.Net.DecompressionMethods.GZip> und <xref:System.Net.DecompressionMethods.Deflate>.</span><span class="sxs-lookup"><span data-stu-id="073eb-132">When the [`System.Net.Http` NuGet package](https://www.nuget.org/packages/System.Net.Http/) v4.1.0 to v4.3.2 is used, the default is <xref:System.Net.DecompressionMethods.GZip> and <xref:System.Net.DecompressionMethods.Deflate>.</span></span>

<span data-ttu-id="073eb-133">Nach dem nuget-Paket v 4.3.2 wird der Standardwert <xref:System.Net.DecompressionMethods.None> verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-133">After NuGet package v4.3.2, the default value of <xref:System.Net.DecompressionMethods.None> is used.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckCertificateRevocationList">
      <MemberSignature Language="C#" Value="public bool CheckCertificateRevocationList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckCertificateRevocationList" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckCertificateRevocationList As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckCertificateRevocationList { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CheckCertificateRevocationList : bool with get, set" Usage="System.Net.Http.HttpClientHandler.CheckCertificateRevocationList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-134">Ruft einen Wert ab, der angibt, ob das Zertifikat anhand der Sperrliste der Zertifizierungsstelle überprüft wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-134">Gets or sets a value that indicates whether the certificate is checked against the certificate authority revocation list.</span></span></summary>
        <value><span data-ttu-id="073eb-135"><see langword="true" />, wenn die Zertifikatsperrliste überprüft wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-135"><see langword="true" /> if the certificate revocation list is checked; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="073eb-136">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="073eb-136">.NET Framework 4.7.1 only: This property is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificateOptions">
      <MemberSignature Language="C#" Value="public System.Net.Http.ClientCertificateOption ClientCertificateOptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Net.Http.ClientCertificateOption ClientCertificateOptions" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCertificateOptions As ClientCertificateOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::ClientCertificateOption ClientCertificateOptions { System::Net::Http::ClientCertificateOption get(); void set(System::Net::Http::ClientCertificateOption value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificateOptions : System.Net.Http.ClientCertificateOption with get, set" Usage="System.Net.Http.HttpClientHandler.ClientCertificateOptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.ClientCertificateOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-137">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Zertifikat automatisch aus dem Zertifikatspeicher ausgewählt wird oder ob der Aufrufer ein bestimmtes Clientzertifikat übergeben darf.</span><span class="sxs-lookup"><span data-stu-id="073eb-137">Gets or sets a value that indicates if the certificate is automatically picked from the certificate store or if the caller is allowed to pass in a specific client certificate.</span></span></summary>
        <value><span data-ttu-id="073eb-138">Die diesem Handler zugeordnete Auflistung von Sicherheitszertifikaten.</span><span class="sxs-lookup"><span data-stu-id="073eb-138">The collection of security certificates associated with this handler.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCertificates">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientCertificates As X509CertificateCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ ClientCertificates { System::Security::Cryptography::X509Certificates::X509CertificateCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientCertificates : System.Security.Cryptography.X509Certificates.X509CertificateCollection" Usage="System.Net.Http.HttpClientHandler.ClientCertificates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.X509Certificates.X509CertificateCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-139">Ruft die dieser Anforderungen an den Server zugeordnete Auflistung von Sicherheitszertifikaten ab.</span><span class="sxs-lookup"><span data-stu-id="073eb-139">Gets the collection of security certificates that are associated requests to the server.</span></span></summary>
        <value><span data-ttu-id="073eb-140">Der X509CertificateCollection, der dem Server beim Ausführen der Zertifikat basierten Client Authentifizierung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-140">The X509CertificateCollection that is presented to the server when performing certificate based client authentication.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookieContainer">
      <MemberSignature Language="C#" Value="public System.Net.CookieContainer CookieContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.CookieContainer CookieContainer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property CookieContainer As CookieContainer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::CookieContainer ^ CookieContainer { System::Net::CookieContainer ^ get(); void set(System::Net::CookieContainer ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CookieContainer : System.Net.CookieContainer with get, set" Usage="System.Net.Http.HttpClientHandler.CookieContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.CookieContainer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-141">Ruft den Cookiecontainer, der vom Handler zum Speichern von Servercookies verwendet wird, ab bzw. legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-141">Gets or sets the cookie container used to store server cookies by the handler.</span></span></summary>
        <value><span data-ttu-id="073eb-142">Der zum Speichern von Servercookies vom Handler verwendete Cookiecontainer.</span><span class="sxs-lookup"><span data-stu-id="073eb-142">The cookie container used to store server cookies by the handler.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-143">Die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>-Eigenschaft stellt eine Instanz der <xref:System.Net.CookieContainer>-Klasse bereit, die die diesem Handler zugeordneten Cookies enthält.</span><span class="sxs-lookup"><span data-stu-id="073eb-143">The <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property provides an instance of the <xref:System.Net.CookieContainer> class that contains the cookies associated with this handler.</span></span>

 <span data-ttu-id="073eb-144">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>-Eigenschaft `true`ist, stellt die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>-Eigenschaft den CookieContainer dar, der zum Speichern der Server Cookies verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-144">If the <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is `true`, the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> property represents the cookie container used to store the server cookies.</span></span> <span data-ttu-id="073eb-145">Der Benutzer kann benutzerdefinierte Cookies vor dem Senden von Anforderungen mithilfe dieser Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="073eb-145">The user can set custom cookies before sending requests using this property.</span></span> <span data-ttu-id="073eb-146">Wenn die <xref:System.Net.Http.HttpClientHandler.UseCookies%2A>-Eigenschaft auf false gesetzt ist und der Benutzer <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>Cookies hinzufügt, werden Cookies ignoriert und nicht an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-146">If the  <xref:System.Net.Http.HttpClientHandler.UseCookies%2A> property is false and the user adds cookies to <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A>, cookies are ignored and not sent to the server.</span></span> <span data-ttu-id="073eb-147">Wenn Sie die <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> auf `null` festlegen, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="073eb-147">Setting the <xref:System.Net.Http.HttpClientHandler.CookieContainer%2A> to `null` will throw an exception.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Credentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials Credentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials Credentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Credentials" />
      <MemberSignature Language="VB.NET" Value="Public Property Credentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ Credentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Credentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.Credentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-148">Ruft die Authentifizierungsinformationen, die von diesem Handler verwendet werden, ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-148">Gets or sets authentication information used by this handler.</span></span></summary>
        <value><span data-ttu-id="073eb-149">Die dem Handler zugeordneten Authentifizierungsanmeldeinformationen.</span><span class="sxs-lookup"><span data-stu-id="073eb-149">The authentication credentials associated with the handler.</span></span> <span data-ttu-id="073eb-150">Der Standardwert lautet <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-150">The default is <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DangerousAcceptAnyServerCertificateValidator">
      <MemberSignature Language="C#" Value="public static Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; DangerousAcceptAnyServerCertificateValidator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DangerousAcceptAnyServerCertificateValidator As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ DangerousAcceptAnyServerCertificateValidator { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DangerousAcceptAnyServerCertificateValidator : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt;" Usage="System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-151">Ruft einen zwischengespeicherten Delegaten ab, der immer <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="073eb-151">Gets a cached delegate that always returns <see langword="true" />.</span></span></summary>
        <value><span data-ttu-id="073eb-152">Ein zwischengespeicherter Delegat, der immer <see langword="true" /> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="073eb-152">A cached delegate that always returns <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-153">Vor allem in Testszenarien verwendet ein gängiges Muster <xref:System.Net.Http.HttpClient>, um eine Verbindung mit einem Server mit einem Zertifikat herzustellen, das nicht überprüft werden soll, z. b. ein selbst signiertes Zertifikat.</span><span class="sxs-lookup"><span data-stu-id="073eb-153">Particularly in test scenarios, a common pattern use <xref:System.Net.Http.HttpClient> to connect to a server with a certificate that shouldn't be validated, such as a self-signed certificate.</span></span> <span data-ttu-id="073eb-154">Dies geschieht in der Regel mit <xref:System.Net.Http.HttpClientHandler>, indem die <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A>-Eigenschaft auf einen Delegaten festgelegt wird, der immer `True`zurückgibt. Dies gibt an, dass das Zertifikat die Überprüfung bestanden hat.</span><span class="sxs-lookup"><span data-stu-id="073eb-154">You commonly do this with <xref:System.Net.Http.HttpClientHandler> by setting the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property to a delegate that always returns `True`; this indicates that the certificate has passed validation.</span></span> <span data-ttu-id="073eb-155">Allerdings unterstützen nicht alle Implementierungen diesen Rückruf, und einige Throw-<xref:System.PlatformNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="073eb-155">However, not all implementations support this callback, and some throw <xref:System.PlatformNotSupportedException>.</span></span>

 <span data-ttu-id="073eb-156">Die <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>-Eigenschaft erfüllt diese Einschränkung.</span><span class="sxs-lookup"><span data-stu-id="073eb-156">The <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property addresses this limitation.</span></span> <span data-ttu-id="073eb-157">Der Delegat, der von der <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>-Eigenschaft zurückgegeben wird, kann der <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A>-Eigenschaft zugewiesen werden, wie im folgenden Beispiel gezeigt:</span><span class="sxs-lookup"><span data-stu-id="073eb-157">The delegate returned by the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property can be assigned to the <xref:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback%2A> property, as the following example does:</span></span>

```cs
handler.ServerCertificateCustomValidationCallback = HttpClientHandler.DangerousAcceptAnyServerCertificateValidator;
```

 <span data-ttu-id="073eb-158">Dadurch erhalten <xref:System.Net.Http.HttpClientHandler>-Implementierungen eine bekannte Objekt Verweis Identität, die die Absicht des Entwicklers ausdrückt.</span><span class="sxs-lookup"><span data-stu-id="073eb-158">This gives <xref:System.Net.Http.HttpClientHandler> implementations a known object reference identity that expresses the developer's intention.</span></span> <span data-ttu-id="073eb-159">Wenn das Objekt, das in der <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>-Eigenschaft gespeichert ist, auf <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>verweist, kann die Laufzeit die Validierung auf einer Plattform, die andernfalls eine <xref:System.PlatformNotSupportedException>auslösen würde, vollständig deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="073eb-159">If the object stored in the <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A> property is reference equals to <xref:System.Net.Http.HttpClientHandler.DangerousAcceptAnyServerCertificateValidator%2A>, the runtime is able to entirely disable validation on a platform that would otherwise throw a <xref:System.PlatformNotSupportedException>.</span></span>

 <span data-ttu-id="073eb-160">Ein neben Vorteil ist, dass Entwickler diese Eigenschaft verwenden können, um die Gefahr der Deaktivierung der Zertifikats Überprüfung zu vereinfachen. Dadurch können Entwickler nicht unsichere Anwendungen versenden.</span><span class="sxs-lookup"><span data-stu-id="073eb-160">As a side benefit, developers can use this property to make it easier for tools to flag the danger of disabling certificate validation, which makes it easier for developers to avoid shipping insecure applications.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultProxyCredentials">
      <MemberSignature Language="C#" Value="public System.Net.ICredentials DefaultProxyCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.ICredentials DefaultProxyCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultProxyCredentials As ICredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::ICredentials ^ DefaultProxyCredentials { System::Net::ICredentials ^ get(); void set(System::Net::ICredentials ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultProxyCredentials : System.Net.ICredentials with get, set" Usage="System.Net.Http.HttpClientHandler.DefaultProxyCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.ICredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-161">Wenn der Standardproxy (Systemproxy) verwendet wird, werden die Anmeldeinformationen abgerufen oder festgelegt, die an den Standardproxyserver für die Authentifizierung übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="073eb-161">When the default (system) proxy is being used, gets or sets the credentials to submit to the default proxy server for authentication.</span></span> <span data-ttu-id="073eb-162">Der Standardproxy wird nur verwendet, wenn <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> auf <see langword="true" /> und <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> auf <see langword="null" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-162">The default proxy is used only when <see cref="P:System.Net.Http.HttpClientHandler.UseProxy" /> is set to <see langword="true" /> and <see cref="P:System.Net.Http.HttpClientHandler.Proxy" /> is set to <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="073eb-163">Die Anmelde Informationen, die erforderlich sind, um eine Anforderung an den Standard Proxy Server zu authentifizieren.</span><span class="sxs-lookup"><span data-stu-id="073eb-163">The credentials needed to authenticate a request to the default proxy server.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="httpClientHandler.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="073eb-164"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="073eb-164"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="073eb-165">Gibt die vom <see cref="T:System.Net.Http.HttpClientHandler" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="073eb-165">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpClientHandler" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-166">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der <xref:System.Object.Finalize%2A>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="073eb-166">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="073eb-167">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-167">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="073eb-168"><xref:System.Object.Finalize%2A> ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-168"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>

 <span data-ttu-id="073eb-169">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Net.Http.HttpClientHandler> verweist.</span><span class="sxs-lookup"><span data-stu-id="073eb-169">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpClientHandler> references.</span></span> <span data-ttu-id="073eb-170">Diese Methode ruft die `Dispose()`-Methode jedes referenzierten Objekts auf.</span><span class="sxs-lookup"><span data-stu-id="073eb-170">This method invokes the `Dispose()` method of each referenced object.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxAutomaticRedirections">
      <MemberSignature Language="C#" Value="public int MaxAutomaticRedirections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxAutomaticRedirections" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxAutomaticRedirections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxAutomaticRedirections { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxAutomaticRedirections : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-171">Ruft die maximal Anzahl der Umleitungen, denen dieser Handler folgt, ab bzw. legt diese Anzahl fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-171">Gets or sets the maximum number of redirects that the handler follows.</span></span></summary>
        <value><span data-ttu-id="073eb-172">Die maximale Anzahl von Umleitungsantworten, denen der Handler folgt.</span><span class="sxs-lookup"><span data-stu-id="073eb-172">The maximum number of redirection responses that the handler follows.</span></span> <span data-ttu-id="073eb-173">Der Standardwert ist 50.</span><span class="sxs-lookup"><span data-stu-id="073eb-173">The default value is 50.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-174">Die <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A>-Eigenschaft legt die maximale Anzahl von Umleitungen fest, nach denen die Anforderung befolgt werden soll, wenn die <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A>-Eigenschaft `true`ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-174">The <xref:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections%2A> property sets the maximum number of redirections for the request to follow if the <xref:System.Net.Http.HttpClientHandler.AllowAutoRedirect%2A> property is `true`.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnectionsPerServer">
      <MemberSignature Language="C#" Value="public int MaxConnectionsPerServer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnectionsPerServer" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnectionsPerServer As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnectionsPerServer { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxConnectionsPerServer : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxConnectionsPerServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-175">Ruft die maximal zulässige Anzahl gleichzeitiger Verbindungen (pro Serverendpunkt), wenn eine Anforderung mithilfe eines <see cref="T:System.Net.Http.HttpClient" />-Objekts durchgeführt wird, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-175">Gets or sets the maximum number of concurrent connections (per server endpoint) allowed when making requests using an <see cref="T:System.Net.Http.HttpClient" /> object.</span></span> <span data-ttu-id="073eb-176">Beachten Sie, dass der Grenzwert pro Serverendpunkt gilt. Ein Wert von 256 würde beispielsweise 256 gleichzeitige Verbindungen zu „http://www.adatum.com/“ und weitere 256 zu „http://www.adventure-works.com/“ ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="073eb-176">Note that the limit is per server endpoint, so for example a value of 256 would permit 256 concurrent connections to http://www.adatum.com/ and another 256 to http://www.adventure-works.com/.</span></span></summary>
        <value><span data-ttu-id="073eb-177">Die maximale Anzahl gleichzeitiger Verbindungen (pro Server Endpunkt), die von einem <see cref="T:System.Net.Http.HttpClient" /> Objekt zugelassen werden.</span><span class="sxs-lookup"><span data-stu-id="073eb-177">The maximum number of concurrent connections (per server endpoint) allowed by an <see cref="T:System.Net.Http.HttpClient" /> object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxRequestContentBufferSize">
      <MemberSignature Language="C#" Value="public long MaxRequestContentBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxRequestContentBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxRequestContentBufferSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxRequestContentBufferSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxRequestContentBufferSize : int64 with get, set" Usage="System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-178">Ruft die maximale Anforderungsinhaltspuffergröße, die vom Handler verwendet wird, ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-178">Gets or sets the maximum request content buffer size used by the handler.</span></span></summary>
        <value><span data-ttu-id="073eb-179">Der maximale Größe des Anforderungsinhaltspuffers in Bytes.</span><span class="sxs-lookup"><span data-stu-id="073eb-179">The maximum request content buffer size in bytes.</span></span> <span data-ttu-id="073eb-180">Der Standardwert ist 2 GB.</span><span class="sxs-lookup"><span data-stu-id="073eb-180">The default value is 2 gigabytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-181">Eine APP kann die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A>-Eigenschaft auf einen niedrigeren Wert festlegen, um die Größe des Anforderungs Puffers einzuschränken.</span><span class="sxs-lookup"><span data-stu-id="073eb-181">An app can set the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property to a lower value to limit the size of the request buffer.</span></span> <span data-ttu-id="073eb-182">Wenn die Größe des Anforderungs Inhalts größer als die <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A>-Eigenschaft ist, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="073eb-182">If the size of the request content is greater than the <xref:System.Net.Http.HttpClientHandler.MaxRequestContentBufferSize%2A> property, an exception is thrown.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxResponseHeadersLength">
      <MemberSignature Language="C#" Value="public int MaxResponseHeadersLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxResponseHeadersLength" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxResponseHeadersLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxResponseHeadersLength { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxResponseHeadersLength : int with get, set" Usage="System.Net.Http.HttpClientHandler.MaxResponseHeadersLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-183">Ruft die maximale Länge des Antwortheaders in Kilobyte (1024 Byte) ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-183">Gets or sets the maximum length, in kilobytes (1024 bytes), of the response headers.</span></span> <span data-ttu-id="073eb-184">Wenn der Wert beispielsweise 64 ist, sind 65536 Byte für die maximale Länge des Antwortheaders zulässig.</span><span class="sxs-lookup"><span data-stu-id="073eb-184">For example, if the value is 64, then 65536 bytes are allowed for the maximum response headers' length.</span></span></summary>
        <value><span data-ttu-id="073eb-185">Die maximale Länge der Antwortheader in Kilobyte (1024 Bytes).</span><span class="sxs-lookup"><span data-stu-id="073eb-185">The maximum length, in kilobytes (1024 bytes), of the response headers.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreAuthenticate">
      <MemberSignature Language="C#" Value="public bool PreAuthenticate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PreAuthenticate" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberSignature Language="VB.NET" Value="Public Property PreAuthenticate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PreAuthenticate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PreAuthenticate : bool with get, set" Usage="System.Net.Http.HttpClientHandler.PreAuthenticate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-186">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Handler einen Autorisierungsheader mit der Anforderung sendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-186">Gets or sets a value that indicates whether the handler sends an Authorization header with the request.</span></span></summary>
        <value><span data-ttu-id="073eb-187"><see langword="true" />, um nach der Authentifizierung einen HTTP-Authorization-Header mit Anforderungen vom Handler zu senden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-187"><see langword="true" /> for the handler to send an HTTP Authorization header with requests after authentication has taken place; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="073eb-188">Der Standardwert lautet <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-188">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-189">Wenn eine Client Anforderung an eine bestimmte <xref:System.Uri> erfolgreich authentifiziert wurde und die <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A>-Eigenschaft `true` ist und Anmelde Informationen bereitgestellt werden, werden <xref:System.Net.Http.HttpClientHandler> mit der in der <xref:System.Net.Http.HttpClientHandler.Credentials%2A>-Eigenschaft angegebenen Anmelde Informationsliste übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="073eb-189">After a client request to a specific <xref:System.Uri> is successfully authenticated, if the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property is `true` and credentials are supplied, <xref:System.Net.Http.HttpClientHandler> matches against the credential list supplied in the  <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property.</span></span> <span data-ttu-id="073eb-190">Der Autorisierungs Header wird mit jeder Anforderung an alle <xref:System.Uri> gesendet, die mit dem spezifischen <xref:System.Uri> bis zum letzten Schrägstrich übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="073eb-190">The Authorization header is sent with each request to any <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash.</span></span>

 <span data-ttu-id="073eb-191">Wenn die Client Anforderung an einen bestimmten <xref:System.Uri> nicht erfolgreich authentifiziert wird, verwendet die Anforderung Standard Authentifizierungs Prozeduren.</span><span class="sxs-lookup"><span data-stu-id="073eb-191">If the client request to a specific <xref:System.Uri> is not successfully authenticated, the request uses standard authentication procedures.</span></span>

 <span data-ttu-id="073eb-192">Mit Ausnahme der ersten Anforderung gibt die <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A>-Eigenschaft an, ob Authentifizierungsinformationen mit nachfolgenden Anforderungen an einen <xref:System.Uri> gesendet werden sollen, der mit dem spezifischen <xref:System.Uri> bis zum letzten Schrägstrich übereinstimmt, ohne dass darauf gewartet wird, dass der Server auf die Warteschlange gestellt wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-192">With the exception of the first request, the <xref:System.Net.Http.HttpClientHandler.PreAuthenticate%2A> property indicates whether to send authentication information with subsequent requests to a <xref:System.Uri> that matches the specific <xref:System.Uri> up to the last forward slash without waiting to be challenged by the server.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="System.Net.Http.HttpClientHandler.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-193">Ruft ein beschreibares Wörterbuch (d.h. eine Zuordnung) von benutzerdefinierten Eigenschaften für die <see cref="T:System.Net.Http.HttpClient" />-Anforderungen ab.</span><span class="sxs-lookup"><span data-stu-id="073eb-193">Gets a writable dictionary (that is, a map) of custom properties for the <see cref="T:System.Net.Http.HttpClient" /> requests.</span></span> <span data-ttu-id="073eb-194">Das Wörterbuch ist zunächst leer. Sie können Schlüssel-Wert-Paare für benutzerdefinierte Handler und die spezielle Verarbeitung einfügen und abfragen.</span><span class="sxs-lookup"><span data-stu-id="073eb-194">The dictionary is initialized empty; you can insert and query key-value pairs for your custom handlers and special processing.</span></span></summary>
        <value><span data-ttu-id="073eb-195">ein beschreibbares Wörterbuch mit benutzerdefinierten Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="073eb-195">a writable dictionary of custom properties.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Proxy">
      <MemberSignature Language="C#" Value="public System.Net.IWebProxy Proxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.IWebProxy Proxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.Proxy" />
      <MemberSignature Language="VB.NET" Value="Public Property Proxy As IWebProxy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::IWebProxy ^ Proxy { System::Net::IWebProxy ^ get(); void set(System::Net::IWebProxy ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Proxy : System.Net.IWebProxy with get, set" Usage="System.Net.Http.HttpClientHandler.Proxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.IWebProxy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-196">Ruft die Proxyinformationen, die von diesem Handler verwendet werden, ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-196">Gets or sets proxy information used by the handler.</span></span></summary>
        <value><span data-ttu-id="073eb-197">Die vom Handler verwendeten Proxyinformationen.</span><span class="sxs-lookup"><span data-stu-id="073eb-197">The proxy information used by the handler.</span></span> <span data-ttu-id="073eb-198">Standardwert: <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-198">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-199">Die <xref:System.Net.Http.HttpClientHandler.Proxy%2A>-Eigenschaft identifiziert das <xref:System.Net.WebProxy> Objekt, das zum Verarbeiten von Anforderungen an Internet Ressourcen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="073eb-199">The <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property identifies the <xref:System.Net.WebProxy> object to use to process requests to Internet resources.</span></span> <span data-ttu-id="073eb-200">Um anzugeben, dass kein Proxy verwendet werden soll, legen Sie die <xref:System.Net.Http.HttpClientHandler.Proxy%2A>-Eigenschaft auf die Proxy Instanz fest, die von der <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A>-Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-200">To specify that no proxy should be used, set the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property to the proxy instance returned by the <xref:System.Net.GlobalProxySelection.GetEmptyWebProxy%2A> method.</span></span>

 <span data-ttu-id="073eb-201">Der lokale Computer oder die Anwendungs Konfigurationsdatei kann angeben, dass ein Standard Proxy verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="073eb-201">The local computer or application config file may specify that a default proxy be used.</span></span> <span data-ttu-id="073eb-202">Wenn die <xref:System.Net.Http.HttpClientHandler.Proxy%2A>-Eigenschaft angegeben ist, überschreiben die Proxy Einstellungen der <xref:System.Net.Http.HttpClientHandler.Proxy%2A>-Eigenschaft den lokalen Computer bzw. die Anwendungs Konfigurationsdatei, und der Handler verwendet die angegebenen Proxy Einstellungen.</span><span class="sxs-lookup"><span data-stu-id="073eb-202">If the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is specified, then the proxy settings from the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property override the local computer or application config file and the handler will use the proxy settings specified.</span></span> <span data-ttu-id="073eb-203">Wenn kein Proxy in einer Konfigurationsdatei angegeben ist und die <xref:System.Net.Http.HttpClientHandler.Proxy%2A>-Eigenschaft nicht angegeben ist, verwendet der Handler die Proxy Einstellungen, die von Internet Explorer auf dem lokalen Computer geerbt wurden.</span><span class="sxs-lookup"><span data-stu-id="073eb-203">If no proxy is specified in a config file and the <xref:System.Net.Http.HttpClientHandler.Proxy%2A> property is unspecified, the handler uses the proxy settings inherited from Internet Explorer on the local computer.</span></span> <span data-ttu-id="073eb-204">Wenn in Internet Explorer keine Proxy Einstellungen vorhanden sind, wird die Anforderung direkt an den Server gesendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-204">If there are no proxy settings in Internet Explorer, the request is sent directly to the server.</span></span>

 <span data-ttu-id="073eb-205">Die <xref:System.Net.Http.HttpClientHandler>-Klasse analysiert eine Proxy Umgehungs Liste mit Platzhalter Zeichen, die von Internet Explorer geerbt wurden, genauso, wie die Umgehungs Liste direkt von Internet Explorer analysiert wird.</span><span class="sxs-lookup"><span data-stu-id="073eb-205">The <xref:System.Net.Http.HttpClientHandler> class parses a proxy bypass list with wildcard characters inherited from Internet Explorer the same as the bypass list is parsed directly by Internet Explorer.</span></span> <span data-ttu-id="073eb-206">Beispielsweise wird die <xref:System.Net.Http.HttpClientHandler>-Klasse eine Umgehungs Liste von "NT \*" aus Internet Explorer als regulärer Ausdruck "NT.\*" analysieren.</span><span class="sxs-lookup"><span data-stu-id="073eb-206">For example, the <xref:System.Net.Http.HttpClientHandler> class will parse a bypass list of "nt\*" from Internet Explorer as a regular expression of "nt.\*".</span></span> <span data-ttu-id="073eb-207">Eine URL `http://nt.com` würde also den Proxy umgehen, indem er die <xref:System.Net.Http.HttpClientHandler>-Klasse und Internet Explorer verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-207">So a URL of `http://nt.com` would bypass the proxy using the <xref:System.Net.Http.HttpClientHandler> class and using Internet Explorer.</span></span>

 <span data-ttu-id="073eb-208">Die <xref:System.Net.Http.HttpClientHandler>-Klasse unterstützt die lokale Proxy Umgehung.</span><span class="sxs-lookup"><span data-stu-id="073eb-208">The <xref:System.Net.Http.HttpClientHandler> class supports local proxy bypass.</span></span> <span data-ttu-id="073eb-209">Wenn eine der folgenden Bedingungen erfüllt ist, wird ein Ziel von der-Klasse als Local betrachtet:</span><span class="sxs-lookup"><span data-stu-id="073eb-209">The class considers a destination to be local if any of the following conditions are met:</span></span>

1.  <span data-ttu-id="073eb-210">Das Ziel enthält einen flachen Namen (keine Punkte in der URL).</span><span class="sxs-lookup"><span data-stu-id="073eb-210">The destination contains a flat name (no dots in the URL).</span></span>

2.  <span data-ttu-id="073eb-211">Das Ziel enthält eine Loopback Adresse (<xref:System.Net.IPAddress.Loopback> oder <xref:System.Net.IPAddress.IPv6Loopback>), oder das Ziel enthält eine <xref:System.Net.IPAddress>, die dem lokalen Computer zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="073eb-211">The destination contains a loopback address (<xref:System.Net.IPAddress.Loopback> or <xref:System.Net.IPAddress.IPv6Loopback>) or the destination contains an <xref:System.Net.IPAddress> assigned to the local computer.</span></span>

3.  <span data-ttu-id="073eb-212">Das Domänen Suffix des Ziels stimmt mit dem Domänen Suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>) des lokalen Computers überein.</span><span class="sxs-lookup"><span data-stu-id="073eb-212">The domain suffix of the destination matches the local computer's domain suffix (<xref:System.Net.NetworkInformation.IPGlobalProperties.DomainName%2A>).</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt; SendAsync (System.Net.Http.HttpRequestMessage request, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class System.Net.Http.HttpResponseMessage&gt; SendAsync(class System.Net.Http.HttpRequestMessage request, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpClientHandler.SendAsync(System.Net.Http.HttpRequestMessage,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SendAsync (request As HttpRequestMessage, cancellationToken As CancellationToken) As Task(Of HttpResponseMessage)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task&lt;System::Net::Http::HttpResponseMessage ^&gt; ^ SendAsync(System::Net::Http::HttpRequestMessage ^ request, System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="override this.SendAsync : System.Net.Http.HttpRequestMessage * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;" Usage="httpClientHandler.SendAsync (request, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Http.HttpResponseMessage&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.Http.HttpRequestMessage" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="073eb-213">Die HTTP-Anforderungsnachricht.</span><span class="sxs-lookup"><span data-stu-id="073eb-213">The HTTP request message.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="073eb-214">Ein Abbruchtoken, um den Vorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="073eb-214">A cancellation token to cancel the operation.</span></span></param>
        <summary><span data-ttu-id="073eb-215">Erstellt eine Instanz von <see cref="T:System.Net.Http.HttpResponseMessage" /> auf Basis der in <see cref="T:System.Net.Http.HttpRequestMessage" /> bereitgestellten Informationen als nicht blockierender Vorgang.</span><span class="sxs-lookup"><span data-stu-id="073eb-215">Creates an instance of  <see cref="T:System.Net.Http.HttpResponseMessage" /> based on the information provided in the <see cref="T:System.Net.Http.HttpRequestMessage" /> as an operation that will not block.</span></span></summary>
        <returns><span data-ttu-id="073eb-216">Das Taskobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="073eb-216">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-217">Dieser Vorgang ist nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="073eb-217">This operation is does not block.</span></span> <span data-ttu-id="073eb-218">Es wird eine Instanz von <xref:System.Threading.Tasks.Task%601> zurückgegeben, die den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="073eb-218">It returns an instance of <xref:System.Threading.Tasks.Task%601> to represent the asynchronous operation.</span></span> <span data-ttu-id="073eb-219">Wenn der Vorgang abgeschlossen ist, enthält <xref:System.Threading.Tasks.Task%601.Result%2A> die Antwortnachricht.</span><span class="sxs-lookup"><span data-stu-id="073eb-219">When the operation completes, <xref:System.Threading.Tasks.Task%601.Result%2A> contains the response message.</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="073eb-220"><paramref name="request" /> war <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-220">The <paramref name="request" /> was <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ServerCertificateCustomValidationCallback">
      <MemberSignature Language="C#" Value="public Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,bool&gt; ServerCertificateCustomValidationCallback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Func`5&lt;class System.Net.Http.HttpRequestMessage, class System.Security.Cryptography.X509Certificates.X509Certificate2, class System.Security.Cryptography.X509Certificates.X509Chain, valuetype System.Net.Security.SslPolicyErrors, bool&gt; ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerCertificateCustomValidationCallback As Func(Of HttpRequestMessage, X509Certificate2, X509Chain, SslPolicyErrors, Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ ServerCertificateCustomValidationCallback { Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ get(); void set(Func&lt;System::Net::Http::HttpRequestMessage ^, System::Security::Cryptography::X509Certificates::X509Certificate2 ^, System::Security::Cryptography::X509Certificates::X509Chain ^, System::Net::Security::SslPolicyErrors, bool&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServerCertificateCustomValidationCallback : Func&lt;System.Net.Http.HttpRequestMessage, System.Security.Cryptography.X509Certificates.X509Certificate2, System.Security.Cryptography.X509Certificates.X509Chain, System.Net.Security.SslPolicyErrors, bool&gt; with get, set" Usage="System.Net.Http.HttpClientHandler.ServerCertificateCustomValidationCallback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Func&lt;System.Net.Http.HttpRequestMessage,System.Security.Cryptography.X509Certificates.X509Certificate2,System.Security.Cryptography.X509Certificates.X509Chain,System.Net.Security.SslPolicyErrors,System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-221">Ruft eine Rückrufmethode zur Überprüfung des Serverzertifikats ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-221">Gets or sets a callback method to validate the server certificate.</span></span></summary>
        <value><span data-ttu-id="073eb-222">Eine Rückrufmethode zur Überprüfung des Serverzertifikats.</span><span class="sxs-lookup"><span data-stu-id="073eb-222">A callback method to validate the server certificate.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SslProtocols">
      <MemberSignature Language="C#" Value="public System.Security.Authentication.SslProtocols SslProtocols { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Authentication.SslProtocols SslProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Property SslProtocols As SslProtocols" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Authentication::SslProtocols SslProtocols { System::Security::Authentication::SslProtocols get(); void set(System::Security::Authentication::SslProtocols value); };" />
      <MemberSignature Language="F#" Value="member this.SslProtocols : System.Security.Authentication.SslProtocols with get, set" Usage="System.Net.Http.HttpClientHandler.SslProtocols" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netstandard-2.0">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Authentication.SslProtocols</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-223">Ruft das TSL-/SSL-Protokoll ab, das von den <see cref="T:System.Net.Http.HttpClient" />-Objekten verwendet wird, die vom HttpClientHandler-Objekt verwaltet werden, oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="073eb-223">Gets or sets the TLS/SSL protocol used by the <see cref="T:System.Net.Http.HttpClient" /> objects managed by the HttpClientHandler object.</span></span></summary>
        <value><span data-ttu-id="073eb-224">Einer der in der <see cref="T:System.Security.Authentication.SslProtocols" />-Enumeration definierten Werte.</span><span class="sxs-lookup"><span data-stu-id="073eb-224">One of the values defined in the <see cref="T:System.Security.Authentication.SslProtocols" /> enumeration.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.PlatformNotSupportedException"><span data-ttu-id="073eb-225">Nur .NET Framework 4.7.1: Diese Eigenschaft ist nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="073eb-225">.NET Framework 4.7.1 only: This property is not implemented.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SupportsAutomaticDecompression">
      <MemberSignature Language="C#" Value="public virtual bool SupportsAutomaticDecompression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsAutomaticDecompression" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsAutomaticDecompression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsAutomaticDecompression { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsAutomaticDecompression : bool" Usage="System.Net.Http.HttpClientHandler.SupportsAutomaticDecompression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-226">Ruft einen Wert ab, der angibt, ob der Handler die automatische Dekomprimierung von Antwortinhalt unterstützt.</span><span class="sxs-lookup"><span data-stu-id="073eb-226">Gets a value that indicates whether the handler supports automatic response content decompression.</span></span></summary>
        <value><span data-ttu-id="073eb-227"><see langword="true" />, wenn der Handler die automatische Dekomprimierung von Antwortinhalten unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-227"><see langword="true" /> if the if the handler supports automatic response content decompression; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-228">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-228">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsProxy">
      <MemberSignature Language="C#" Value="public virtual bool SupportsProxy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsProxy { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsProxy : bool" Usage="System.Net.Http.HttpClientHandler.SupportsProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-229">Ruft einen Wert ab, der angibt, ob der Handler Proxyeinstellungen unterstützt.</span><span class="sxs-lookup"><span data-stu-id="073eb-229">Gets a value that indicates whether the handler supports proxy settings.</span></span></summary>
        <value><span data-ttu-id="073eb-230"><see langword="true" />, wenn der Handler Proxyeinstellungen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-230"><see langword="true" /> if the if the handler supports proxy settings; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-231">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-231">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsRedirectConfiguration">
      <MemberSignature Language="C#" Value="public virtual bool SupportsRedirectConfiguration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsRedirectConfiguration" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsRedirectConfiguration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsRedirectConfiguration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsRedirectConfiguration : bool" Usage="System.Net.Http.HttpClientHandler.SupportsRedirectConfiguration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-232">Ruft einen Wert ab, der angibt, ob der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="073eb-232">Gets a value that indicates whether the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties.</span></span></summary>
        <value><span data-ttu-id="073eb-233"><see langword="true" />, wenn der Handler Konfigurationseinstellungen für die Eigenschaften <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> und <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-233"><see langword="true" /> if the if the handler supports configuration settings for the <see cref="P:System.Net.Http.HttpClientHandler.AllowAutoRedirect" /> and <see cref="P:System.Net.Http.HttpClientHandler.MaxAutomaticRedirections" /> properties; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-234">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-234">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCookies">
      <MemberSignature Language="C#" Value="public bool UseCookies { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCookies" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCookies As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCookies { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCookies : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseCookies" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-235">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-235">Gets or sets a value that indicates whether the handler uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests.</span></span></summary>
        <value><span data-ttu-id="073eb-236"><see langword="true" />, wenn der Handler die <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" />-Eigenschaft zum Speichern von Servercookies und diese Cookies zum Senden von Anforderungen verwendet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-236"><see langword="true" /> if the if the handler supports uses the  <see cref="P:System.Net.Http.HttpClientHandler.CookieContainer" /> property  to store server cookies and uses these cookies when sending requests; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-237">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-237">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseDefaultCredentials">
      <MemberSignature Language="C#" Value="public bool UseDefaultCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseDefaultCredentials" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Property UseDefaultCredentials As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseDefaultCredentials { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseDefaultCredentials : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseDefaultCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-238">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob die Standardanmeldeinformationen mit den Anforderungen vom Handler gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="073eb-238">Gets or sets a value that controls whether default credentials are sent with requests by the handler.</span></span></summary>
        <value><span data-ttu-id="073eb-239"><see langword="true" />, wenn die Standardanmeldeinformationen verwendet werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-239"><see langword="true" /> if the default credentials are used; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-240">Standardwert: <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-240">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 <span data-ttu-id="073eb-241">Legen Sie diese Eigenschaft auf `true` fest, wenn Anforderungen des <xref:System.Net.Http.HttpClientHandler> Objekts, sofern vom Server angefordert, mithilfe der Anmelde Informationen des aktuell angemeldeten Benutzers authentifiziert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="073eb-241">Set this property to `true` when requests made by the <xref:System.Net.Http.HttpClientHandler> object should, if requested by the server, be authenticated using the credentials of the currently logged on user.</span></span> <span data-ttu-id="073eb-242">Bei Client Anwendungen ist dies das gewünschte Verhalten in den meisten Szenarien.</span><span class="sxs-lookup"><span data-stu-id="073eb-242">For client applications, this is the desired behavior in most scenarios.</span></span> <span data-ttu-id="073eb-243">Für Anwendungen der mittleren Ebene, z. b. ASP.NET-Anwendungen, legen Sie die <xref:System.Net.Http.HttpClientHandler.Credentials%2A>-Eigenschaft in der Regel auf die Anmelde Informationen des Clients fest, für den die Anforderung erfolgt ist, anstatt diese Eigenschaft zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="073eb-243">For middle-tier applications, such as ASP.NET applications, instead of using this property, you would typically set the <xref:System.Net.Http.HttpClientHandler.Credentials%2A> property to the credentials of the client on whose behalf the request is made.</span></span>

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseProxy">
      <MemberSignature Language="C#" Value="public bool UseProxy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseProxy" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberSignature Language="VB.NET" Value="Public Property UseProxy As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseProxy { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseProxy : bool with get, set" Usage="System.Net.Http.HttpClientHandler.UseProxy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="073eb-244">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob der Handler einen Proxy für Anforderungen verwendet.</span><span class="sxs-lookup"><span data-stu-id="073eb-244">Gets or sets a value that indicates whether the handler uses a proxy for requests.</span></span></summary>
        <value><span data-ttu-id="073eb-245"><see langword="true" />, wenn der Handler einen Proxy für Anforderungen verwenden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-245"><see langword="true" /> if the handler should use a proxy for requests; otherwise <see langword="false" />.</span></span> <span data-ttu-id="073eb-246">Standardwert: <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="073eb-246">The default value is <see langword="true" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
