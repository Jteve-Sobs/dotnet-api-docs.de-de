<Type Name="HttpContent" FullName="System.Net.Http.HttpContent">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bf93d18bbc8bad5ad87f5dca04d4843b55152e7b" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78820361" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpContent : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContent extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.HttpContent" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContent&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContent abstract : IDisposable" />
  <TypeSignature Language="F#" Value="type HttpContent = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="73195-101">Eine Basisklasse, die einen HTTP-Entitätstext und Inhaltsheader darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-101">A base class representing an HTTP entity body and content headers.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-102">Initialisiert eine neue Instanz der <see cref="T:System.Net.Http.HttpContent" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="73195-102">Initializes a new instance of the <see cref="T:System.Net.Http.HttpContent" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyToAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73195-103">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</span><span class="sxs-lookup"><span data-stu-id="73195-103">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-104">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-104">This operation does not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (stream As Stream) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream -&gt; System.Threading.Tasks.Task" Usage="httpContent.CopyToAsync stream" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="73195-105">Der Zieldatenstrom.</span><span class="sxs-lookup"><span data-stu-id="73195-105">The target stream.</span></span></param>
        <summary><span data-ttu-id="73195-106">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</span><span class="sxs-lookup"><span data-stu-id="73195-106">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="73195-107">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-107">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-108">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-108">This operation will not block.</span></span> <span data-ttu-id="73195-109">Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in das als `stream`-Parameter übergebenen Streamobjekt geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-109">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyToAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task CopyToAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task CopyToAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CopyToAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function CopyToAsync (stream As Stream, context As TransportContext) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ CopyToAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="member this.CopyToAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="httpContent.CopyToAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="73195-110">Der Zieldatenstrom.</span><span class="sxs-lookup"><span data-stu-id="73195-110">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="73195-111">Informationen über den Transport (z.B. Kanalbindungstoken).</span><span class="sxs-lookup"><span data-stu-id="73195-111">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="73195-112">Dieser Parameter kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="73195-112">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="73195-113">Serialisiert den HTTP-Inhalt in einen Bytedatenstrom und kopiert ihn in das als <paramref name="stream" />-Parameter bereitgestellte Datenstromobjekt.</span><span class="sxs-lookup"><span data-stu-id="73195-113">Serialize the HTTP content into a stream of bytes and copies it to the stream object provided as the <paramref name="stream" /> parameter.</span></span></summary>
        <returns><span data-ttu-id="73195-114">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-114">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-115">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-115">This operation will not block.</span></span> <span data-ttu-id="73195-116">Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in das als `stream`-Parameter übergebenen Streamobjekt geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-116">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been written to the stream object passed as the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateContentReadStreamAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;System.IO.Stream&gt; CreateContentReadStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; CreateContentReadStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.CreateContentReadStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentReadStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ CreateContentReadStreamAsync();" />
      <MemberSignature Language="F#" Value="abstract member CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;&#xA;override this.CreateContentReadStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpContent.CreateContentReadStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-117">Serialisiert den HTTP-Inhalt in einen Speicherdatenstrom als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-117">Serialize the HTTP content to a memory stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-118">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-118">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-119">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-119">This operation will not block.</span></span> <span data-ttu-id="73195-120">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in den Speicherstream geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-120">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written to the memory stream.</span></span>  
  
 <span data-ttu-id="73195-121">Sobald der Vorgang abgeschlossen ist, enthält die <xref:System.Threading.Tasks.Task%601.Result%2A>-Eigenschaft des zurückgegebenen Aufgaben Objekts den Arbeitsspeicherstream, der den HTTP-Inhalt darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-121">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the memory stream that represents the HTTP content.</span></span> <span data-ttu-id="73195-122">Der zurückgegebene Stream kann dann zum Lesen des Inhalts mithilfe verschiedener Stream-APIs verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="73195-122">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 <span data-ttu-id="73195-123">Die <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A>-Methode puffert den Inhalt in einen Speicherdaten Strom.</span><span class="sxs-lookup"><span data-stu-id="73195-123">The <xref:System.Net.Http.HttpContent.CreateContentReadStreamAsync%2A> method buffers the content to a memory stream.</span></span> <span data-ttu-id="73195-124">Abgeleitete Klassen können dieses Verhalten überschreiben, wenn die Inhalte besser als Stream abgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="73195-124">Derived classes can override this behavior if there is a better way to retrieve the content as stream.</span></span> <span data-ttu-id="73195-125">Ein Bytearray oder eine Zeichenfolge kann z. b. eine effizientere Methode verwenden, z. b. das umschließen eines schreibgeschützten <xref:System.IO.MemoryStream> um die Bytes oder Zeichenfolge.)</span><span class="sxs-lookup"><span data-stu-id="73195-125">For example, a byte array or a string could use a more efficient method way such as wrapping a read-only <xref:System.IO.MemoryStream> around the bytes or string.)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73195-126">Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="73195-126">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="httpContent.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-127">Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="73195-127">Releases the unmanaged resources and disposes of the managed resources used by the <see cref="T:System.Net.Http.HttpContent" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="httpContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="73195-128"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="73195-128"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="73195-129">Gibt die vom <see cref="T:System.Net.Http.HttpContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span><span class="sxs-lookup"><span data-stu-id="73195-129">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.HttpContent" /> and optionally disposes of the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-130">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der <xref:System.Object.Finalize%2A>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="73195-130">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="73195-131">`Dispose()` Ruft die geschützte `Dispose(Boolean)` Methode auf, wobei der `disposing`-Parameter auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="73195-131">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="73195-132"><xref:System.Object.Finalize%2A> ruft `Dispose` auf, bei dem `disposing` auf `false`festgelegt ist. Wenn der `disposing`-Parameter `true`ist, gibt diese Methode alle Ressourcen frei, die von verwalteten Objekten aufbewahrt werden, auf die dieser <xref:System.Net.Http.HttpContent> verweist.</span><span class="sxs-lookup"><span data-stu-id="73195-132"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.HttpContent> references.</span></span> <span data-ttu-id="73195-133">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="73195-133">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Headers">
      <MemberSignature Language="C#" Value="public System.Net.Http.Headers.HttpContentHeaders Headers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Http.Headers.HttpContentHeaders Headers" />
      <MemberSignature Language="DocId" Value="P:System.Net.Http.HttpContent.Headers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Headers As HttpContentHeaders" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Http::Headers::HttpContentHeaders ^ Headers { System::Net::Http::Headers::HttpContentHeaders ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Headers : System.Net.Http.Headers.HttpContentHeaders" Usage="System.Net.Http.HttpContent.Headers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Http.Headers.HttpContentHeaders</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="73195-134">Ruft die HTTP-Inhaltsheader gemäß Definition in RFC 2616 ab.</span><span class="sxs-lookup"><span data-stu-id="73195-134">Gets the HTTP content headers as defined in RFC 2616.</span></span></summary>
        <value><span data-ttu-id="73195-135">Die Inhaltsheader gemäß Definition in RFC 2616.</span><span class="sxs-lookup"><span data-stu-id="73195-135">The content headers as defined in RFC 2616.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="LoadIntoBufferAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73195-136">Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-136">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-137">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-137">This operation will not block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync();" />
      <MemberSignature Language="F#" Value="member this.LoadIntoBufferAsync : unit -&gt; System.Threading.Tasks.Task" Usage="httpContent.LoadIntoBufferAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-138">Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-138">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-139">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-139">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-140">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-140">This operation will not block.</span></span> <span data-ttu-id="73195-141">Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in den Speicherpuffer serialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-141">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="73195-142">Nachdem der Inhalt in einen Arbeitsspeicher Puffer serialisiert wurde, kopieren Aufrufe einer <xref:System.Net.Http.HttpContent.CopyToAsync%2A>-Methode den Inhalt des Speicherpuffers in den Zielstream.</span><span class="sxs-lookup"><span data-stu-id="73195-142">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadIntoBufferAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task LoadIntoBufferAsync (long maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task LoadIntoBufferAsync(int64 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.LoadIntoBufferAsync(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadIntoBufferAsync (maxBufferSize As Long) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ LoadIntoBufferAsync(long maxBufferSize);" />
      <MemberSignature Language="F#" Value="member this.LoadIntoBufferAsync : int64 -&gt; System.Threading.Tasks.Task" Usage="httpContent.LoadIntoBufferAsync maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize"><span data-ttu-id="73195-143">Die maximale Größe des zu verwendenden Puffers in Bytes.</span><span class="sxs-lookup"><span data-stu-id="73195-143">The maximum size, in bytes, of the buffer to use.</span></span></param>
        <summary><span data-ttu-id="73195-144">Serialisiert den HTTP-Inhalt in einen Arbeitsspeicherpuffer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-144">Serialize the HTTP content to a memory buffer as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-145">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-145">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-146">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-146">This operation will not block.</span></span> <span data-ttu-id="73195-147">Das zurückgegebene <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in den Speicherpuffer serialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-147">The returned <xref:System.Threading.Tasks.Task> object will complete after all of the content has been serialized to the memory buffer.</span></span>  
  
 <span data-ttu-id="73195-148">Nachdem der Inhalt in einen Arbeitsspeicher Puffer serialisiert wurde, kopieren Aufrufe einer <xref:System.Net.Http.HttpContent.CopyToAsync%2A>-Methode den Inhalt des Speicherpuffers in den Zielstream.</span><span class="sxs-lookup"><span data-stu-id="73195-148">After content is serialized to a memory buffer, calls to one of the  <xref:System.Net.Http.HttpContent.CopyToAsync%2A> methods will copy the content of the memory buffer to the target stream.</span></span>  
  
 <span data-ttu-id="73195-149">Wenn der Inhalt den Wert überschreitet, der im `maxBufferSize`-Parameter übergeben wird, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="73195-149">If the content exceeds the value  passed in the `maxBufferSize` parameter , an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsByteArrayAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;byte[]&gt; ReadAsByteArrayAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;unsigned int8[]&gt; ReadAsByteArrayAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsByteArrayAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsByteArrayAsync () As Task(Of Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;cli::array &lt;System::Byte&gt; ^&gt; ^ ReadAsByteArrayAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsByteArrayAsync : unit -&gt; System.Threading.Tasks.Task&lt;byte[]&gt;" Usage="httpContent.ReadAsByteArrayAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Byte[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-150">Serialisiert den HTTP-Inhalt in ein Bytearray als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-150">Serialize the HTTP content to a byte array as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-151">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-151">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-152">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-152">This operation will not block.</span></span> <span data-ttu-id="73195-153">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Inhalt als Bytearray geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-153">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a byte array.</span></span>  
  
 <span data-ttu-id="73195-154">Sobald der Vorgang abgeschlossen ist, enthält die <xref:System.Threading.Tasks.Task%601.Result%2A>-Eigenschaft des zurückgegebenen Aufgaben Objekts das Bytearray mit dem HTTP-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="73195-154">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the byte array with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; ReadAsStreamAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; ReadAsStreamAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStreamAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStreamAsync () As Task(Of Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::IO::Stream ^&gt; ^ ReadAsStreamAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsStreamAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="httpContent.ReadAsStreamAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-155">Serialisieren des HTTP-Inhalts und Zurückgeben eines Datenstroms, der den Inhalt darstellt, als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-155">Serialize the HTTP content and return a stream that represents the content as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-156">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-156">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-157">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-157">This operation will not block.</span></span> <span data-ttu-id="73195-158">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Stream, der den Inhalt darstellt, gelesen wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-158">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the stream that represents content has been read.</span></span>  
  
 <span data-ttu-id="73195-159">Sobald der Vorgang abgeschlossen ist, enthält die <xref:System.Threading.Tasks.Task%601.Result%2A>-Eigenschaft des zurückgegebenen Aufgaben Objekts den Datenstrom, der den HTTP-Inhalt darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-159">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the stream that represents the HTTP content.</span></span> <span data-ttu-id="73195-160">Der zurückgegebene Stream kann dann zum Lesen des Inhalts mithilfe verschiedener Stream-APIs verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="73195-160">The returned stream can then be used to read the content using various stream APIs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadAsStringAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;string&gt; ReadAsStringAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;string&gt; ReadAsStringAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.ReadAsStringAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsStringAsync () As Task(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::String ^&gt; ^ ReadAsStringAsync();" />
      <MemberSignature Language="F#" Value="member this.ReadAsStringAsync : unit -&gt; System.Threading.Tasks.Task&lt;string&gt;" Usage="httpContent.ReadAsStringAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73195-161">Serialisiert den HTTP-Inhalt in eine Zeichenfolge als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-161">Serialize the HTTP content to a string as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-162">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-162">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-163">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-163">This operation will not block.</span></span> <span data-ttu-id="73195-164">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Inhalt als Zeichenfolge geschrieben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-164">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been written as a string.</span></span>  
  
 <span data-ttu-id="73195-165">Sobald der Vorgang abgeschlossen ist, enthält die <xref:System.Threading.Tasks.Task%601.Result%2A>-Eigenschaft des zurückgegebenen Aufgaben Objekts die Zeichenfolge mit dem HTTP-Inhalt.</span><span class="sxs-lookup"><span data-stu-id="73195-165">Once the operation completes, the  <xref:System.Threading.Tasks.Task%601.Result%2A> property on the returned task object contains the string with the HTTP content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
      <MemberSignature Language="F#" Value="abstract member SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="httpContent.SerializeToStreamAsync (stream, context)" />
      <MemberSignature Language="C#" Value="protected internal abstract System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function SerializeToStreamAsync (stream As Stream, context As TransportContext) As Task" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream"><span data-ttu-id="73195-166">Der Zieldatenstrom.</span><span class="sxs-lookup"><span data-stu-id="73195-166">The target stream.</span></span></param>
        <param name="context"><span data-ttu-id="73195-167">Informationen über den Transport (z.B. Kanalbindungstoken).</span><span class="sxs-lookup"><span data-stu-id="73195-167">Information about the transport (channel binding token, for example).</span></span> <span data-ttu-id="73195-168">Dieser Parameter kann <see langword="null" /> sein.</span><span class="sxs-lookup"><span data-stu-id="73195-168">This parameter may be <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="73195-169">Serialisiert den HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73195-169">Serialize the HTTP content to a stream as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="73195-170">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="73195-170">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-171">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="73195-171">This operation will not block.</span></span> <span data-ttu-id="73195-172">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in das Stream-Objekt serialisiert wurde, das im `stream`-Parameter übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="73195-172">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the stream object passed in the `stream` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal abstract bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.HttpContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="abstract member TryComputeLength : int64 -&gt; bool" Usage="httpContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length"><span data-ttu-id="73195-173">Die Länge des HTTP-Inhalts in Bytes.</span><span class="sxs-lookup"><span data-stu-id="73195-173">The length in bytes of the HTTP content.</span></span></param>
        <summary><span data-ttu-id="73195-174">Bestimmt, ob der HTTP-Inhalt eine gültige Länge in Bytes hat.</span><span class="sxs-lookup"><span data-stu-id="73195-174">Determines whether the HTTP content has a valid length in bytes.</span></span></summary>
        <returns><span data-ttu-id="73195-175"><see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="73195-175"><see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73195-176">Die <xref:System.Net.Http.HttpContent.TryComputeLength%2A>-Methode gibt einem HTTP-Inhalt die Möglichkeit, die Inhalts Länge zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="73195-176">The <xref:System.Net.Http.HttpContent.TryComputeLength%2A> method gives a HTTP content the ability to calculate the content length.</span></span> <span data-ttu-id="73195-177">Dies ist nützlich für Inhaltstypen, die die Inhalts Länge problemlos berechnen können.</span><span class="sxs-lookup"><span data-stu-id="73195-177">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="73195-178">Wenn das Berechnen der Inhalts Länge nicht möglich oder teuer ist (wäre es erforderlich, dass das System den gesamten Inhalt puffert, wenn die Serialisierung aufwendig wäre oder das System viel Arbeitsspeicher zuordnen muss), kann diese Methode `false`zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="73195-178">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="73195-179">Wenn diese Methode `false`zurückgibt, bedeutet dies, dass entweder eine segmentierte Übertragung erforderlich ist oder der Inhalt gepuffert werden muss, bevor er an den Server gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="73195-179">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
