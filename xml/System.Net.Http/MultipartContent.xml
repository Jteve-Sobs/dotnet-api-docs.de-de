<Type Name="MultipartContent" FullName="System.Net.Http.MultipartContent">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="960938c22efcb0440bb6ce401f33933f4dd17ec6" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51318320" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MultipartContent : System.Net.Http.HttpContent, System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MultipartContent extends System.Net.Http.HttpContent implements class System.Collections.Generic.IEnumerable`1&lt;class System.Net.Http.HttpContent&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Http.MultipartContent" />
  <TypeSignature Language="VB.NET" Value="Public Class MultipartContent&#xA;Inherits HttpContent&#xA;Implements IEnumerable(Of HttpContent)" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultipartContent : System::Net::Http::HttpContent, System::Collections::Generic::IEnumerable&lt;System::Net::Http::HttpContent ^&gt;" />
  <TypeSignature Language="F#" Value="type MultipartContent = class&#xA;    inherit HttpContent&#xA;    interface seq&lt;HttpContent&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Http</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Net.Http.HttpContent</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Net.Http.HttpContent&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="80d77-101">Stellt eine Auflistung von <see cref="T:System.Net.Http.HttpContent" />-Objekten bereit, die mithilfe der multipart/\*-Inhaltstypspezifikation serialisiert werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="80d77-101">Provides a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80d77-102">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-102">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80d77-103">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-103">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent subtype" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype">
          <span data-ttu-id="80d77-104">Der Untertyp des mehrteiligen Inhalts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-104">The subtype of the multipart content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-105">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-105">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80d77-106">
            <paramref name="subtype" /> war <see langword="null" /> oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-106">The <paramref name="subtype" /> was <see langword="null" /> or contains only white space characters.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultipartContent (string subtype, string boundary);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string subtype, string boundary) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (subtype As String, boundary As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultipartContent(System::String ^ subtype, System::String ^ boundary);" />
      <MemberSignature Language="F#" Value="new System.Net.Http.MultipartContent : string * string -&gt; System.Net.Http.MultipartContent" Usage="new System.Net.Http.MultipartContent (subtype, boundary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="subtype" Type="System.String" />
        <Parameter Name="boundary" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="subtype">
          <span data-ttu-id="80d77-107">Der Untertyp des mehrteiligen Inhalts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-107">The subtype of the multipart content.</span>
          </span>
        </param>
        <param name="boundary">
          <span data-ttu-id="80d77-108">Die Trennungszeichenfolge für den mehrteiligen Inhalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-108">The boundary string for the multipart content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-109">Erstellt eine neue Instanz der <see cref="T:System.Net.Http.MultipartContent" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-109">Creates a new instance of the <see cref="T:System.Net.Http.MultipartContent" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="80d77-110">
            <paramref name="subtype" /> war <see langword="null" /> oder eine leere Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-110">The <paramref name="subtype" /> was <see langword="null" /> or an empty string.</span>
          </span>
          <span data-ttu-id="80d77-111">
            <paramref name="boundary" /> war <see langword="null" /> oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-111">The <paramref name="boundary" /> was <see langword="null" /> or contains only white space characters.</span>
          </span>
          <span data-ttu-id="80d77-112">- oder - </span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-112">-or-</span>
          </span>
          <span data-ttu-id="80d77-113">
            <paramref name="boundary" /> endet mit einem Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-113">The <paramref name="boundary" /> ends with a space character.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="80d77-114">
            <paramref name="boundary" /> war länger als 70.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-114">The length of the <paramref name="boundary" /> was greater than 70.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual void Add (System.Net.Http.HttpContent content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(class System.Net.Http.HttpContent content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Add(System.Net.Http.HttpContent)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Add (content As HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Net::Http::HttpContent ^ content);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Net.Http.HttpContent -&gt; unit&#xA;override this.Add : System.Net.Http.HttpContent -&gt; unit" Usage="multipartContent.Add content" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="content" Type="System.Net.Http.HttpContent" />
      </Parameters>
      <Docs>
        <param name="content">
          <span data-ttu-id="80d77-115">Der zur Auflistung hinzuzufügende HTTP-Inhalt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-115">The HTTP content to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-116">Fügen Sie Mehrfach-HTTP-Inhalt einer Sammlung von <see cref="T:System.Net.Http.HttpContent" />-Objekten hinzu, die unter Verwendung der multipart/\*-Inhaltstypspezifikation serialisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-116">Add multipart HTTP content to a collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80d77-117">
            <paramref name="content" /> war <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-117">The <paramref name="content" /> was <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="multipartContent.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="80d77-118">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben. <see langword="false" />, wenn ausschließlich nicht verwaltete Ressourcen freigegeben werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-118">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-119">Gibt die vom <see cref="T:System.Net.Http.MultipartContent" /> verwendeten, nicht verwalteten Ressourcen frei und verwirft optional auch die verwalteten Ressourcen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-119">Releases the unmanaged resources used by the <see cref="T:System.Net.Http.MultipartContent" /> and optionally disposes of the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80d77-120">Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="80d77-120">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="80d77-121">`Dispose()` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`.</span><span class="sxs-lookup"><span data-stu-id="80d77-121">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="80d77-122"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`. Wenn die `disposing` -Parameter ist `true`, gibt diese Methode alle Ressourcen frei, die für verwaltete Objekte, die dieses <xref:System.Net.Http.MultipartContent> Verweise.</span><span class="sxs-lookup"><span data-stu-id="80d77-122"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Http.MultipartContent> references.</span></span> <span data-ttu-id="80d77-123">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="80d77-123">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;class System.Net.Http.HttpContent&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of HttpContent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;System::Net::Http::HttpContent ^&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;" Usage="multipartContent.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Net.Http.HttpContent&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80d77-124">Gibt einen Enumerator zurück, der die Sammlung von <see cref="T:System.Net.Http.HttpContent" />-Objekten durchläuft, die mithilfe der Multipart/\*-Inhaltstypspezifikation serialisiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-124">Returns an enumerator that iterates through the collection of <see cref="T:System.Net.Http.HttpContent" /> objects that get serialized using the multipart/\* content type specification..</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80d77-125">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-125">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80d77-126">Die Foreach-Anweisung der C#-Sprache (For Each in Visual Basic) Blendet die Komplexität der Enumeratoren.</span><span class="sxs-lookup"><span data-stu-id="80d77-126">The foreach statement of the C# language (For Each in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="80d77-127">Aus diesem Grund empfiehlt es sich, mithilfe von Foreach anstatt direkte Bearbeitung des Enumerators.</span><span class="sxs-lookup"><span data-stu-id="80d77-127">Therefore, using foreach is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="80d77-128">Mit Enumeratoren können die Daten in der Auflistung zwar gelesen, jedoch nicht zum Ändern der zugrunde liegenden Auflistung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="80d77-128">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="80d77-129">Zu Beginn wird der Enumerator vor das erste Element in der Auflistung positioniert.</span><span class="sxs-lookup"><span data-stu-id="80d77-129">Initially, the enumerator is positioned before the first element in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToStreamAsync">
      <MemberSignature Language="C#" Value="protected internal override System.Threading.Tasks.Task SerializeToStreamAsync (System.IO.Stream stream, System.Net.TransportContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Threading.Tasks.Task SerializeToStreamAsync(class System.IO.Stream stream, class System.Net.TransportContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.SerializeToStreamAsync(System.IO.Stream,System.Net.TransportContext)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Threading::Tasks::Task ^ SerializeToStreamAsync(System::IO::Stream ^ stream, System::Net::TransportContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.SerializeToStreamAsync : System.IO.Stream * System.Net.TransportContext -&gt; System.Threading.Tasks.Task" Usage="multipartContent.SerializeToStreamAsync (stream, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="context" Type="System.Net.TransportContext" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="80d77-130">Der Zieldatenstrom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-130">The target stream.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="80d77-131">Informationen über den Transport (z.B. Kanalbindungstoken).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-131">Information about the transport (channel binding token, for example).</span>
          </span>
          <span data-ttu-id="80d77-132">Dieser Parameter kann <see langword="null" /> sein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-132">This parameter may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-133">Serialisiert den mehrteiligen HTTP-Inhalt in einen Datenstrom als asynchroner Vorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-133">Serialize the multipart HTTP content to a stream as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80d77-134">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-134">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80d77-135">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="80d77-135">This operation will not block.</span></span> <span data-ttu-id="80d77-136">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem der gesamte Inhalt in den Zielstream serialisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="80d77-136">The returned <xref:System.Threading.Tasks.Task%601> object will complete after all of the content has been serialized to the target stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80d77-137">Die explizite Implementierung der <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" />-Methode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-137">The explicit implementation of the <see cref="M:System.Net.Http.MultipartContent.GetEnumerator" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80d77-138">Ein Objekt, das zum Durchlaufen der Auflistung verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-138">An object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryComputeLength">
      <MemberSignature Language="C#" Value="protected internal override bool TryComputeLength (out long length);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool TryComputeLength([out] int64&amp; length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Http.MultipartContent.TryComputeLength(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function TryComputeLength (ByRef length As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool TryComputeLength([Runtime::InteropServices::Out] long % length);" />
      <MemberSignature Language="F#" Value="override this.TryComputeLength :  -&gt; bool" Usage="multipartContent.TryComputeLength length" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Http</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="length" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="length">
          <span data-ttu-id="80d77-139">Die Länge des HTTP-Inhalts in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-139">The length in bytes of the HHTP content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80d77-140">Bestimmt, ob der mehrteilige HTTP-Inhalt eine gültige Länge in Bytes hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-140">Determines whether the HTTP multipart content has a valid length in bytes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80d77-141">
            <see langword="true" />, wenn <paramref name="length" /> eine gültige Länge ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80d77-141">
              <see langword="true" /> if <paramref name="length" /> is a valid length; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80d77-142">Die <xref:System.Net.Http.MultipartContent.TryComputeLength%2A> Methode ermöglicht mehrteilige HTTP-Inhalt, der Länge des Inhalte zu berechnen.</span><span class="sxs-lookup"><span data-stu-id="80d77-142">The <xref:System.Net.Http.MultipartContent.TryComputeLength%2A> method gives HTTP multipart content the ability to calculate the content length.</span></span> <span data-ttu-id="80d77-143">Dies ist nützlich für Inhaltstypen, die ganz einfach berechnen, die Länge des Inhalte sind.</span><span class="sxs-lookup"><span data-stu-id="80d77-143">This is useful for content types which are able to easily calculate the content length.</span></span> <span data-ttu-id="80d77-144">Wenn computing die Inhaltslänge ist nicht möglich oder teure (ist erforderlich, das System, den gesamten Inhalt zu Puffern, in dem die Serialisierung teuer sein oder muss das System zu viel Arbeitsspeicher belegen würde), die diese Methode zurückgeben kann `false`.</span><span class="sxs-lookup"><span data-stu-id="80d77-144">If computing the content length is not possible or expensive (would require the system to buffer the whole content where the serialization would be expensive or require the system to allocate a lot of memory), this method can return `false`.</span></span> <span data-ttu-id="80d77-145">Wenn diese Methode zurückgibt `false`, dies bedeutet, dass segmentierter erforderlich ist, oder der Inhalt muss vor dem Senden an den Server gepuffert.</span><span class="sxs-lookup"><span data-stu-id="80d77-145">If this method returns `false`, this implies that either chunked transfer is needed or the content must get buffered before being sent to the server.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>