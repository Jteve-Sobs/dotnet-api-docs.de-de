<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="13ec456e1bf4898d349788b75cd207cb9bdba07c" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69256687" /></Metadata><TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Passt eine Webseite für einen bestimmten Browser an und stellt die Basisklasse bereit, die von allen Seitenadaptern direkt oder indirekt geerbt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter> -Klasse ist eine abstrakte Klasse, die eine Webseite für eine bestimmte Browser Klasse anpasst, die durch die Markup Sprache definiert ist, die der Browser verwendet (z. b. html oder XHTML). Ein Großteil der Anpassbarkeit im Renderingverhalten kann in den spezialisierten texwriter-Klassen gekapselt werden, die von der <xref:System.Web.UI.HtmlTextWriter> -Klasse abgeleitet werden, sodass es nicht immer erforderlich ist, einen Seiten Adapter bereitzustellen.  
  
 Die meisten Member abgeleiteter Seiten Adapter werden von <xref:System.Web.UI.Page> der-Klasse oder von Steuerelement Adaptern aufgerufen. Zunächst erkennen die <xref:System.Web.UI.Page> Klassen-oder Steuerelement Adapter, ob der abgeleitete Seiten Adapter vorhanden ist, und dann den Member aufzurufen oder die Funktionalität bereitzustellen, wenn der Seiten Adapter nicht vorhanden ist.  
  
 Die Member der <xref:System.Web.UI.Adapters.PageAdapter> -Klasse stellen die folgende Funktionalität bereit:  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> Eigenschaften <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> und definieren zusätzliche HTTP-Header und `GET` http `POST` -und-Parameter, die verwendet werden können, um das Zwischenspeichern zu verändern. Sie werden während der Cache Initialisierung der <xref:System.Web.UI.Page> -Klasse aufgerufen.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> -Methode gibt ein-Objekt zurück, das verwendet werden kann, um die kombinierte Ansichts-und Steuerelement Zustände der Seite beizubehalten. Auf die Eigenschaft wird von <xref:System.Web.UI.Page.PageStatePersister%2A> der-Eigenschaft verwiesen, wenn ein abgeleiteter Seiten Adapter vorhanden ist.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Methode stellt ein DHTML-Code Fragment bereit, das verwendet werden kann, um auf Formulare in Skripts zu verweisen.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> -Methode gibt eine Auflistung der Post Back Variablen zurück, wenn sich die Seite im Postback befindet. Sie wird von der .NET Framework anstelle der <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> -Methode aufgerufen, wenn ein abgeleiteter Seiten Adapter vorhanden ist.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> - <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> Methode und die-Methode werden von Steuerelement Adaptern zum Rendering von Hyperlinks verwendet, wenn ein abgeleiteter Seiten Adapter vorhanden  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> -Methode rendert ein Hyperlink oder Postback-Clienttag, das das Formular senden kann.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> - <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> Methode und die-Methode werden von Options Adaptern von Options <xref:System.Web.UI.WebControls.RadioButton> Feldern verwendet, um auf die anderen-Steuerelemente in einer Optionsfeld Gruppe  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> -Eigenschaft ermöglicht den Zugriff auf den kombinierten Steuerelement-und <xref:System.Web.UI.Page> Ansichts Zustand des `ClientState` -Objekts über <xref:System.Web.UI.Page> die interne-Eigenschaft der-Klasse.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> -Methode wird von Steuerelement Adaptern verwendet, um eine gerätespezifische Text Transformation auszuführen.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse mit `CustomPageAdapter` dem Namen <xref:System.Web.UI.Adapters.PageAdapter> aus der-Klasse <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> abgeleitet und die-Methode überschrieben wird. Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode fügt einem Hyperlink `src` ein Attribut mit dem Namen hinzu, das einen Verweis auf die aktuelle Seite enthält. Alle Links, die auf den Seiten `CustomPageAdapter` gerendert werden, `src` an die angefügt ist, haben das  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Adapters.PageAdapter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der .NET Framework erstellt diesen Adapter intern, wenn er die entsprechende <xref:System.Web.UI.Page> Klasse oder abgeleitete Klasse erstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste zusätzlicher HTTP-Header ab, von denen die Zwischenspeicherung für die Webseite geändert wird, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> mit einer Liste von HTTP-Headern, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entitäten im Web, in denen Webseiten zwischengespeichert werden, werden basierend auf den HTTP-Headern und anderen Faktoren in mehreren Versionen zwischengespeichert. Beispielsweise wird eine Version für jede Sprache, in der eine Seite generiert wird, in der Regel auf der `Accept-Language` Grundlage des-HTTP-Headers zwischengespeichert.  
  
 Für bestimmte Browser kann es erforderlich sein, das Zwischenspeichern zusätzlich zu den Headern, die das Ziel unabhängige Caching steuern, von HTTP-Headern zu verändern. Beispielsweise kann es erforderlich sein, unterschiedliche Versionen einer Seite für verschiedene Bildschirmgrößen zwischenzuspeichern.  
  
 Die von der <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> -Eigenschaft zurückgegebenen Header Namen werden der Liste der Header in dem `Vary` HTTP-Header hinzugefügt, der an den Client Browser gesendet wird.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> -Eigenschaft überschreiben, um eine Liste der zusätzlichen Header zurückzugeben, um das Ziel spezifische Caching zu steuern. Die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> Basis Eigenschaft gibt <see langword="null" />zurück.</para></block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/5032122d-221f-4fed-a5a7-90011f5f88fd">Vorgehensweise: Cache Versionen einer Seite auf der Grundlage von HTTP-Headern</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste zusätzlicher Parameter von HTTP GET- und HTTP POST-Anforderungen ab, von denen die Zwischenspeicherung für die Webseite geändert wird, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> mit einer Liste der GET- und POST-Parameter, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei Entitäten im Web, in denen Webseiten zwischengespeichert werden, werden mehrere Versionen basierend auf den Anforderungsparametern zwischengespeichert. Beispielsweise würde eine Version für jeden Speicherort innerhalb einer Einzelhandelskette, für den eine Seite generiert werden kann, in der Regel basierend auf dem Parameternamen (z `StoreID`. b.) zwischengespeichert werden.  
  
 Für bestimmte Browser kann es erforderlich sein, das Caching nach Get-oder Post-Parametern zu verändern, zusätzlich zu den Parametern, die das Ziel unabhängige Caching steuern. Beispielsweise kann es erforderlich sein, unterschiedliche Versionen einer Seite für verschiedene Mobil Telefondienstanbieter zwischenzuspeichern.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> -Eigenschaft überschreiben, um eine Liste der zusätzlichen GET-oder Post-Parameter zurückzugeben, um das Ziel spezifische Caching zu steuern. Die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> Basis Methode gibt <see langword="null" />zurück.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/a504b287-c8d2-4838-9817-3ffee416fec4">Vorgehensweise: Cache Versionen einer Seite basierend auf Parametern</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine codierte Zeichenfolge mit den Daten zum Ansichts- und Steuerelementzustand der Webseite ab, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Ein codierter <see cref="T:System.String" /> mit dem kombinierten Ansichts- und Steuerelementzustand der Steuerelemente auf der zugeordneten <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> -Eigenschaft ermöglicht den Zugriff auf `ClientState` die interne- <xref:System.Web.UI.Page> Eigenschaft der-Klasse.  
  
 Ansichts Zustandsdaten, die <xref:System.Web.UI.PageStatePersister> vom-Objekt in `ClientState` der internen <xref:System.Web.UI.Page> -Eigenschaft von gespeichert werden, werden immer im ausgeblendeten Feld auf der Webseite gespeichert.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die-Eigenschaft nicht überschreiben, da dies nicht <see langword="virtual" />der <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> Fall ist. Um das Verhalten von <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> in einer abgeleiteten Klasse zu ändern, implementieren Sie eine neue <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> Eigenschaft <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> , die auf die-Eigenschaft der Basisklasse verweist.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">Seiten Adapter und Ansichts Zustand</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.net State Management (Übersicht)</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob gerade ein Postback der Webseite ausgeführt wird und gibt eine Name-Wert-Auflistung der Postbackvariablen zurück.</summary>
        <returns>Eine <see cref="T:System.Collections.Specialized.NameValueCollection" /> der Postbackvariablen, wenn zutreffend, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> -Methode gibt eine der folgenden Auflistungen zurück:  
  
-   Formularvariablen, wenn die HTTP-Datenübertragungsmethode `POST`den Wert hat.  
  
-   Abfrage Zeichen folgen Variablen, wenn die HTTP `GET`-Methode ist.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> -Methode überschreiben, um die Ziel spezifische Behandlung der Auflistung von Postbackvariablen bereitzustellen.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Name/Wert-Datensammlung zurück, die der Seite mithilfe eines POST- oder GET-Befehls gesendet wurde, ohne bei der Anforderung eine ASP.NET-Anforderungsvalidierung durchzuführen.</summary>
        <returns>Die unbestätigten Formulardaten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UnvalidatedRequestValues>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Ein <see cref="T:System.String" />, der die Client-ID des gesendeten Formulars enthält.</param>
        <summary>Gibt ein DHTML-Codefragment zurück, mit dem der Clientbrowser auf das Formular auf der Seite verweisen kann, das gesendet wurde.</summary>
        <returns>Ein <see cref="T:System.String" /> mit einem Verweis auf das gesendete Formular auf der Seite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> -Methode stellt einen DHTML-Verweis auf das Post Back Formular bereit. Das Code Fragment weist das folgende Format auf:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> -Methode überschreiben, wenn das Markup für den Browser, der vom Adapter unterstützt wird, ein anderes Format für die Post Back Formular Referenz erfordert. Beispielsweise erfordert der von den PocketPC-Browsern verwendete HTML 3,2-Standard das folgende Format: 
 <c>Dokument.</c><paramref name="formID" /></para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Ein <see cref="T:System.String" />, der den Namen der abzurufenden <see cref="T:System.Web.UI.WebControls.RadioButton" />-Gruppe darstellt.</param>
        <summary>Ruft eine Auflistung der von <paramref name="groupName" /> angegebenen Optionsfeldsteuerelemente ab.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" /> der <see cref="T:System.Web.UI.WebControls.RadioButton" />-Steuerelemente, aus denen <paramref name="groupName" /> besteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Steuerelement Adapter für options Felder <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> verwenden <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> die-Methode und die <xref:System.Web.UI.WebControls.RadioButton> -Methode, um auf die anderen Steuerelemente in der Gruppe  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Objekt zurück, das von der Webseite zum Beibehalten von Steuerelement- und Ansichtszustand verwendet wird.</summary>
        <returns>Ein von <see cref="T:System.Web.UI.PageStatePersister" /> abgeleitetes Objekt, das das Erstellen und Extrahieren des kombinierten Steuerelement- und Ansichtszustands für <see cref="T:System.Web.UI.Page" /> unterstützt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Page.PageStatePersister%2A> -Eigenschaft verwendet <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> die-Methode, um das von der <xref:System.Web.UI.PageStatePersister> -Klasse abgeleitete Objekt zurückzugeben, das die kombinierten Steuerelement-und Ansichts Zustände für die Seite bildet und extrahiert. Wenn kein abgeleiteter Seiten Adapter an die Seite angefügt ist <xref:System.Web.UI.HiddenFieldPageStatePersister> , wird ein-Objekt verwendet, um den Zustand in einem ausgeblendeten Feld auf der Seite beizubehalten.  
  
|Linktyp|Resultierende Verknüpfung|  
|---------------|--------------------|  
|Code Entitäts Referenz, CER|<xref:System.Char.ToString%2A>|  
|Qualifizierte Code Entitäts Referenz, cerq|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Code Entitäts Verweis spezifisch, CER|<xref:System.Char.ToString%28System.Char%29>|  
|Qualifizierte spezifische Code Entitäts Referenz, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Ansichts Zustandsdaten, die <see cref="T:System.Web.UI.PageStatePersister" /> vom-Objekt in <see langword="ClientState" /> der internen- <see cref="T:System.Web.UI.Page" /> Eigenschaft von gespeichert werden, werden immer im ausgeblendeten Feld auf der Webseite gespeichert.</para></block>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> -Methode überschreiben, um einen anderen abgeleiteten Seiten Zustands-persierer zurückzugeben, wenn es nicht möglich ist, den kombinierten Zustand in einem ausgeblendeten Feld beizubehalten (z. b. aufgrund von eingeschränkten Ressourcen).  
  
Die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> -Basisklasse gibt <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> ein-Objekt zurück. Sie können die <see cref="T:System.Web.UI.SessionPageStatePersister" /> -Klasse verwenden, um den Seiten Status im Sitzungszustand beizubehalten.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">Der der Auflistung hinzuzufügende <see cref="T:System.Web.UI.WebControls.RadioButton" />.</param>
        <summary>Fügt der Auflistung für eine angegebene Optionsfeldgruppe ein Optionsfeldsteuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter> -Klasse verwendet <xref:System.Collections.Specialized.ListDictionary> ein-Objekt, um eine Liste von Optionsfeld Gruppen beizubehalten. Jedes Element in <xref:System.Collections.Specialized.ListDictionary> ist eine Auflistung <xref:System.Web.UI.WebControls.RadioButton> der Steuerelemente in einer Optionsfeld Gruppe. Die <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> -Methode fügt <xref:System.Web.UI.WebControls.RadioButton> der entsprechenden Auflistung ein Steuerelement hinzu, erstellt die Auflistung, wenn Sie noch nicht vorhanden ist <xref:System.Collections.Specialized.ListDictionary> , und erstellt, wenn es <xref:System.Web.UI.WebControls.RadioButton> keine zuvor registrierten Steuerelemente gibt.  
  
 Options Adapter für options Felder verwenden <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> die <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> Methoden und, um auf <xref:System.Web.UI.WebControls.RadioButton> die anderen Steuerelemente in einer Optionsfeld Gruppe zu verweisen.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt ein öffnendes Linktag in den Antwortstream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="targetUrl">Der <see cref="T:System.String" />-Wert mit der Ziel-URL des Links.</param>
        <param name="encodeUrl"><see langword="true" />, um den Ausgabestream mit <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> zu codieren, andernfalls <see langword="false" />.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <summary>Schreibt ein öffnendes Linktag, das die Ziel-URL enthält, in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode schreibt ein öffnendes Hyperlink-Tag. Wenn `writer`den Wert hat ,hatdiesesTagdasfolgendeFormat:<xref:System.Web.UI.HtmlTextWriter>  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse mit `CustomPageAdapter` dem Namen <xref:System.Web.UI.Adapters.PageAdapter> aus der-Klasse <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> abgeleitet und die-Methode überschrieben wird. Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode fügt einem Hyperlink `src` ein Attribut mit dem Namen hinzu, das einen Verweis auf die aktuelle Seite enthält. Alle Links, die auf den Seiten `CustomPageAdapter` gerendert werden, `src` an die angefügt ist, haben das  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> -Methode überschreiben, um ein anderes Format für ein öffnendes Hyperlink-Tag zu schreiben oder zusätzliche Tagattribute zu schreiben. Beispielsweise schreibt die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> Basis Methode kein Attribut für. <paramref name="softkeyLabel" /></para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="targetUrl">Der <see cref="T:System.String" />-Wert mit der Ziel-URL des Links.</param>
        <param name="encodeUrl"><see langword="true" />, um den Ausgabestream mit <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> zu codieren, andernfalls <see langword="false" />.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="accessKey">Der dem <see langword="accessKey" />-Attribut des zu erstellenden Links zuzuweisende <see cref="T:System.String" />-Wert.</param>
        <summary>Schreibt ein öffnendes Linktag mit der Ziel-URL sowie eine Zugriffstaste in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode schreibt ein öffnendes Hyperlink-Tag. Wenn `writer` ein<xref:System.Web.UI.HtmlTextWriter> -Objekt ist, hat dieses Tag das folgende Format:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse mit `CustomPageAdapter` dem Namen <xref:System.Web.UI.Adapters.PageAdapter> aus der-Klasse <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> abgeleitet und die-Methode überschrieben wird. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A>Fügt einem Hyperlink, `src` der einen Verweis auf die aktuelle Seite enthält, ein Attribut mit dem Namen hinzu. Alle Links, die auf den Seiten `CustomPageAdapter` gerendert werden, `src` an die angefügt ist, haben das  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="accessKey" /> ist länger als 1 Zeichen.</exception>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> -Methode überschreiben, um ein anderes Format für ein öffnendes Hyperlink-Tag zu schreiben oder zusätzliche Tagattribute zu schreiben. Beispielsweise schreibt die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> Basis Methode kein Attribut für. <paramref name="softkeyLabel" /></para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <summary>Schreibt ein schließendes Linktag in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> -Methode schreibt ein Schließ Endes Hyperlink-Tag. Wenn der TextWriter ein <xref:System.Web.UI.HtmlTextWriter> Objekt ist, hat dieses Tag das folgende Format:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die-Methode und die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> -Methode überschreiben, wenn ein anderes Hyperlink- <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> Format gerendert werden muss.</para></block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt ein Postbackereignis, einschließlich aller erforderlichen Argumente, als Link in den Antwortstream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten und ggf. verschlüsselten Ansichtszustands sowie des Ereignisziels und -arguments, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> -Methode schreibt ein Post Back Ereignis als einen Skript losen Hyperlink.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> -Methode überschreiben, wenn ein anderes Format für das Postback-Ereignis Hyperlink erforderlich ist oder der Browser andere besondere Anforderungen hat. Beispielsweise ist es für einige Browser erforderlich, dass der Hyperlink-Text nicht leer ist, wenn der Link zum Rendering gehört. Sie können auch über <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> schreiben, wenn eingeschränkte Ressourcen den Ansichts Zustand nicht als URL-Parameter einschließen. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Basis Methode schreibt kein Attribut für <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <param name="postUrl">Der <see cref="T:System.String" />-Wert mit der URL-Zielseite des Postbacks.</param>
        <param name="accessKey">Der <see cref="T:System.String" />-Wert, mit dem die Zuweisung zum <see langword="accessKey" />-Attribut des erstellten Links erfolgt.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten und ggf. verschlüsselten Ansichtszustands, eines Ereignisziels und -arguments, eines Parameters für die vorherige Seite und einer Zugriffstaste, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> -Methode schreibt ein Post Back Ereignis als einen Skript losen Hyperlink, einschließlich des möglicherweise <xref:System.Web.HttpUtility.UrlEncode%2A> segmentierten `__EVENTTARGET=target`Ansichts `__PREVIOUSPAGE=currentFilePath` Zustands,, `__EVENTARGUMENT=argument`, `accessKey="accessKey"` Parameter und eines Attributs.  
  
 Der Ansichts Zustand wird verschlüsselt `enableViewStateMac` , wenn das-Attribut des [pages-Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) - `true`Konfigurations Element auf festgelegt ist.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> -Methode überschreiben, wenn ein anderes Format für das Postback-Ereignis Hyperlink erforderlich ist oder der Browser andere besondere Anforderungen hat. Beispielsweise ist es für einige Browser erforderlich, dass der Hyperlink-Text nicht leer ist, wenn der Link zum Rendering gehört. Sie können auch über <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> schreiben, wenn eingeschränkte Ressourcen den Ansichts Zustand nicht als URL-Parameter einschließen. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Basis Methode schreibt kein Attribut für <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <param name="postUrl">Der <see cref="T:System.String" />-Wert mit der URL-Zielseite des Postbacks.</param>
        <param name="accessKey">Der dem <see langword="accessKey" />-Attribut des erstellten Links zuzuweisende <see cref="T:System.String" />-Wert.</param>
        <param name="encode"><see langword="true" />, um als Trennzeichen für den URL-Parameter <c>&amp;amp;</c> zu verwenden. <see langword="false" />, um <c>&amp;</c> zu verwenden.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten Ansichtszustands, eines Ereignisziels und -arguments, eines Parameters für die vorherige Seite und einer Zugriffstaste, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> -Methode schreibt ein Post Back Ereignis als einen Skript losen Hyperlink, einschließlich des möglicherweise <xref:System.Web.HttpUtility.UrlEncode%2A> segmentierten `__EVENTTARGET=target`Ansichts `__PREVIOUSPAGE=currentFilePath` Zustands,, `__EVENTARGUMENT=argument`, `accessKey="accessKey"` Parameter und eines Attributs.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> -Methode überschreiben, wenn ein anderes Format für das Postback-Ereignis Hyperlink erforderlich ist oder der Browser andere besondere Anforderungen hat. Beispielsweise ist es für einige Browser erforderlich, dass der Hyperlink-Text nicht leer ist, wenn der Link zum Rendering gehört. Sie können auch über <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> schreiben, wenn eingeschränkte Ressourcen den Ansichts Zustand nicht als URL-Parameter einschließen. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Basis Methode schreibt kein Attribut für <paramref name="softkeyLabel" />.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> mit dem umzuwandelnden Text.</param>
        <summary>Wandelt Text für den Zielbrowser um.</summary>
        <returns>Ein <see cref="T:System.String" />, der den umzuwandelnden Text enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> -Methode kann z. b. verwendet werden, um Tabstopp`\t`Zeichen () in Zeilen`\n`Umbrüche () umzuwandeln.  
  
 Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Basis Methode gibt `text` unverändert zurück.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn Sie von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse erben, können Sie überschreiben <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> , wenn ein bestimmtes Markup über ein Konstrukt mit einer anderen Form als Standard-HTML verfügt. Wenn ein Browser z. b. einen anderen Bezeichner für ein Tag benötigt, als in HTML verwendet werden <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> , kann die Methode überschrieben werden, um das Tag zu finden und zu ändern.</para></block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>
