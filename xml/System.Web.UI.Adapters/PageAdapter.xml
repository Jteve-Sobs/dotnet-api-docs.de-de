<Type Name="PageAdapter" FullName="System.Web.UI.Adapters.PageAdapter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="77c252f39ba8b9b12439d1bf1e6920e8ac38c877" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51938055" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PageAdapter : System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PageAdapter extends System.Web.UI.Adapters.ControlAdapter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Adapters.PageAdapter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PageAdapter&#xA;Inherits ControlAdapter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAdapter abstract : System::Web::UI::Adapters::ControlAdapter" />
  <TypeSignature Language="F#" Value="type PageAdapter = class&#xA;    inherit ControlAdapter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Adapters.ControlAdapter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Passt eine Webseite für einen bestimmten Browser an und stellt die Basisklasse bereit, die von allen Seitenadaptern direkt oder indirekt geerbt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter> Klasse ist eine abstrakte Klasse, die eine Webseite für eine bestimmte Klasse von Browsern, definiert durch die Markupsprache, die der Browser verwendet (z. B. HTML oder XHTML) anpasst. Ein Großteil der Renderingverhaltens kann gekapselt werden, in die von abgeleiteten Klassen spezialisierte Textvorlagen-Writer die <xref:System.Web.UI.HtmlTextWriter> Klasse, sodass es nicht immer notwendig, einen Seitenadapter.  
  
 Die meisten Member abgeleitete Seitenadapter heißen aus der <xref:System.Web.UI.Page> Klasse oder aus den Steuerelementadapter. Zunächst wird die <xref:System.Web.UI.Page> Steuerelementadapter oder Klasse erkennen, ob die abgeleitete Seitenadapter vorhanden und rufen Sie das Element ein, oder stellen Sie die Funktionalität bereit, wenn der Seitenadapter nicht vorhanden ist.  
  
 Die Mitglieder der <xref:System.Web.UI.Adapters.PageAdapter> Klasse die folgenden Funktionen enthalten:  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> und <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams%2A> Eigenschaften zu definieren, zusätzlichen HTTP-Header und HTTP- `GET` und `POST` Parameter, die verwendet werden können, um Zwischenspeicherung zu variieren. Sie werden aufgerufen, während der Initialisierung des Caches aus der <xref:System.Web.UI.Page> Klasse.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> Methode gibt ein Objekt, das mit dem kombinierten Ansichts- und Steuerelementzustand der Seite beibehalten werden kann. Darauf verwiesen wird, aus der <xref:System.Web.UI.Page.PageStatePersister%2A> Eigenschaft, wenn ein abgeleitete Seitenadapter vorhanden ist.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Methode stellt ein DHTML-Codefragment, die auf die Formulare in Skripts verwendet werden kann.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Methode gibt eine Auflistung der Postbackvariablen zurück, wenn die Seite im Postback ist. Durch Aufruf von .NET Framework statt der <xref:System.Web.UI.Page.DeterminePostBackMode%2A?displayProperty=nameWithType> Methode, wenn ein abgeleitete Seitenadapter vorhanden ist.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> und <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> Methoden werden von Steuerelementadapter verwendet, um Links zu rendern, wenn ein abgeleitete Seitenadapter vorhanden ist.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> -Methode rendert einen Link oder ein postback Clienttag, das das Formular übermitteln kann.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> und <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> Methoden werden von Optionsfeld-Steuerelementadapter verwendet, um auf den anderen verweisen <xref:System.Web.UI.WebControls.RadioButton> Steuerelemente in eine Gruppe von Optionsfeldern.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> Eigenschaft bietet Zugriff auf die kombinierten Steuerelement- und Ansichtszustands der <xref:System.Web.UI.Page> Objekt über die interne `ClientState` Eigenschaft der <xref:System.Web.UI.Page> Klasse.  
  
-   Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Methode wird von Steuerelementadapter gerätespezifischen TextTransformation ausführen verwendet.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die mit dem Namen abgeleitet `CustomPageAdapter` aus der <xref:System.Web.UI.Adapters.PageAdapter> Klasse, und überschreiben die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Methode. Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Methode fügt ein Attribut namens `src` zu einem Hyperlink, der einen Verweis auf die aktuelle Seite enthält. Alle Hyperlinks auf Seiten, der gerendert werden `CustomPageAdapter` angefügt haben die `src` Attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PageAdapter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PageAdapter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.Adapters.PageAdapter" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die .NET Framework intern dieser Adapter beim Erstellen der entsprechenden <xref:System.Web.UI.Page> Klasse oder abgeleitete Klasse.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByHeaders">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByHeaders { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByHeaders" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByHeaders As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByHeaders { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByHeaders : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste zusätzlicher HTTP-Header ab, von denen die Zwischenspeicherung für die Webseite geändert wird, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> mit einer Liste von HTTP-Headern, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entitäten im Web, die Webseiten zwischenspeichern zwischenspeichern, mehrere Versionen, die basierend auf der HTTP-Header und anderen Faktoren. Z. B. eine Version für jede Sprache, in dem eine Seite generiert wird, für gewöhnlich zwischengespeichert wird, auf Grundlage der `Accept-Language` HTTP-Header.  
  
 Für bestimmte Browser kann es notwendig, variieren die Zwischenspeicherung von HTTP-Header, zusätzlich zu den Headern dieser Steuerelement Ziel unabhängigen Zwischenspeichern sein. Beispielsweise können sie verschiedene Versionen einer Seite für verschiedene Bildschirmgrößen zwischenzuspeichern erforderlich.  
  
 Die Headernamen zurückgegebenes der <xref:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders%2A> Eigenschaft zur Liste der Header hinzugefügt werden, auf die `Vary` HTTP-Header, die an den Clientbrowser gesendet.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> Eigenschaft, um eine Liste der zusätzlichen Header zum zielspezifische Zwischenspeicherung zurückzugeben. Die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByHeaders" /> Basis-Eigenschaft gibt <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.HttpCacheVaryByHeaders" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByHeaders" />
        <altmember cref="T:System.Web.UI.Page" />
        <related type="Article" href="https://msdn.microsoft.com/library/5032122d-221f-4fed-a5a7-90011f5f88fd">Vorgehensweise: Zwischenspeichern von Versionen einer Seite, die basierend auf HTTP-Header</related>
      </Docs>
    </Member>
    <Member MemberName="CacheVaryByParams">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.StringCollection CacheVaryByParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection CacheVaryByParams" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CacheVaryByParams As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Specialized::StringCollection ^ CacheVaryByParams { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheVaryByParams : System.Collections.Specialized.StringCollection" Usage="System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Liste zusätzlicher Parameter von HTTP GET- und HTTP POST-Anforderungen ab, von denen die Zwischenspeicherung für die Webseite geändert wird, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Eine <see cref="T:System.Collections.IList" /> mit einer Liste der GET- und POST-Parameter, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entitäten im Web, Webseiten mehrere Versionen cache auf der Basis von anderen Faktoren ab, die Anforderungsparameter. Z. B. eine Version für jeden Speicherort innerhalb einer Einzelhandelskette für die eine Seite generiert werden kann in der Regel zwischengespeichert wird anhand der Parametername (z. B. `StoreID`).  
  
 Für bestimmte Browser kann es erforderlich sein, verändern Sie die Zwischenspeicherung von GET oder POST-Parameter zusätzlich zu den Parametern dieses Steuerelement Ziel unabhängigen Zwischenspeichern. Beispielsweise kann es verschiedene Versionen einer Seite für verschiedene Mobile Phone Dienstanbieter zwischenzuspeichern erforderlich.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> Eigenschaft, um eine Liste der Get- oder POST Parameter zur Steuerung der Zwischenspeicherung zielspezifische zurückzugeben. Die <see cref="P:System.Web.UI.Adapters.PageAdapter.CacheVaryByParams" /> Basis-Methode gibt <see langword="null" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.HttpCacheVaryByParams" />
        <altmember cref="P:System.Web.HttpCachePolicy.VaryByParams" />
        <related type="Article" href="https://msdn.microsoft.com/library/a504b287-c8d2-4838-9817-3ffee416fec4">Vorgehensweise: Zwischenspeichern von Versionen einer Seite, die anhand von Parametern</related>
      </Docs>
    </Member>
    <Member MemberName="ClientState">
      <MemberSignature Language="C#" Value="protected string ClientState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ClientState As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ClientState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientState : string" Usage="System.Web.UI.Adapters.PageAdapter.ClientState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine codierte Zeichenfolge mit den Daten zum Ansichts- und Steuerelementzustand der Webseite ab, an die dieser abgeleitete Seitenadapter angefügt ist.</summary>
        <value>Ein codierter <see cref="T:System.String" /> mit dem kombinierten Ansichts- und Steuerelementzustand der Steuerelemente auf der zugeordneten <see cref="T:System.Web.UI.Page" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.ClientState%2A> Eigenschaft bietet Zugriff auf die interne `ClientState` Eigenschaft der <xref:System.Web.UI.Page> Klasse.  
  
 Anzeigen von gespeicherten Daten der <xref:System.Web.UI.PageStatePersister> Objekt in der internen `ClientState` Eigenschaft des <xref:System.Web.UI.Page> werden immer im ausgeblendeten Feld auf der Webseite gespeichert.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse kann nicht überschrieben werden die <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> Eigenschaft, da er nicht ist <see langword="virtual" />. So ändern Sie das Verhalten der <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> implementieren Sie in einer abgeleiteten Klasse eine neue <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> -Eigenschaft, verweist der <see cref="P:System.Web.UI.Adapters.PageAdapter.ClientState" /> Eigenschaft der Basisklasse.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterControlState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.LoadAdapterViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterControlState" />
        <altmember cref="M:System.Web.UI.Adapters.ControlAdapter.SaveAdapterViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/082c763e-ffe8-4baf-b5e5-a26b2d383187">Seitenadapter und den Ansichtszustand</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">Übersicht über ASP.NET-Status</related>
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackMode">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackMode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackMode () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackMode();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackMode : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackMode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Bestimmt, ob gerade ein Postback der Webseite ausgeführt wird und gibt eine Name-Wert-Auflistung der Postbackvariablen zurück.</summary>
        <returns>Eine <see cref="T:System.Collections.Specialized.NameValueCollection" /> der Postbackvariablen, wenn zutreffend, andernfalls <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode%2A> Methode gibt einen der folgenden Sammlungen zurück:  
  
-   Formularvariablen, wenn der HTTP-Datenübertragungsmethode `POST`.  
  
-   Abfragezeichenfolgenvariablen, wenn die HTTP-Methode ist `GET`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackMode" /> Methode, um zielspezifische-Behandlung für die Auflistung der Postbackvariablen bereitzustellen.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="M:System.Web.UI.Page.DeterminePostBackMode" />
        <altmember cref="P:System.Web.HttpRequest.Form" />
        <altmember cref="P:System.Web.HttpRequest.QueryString" />
      </Docs>
    </Member>
    <Member MemberName="DeterminePostBackModeUnvalidated">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.DeterminePostBackModeUnvalidated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeterminePostBackModeUnvalidated () As NameValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Specialized::NameValueCollection ^ DeterminePostBackModeUnvalidated();" />
      <MemberSignature Language="F#" Value="abstract member DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection&#xA;override this.DeterminePostBackModeUnvalidated : unit -&gt; System.Collections.Specialized.NameValueCollection" Usage="pageAdapter.DeterminePostBackModeUnvalidated " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.NameValueCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Name/Wert-Datensammlung zurück, die der Seite mithilfe eines POST- oder GET-Befehls gesendet wurde, ohne bei der Anforderung eine ASP.NET-Anforderungsvalidierung durchzuführen.</summary>
        <returns>Die unbestätigten Formulardaten.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Web.UnvalidatedRequestValues>-Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPostBackFormReference">
      <MemberSignature Language="C#" Value="protected internal virtual string GetPostBackFormReference (string formId);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string GetPostBackFormReference(string formId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetPostBackFormReference (formId As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ GetPostBackFormReference(System::String ^ formId);" />
      <MemberSignature Language="F#" Value="abstract member GetPostBackFormReference : string -&gt; string&#xA;override this.GetPostBackFormReference : string -&gt; string" Usage="pageAdapter.GetPostBackFormReference formId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="formId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="formId">Ein <see cref="T:System.String" />, der die Client-ID des gesendeten Formulars enthält.</param>
        <summary>Gibt ein DHTML-Codefragment zurück, mit dem der Clientbrowser auf das Formular auf der Seite verweisen kann, das gesendet wurde.</summary>
        <returns>Ein <see cref="T:System.String" /> mit einem Verweis auf das gesendete Formular auf der Seite.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference%2A> Methode bietet eine DHTML-Referenz auf das postback Formular. Das Codefragment weist das folgende Format:  
  
 `document.forms['` `formID` `']`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetPostBackFormReference(System.String)" /> Methode, wenn das Markup für den Browser, der vom Adapter unterstützte ein anderes Format für den postback Formularverweis ist erforderlich. Der von Pocket PC-Browsern verwendete HTML 3.2-Standard erfordert beispielsweise das folgende Format: 
 <c>Dokument.</c><paramref name="formID" /></para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
    <Member MemberName="GetRadioButtonsByGroup">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection GetRadioButtonsByGroup (string groupName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetRadioButtonsByGroup(string groupName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRadioButtonsByGroup (groupName As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::ICollection ^ GetRadioButtonsByGroup(System::String ^ groupName);" />
      <MemberSignature Language="F#" Value="abstract member GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection&#xA;override this.GetRadioButtonsByGroup : string -&gt; System.Collections.ICollection" Usage="pageAdapter.GetRadioButtonsByGroup groupName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groupName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="groupName">Ein <see cref="T:System.String" />, der den Namen der abzurufenden <see cref="T:System.Web.UI.WebControls.RadioButton" />-Gruppe darstellt.</param>
        <summary>Ruft eine Auflistung der von <paramref name="groupName" /> angegebenen Optionsfeldsteuerelemente ab.</summary>
        <returns>Eine <see cref="T:System.Collections.ICollection" /> der <see cref="T:System.Web.UI.WebControls.RadioButton" />-Steuerelemente, aus denen <paramref name="groupName" /> besteht.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Radio-Schaltfläche Control Adapter verwenden den <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> und <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> Methoden auf anderen <xref:System.Web.UI.WebControls.RadioButton> Steuerelemente in der Gruppe.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <Member MemberName="GetStatePersister">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.PageStatePersister GetStatePersister ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.PageStatePersister GetStatePersister() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetStatePersister () As PageStatePersister" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::UI::PageStatePersister ^ GetStatePersister();" />
      <MemberSignature Language="F#" Value="abstract member GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister&#xA;override this.GetStatePersister : unit -&gt; System.Web.UI.PageStatePersister" Usage="pageAdapter.GetStatePersister " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PageStatePersister</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt ein Objekt zurück, das von der Webseite zum Beibehalten von Steuerelement- und Ansichtszustand verwendet wird.</summary>
        <returns>Ein von <see cref="T:System.Web.UI.PageStatePersister" /> abgeleitetes Objekt, das das Erstellen und Extrahieren des kombinierten Steuerelement- und Ansichtszustands für <see cref="T:System.Web.UI.Page" /> unterstützt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Page.PageStatePersister%2A> Eigenschaft verwendet die <xref:System.Web.UI.Adapters.PageAdapter.GetStatePersister%2A> Methode, um das Objekt zurückzugeben, die von abgeleiteten der <xref:System.Web.UI.PageStatePersister> Klasse bereit, die und extrahiert die kombinierten Steuerelement- und Ansichtszustands für die Seite. Es ist keine abgeleitete Seitenadapter angefügt wird, klicken Sie auf der Seite eine <xref:System.Web.UI.HiddenFieldPageStatePersister> Objekt wird verwendet, um den Status in einem ausgeblendeten Feld auf der Seite beizubehalten.  
  
|Linktyp|Resultierende link|  
|---------------|--------------------|  
|Code-Entitätsverweis, cer|<xref:System.Char.ToString%2A>|  
|Entität Verweis qualifiziert, Cerq Code|<xref:System.Char.ToString%2A?displayProperty=nameWithType>|  
|Code Entität Verweis bestimmten cers|<xref:System.Char.ToString%28System.Char%29>|  
|Code Entität Verweis qualifizierten bestimmt, cerqs|<xref:System.Char.ToString%28System.Char%29?displayProperty=nameWithType>|  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Daten des Ansichtszustands von gespeicherten der <see cref="T:System.Web.UI.PageStatePersister" /> Objekt in der internen <see langword="ClientState" /> Eigenschaft der <see cref="T:System.Web.UI.Page" /> werden immer im ausgeblendeten Feld auf der Seite "Web" gespeichert.</para>
        </block>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> Methode, um einen anderen zurückzugeben PageStatePersister abgeleitet, wenn es nicht möglich, den kombinierten Status in einem ausgeblendeten Feld (z. B. aufgrund der begrenzten Ressourcen) zu verwalten ist.  
  
Die <see cref="M:System.Web.UI.Adapters.PageAdapter.GetStatePersister" /> Basis-Klasse gibt eine <see cref="T:System.Web.UI.HiddenFieldPageStatePersister" /> Objekt. Sie können die <see cref="T:System.Web.UI.SessionPageStatePersister" /> Klasse, um den Seitenstatus im Sitzungsstatus beibehalten.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="T:System.Web.UI.PageStatePersister" />
        <altmember cref="T:System.Web.UI.HiddenFieldPageStatePersister" />
        <altmember cref="T:System.Web.UI.SessionPageStatePersister" />
        <altmember cref="P:System.Web.UI.Page.PageStatePersister" />
      </Docs>
    </Member>
    <Member MemberName="RegisterRadioButton">
      <MemberSignature Language="C#" Value="public virtual void RegisterRadioButton (System.Web.UI.WebControls.RadioButton radioButton);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterRadioButton(class System.Web.UI.WebControls.RadioButton radioButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton(System.Web.UI.WebControls.RadioButton)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterRadioButton(System::Web::UI::WebControls::RadioButton ^ radioButton);" />
      <MemberSignature Language="F#" Value="abstract member RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit&#xA;override this.RegisterRadioButton : System.Web.UI.WebControls.RadioButton -&gt; unit" Usage="pageAdapter.RegisterRadioButton radioButton" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="radioButton" Type="System.Web.UI.WebControls.RadioButton" />
      </Parameters>
      <Docs>
        <param name="radioButton">Der der Auflistung hinzuzufügende <see cref="T:System.Web.UI.WebControls.RadioButton" />.</param>
        <summary>Fügt der Auflistung für eine angegebene Optionsfeldgruppe ein Optionsfeldsteuerelement hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter> -Klasse verwendet ein <xref:System.Collections.Specialized.ListDictionary> Objekt, das eine Liste von Optionsfeldgruppen verwalten. Jedes Element im <xref:System.Collections.Specialized.ListDictionary> ist eine Sammlung von der <xref:System.Web.UI.WebControls.RadioButton> Steuerelemente in eine Gruppe von Optionsfeldern. Die <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> Methode fügt eine <xref:System.Web.UI.WebControls.RadioButton> Steuerelement der entsprechenden Auflistung, die Auflistung erstellen, wenn es nicht bereits vorhanden ist und das Erstellen <xref:System.Collections.Specialized.ListDictionary> Wenn es nicht bereits registriert sind <xref:System.Web.UI.WebControls.RadioButton> Steuerelemente.  
  
 Radio-Schaltfläche Control Adapter verwenden den <xref:System.Web.UI.Adapters.PageAdapter.RegisterRadioButton%2A> und <xref:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup%2A> Methoden auf anderen <xref:System.Web.UI.WebControls.RadioButton> Steuerelemente in eine Gruppe von Optionsfeldern.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.GetRadioButtonsByGroup(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButton" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt ein öffnendes Linktag in den Antwortstream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="targetUrl">Der <see cref="T:System.String" />-Wert mit der Ziel-URL des Links.</param>
        <param name="encodeUrl">
          <see langword="true" />, um den Ausgabestream mit <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> zu codieren, andernfalls <see langword="false" />.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <summary>Schreibt ein öffnendes Linktag, das die Ziel-URL enthält, in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode schreibt ein öffnendes Linktag. Wenn `writer` ist <xref:System.Web.UI.HtmlTextWriter>, dieses Tag weist das folgende Format:  
  
 `<a href="` `targetUrl` `">`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die mit dem Namen abgeleitet `CustomPageAdapter` aus der <xref:System.Web.UI.Adapters.PageAdapter> Klasse, und überschreiben die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Methode. Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Methode fügt ein Attribut namens `src` zu einem Hyperlink, der einen Verweis auf die aktuelle Seite enthält. Alle Hyperlinks auf Seiten, der gerendert werden `CustomPageAdapter` angefügt haben die `src` Attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> Methode, um einem anderen Format für ein öffnendes Linktag schreiben kennzeichnen oder zusätzliches Tag zu schreiben. Z. B. die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String)" /> Basismethode schreibt ein Attribut für die keine <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginHyperlink (System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginHyperlink(class System.Web.UI.HtmlTextWriter writer, string targetUrl, bool encodeUrl, string softkeyLabel, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginHyperlink (writer As HtmlTextWriter, targetUrl As String, encodeUrl As Boolean, softkeyLabel As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginHyperlink(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ targetUrl, bool encodeUrl, System::String ^ softkeyLabel, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit&#xA;override this.RenderBeginHyperlink : System.Web.UI.HtmlTextWriter * string * bool * string * string -&gt; unit" Usage="pageAdapter.RenderBeginHyperlink (writer, targetUrl, encodeUrl, softkeyLabel, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="targetUrl" Type="System.String" />
        <Parameter Name="encodeUrl" Type="System.Boolean" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="targetUrl">Der <see cref="T:System.String" />-Wert mit der Ziel-URL des Links.</param>
        <param name="encodeUrl">
          <see langword="true" />, um den Ausgabestream mit <see cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" /> zu codieren, andernfalls <see langword="false" />.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="accessKey">Der dem <see langword="accessKey" />-Attribut des zu erstellenden Links zuzuweisende <see cref="T:System.String" />-Wert.</param>
        <summary>Schreibt ein öffnendes Linktag mit der Ziel-URL sowie eine Zugriffstaste in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> -Methode schreibt ein öffnendes Linktag. Wenn `writer` ist ein <xref:System.Web.UI.HtmlTextWriter> -Objekt dieses Tag weist das folgende Format:  
  
 `<a href="` `targetUrl` `" accessKey="` `accessKey` `">`  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird veranschaulicht, wie eine Klasse, die mit dem Namen abgeleitet `CustomPageAdapter` aus der <xref:System.Web.UI.Adapters.PageAdapter> Klasse, und überschreiben die <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Methode. <xref:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink%2A> Fügt ein Attribut mit dem Namen `src` zu einem Hyperlink, der einen Verweis auf die aktuelle Seite enthält. Alle Hyperlinks auf Seiten, der gerendert werden `CustomPageAdapter` angefügt haben die `src` Attribut.  
  
 [!code-csharp[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/CS/pageadapter.cs#1)]
 [!code-vb[System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink/VB/pageadapter.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="accessKey" /> ist länger als 1 Zeichen.</exception>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> Methode, um einem anderen Format für ein öffnendes Linktag schreiben kennzeichnen oder zusätzliches Tag zu schreiben. Z. B. die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink(System.Web.UI.HtmlTextWriter,System.String,System.Boolean,System.String,System.String)" /> Basismethode schreibt ein Attribut für die keine <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndHyperlink">
      <MemberSignature Language="C#" Value="public virtual void RenderEndHyperlink (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndHyperlink(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndHyperlink (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndHyperlink(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndHyperlink : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="pageAdapter.RenderEndHyperlink writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <summary>Schreibt ein schließendes Linktag in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink%2A> -Methode schreibt ein schließendes Linktag. Wenn der TextWriter wird ein <xref:System.Web.UI.HtmlTextWriter> -Objekt dieses Tag weist das folgende Format:  
  
 `</a>`  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderEndHyperlink(System.Web.UI.HtmlTextWriter)" /> und <see cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" /> Methoden ein, wenn ein anderes Format Link gerendert werden müssen.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderBeginHyperlink" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderPostBackEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Schreibt ein Postbackereignis, einschließlich aller erforderlichen Argumente, als Link in den Antwortstream.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten und ggf. verschlüsselten Ansichtszustands sowie des Ereignisziels und -arguments, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Methode schreibt ein Postbackereignis als Link scriptless.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Methode, wenn ein anderes Format erforderlich, für den Link für die postback-Ereignis ist oder der Browser andere besondere Anforderungen aufweist. Beispielsweise erfordern einige Browser den Linktext nicht leer, wenn der Link zum Rendern ist sein. Sie können auch überschreiben <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Wenn begrenzte Ressourcen zu verhindern, dass der Ansichtszustand als URL-Parameter. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String)" /> Basismethode schreibt ein Attribut für die keine <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="public virtual void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit&#xA;override this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <param name="postUrl">Der <see cref="T:System.String" />-Wert mit der URL-Zielseite des Postbacks.</param>
        <param name="accessKey">Der <see cref="T:System.String" />-Wert, mit dem die Zuweisung zum <see langword="accessKey" />-Attribut des erstellten Links erfolgt.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten und ggf. verschlüsselten Ansichtszustands, eines Ereignisziels und -arguments, eines Parameters für die vorherige Seite und einer Zugriffstaste, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Methode schreibt ein Postbackereignis als Link scriptless, einschließlich der möglicherweise aufgeteilte <xref:System.Web.HttpUtility.UrlEncode%2A> Ansichtszustand, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` Parameter, und ein `accessKey="accessKey"` Attribut.  
  
 Ansichtszustand ist verschlüsselt, wenn die `enableViewStateMac` Attribut der [pages-Element ((ASP.NET Einstellungsschema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) Konfigurationselement nastaven NA hodnotu `true`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Methode, wenn ein anderes Format erforderlich, für den Link für die postback-Ereignis ist oder der Browser andere besondere Anforderungen aufweist. Beispielsweise erfordern einige Browser den Linktext nicht leer, wenn der Link zum Rendern ist sein. Sie können auch überschreiben <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Wenn begrenzte Ressourcen zu verhindern, dass der Ansichtszustand als URL-Parameter. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Basismethode schreibt ein Attribut für die keine <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostBackEvent">
      <MemberSignature Language="C#" Value="protected void RenderPostBackEvent (System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RenderPostBackEvent(class System.Web.UI.HtmlTextWriter writer, string target, string argument, string softkeyLabel, string text, string postUrl, string accessKey, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RenderPostBackEvent (writer As HtmlTextWriter, target As String, argument As String, softkeyLabel As String, text As String, postUrl As String, accessKey As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RenderPostBackEvent(System::Web::UI::HtmlTextWriter ^ writer, System::String ^ target, System::String ^ argument, System::String ^ softkeyLabel, System::String ^ text, System::String ^ postUrl, System::String ^ accessKey, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RenderPostBackEvent : System.Web.UI.HtmlTextWriter * string * string * string * string * string * string * bool -&gt; unit" Usage="pageAdapter.RenderPostBackEvent (writer, target, argument, softkeyLabel, text, postUrl, accessKey, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="softkeyLabel" Type="System.String" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="postUrl" Type="System.String" />
        <Parameter Name="accessKey" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="writer">Der <see cref="T:System.Web.UI.HtmlTextWriter" />, der Methoden für das Rendering der zielspezifischen Ausgabe enthält.</param>
        <param name="target">Der <see cref="T:System.String" />-Wert, der den Zielnamen des Postbackereignisses enthält.</param>
        <param name="argument">Der <see cref="T:System.String" />-Wert, der das Argument enthält, das an das Postbackereignisziel übergeben werden soll.</param>
        <param name="softkeyLabel">Der <see cref="T:System.String" />-Wert, der als Beschriftung einer Bildschirmtaste verwendet werden soll.</param>
        <param name="text">Der <see cref="T:System.String" />-Wert des Textes, der als Link angezeigt werden soll.</param>
        <param name="postUrl">Der <see cref="T:System.String" />-Wert mit der URL-Zielseite des Postbacks.</param>
        <param name="accessKey">Der dem <see langword="accessKey" />-Attribut des erstellten Links zuzuweisende <see cref="T:System.String" />-Wert.</param>
        <param name="encode">
          <see langword="true" />, um als Trennzeichen für den URL-Parameter <c>&amp;amp;</c> zu verwenden. <see langword="false" />, um <c>&amp;</c> zu verwenden.</param>
        <summary>Schreibt ein Postbackereignis, einschließlich des codierten Ansichtszustands, eines Ereignisziels und -arguments, eines Parameters für die vorherige Seite und einer Zugriffstaste, als Link in den Antwortstream.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent%2A> Methode schreibt ein Postbackereignis als Link scriptless, einschließlich der möglicherweise aufgeteilte <xref:System.Web.HttpUtility.UrlEncode%2A> Ansichtszustand, `__EVENTTARGET=target`, `__EVENTARGUMENT=argument`, `__PREVIOUSPAGE=currentFilePath` Parameter, und ein `accessKey="accessKey"` Attribut.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Methode, wenn ein anderes Format erforderlich, für den Link für die postback-Ereignis ist oder der Browser andere besondere Anforderungen aufweist. Beispielsweise erfordern einige Browser den Linktext nicht leer, wenn der Link zum Rendern ist sein. Sie können auch überschreiben <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Wenn begrenzte Ressourcen einschließlich Ansichtszustand als URL-Parameter verhindern. Die <see cref="M:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent(System.Web.UI.HtmlTextWriter,System.String,System.String,System.String,System.String,System.String,System.String)" /> Basismethode schreibt ein Attribut für die keine <paramref name="softkeyLabel" />.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
        <altmember cref="Overload:System.Web.UI.Adapters.PageAdapter.RenderPostBackEvent" />
      </Docs>
    </Member>
    <Member MemberName="TransformText">
      <MemberSignature Language="C#" Value="public virtual string TransformText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string TransformText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function TransformText (text As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ TransformText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member TransformText : string -&gt; string&#xA;override this.TransformText : string -&gt; string" Usage="pageAdapter.TransformText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Ein <see cref="T:System.String" /> mit dem umzuwandelnden Text.</param>
        <summary>Wandelt Text für den Zielbrowser um.</summary>
        <returns>Ein <see cref="T:System.String" />, der den umzuwandelnden Text enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Methode kann verwendet werden, z. B. zum Transformieren von Tabulatorzeichen (`\t`) in Zeilenumbrüche (`\n`).  
  
 Die <xref:System.Web.UI.Adapters.PageAdapter.TransformText%2A> Basis-Methode gibt `text` unverändert.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Beim Erben von der <see cref="T:System.Web.UI.Adapters.PageAdapter" /> -Klasse, die Sie überschreiben können <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> , wenn ein bestimmtes Markup ein mit einem anderen Format als standard-HTML-Konstrukt verfügt. Wenn Sie einen Browser erfordert einen anderen Bezeichner für ein Tag als die in HTML-Code verwendet werden würde z. B. <see cref="M:System.Web.UI.Adapters.PageAdapter.TransformText(System.String)" /> Methode kann überschrieben werden, um diesem Tag suchen und zu ändern.</para>
        </block>
        <altmember cref="T:System.Web.UI.Page" />
      </Docs>
    </Member>
  </Members>
</Type>