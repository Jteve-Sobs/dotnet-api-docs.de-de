<Type Name="QueryInterceptorAttribute" FullName="System.Data.Services.QueryInterceptorAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="de00235f62d5d8770884dd5aae72b97b62fac96e" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86858995" /></Metadata><TypeSignature Language="C#" Value="public sealed class QueryInterceptorAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QueryInterceptorAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Data.Services.QueryInterceptorAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QueryInterceptorAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryInterceptorAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type QueryInterceptorAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Services</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Das <see cref="T:System.Data.Services.QueryInterceptorAttribute" /> in einer Methode kennzeichnet diese als Abfrageinterceptor im angegebenen Entitätssatz.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autorisierung und Validierung auf entitätenmengenebene werden von Methoden implementiert, die mit kommentiert werden <xref:System.Data.Services.QueryInterceptorAttribute> . [!INCLUDE[ssAstoria](~/includes/ssastoria-md.md)]mit s werden keine Sicherheitsrichtlinien implementiert, sondern die erforderliche Infrastruktur für Dienst Entwickler bereitgestellt, um eigene Sicherheitsregeln und Geschäfts Validierung schreiben zu können.  
  
 Die Zugriffs Steuerung und Validierung der Entitätenmenge werden mithilfe von Abfrage Vorgängen mithilfe von Abfrage Komposition aktiviert. Um den Entitäts basierten Zugriff zu steuern, implementieren Sie eine Methode pro Entitätenmenge gemäß den folgenden Regeln:  
  
 Die-Methode muss über einen öffentlichen Gültigkeitsbereich verfügen und mit versehen werden <xref:System.Data.Services.QueryInterceptorAttribute> . dabei wird der Name einer Entitätenmenge als Parameter übernommen.  
  
 Die Methode darf keine Parameter akzeptieren.  
  
 Die-Methode muss einen Ausdruck vom Typ zurückgeben `Expression<Func<T, bool>>` , der der Filter ist, der für die Entitätenmenge zusammengesetzt werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird der Zugriff auf die `Customers` Entitätenmenge gesteuert. Jedem `Customer` kann nur `Orders` das zugeordnet werden `Customer` .  
  
```  
[QueryInterceptor("Orders")]  
public Expression<Func<Order, bool>> FilterOrders()   
{  
    return o => o.Customer.Name == /* Current principal name. */;  
}   
  
// Insures that the user accessing the customer(s) has the appropriate  
// rights as defined in the QueryRules object to access the customer  
// resource(s).  
  
[QueryInterceptor ("Customers")]  
public Expression<Func<Customer, bool>> FilterCustomers()   
{  
  return c => c.Name == /* Current principal name. */ &&  
              this.CurrentDataSource.QueryRules.Contains(  
                rule => rule.Name == c.Name &&  
                        rule.CustomerAllowedToQuery == true  
              );  
}  
  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryInterceptorAttribute (string entitySetName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string entitySetName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Services.QueryInterceptorAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (entitySetName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryInterceptorAttribute(System::String ^ entitySetName);" />
      <MemberSignature Language="F#" Value="new System.Data.Services.QueryInterceptorAttribute : string -&gt; System.Data.Services.QueryInterceptorAttribute" Usage="new System.Data.Services.QueryInterceptorAttribute entitySetName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="entitySetName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="entitySetName">Der Name der Entitätenmenge, die die Entität enthält, für die der Interceptor gilt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Data.Services.QueryInterceptorAttribute" />-Klasse für den Entitätssatz, der vom <paramref name="entitySetName" />-Parameter angegeben wird.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string" Usage="System.Data.Services.QueryInterceptorAttribute.EntitySetName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Services</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[get: System.Diagnostics.DebuggerStepThrough]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Diagnostics.DebuggerStepThrough&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Entitätssatzes ab, der die Entität enthält, für die der Interceptor gilt.</summary>
        <value>Eine Zeichenfolge, die den Namen des Entitätssatzes angibt, der die Entität enthält, für die der Interceptor gilt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
