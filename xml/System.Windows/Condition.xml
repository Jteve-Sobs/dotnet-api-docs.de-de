<Type Name="Condition" FullName="System.Windows.Condition">
  <Metadata><Meta Name="ms.openlocfilehash" Value="05fe23b3587f4d7b0d2003162a4b1255472bd404" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69434823" /></Metadata><TypeSignature Language="C#" Value="public sealed class Condition : System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Condition extends System.Object implements class System.ComponentModel.ISupportInitialize" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Condition" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Condition&#xA;Implements ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class Condition sealed : System::ComponentModel::ISupportInitialize" />
  <TypeSignature Language="F#" Value="type Condition = class&#xA;    interface ISupportInitialize" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetMarkupExtension("ReceiveMarkupExtension")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
      <AttributeName>System.Windows.Markup.XamlSetTypeConverter("ReceiveTypeConverter")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Bedingung für <see cref="T:System.Windows.MultiTrigger" /> und <see cref="T:System.Windows.MultiDataTrigger" /> dar, die Änderungen an Eigenschaftswerten anhand einer Reihe von Bedingungen anwenden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>mit s <xref:System.Windows.MultiDataTrigger>und s können Sie Eigenschaftswerte auf Grundlage eines Satzes von Bedingungen festlegen. Eine Bedingung ist erfüllt, wenn der Eigenschafts Wert des Elements oder des Datenelements mit <xref:System.Windows.Condition.Value%2A> dem angegebenen übereinstimmt (Verweis Gleichheits Überprüfung). Wenn alle angegebenen Bedingungen erfüllt sind, wird der-Triggerwert angewendet.  
  
 Im folgenden finden Sie eine Liste der Fälle, die zu einer Ausnahme führen:  
  
-   Für jeden <xref:System.Windows.Condition>können Sie entweder die <xref:System.Windows.Condition.Property%2A> -Eigenschaft oder die <xref:System.Windows.Condition.Binding%2A> -Eigenschaft festlegen. Wenn beide Eigenschaften festgelegt sind, wird eine Ausnahme ausgelöst.  
  
-   Wenn für eine <xref:System.Windows.MultiTrigger> <xref:System.Windows.Condition.Property%2A> gilt, kann die-Eigenschaft nicht NULL sein. <xref:System.Windows.Condition>  
  
-   Wenn für eine <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.Condition.Binding%2A> gilt, kann die-Eigenschaft nicht NULL sein. <xref:System.Windows.Condition>  
  
-   Eine-Ausnahme wird ausgelöst, wenn <xref:System.Windows.Condition.Value%2A> der angegebene für den Typ des angegebenen <xref:System.Windows.Condition.Property%2A>nicht gültig ist.  
  
 Beachten Sie, dass <xref:System.Windows.Condition> die-Eigenschaft <xref:System.Windows.MultiTrigger>und die <xref:System.Windows.Condition.Property%2A> - <xref:System.Windows.Condition.Value%2A> Eigenschaft festgelegt werden müssen, wenn für eine gilt. Wenn dies der Fall ist <xref:System.Windows.MultiDataTrigger>, müssen <xref:System.Windows.Condition.Binding%2A> die <xref:System.Windows.Condition.Value%2A> -Eigenschaft und die-Eigenschaft festgelegt werden.  
  
   
  
## Examples  
 Das folgende Beispiel enthält zwei <xref:System.Windows.MultiTrigger>s. Der erste legt den **MinWidth** -Eigenschafts Wert fest, wenn die **HasItems** -Eigenschaft false ist und die **Width** -Eigenschaft auf **Auto**festgelegt ist. Die zweite ist ähnlich, aber ist für die **MinHeight** -Eigenschaft.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 In der <xref:System.Windows.Condition.Binding%2A> -Eigenschaft finden Sie Beispiele für Bedingungen, <xref:System.Windows.MultiDataTrigger>die in einer verwendet werden.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Condition" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Condition" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.Data.BindingBase binding, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Data.BindingBase binding, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.Data.BindingBase,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (binding As BindingBase, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::Data::BindingBase ^ binding, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.Data.BindingBase * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (binding, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="binding">Die Bindung, die die Eigenschaft der Bedingung angibt.</param>
        <param name="conditionValue">Der Wert der Bedingung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Condition" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">Die Eigenschaft der Bedingung.</param>
        <param name="conditionValue">Der Wert der Bedingung.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Condition" />-Klasse mit der angegebenen Eigenschaft und dem angegebenen Wert. Dieser Konstruktor führt die Parametervalidierung aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Condition (System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty conditionProperty, object conditionValue, string sourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.#ctor(System.Windows.DependencyProperty,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (conditionProperty As DependencyProperty, conditionValue As Object, sourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Condition(System::Windows::DependencyProperty ^ conditionProperty, System::Object ^ conditionValue, System::String ^ sourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.Condition : System.Windows.DependencyProperty * obj * string -&gt; System.Windows.Condition" Usage="new System.Windows.Condition (conditionProperty, conditionValue, sourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="conditionProperty" Type="System.Windows.DependencyProperty" />
        <Parameter Name="conditionValue" Type="System.Object" />
        <Parameter Name="sourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="conditionProperty">Die Eigenschaft der Bedingung.</param>
        <param name="conditionValue">Der Wert der Bedingung.</param>
        <param name="sourceName"><c>x:Name</c> des Objekts mit der <paramref name="conditionProperty" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Condition" /> -Klasse mit der angegebenen Eigenschaft, dem angegebenen Wert und dem Namen des Quellobjekts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Binding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase Binding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase Binding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Binding" />
      <MemberSignature Language="VB.NET" Value="Public Property Binding As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ Binding { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Binding : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.Condition.Binding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Bindung ab, die die Eigenschaft der Bedingung angibt, oder legt diese fest. Dies gilt nur für <see cref="T:System.Windows.MultiDataTrigger" /> -Objekte.</summary>
        <value>Der Standardwert ist NULL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger>mit s können Sie Eigenschaftswerte basierend auf den Werten der zurückgegebenen Daten festlegen. Wenn Sie z. b. eine Liste von Aufgaben Elementen anzeigen, möchten Sie möglicherweise eine Aufgabe mit einem roten Hintergrund anzeigen, wenn Sie eine hohe Priorität hat und seit mehr als zwei Wochen nicht mehr untersucht wurde.  
  
 Sie erstellen eine Bindung und verwenden die <xref:System.Windows.Data.Binding.Path%2A> -Eigenschaft, um eine Bindung an eine Eigenschaft eines bestimmten Objekts (das Bindungs Quell Objekt) herzustellen. Beispielsweise können Sie eine Bindung an die *Priority* -Eigenschaft einer *Aufgabe*herstellen. Weitere Informationen finden Sie unter [Übersicht über Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Beachten Sie, dass die <xref:System.Windows.MultiDataTrigger> <xref:System.Windows.Condition.Binding%2A> Eigenschaften und <xref:System.Windows.Condition.Value%2A> festgelegt werden müssen, wenn es sich um eine Bedingung für eine handelt. Das Festlegen <xref:System.Windows.Condition.Property%2A> des Werts würde in diesem Fall eine Ausnahme auslösen.  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlPropertyElementUsage_Binding"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.Binding>  
    <Binding …/>  
  </object.Binding>  
</object>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *declaration*  
 Eine Bindungs Deklaration. Weitere Informationen finden Sie unter [Übersicht über Bindungs Deklarationen](~/docs/framework/wpf/data/binding-declarations-overview.md) .  
  
   
  
## Examples  
 Im folgenden Beispiel <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> <xref:System.Windows.Controls.ListBox> wird der von an *stellen*, einem <xref:System.Collections.ObjectModel.ObservableCollection%601> von *Place* -Objekten, gebunden. *Place* -Objekte haben Eigenschaften *Name* und *Status*.  
  
 Jede <xref:System.Windows.Controls.ListBoxItem> ** der-Objekte zeigteinPlace-Objektan.<xref:System.Windows.Controls.ListBox> Der <xref:System.Windows.Style> im Beispiel wird auf jeden <xref:System.Windows.Controls.ListBoxItem>angewendet. Die <xref:System.Windows.Condition> <xref:System.Windows.Controls.ListBoxItem> ** ** s <xref:System.Windows.MultiDataTrigger> von werden so angegeben, dass, wenn der Name und der Zustand des Datenelements " *Place* " bzw. "or" lauten, der Hintergrund des entsprechenden auf Cyan festgelegt wird.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Property" />
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Property" />
      <MemberSignature Language="VB.NET" Value="Public Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); void set(System::Windows::DependencyProperty ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty with get, set" Usage="System.Windows.Condition.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Eigenschaft der Bedingung ab oder legt diese fest. Dies gilt nur für <see cref="T:System.Windows.MultiTrigger" />-Objekte.</summary>
        <value>Eine <see cref="T:System.Windows.DependencyProperty" />, die die Eigenschaft der Bedingung angibt. Der Standardwert ist NULL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>mit s können Sie Eigenschaftswerte auf Grundlage eines Satzes von Bedingungen festlegen. Eine Bedingung ist erfüllt, wenn der Wert der Eigenschaft (angegeben durch die <xref:System.Windows.Condition.Property%2A> -Eigenschaft) des-Elements mit der <xref:System.Windows.Condition.Value%2A> angegebenen übereinstimmt (Verweis Gleichheits Überprüfung). Wenn alle angegebenen Bedingungen erfüllt sind, wird der-Triggerwert angewendet.  
  
 , `TargetType` Wenn nicht für den Stil der Vorlage festgelegt ist, die die Trigger enthält. Anschließend müssen Sie den Eigenschaftsnamen mithilfe der `ClassName.PropertyName` Syntax qualifizieren.  
  
 Beachten Sie, dass die <xref:System.Windows.MultiTrigger> <xref:System.Windows.Condition.Property%2A> Eigenschaften und <xref:System.Windows.Condition.Value%2A> festgelegt werden müssen, wenn es sich um eine Bedingung für eine handelt. Das Festlegen <xref:System.Windows.Condition.Binding%2A> des Werts würde in diesem Fall eine Ausnahme auslösen.  
  
 Bei s in <xref:System.Windows.MultiDataTrigger>s sollte die <xref:System.Windows.Condition.Binding%2A> -Eigenschaft anstelle dieser Eigenschaft verwendet werden. <xref:System.Windows.Condition>  
  
   
  
## Examples  
 Das folgende Beispiel enthält zwei <xref:System.Windows.MultiTrigger>s. Der erste legt den **MinWidth** -Eigenschafts Wert fest, wenn die **HasItems** -Eigenschaft false ist und die **Width** -Eigenschaft auf **Auto**festgelegt ist. Die zweite ist ähnlich, aber ist für die **MinHeight** -Eigenschaft.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Condition.Binding" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveMarkupExtension">
      <MemberSignature Language="C#" Value="public static void ReceiveMarkupExtension (object targetObject, System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveMarkupExtension(object targetObject, class System.Windows.Markup.XamlSetMarkupExtensionEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveMarkupExtension(System.Object,System.Windows.Markup.XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveMarkupExtension (targetObject As Object, eventArgs As XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveMarkupExtension(System::Object ^ targetObject, System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveMarkupExtension : obj * System.Windows.Markup.XamlSetMarkupExtensionEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveMarkupExtension (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetMarkupExtensionEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Das Objekt, in dem die Markuperweiterung den Wert festlegt.</param>
        <param name="eventArgs">Daten, die relevant für die Markuperweiterungsverarbeitung sind.</param>
        <summary>Behandelt Fälle, in denen eine Markuperweiterung einen Wert für die Eigenschaft eines <see cref="T:System.Windows.Condition" />-Objekts bereitstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die Methode, auf die von <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute> einem angewendeten Attribut auf Klassenebene verwiesen wird. Dies bedeutet, dass diese Methode alle <xref:System.Windows.Condition> Versuche verarbeitet, Werte von mit einer Markup Erweiterung festzulegen. Diese Methode wird in der Regel nicht direkt aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetMarkupExtensionEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTypeConverter">
      <MemberSignature Language="C#" Value="public static void ReceiveTypeConverter (object targetObject, System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ReceiveTypeConverter(object targetObject, class System.Windows.Markup.XamlSetTypeConverterEventArgs eventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.ReceiveTypeConverter(System.Object,System.Windows.Markup.XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ReceiveTypeConverter (targetObject As Object, eventArgs As XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ReceiveTypeConverter(System::Object ^ targetObject, System::Windows::Markup::XamlSetTypeConverterEventArgs ^ eventArgs);" />
      <MemberSignature Language="F#" Value="static member ReceiveTypeConverter : obj * System.Windows.Markup.XamlSetTypeConverterEventArgs -&gt; unit" Usage="System.Windows.Condition.ReceiveTypeConverter (targetObject, eventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetObject" Type="System.Object" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="eventArgs" Type="System.Windows.Markup.XamlSetTypeConverterEventArgs" Index="1" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="targetObject">Das Objekt, in dem der Typkonverter den Wert festlegt.</param>
        <param name="eventArgs">Daten, die relevant für die Typkonverterverarbeitung sind.</param>
        <summary>Behandelt Fälle, in denen ein Typkonverter einen Wert für die Eigenschaft eines <see cref="T:System.Windows.Condition" />-Objekts bereitstellt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist die Methode, auf die von <xref:System.Windows.Markup.XamlSetTypeConverterAttribute> einem angewendeten Attribut auf Klassenebene verwiesen wird. Dies bedeutet, dass diese Methode alle <xref:System.Windows.Condition> Versuche verarbeitet, Werte von mit einem Typkonverter festzulegen. Diese Methode wird in der Regel nicht direkt aufgerufen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterAttribute" />
        <altmember cref="T:System.Windows.Markup.XamlSetTypeConverterEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.Condition.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Objekts mit der Eigenschaft ab, durch die die zugeordneten Setter angewendet werden, oder legt diesen fest. Dies gilt nur für <see cref="T:System.Windows.MultiTrigger" />-Objekte.</summary>
        <value>Die Standardeigenschaft ist <see langword="null" />. Wenn die Eigenschaft <see langword="null" /> ist, sorgt die Eigenschaft des formatierten Objekts dafür, dass die zugeordneten Setter angewendet werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft auf den Namen eines beliebigen Elements innerhalb des Bereichs festlegen, in dem die auslöserauflistung (die Auflistung, in der der-Fehler enthalten ist, zu der dieser Zustand gehört) angewendet wird. Dabei handelt es sich normalerweise um ein benanntes Element, das sich innerhalb der Vorlage befindet, die den-  
  
 Sie können ein Objekt mit der [x:Name](~/docs/framework/xaml-services/x-name-directive.md) -Direktivensyntax benennen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Windows.Condition" />, die verwendet werden, können nicht mehr geändert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.BeginInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#BeginInit" />
      <MemberSignature Language="VB.NET" Value="Sub BeginInit () Implements ISupportInitialize.BeginInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.BeginInit() = System::ComponentModel::ISupportInitialize::BeginInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.BeginInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem Objekt den Start der Initialisierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Condition>-Instanz in eine <xref:System.ComponentModel.ISupportInitialize>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.ISupportInitialize.EndInit">
      <MemberSignature Language="C#" Value="void ISupportInitialize.EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.ISupportInitialize.EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Condition.System#ComponentModel#ISupportInitialize#EndInit" />
      <MemberSignature Language="VB.NET" Value="Sub EndInit () Implements ISupportInitialize.EndInit" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.ISupportInitialize.EndInit() = System::ComponentModel::ISupportInitialize::EndInit;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.ISupportInitialize.EndInit</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Signalisiert dem Objekt den Abschluss der Initialisierung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.Condition>-Instanz in eine <xref:System.ComponentModel.ISupportInitialize>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Condition.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Windows.Condition.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.SetterTriggerConditionValueConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Bedingung ab oder legt diesen fest.</summary>
        <value>Die <see cref="P:System.Windows.Condition.Value" />-Eigenschaft für eine angegebene <see cref="T:System.Windows.Condition" /> kann nicht NULL sein.  
  
Weitere Informationen finden Sie im Abschnitt für Ausnahmen. Der Standardwert ist NULL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiTrigger>mit s <xref:System.Windows.MultiDataTrigger>und s können Sie Eigenschaftswerte auf Grundlage eines Satzes von Bedingungen festlegen. Eine Bedingung ist erfüllt, wenn der-Eigenschafts Wert des Elements oder des Datenelements <xref:System.Windows.Condition.Value%2A>mit dem angegebenen übereinstimmt. Wenn alle angegebenen Bedingungen erfüllt sind, wird der-Triggerwert angewendet. Wenn alle angegebenen Bedingungen erfüllt sind, wird der-Triggerwert angewendet.  
  
   
  
## Examples  
 Das folgende Beispiel enthält zwei <xref:System.Windows.MultiTrigger>s. Der erste legt den **MinWidth** -Eigenschafts Wert fest, wenn die **HasItems** -Eigenschaft false ist und die **Width** -Eigenschaft auf **Auto**festgelegt ist. Die zweite ist ähnlich, aber ist für die **MinHeight** -Eigenschaft.  
  
 [!code-xaml[ControlTemplateExamples_snip#MultiTriggerExample1](~/samples/snippets/csharp/VS_Snippets_Wpf/ControlTemplateExamples_snip/CS/Page1.xaml#multitriggerexample1)]  
  
 In der <xref:System.Windows.Condition.Binding%2A> -Eigenschaft finden Sie Beispiele für Bedingungen, <xref:System.Windows.MultiDataTrigger>die in einer verwendet werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Ausdrücke werden nicht unterstützt.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
