<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata><Meta Name="ms.openlocfilehash" Value="94d52fadbbe5ee0176549400999a58e3ae14fb10" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70571771" /></Metadata><TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Erscheinungsbild des Steuerelements dar, wenn es sich in einem bestimmten Zustand befindet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.VisualState> gibt an, wie das Steuerelement aussieht, wenn es in einem bestimmten Zustand ist. Wenn z. b. <xref:System.Windows.Controls.Button> eine gedrückt wird, kann der Rahmen einer anderen Farbe als normal sein.  Die <xref:System.Windows.VisualState> -Klasse verfügt <xref:System.Windows.VisualState.Storyboard%2A> über eine-Eigenschaft, die die Darstellung des Steuer Elements ändert. Wenn das Steuerelement in den Zustand eintritt <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> <xref:System.Windows.VisualState.Storyboard%2A> , der durch die-Eigenschaft angegeben wird, beginnt. Wenn das Steuerelement den Zustand verlässt, <xref:System.Windows.VisualState.Storyboard%2A> wird beendet.  
  
 Die <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> -Eigenschaft <xref:System.Windows.VisualState> enthält-Objekte. <xref:System.Windows.VisualStateGroup>-Objekte werden der <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> angefügten-Eigenschaft hinzugefügt, die für auf einem <xref:System.Windows.FrameworkElement>definiert ist. Sie können- <xref:System.Windows.VisualState> Objekte zu beliebigen <xref:System.Windows.FrameworkElement>hinzufügen, aber Sie werden in der Regel <xref:System.Windows.Controls.ControlTemplate> in einer <xref:System.Windows.Controls.Control>verwendet. Weitere Informationen zum Erstellen <xref:System.Windows.Controls.ControlTemplate> von-Objekten und- <xref:System.Windows.VisualState> Objekten für vorhandene Steuerelemente finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Ein Beispiel für die Verwendung <xref:System.Windows.VisualState> von Objekten außerhalb <xref:System.Windows.Controls.ControlTemplate>eines-Objekts finden <xref:System.Windows.VisualStateManager> Sie unter der-Klasse.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.VisualStateGroup> in der <xref:System.Windows.Controls.ControlTemplate> eines <xref:System.Windows.Controls.Button> aufgerufenen `CommonStates` erstellt und <xref:System.Windows.VisualState> -Objekte für die Zustände `Normal`, `Pressed`, und `MouseOver`hinzugefügt. Der <xref:System.Windows.Controls.Button> definiert auch einen Zustand mit `Disabled` dem Namen, der `CommonStates`sich in der <xref:System.Windows.VisualStateGroup>befindet, aber im Beispiel wird er aus Gründen der Kürze ausgelassen. Das gesamte Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.VisualState" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.Windows.VisualState" /> ab oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie geben den visuellen Zustand an, den ein Element eingeben soll <xref:System.Windows.VisualState.Name%2A> , indem <xref:System.Windows.VisualState> Sie den <xref:System.Windows.VisualStateManager>der an den übergeben.  
  
 Wenn ein <xref:System.Windows.Controls.Control> <xref:System.Windows.VisualStateManager> in <xref:System.Windows.VisualState> einem <xref:System.Windows.Controls.ControlTemplate>verwendet, sollte der Autor des Steuer Elements angeben, welche Objekte das Steuerelement in seinem <xref:System.Windows.Controls.ControlTemplate> finden soll, <xref:System.Windows.TemplateVisualStateAttribute> indem er die-Klasse auf seine Klassen Signatur setzt. <xref:System.Windows.Controls.ControlTemplate>Autoren definieren neue <xref:System.Windows.VisualState> Objekte und legen die <xref:System.Windows.VisualState.Name%2A> -Eigenschaft auf den von der <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> -Eigenschaft angegebenen Wert fest.  
  
 Informationen zu den Namen der visuellen Zustände für die Steuerelemente, die in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]enthalten sind, finden Sie unter Steuerelement [Stile und-Vorlagen](~/docs/framework/wpf/controls/control-styles-and-templates.md). Weitere Informationen zum Erstellen <xref:System.Windows.Controls.ControlTemplate> von-Objekten und- <xref:System.Windows.VisualState> Objekten für vorhandene Steuerelemente finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.VisualStateGroup> in der <xref:System.Windows.Controls.ControlTemplate> eines <xref:System.Windows.Controls.Button> aufgerufenen `CommonStates` erstellt und <xref:System.Windows.VisualState> -Objekte für die Zustände `Normal`, `Pressed`, und `MouseOver`hinzugefügt. Der <xref:System.Windows.Controls.Button> definiert auch einen Zustand mit `Disabled` dem Namen, der `CommonStates`sich in der <xref:System.Windows.VisualStateGroup>befindet, aber im Beispiel wird er aus Gründen der Kürze ausgelassen. Das gesamte Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuer Elements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Windows.Media.Animation.Storyboard" /> ab, das die Darstellung des Steuerelements definiert, wenn es sich in dem durch <see cref="T:System.Windows.VisualState" /> dargestellten Zustand befindet, oder legt dieses fest.</summary>
        <value>Ein Storyboard, das die Darstellung des Steuerelements definiert, wenn es sich in dem durch <see cref="T:System.Windows.VisualState" /> dargestellten Zustand befindet. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Steuerelement in den Zustand eintritt <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> <xref:System.Windows.VisualState.Storyboard%2A> , der durch die-Eigenschaft angegeben wird, beginnt. Wenn das Steuerelement den Zustand verlässt, <xref:System.Windows.VisualState.Storyboard%2A> wird beendet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein einfaches <xref:System.Windows.Controls.ControlTemplate> für einen <xref:System.Windows.Controls.Button> erstellt, der <xref:System.Windows.Controls.Grid>einen enthält.  Der <xref:System.Windows.VisualState> aufgerufene `MouseOver` verfügt über ein Storyboard, das die Farbe <xref:System.Windows.Controls.Grid> von von Grün in Rot ändert, wenn der Benutzer den Maus <xref:System.Windows.Controls.Button>Zeiger über den drückt.  Der <xref:System.Windows.VisualState> aufgerufene `Normal` ist eingeschlossen, sodass der, wenn der Benutzer den Mauszeiger <xref:System.Windows.Controls.Grid> von der Schaltfläche bewegt, zu Grün zurückkehrt.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
