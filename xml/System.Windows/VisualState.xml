<Type Name="VisualState" FullName="System.Windows.VisualState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b04245240fdfdb362dd764fe8c78afbbd4fe63b9" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39745377" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualState : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualState extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualState" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualState&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualState : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualState = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("Storyboard")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt das Erscheinungsbild des Steuerelements dar, wenn es sich in einem bestimmten Zustand befindet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.VisualState> gibt an, wie das Steuerelement aussieht, wenn es in einem bestimmten Zustand befindet. Z. B., wenn eine <xref:System.Windows.Controls.Button> wird gedrückt wird, kann er eine andere Farbe als normal.  Die <xref:System.Windows.VisualState> -Klasse verfügt über eine <xref:System.Windows.VisualState.Storyboard%2A> -Eigenschaft, die die Darstellung des Steuerelements ändert. Wenn das Steuerelement den Zustand, der angegebenen eingibt der <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Windows.VisualState.Storyboard%2A> beginnt. Wenn das Steuerelement den Zustand verlässt die <xref:System.Windows.VisualState.Storyboard%2A> beendet.  
  
 Die <xref:System.Windows.VisualStateGroup.States%2A?displayProperty=nameWithType> Eigenschaft enthält <xref:System.Windows.VisualState> Objekte. <xref:System.Windows.VisualStateGroup> Objekte werden hinzugefügt, um die <xref:System.Windows.VisualStateManager.VisualStateGroups%2A?displayProperty=nameWithType> angefügten Eigenschaft, die auf definiert wird die auf eine <xref:System.Windows.FrameworkElement>. Hinzufügbaren <xref:System.Windows.VisualState> Objekte einem beliebigen <xref:System.Windows.FrameworkElement>, aber sie sind in der Regel dienen in eine <xref:System.Windows.Controls.ControlTemplate> von eine <xref:System.Windows.Controls.Control>. Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate> und <xref:System.Windows.VisualState> Objekte für vorhandene Steuerelemente finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Ein Beispiel der Verwendung von <xref:System.Windows.VisualState> außerhalb von Objekten einer <xref:System.Windows.Controls.ControlTemplate>, finden Sie unter den <xref:System.Windows.VisualStateManager> Klasse.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.VisualStateGroup> in die <xref:System.Windows.Controls.ControlTemplate> von eine <xref:System.Windows.Controls.Button> namens `CommonStates` und fügt <xref:System.Windows.VisualState> Objekte für die Staaten, `Normal`, `Pressed`, und `MouseOver`. Die <xref:System.Windows.Controls.Button> definiert auch einen Zustand mit dem Namen `Disabled` , die sich in der `CommonStates` <xref:System.Windows.VisualStateGroup>, aber das Beispiel aus Gründen der Übersichtlichkeit. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.VisualState" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualState.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.Windows.VisualState" /> ab oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.VisualState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie angeben, so eingeben, welche visuellen Zustand eines Elements durch Übergeben der <xref:System.Windows.VisualState.Name%2A> von der <xref:System.Windows.VisualState> auf die <xref:System.Windows.VisualStateManager>.  
  
 Beim eine <xref:System.Windows.Controls.Control> verwendet die <xref:System.Windows.VisualStateManager> in eine <xref:System.Windows.Controls.ControlTemplate>, sollte der Autor des Steuerelements angeben, die <xref:System.Windows.VisualState> Objekte erwartet, dass das Steuerelement finden Sie in der <xref:System.Windows.Controls.ControlTemplate> durch Einfügen von der <xref:System.Windows.TemplateVisualStateAttribute> auf die Signatur. <xref:System.Windows.Controls.ControlTemplate> Autoren #define new <xref:System.Windows.VisualState> Objekte und legen die <xref:System.Windows.VisualState.Name%2A> Eigenschaft angegebene Wert der <xref:System.Windows.TemplateVisualStateAttribute.Name%2A?displayProperty=nameWithType> Eigenschaft.  
  
 Um die Namen des visuellen Zustände für die Steuerelemente zu suchen, die in enthaltenen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)], finden Sie unter [Steuerelementformate und-Vorlagen](~/docs/framework/wpf/controls/control-styles-and-templates.md). Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate> und <xref:System.Windows.VisualState> Objekte für vorhandene Steuerelemente finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.VisualStateGroup> in die <xref:System.Windows.Controls.ControlTemplate> von eine <xref:System.Windows.Controls.Button> namens `CommonStates` und fügt <xref:System.Windows.VisualState> Objekte für die Staaten, `Normal`, `Pressed`, und `MouseOver`. Die <xref:System.Windows.Controls.Button> definiert auch einen Zustand mit dem Namen `Disabled` , die sich in der `CommonStates` <xref:System.Windows.VisualStateGroup>, aber das Beispiel aus Gründen der Übersichtlichkeit. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#10](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/buttonstages.xaml#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Storyboard">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Storyboard { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Storyboard Storyboard" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualState.Storyboard" />
      <MemberSignature Language="VB.NET" Value="Public Property Storyboard As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Storyboard ^ Storyboard { System::Windows::Media::Animation::Storyboard ^ get(); void set(System::Windows::Media::Animation::Storyboard ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Storyboard : System.Windows.Media.Animation.Storyboard with get, set" Usage="System.Windows.VisualState.Storyboard" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ein <see cref="T:System.Windows.Media.Animation.Storyboard" /> ab, das die Darstellung des Steuerelements definiert, wenn es sich in dem durch <see cref="T:System.Windows.VisualState" /> dargestellten Zustand befindet, oder legt dieses fest.</summary>
        <value>Ein Storyboard, das die Darstellung des Steuerelements definiert, wenn es sich in dem durch <see cref="T:System.Windows.VisualState" /> dargestellten Zustand befindet. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn das Steuerelement den Zustand, der angegebenen eingibt der <xref:System.Windows.VisualState.Name%2A?displayProperty=nameWithType> -Eigenschaft, die <xref:System.Windows.VisualState.Storyboard%2A> beginnt. Wenn das Steuerelement den Zustand verlässt die <xref:System.Windows.VisualState.Storyboard%2A> beendet.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Windows.Controls.ControlTemplate> für eine <xref:System.Windows.Controls.Button> , enthält eine <xref:System.Windows.Controls.Grid>.  Die <xref:System.Windows.VisualState> namens `MouseOver` besitzt ein Storyboard, das die Farbe des ändert die <xref:System.Windows.Controls.Grid> von Grün zu rot markiert, wenn der Benutzer die Maus über legt die <xref:System.Windows.Controls.Button>.  Die <xref:System.Windows.VisualState> namens `Normal` enthalten ist, sodass Wenn der Benutzer die Maus der Schaltfläche weg bewegt den <xref:System.Windows.Controls.Grid> auf Grün gibt.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>