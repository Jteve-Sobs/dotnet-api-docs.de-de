<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="de5a761355e9b24dd3935a4069c35a7ea2164a51" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30679834" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine <see cref="T:System.Windows.DataTemplate" /> dar, die <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> unterstützt, z. B. <see cref="T:System.Windows.Controls.TreeViewItem" /> oder <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ist `ListLeagueList` eine Liste von `League`-Objekten. Jedes `League`-Objekt verfügt über einen `Name` und eine Auflistung von `Division`-Objekten. Jede `Division` verfügt über einen `Name` und eine Auflistung von `Team`-Objekten, und `Team`Team-Objekt verfügt über einen `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 Im Beispiel wird gezeigt, die mit der Verwendung von <xref:System.Windows.HierarchicalDataTemplate>, Sie können Listendaten, die anderen Listen enthält leicht anzuzeigen. Im Folgenden finden Sie ein Bildschirmfoto des Beispiels.  
  
 ![Bildschirmabbildung für HierarchicalDataTemplate Beispiel](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate-Beispiel-Screenshot")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Der Typ, für den diese Vorlage bestimmt ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse mit dem angegebenen Typ, für den die Vorlage bestimmt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `dataType` Parameter ist entweder ein [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Objekt oder eine Zeichenfolge, ein [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] Element. Weitere Informationen finden Sie unter [Übersicht über Bindungsquellen](~/docs/framework/wpf/data/binding-sources-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der abwechselnden Elementcontainer für die untergeordneten Elemente ab oder legt diese fest.</summary>
        <value>Die Anzahl der abwechselnden Elementcontainer für die nächste Ebene von Elementen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> und <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> Eigenschaften ermöglichen es Ihnen, die Darstellung für zwei oder mehr Container für abwechselnde Elemente festzulegen. Sie können beispielsweise angeben, abwechselnde Hintergrundfarben für jedes dritte Element in einer <xref:System.Windows.Controls.ItemsControl>.  Die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> jeden Elementcontainer im zugewiesen ist die <xref:System.Windows.Controls.ItemsControl>.  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> bei 0 anfängt, erhöht, bis er ist <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1, und klicken Sie dann Neustarts bei 0. Z. B. wenn <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 3 ist, und es gibt sieben Elemente in der <xref:System.Windows.Controls.ItemsControl>, die folgende Tabelle enthält die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> für jedes Element.  
  
|Position eines Elements in der <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Beim Festlegen der <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> -Eigenschaft, Sie an, dass die untergeordneten Elemente erhalten soll ein <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> in dieses Bereichs liegt, nicht das Element, das Dies hat <xref:System.Windows.HierarchicalDataTemplate> angewendet wird. Z. B. wenn ein <xref:System.Windows.Controls.HeaderedItemsControl> aufgerufen `aHeaderedItemsControl` verwendet eine <xref:System.Windows.HierarchicalDataTemplate> mit der <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> festgelegt, die Elementcontainer der untergeordneten Elemente des `aHeaderedItemsControl` müssen eine <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>, nicht die Elementcontainer für `aHeaderedItemsControl`.  
  
 Es gibt mehrere Methoden, die Sie verwenden können, verschiedene eindeutigkeitsmetrik für den Container für abwechselnde Elemente angeben. Eine Methode besteht darin, Eigenschaften des Elementcontainers zum Binden der <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>. Anschließend können Sie eine <xref:System.Windows.Controls.AlternationConverter> angeben, welcher Wert für den Elementcontainer angewendet werden soll, die einem bestimmten <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> Wert. Sie können auch Trigger so ändern Sie den Wert der Eigenschaft ein Elementcontainer, abhängig vom Wert der <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Controls.TreeView> , die auf Daten, die drei Ebenen tief ist gebunden ist, und jedes Element wird angezeigt, einem <xref:System.Windows.Controls.TextBlock>.  Die <xref:System.Windows.Controls.TextBlock> Objekte in der ersten Ebene haben die gleichen Werte, die <xref:System.Windows.Controls.TextBlock> Objekte in der zweiten Ebene verwenden wechselnde Werte für die <xref:System.Windows.Controls.TextBlock.FontStyle%2A> -Eigenschaft, und die <xref:System.Windows.Controls.TextBlock> Objekte in der dritten Ebene verwenden wechselnde Werte für die <xref:System.Windows.Controls.TextBlock.Background%2A> Eigenschaft.  
  
 Da die <xref:System.Windows.HierarchicalDataTemplate> für die erste Ebene `Level1Data`, hat die <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> -Eigenschaft auf 2 festlegen, die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> für die <xref:System.Windows.Controls.TreeViewItem> Objekte in der zweiten Ebene wechselt zwischen 0 und 1. In der <xref:System.Windows.HierarchicalDataTemplate> für die zweite Ebene `Level2Data`, die <xref:System.Windows.Controls.TextBlock.FontStyle%2A> von der <xref:System.Windows.Controls.TextBlock> gebunden ist die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> und ein <xref:System.Windows.Controls.AlternationConverter> wird bereitgestellt, um das Konvertieren der <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> in einen abwechselnden <xref:System.Windows.Controls.TextBlock.FontStyle%2A>.  Eine ähnliche Beziehung besteht zwischen `Level2Data` und `Level3Data`: die <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> auf 3 festgelegt ist, die auf `Level2Data`, und die <xref:System.Windows.Controls.TextBlock> in `Level3Ddata` hat seine <xref:System.Windows.Controls.TextBlock.Background%2A> Eigenschaft gebunden wird, um die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>.  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Data.BindingGroup" /> ab, die in die einzelnen untergeordneten Elemente kopiert wird, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.Data.BindingGroup" />, die in die einzelnen untergeordneten Elemente kopiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Festlegen der <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> -Eigenschaft, jedes Elementcontainer Ruft eine <xref:System.Windows.Data.BindingGroup> , hat die gleiche <xref:System.Windows.Controls.ValidationRule> Objekte wie die <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A>, jedoch die Eigenschaften, die beschreiben, wie z. B. die Daten in den Bindungen <xref:System.Windows.Data.BindingGroup.Items%2A> und <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A>, sind auf die Daten für jedes Element in der <xref:System.Windows.Controls.ItemsControl>.  Sie müssen die Elementcontainer zugreifen <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> auszuführenden Vorgänge wie Überprüfung der Daten und die Überprüfung auf Fehler für ein Element.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Style" /> ab, der auf die Elementcontainer für die einzelnen untergeordneten Elemente angewendet wird, oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Windows.Style" />, der auf die Elementcontainer für die einzelnen untergeordneten Elemente angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft oder die <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> Eigenschaft, legen Sie einen Stil für die Darstellung der Elemente beeinflussen, die die Datenelemente enthalten. Z. B. für <xref:System.Windows.Controls.TreeView>, sind die generierten Container <xref:System.Windows.Controls.TreeViewItem> steuert; für <xref:System.Windows.Controls.Menu>, sie sind <xref:System.Windows.Controls.MenuItem> Steuerelemente.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Controls.TreeView> , einen Stil für Elemente in der ersten Ebene und einem anderen Stil für Elemente auf der zweiten Ebene.  Das Format für die erste Ebene wird festgelegt, der <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> Eigenschaft von der <xref:System.Windows.Controls.TreeView>.  Das Format für die zweite Ebene wird festgelegt, der <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft von der <xref:System.Windows.HierarchicalDataTemplate>.  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 Im folgende Beispiel werden die Daten, die verwendet werden, im vorherigen Beispiel erstellt.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Formatauswahllogik für einen Stil ab, der auf alle Elementcontainer angewendet werden kann, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Controls.StyleSelector" />, der den Stil auswählt, der als <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" /> verwendet werden soll. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft, legen Sie einen Stil für die Darstellung der Elemente beeinflussen, die die Datenelemente enthalten. Z. B. für <xref:System.Windows.Controls.TreeView>, sind die generierten Container <xref:System.Windows.Controls.TreeViewItem> steuert; für <xref:System.Windows.Controls.Menu>, sie sind <xref:System.Windows.Controls.MenuItem> Steuerelemente. Wenn Sie mehr als eine Formatvorlage definiert haben und Logik, um die anzuwendende auswählen zur Verfügung stellen müssen, verwenden Sie die <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> -Eigenschaft anstelle der <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft. Beachten Sie, dass diese Eigenschaft ignoriert, wenn die <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> festgelegt wird.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Controls.TreeView> , verwendet der <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> von einer <xref:System.Windows.HierarchicalDataTemplate> zur Wahl zwischen zwei Formate für Elemente in der zweiten Ebene der <xref:System.Windows.Controls.TreeView>.  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 Das folgende Beispiel zeigt die <xref:System.Windows.Controls.StyleSelector> , die im vorherigen Beispiel verwendet wird.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 Im folgende Beispiel werden die Daten, die verwendet werden, im vorherigen Beispiel erstellt.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen der Bindung für diese Datenvorlage, wodurch angegeben wird, wo sich die Auflistung befindet, die die nächste Ebene in der Datenhierarchie darstellt.</summary>
        <value>Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies gilt für die <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Eigenschaft auf einen generierten <xref:System.Windows.Controls.HeaderedItemsControl> (z. B. eine <xref:System.Windows.Controls.MenuItem> oder ein <xref:System.Windows.Controls.TreeViewItem>), um anzugeben, wo der Auflistung befindet, die die nächste Ebene in der Datenhierarchie darstellt.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Für [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Informationen finden Sie unter den <xref:System.Windows.Data.Binding> Typ.  
  
   
  
## Examples  
 Im folgenden Beispiel ist `ListLeagueList` eine Liste von `League`-Objekten. Jedes `League`-Objekt verfügt über einen `Name` und eine Auflistung von `Division`-Objekten. Jede `Division` verfügt über einen `Name` und eine Auflistung von `Team`-Objekten, und `Team`Team-Objekt verfügt über einen `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 Im Beispiel wird gezeigt, die mit der Verwendung von <xref:System.Windows.HierarchicalDataTemplate>, Sie können Listendaten, die anderen Listen enthält leicht anzuzeigen. Im Folgenden finden Sie ein Bildschirmfoto des Beispiels.  
  
 ![Bildschirmabbildung für HierarchicalDataTemplate Beispiel](~/add/media/databinding-hierarchicaldatatemplate.png "HierarchicalDataTemplate-Beispiel-Screenshot")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine kombinierte Zeichenfolge ab, die angibt, wie die Elemente auf der nächsten Ebene der Datenhierarchie formatiert werden sollen, wenn diese als Zeichenfolgen angezeigt werden, oder legt diese fest.</summary>
        <value>Eine kombinierte Zeichenfolge, die angibt, wie die Elemente auf der nächsten Ebene der Datenhierarchie formatiert werden sollen, wenn diese als Zeichenfolgen angezeigt werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.DataTemplate" /> ab, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie Elemente der nächsten Ebene in der Datenhierarchie angezeigt werden sollen, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.DataTemplate" />, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie Elemente der nächsten Ebene in der Datenhierarchie angezeigt werden sollen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Controls.DataTemplateSelector" /> ab, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie eine Vorlage zum Anzeigen von Elementen der nächsten Ebene in der Datenhierarchie ausgewählt werden soll, oder legt diese fest.</summary>
        <value>Das <see cref="T:System.Windows.Controls.DataTemplateSelector" />-Objekt, das auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie eine Vorlage zum Anzeigen von Elementen der nächsten Ebene in der Datenhierarchie ausgewählt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>