<Type Name="HierarchicalDataTemplate" FullName="System.Windows.HierarchicalDataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7f1d497166bf0d971cafea6e1b223e27f0621957" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86697699" /></Metadata><TypeSignature Language="C#" Value="public class HierarchicalDataTemplate : System.Windows.DataTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HierarchicalDataTemplate extends System.Windows.DataTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.HierarchicalDataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class HierarchicalDataTemplate&#xA;Inherits DataTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataTemplate : System::Windows::DataTemplate" />
  <TypeSignature Language="F#" Value="type HierarchicalDataTemplate = class&#xA;    inherit DataTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DataTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine <see cref="T:System.Windows.DataTemplate" /> dar, die <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> unterstützt, z. B. <see cref="T:System.Windows.Controls.TreeViewItem" /> oder <see cref="T:System.Windows.Controls.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel ist `ListLeagueList` eine Liste von `League`-Objekten. Jedes `League`-Objekt verfügt über einen `Name` und eine Auflistung von `Division`-Objekten. Jede `Division` verfügt über einen `Name` und eine Auflistung von `Team`-Objekten, und `Team`Team-Objekt verfügt über einen `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 Das Beispiel zeigt, dass Sie bei Verwendung von <xref:System.Windows.HierarchicalDataTemplate> problemlos Listen Daten anzeigen können, die andere Listen enthalten. Im Folgenden finden Sie ein Bildschirmfoto des Beispiels.  
  
 ![Bildschirmabbildung für HierarchicalDataTemplate-Beispiel](~/add/media/databinding-hierarchicaldatatemplate.png "Bildschirmabbildung für HierarchicalDataTemplate-Beispiel")  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HierarchicalDataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.HierarchicalDataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HierarchicalDataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.HierarchicalDataTemplate : obj -&gt; System.Windows.HierarchicalDataTemplate" Usage="new System.Windows.HierarchicalDataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Der Typ, für den diese Vorlage bestimmt ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.HierarchicalDataTemplate" />-Klasse mit dem angegebenen Typ, für den die Vorlage bestimmt ist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der- `dataType` Parameter ist entweder ein- [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Objekt oder eine Zeichenfolge, die ein [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] Element darstellt. Weitere Informationen finden Sie unter [Übersicht über Bindungs Quellen](/dotnet/framework/wpf/data/binding-sources-overview).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternationCount">
      <MemberSignature Language="C#" Value="public int AlternationCount { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AlternationCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberSignature Language="VB.NET" Value="Public Property AlternationCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AlternationCount { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AlternationCount : int with get, set" Usage="System.Windows.HierarchicalDataTemplate.AlternationCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der abwechselnden Elementcontainer für die untergeordneten Elemente ab oder legt diese fest.</summary>
        <value>Die Anzahl der abwechselnden Elementcontainer für die nächste Ebene von Elementen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A>Mit der-Eigenschaft und der-Eigenschaft <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> können Sie die Darstellung für mindestens zwei abwechselnde Element Container angeben. Sie können z. b. für jedes dritte Element in eine abwechselnde Hintergrundfarbe angeben <xref:System.Windows.Controls.ItemsControl> .  Der <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> wird jedem Element Container in zugewiesen <xref:System.Windows.Controls.ItemsControl> .  <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> beginnt bei 0, erhöht sich, bis es <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> minus 1 ist, und startet dann bei 0 neu. Wenn beispielsweise den Wert <xref:System.Windows.Controls.ItemsControl.AlternationCount%2A> 3 hat und sieben Elemente im vorhanden sind <xref:System.Windows.Controls.ItemsControl> , wird in der folgenden Tabelle die <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> für jedes Element aufgelistet.  
  
|Position des Elements im <xref:System.Windows.Controls.ItemsControl>|<xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType>|  
|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|1|0|  
|2|1|  
|3|2|  
|4|0|  
|5|1|  
|6|2|  
|7|0|  
  
 Wenn Sie die- <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> Eigenschaft festlegen, weisen Sie darauf hin, dass die untergeordneten Elemente einen <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> in diesem Bereich erhalten sollen, nicht das Element, auf das diese <xref:System.Windows.HierarchicalDataTemplate> angewendet wurde. Wenn z. b. ein <xref:System.Windows.Controls.HeaderedItemsControl> aufgerufener `aHeaderedItemsControl` <xref:System.Windows.HierarchicalDataTemplate> mit dem <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> Satz verwendet, verfügen die Element Container der untergeordneten Elemente von `aHeaderedItemsControl` über <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> , nicht über den Element Container für `aHeaderedItemsControl` .  
  
 Es gibt mehrere Methoden, die Sie verwenden können, um unterschiedliche Darstellungen für die abwechselnden Element Container anzugeben. Eine Methode besteht darin, die Eigenschaften des Items-Containers an den zu binden <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> . Anschließend können Sie mit einem <xref:System.Windows.Controls.AlternationConverter> angeben, welcher Wert auf den Element Container angewendet werden soll, der einen bestimmten <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> Wert aufweist. Sie können auch Trigger verwenden, um den Wert der-Eigenschaft eines Element Containers abhängig vom Wert seiner zu ändern <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> .  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Controls.TreeView> -Objekt erstellt, das an Daten gebunden ist, die drei Ebenen tief sind, und jedes Element wird in einem angezeigt <xref:System.Windows.Controls.TextBlock> .  Die <xref:System.Windows.Controls.TextBlock> Objekte in der ersten Ebene verfügen über dieselben Eigenschaftswerte, die <xref:System.Windows.Controls.TextBlock> Objekte auf der zweiten Ebene verwenden abwechselnde Werte für die <xref:System.Windows.Controls.TextBlock.FontStyle%2A> -Eigenschaft, und die- <xref:System.Windows.Controls.TextBlock> Objekte auf der dritten Ebene verwenden abwechselnde Werte für die- <xref:System.Windows.Controls.TextBlock.Background%2A> Eigenschaft.  
  
 Da <xref:System.Windows.HierarchicalDataTemplate> für die erste Ebene, `Level1Data` , die- <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> Eigenschaft auf 2 festgelegt ist, wird die-Eigenschaft <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> für die- <xref:System.Windows.Controls.TreeViewItem> Objekte in der zweiten Ebene zwischen 0 und 1 geändert. In der <xref:System.Windows.HierarchicalDataTemplate> für die zweite Ebene, `Level2Data` , <xref:System.Windows.Controls.TextBlock.FontStyle%2A> wird der der an <xref:System.Windows.Controls.TextBlock> den gebunden, <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> und <xref:System.Windows.Controls.AlternationConverter> es wird eine bereitgestellt, um den <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> in eine abwechselnde zu konvertieren <xref:System.Windows.Controls.TextBlock.FontStyle%2A> .  Zwischen und besteht eine ähnliche `Level2Data` Beziehung `Level3Data` : die <xref:System.Windows.HierarchicalDataTemplate.AlternationCount%2A> wird auf 3 on festgelegt `Level2Data` , und die- <xref:System.Windows.Controls.TextBlock> Eigenschaft in ist an `Level3Ddata` <xref:System.Windows.Controls.TextBlock.Background%2A> die gebunden <xref:System.Windows.Controls.ItemsControl.AlternationIndex%2A?displayProperty=nameWithType> .  
  
 [!code-xaml[AlternationIndexSnippets#5](~/samples/snippets/csharp/VS_Snippets_Wpf/AlternationIndexSnippets/CS/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemBindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup ItemBindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup ItemBindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemBindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ ItemBindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemBindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemBindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Data.BindingGroup" /> ab, die in die einzelnen untergeordneten Elemente kopiert wird, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.Data.BindingGroup" />, die in die einzelnen untergeordneten Elemente kopiert wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die- <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> Eigenschaft festlegen, ruft jeder Element Container ein-Objekt <xref:System.Windows.Data.BindingGroup> ab, das die gleichen <xref:System.Windows.Controls.ValidationRule> Objekte wie hat <xref:System.Windows.Controls.ItemsControl.ItemBindingGroup%2A> , aber die Eigenschaften, die die Daten in den Bindungen beschreiben, z <xref:System.Windows.Data.BindingGroup.Items%2A> . b <xref:System.Windows.Data.BindingGroup.BindingExpressions%2A> . und, sind spezifisch für die Daten der einzelnen Elemente in der <xref:System.Windows.Controls.ItemsControl> .  Sie müssen auf den Element Container zugreifen <xref:System.Windows.FrameworkContentElement.BindingGroup%2A> , um Vorgänge wie das Überprüfen der Daten und das Überprüfen auf Fehler eines Elements auszuführen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style ItemContainerStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style ItemContainerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ ItemContainerStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyle : System.Windows.Style with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.Style" /> ab, der auf die Elementcontainer für die einzelnen untergeordneten Elemente angewendet wird, oder legt diesen fest.</summary>
        <value>Der <see cref="T:System.Windows.Style" />, der auf die Elementcontainer für die einzelnen untergeordneten Elemente angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden diese Eigenschaft oder die- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> Eigenschaft, um einen Stil festzulegen, der die Darstellung der Elemente beeinflusst, die die Datenelemente enthalten. Beispielsweise sind die generierten Container-Steuerelemente für die-Steuerelemente, und sind-Steuer <xref:System.Windows.Controls.TreeView> <xref:System.Windows.Controls.TreeViewItem> <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.MenuItem> Elemente.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine erstellt <xref:System.Windows.Controls.TreeView> , die einen Stil für Elemente in der ersten Ebene und einen anderen Stil für Elemente in der zweiten Ebene verwendet.  Der Stil für die erste Ebene wird in der- <xref:System.Windows.Controls.ItemsControl.ItemContainerStyle%2A> Eigenschaft des festgelegt <xref:System.Windows.Controls.TreeView> .  Der Stil für die zweite Ebene wird in der- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft des festgelegt <xref:System.Windows.HierarchicalDataTemplate> .  
  
 [!code-xaml[RecycleItemContainerShippets#VirtualizingTreeView](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#virtualizingtreeview)]  
  
 Im folgenden Beispiel werden die Daten erstellt, die im vorherigen Beispiel verwendet werden.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemContainerStyleSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.StyleSelector ItemContainerStyleSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.StyleSelector ItemContainerStyleSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemContainerStyleSelector As StyleSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::StyleSelector ^ ItemContainerStyleSelector { System::Windows::Controls::StyleSelector ^ get(); void set(System::Windows::Controls::StyleSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemContainerStyleSelector : System.Windows.Controls.StyleSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.StyleSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine benutzerdefinierte Formatauswahllogik für einen Stil ab, der auf alle Elementcontainer angewendet werden kann, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.Windows.Controls.StyleSelector" />, der den Stil auswählt, der als <see cref="P:System.Windows.HierarchicalDataTemplate.ItemContainerStyle" /> verwendet werden soll. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mithilfe der- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft können Sie einen Stil festlegen, der sich auf die Darstellung der Elemente auswirkt, die die Datenelemente enthalten. Beispielsweise sind die generierten Container-Steuerelemente für die-Steuerelemente, und sind-Steuer <xref:System.Windows.Controls.TreeView> <xref:System.Windows.Controls.TreeViewItem> <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.MenuItem> Elemente. Wenn Sie mehr als einen Stil definiert haben und eine Logik angeben müssen, um auszuwählen, welche Anwendung angewendet werden soll, verwenden Sie die- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyleSelector%2A> Eigenschaft anstelle der- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft. Beachten Sie, dass diese Eigenschaft ignoriert wird, wenn die- <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> Eigenschaft festgelegt ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine erstellt <xref:System.Windows.Controls.TreeView> , die den einer verwendet, <xref:System.Windows.HierarchicalDataTemplate.ItemContainerStyle%2A> <xref:System.Windows.HierarchicalDataTemplate> um zwischen zwei Stilen für Elemente auf der zweiten Ebene des auszuwählen <xref:System.Windows.Controls.TreeView> .  
  
 [!code-xaml[RecycleItemContainerShippets#ItemContainerStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml#itemcontainerstyleselector)]  
  
 Das folgende Beispiel zeigt den <xref:System.Windows.Controls.StyleSelector> , der im vorherigen Beispiel verwendet wurde.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewitemstyleselector)]
 [!code-vb[RecycleItemContainerShippets#TreeViewItemStyleSelector](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewitemstyleselector)]  
  
 Im folgenden Beispiel werden die Daten erstellt, die im vorherigen Beispiel verwendet werden.  
  
 [!code-csharp[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/csharp/VS_Snippets_Wpf/RecycleItemContainerShippets/CSharp/Window1.xaml.cs#treeviewdata)]
 [!code-vb[RecycleItemContainerShippets#TreeViewData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RecycleItemContainerShippets/visualbasic/window1.xaml.vb#treeviewdata)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingBase ItemsSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingBase ItemsSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemsSource As BindingBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingBase ^ ItemsSource { System::Windows::Data::BindingBase ^ get(); void set(System::Windows::Data::BindingBase ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemsSource : System.Windows.Data.BindingBase with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemsSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen der Bindung für diese Datenvorlage, wodurch angegeben wird, wo sich die Auflistung befindet, die die nächste Ebene in der Datenhierarchie darstellt.</summary>
        <value>Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies wird auf die- <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Eigenschaft für ein generiertes (z. b. <xref:System.Windows.Controls.HeaderedItemsControl> ein <xref:System.Windows.Controls.MenuItem> oder ein <xref:System.Windows.Controls.TreeViewItem> ) angewendet, um anzugeben, wo die Auflistung gesucht werden soll, die die nächste Ebene in der Daten Hierarchie darstellt.  
  
<a name="xamlTextUsage_ItemsSource"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Weitere [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Informationen finden Sie unter dem- <xref:System.Windows.Data.Binding> Typ.  
  
   
  
## Examples  
 Im folgenden Beispiel ist `ListLeagueList` eine Liste von `League`-Objekten. Jedes `League`-Objekt verfügt über einen `Name` und eine Auflistung von `Division`-Objekten. Jede `Division` verfügt über einen `Name` und eine Auflistung von `Team`-Objekten, und `Team`Team-Objekt verfügt über einen `Name`.  
  
 [!code-xaml[HierarchicalDataTemplateSnippet#HDT](~/samples/snippets/csharp/VS_Snippets_Wpf/HierarchicalDataTemplateSnippet/CS/window1.xaml#hdt)]   
  
 Das Beispiel zeigt, dass Sie bei Verwendung von <xref:System.Windows.HierarchicalDataTemplate> problemlos Listen Daten anzeigen können, die andere Listen enthalten. Im Folgenden finden Sie ein Bildschirmfoto des Beispiels.  
  
 ![Bildschirmabbildung für HierarchicalDataTemplate-Beispiel](~/add/media/databinding-hierarchicaldatatemplate.png "Bildschirmabbildung für HierarchicalDataTemplate-Beispiel")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemStringFormat">
      <MemberSignature Language="C#" Value="public string ItemStringFormat { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemStringFormat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemStringFormat As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemStringFormat { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemStringFormat : string with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemStringFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine kombinierte Zeichenfolge ab, die angibt, wie die Elemente auf der nächsten Ebene der Datenhierarchie formatiert werden sollen, wenn diese als Zeichenfolgen angezeigt werden, oder legt diese fest.</summary>
        <value>Eine kombinierte Zeichenfolge, die angibt, wie die Elemente auf der nächsten Ebene der Datenhierarchie formatiert werden sollen, wenn diese als Zeichenfolgen angezeigt werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ ItemTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Windows.DataTemplate with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.DataTemplate" /> ab, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie Elemente der nächsten Ebene in der Datenhierarchie angezeigt werden sollen, oder legt diese fest.</summary>
        <value>Die <see cref="T:System.Windows.DataTemplate" />, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplate" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie Elemente der nächsten Ebene in der Datenhierarchie angezeigt werden sollen.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTemplateSelector">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.DataTemplateSelector ItemTemplateSelector { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.DataTemplateSelector ItemTemplateSelector" />
      <MemberSignature Language="DocId" Value="P:System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemTemplateSelector As DataTemplateSelector" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::DataTemplateSelector ^ ItemTemplateSelector { System::Windows::Controls::DataTemplateSelector ^ get(); void set(System::Windows::Controls::DataTemplateSelector ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplateSelector : System.Windows.Controls.DataTemplateSelector with get, set" Usage="System.Windows.HierarchicalDataTemplate.ItemTemplateSelector" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.DataTemplateSelector</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Controls.DataTemplateSelector" /> ab, die auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie eine Vorlage zum Anzeigen von Elementen der nächsten Ebene in der Datenhierarchie ausgewählt werden soll, oder legt diese fest.</summary>
        <value>Das <see cref="T:System.Windows.Controls.DataTemplateSelector" />-Objekt, das auf die <see cref="P:System.Windows.Controls.ItemsControl.ItemTemplateSelector" />-Eigenschaft für ein generiertes <see cref="T:System.Windows.Controls.HeaderedItemsControl" /> (z. B. ein <see cref="T:System.Windows.Controls.MenuItem" /> oder ein <see cref="T:System.Windows.Controls.TreeViewItem" />) angewendet wird, um anzugeben, wie eine Vorlage zum Anzeigen von Elementen der nächsten Ebene in der Datenhierarchie ausgewählt werden soll.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
