<Type Name="TextDecorationCollection+Enumerator" FullName="System.Windows.TextDecorationCollection+Enumerator">
  <TypeSignature Language="C#" Value="public struct TextDecorationCollection.Enumerator : System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt;" />
  <TypeSignature Language="ILAsm" Value=".class nested public sequential ansi sealed beforefieldinit TextDecorationCollection/Enumerator extends System.ValueType implements class System.Collections.Generic.IEnumerator`1&lt;class System.Windows.TextDecoration&gt;, class System.Collections.IEnumerator, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.TextDecorationCollection.Enumerator" />
  <TypeSignature Language="VB.NET" Value="Public Structure TextDecorationCollection.Enumerator&#xA;Implements IEnumerator(Of TextDecoration)" />
  <TypeSignature Language="C++ CLI" Value="public: value class TextDecorationCollection::Enumerator : System::Collections::Generic::IEnumerator&lt;System::Windows::TextDecoration ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerator&lt;System.Windows.TextDecoration&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="af2e6-101">Zählt die <see cref="T:System.Windows.TextDecoration" />-Elemente in einer <see cref="T:System.Windows.TextDecoration" /> auf.</span><span class="sxs-lookup"><span data-stu-id="af2e6-101">Enumerates <see cref="T:System.Windows.TextDecoration" /> items in a <see cref="T:System.Windows.TextDecoration" />.</span></span></summary>
    <remarks>To be added.</remarks>
    <altmember cref="T:System.Windows.TextDecoration" />
    <altmember cref="T:System.Collections.IEnumerable" />
  </Docs>
  <Members>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public System.Windows.TextDecoration Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TextDecoration Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Enumerator.Current" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Current As TextDecoration" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextDecoration ^ Current { System::Windows::TextDecoration ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IEnumerator`1.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextDecoration</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af2e6-102">Ruft das aktuelle Element in der Auflistung ab.</span><span class="sxs-lookup"><span data-stu-id="af2e6-102">Gets the current element in the collection.</span></span></summary>
        <value><span data-ttu-id="af2e6-103">Das aktuelle <see cref="T:System.Windows.TextDecoration" /> in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="af2e6-103">The current <see cref="T:System.Windows.TextDecoration" /> in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveNext">
      <MemberSignature Language="C#" Value="public bool MoveNext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveNext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Enumerator.MoveNext" />
      <MemberSignature Language="VB.NET" Value="Public Function MoveNext () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveNext();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.MoveNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af2e6-104">Setzt den Enumerator auf das nächste Element in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="af2e6-104">Advances the enumerator to the next element in the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="af2e6-105"><see langword="true" />, wenn der Enumerator erfolgreich auf das nächste Element gesetzt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="af2e6-105"><see langword="true" /> if the enumerator successfully advanced to the next element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af2e6-106">Diese Methode gibt auch zurück `false` , wenn der Enumerator das letzte Element in der Auflistung überschritten hat.</span><span class="sxs-lookup"><span data-stu-id="af2e6-106">This method also returns `false` if the enumerator has passed the final element in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Enumerator.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerator.Reset</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af2e6-107">Setzt den Enumerator auf seine anfängliche Position vor dem ersten Element in der Auflistung zurück.</span><span class="sxs-lookup"><span data-stu-id="af2e6-107">Resets the enumerator to its initial position, which is before the first element in the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerator.Current">
      <MemberSignature Language="C#" Value="object System.Collections.IEnumerator.Current { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IEnumerator.Current" />
      <MemberSignature Language="DocId" Value="P:System.Windows.TextDecorationCollection.Enumerator.System#Collections#IEnumerator#Current" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Current As Object Implements IEnumerator.Current" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IEnumerator.Current { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IEnumerator.Current</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="af2e6-108">Eine Beschreibung dieser Member finden Sie unter <see cref="P:System.Collections.IEnumerator.Current" />.</span><span class="sxs-lookup"><span data-stu-id="af2e6-108">For a description of this members, see <see cref="P:System.Collections.IEnumerator.Current" />.</span></span></summary>
        <value><span data-ttu-id="af2e6-109">Das aktuelle Element in der Auflistung.</span><span class="sxs-lookup"><span data-stu-id="af2e6-109">The current element in the collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af2e6-110">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="af2e6-110">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af2e6-111">Er kann nur verwendet werden, wenn die <xref:System.Windows.TextDecorationCollection.Enumerator>-Instanz in eine <xref:System.Collections.IEnumerator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="af2e6-111">It can be used only when the <xref:System.Windows.TextDecorationCollection.Enumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.TextDecorationCollection.Enumerator.Current" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.TextDecorationCollection.Enumerator.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="af2e6-112">Eine Beschreibung dieser Member finden Sie unter <see cref="M:System.IDisposable.Dispose" />.</span><span class="sxs-lookup"><span data-stu-id="af2e6-112">For a description of this members, see <see cref="M:System.IDisposable.Dispose" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="af2e6-113">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="af2e6-113">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="af2e6-114">Er kann nur verwendet werden, wenn die <xref:System.Windows.TextDecorationCollection.Enumerator>-Instanz in eine <xref:System.Collections.IEnumerator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="af2e6-114">It can be used only when the <xref:System.Windows.TextDecorationCollection.Enumerator> instance is cast to an <xref:System.Collections.IEnumerator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>