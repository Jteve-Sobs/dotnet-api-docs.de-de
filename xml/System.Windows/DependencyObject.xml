<Type Name="DependencyObject" FullName="System.Windows.DependencyObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c5652ff55f90cc72dcdbf7f830e6d730953e6168" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37550069" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DependencyObject : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DependencyObject extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyObject" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyObject&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyObject : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type DependencyObject = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeDescriptionProvider(typeof(MS.Internal.ComponentModel.DependencyObjectProvider))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.NameScopeProperty("NameScope", typeof(System.Windows.NameScope))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0310b-101">Represents an object that participates in the dependency property system.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0310b-101">Represents an object that participates in the dependency property system.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-102">Die <xref:System.Windows.DependencyObject> -Klasse ermöglicht es [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Dienste für das System für alle abgeleiteten Klassen.</span><span class="sxs-lookup"><span data-stu-id="0310b-102">The <xref:System.Windows.DependencyObject> class enables [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] property system services on its many derived classes.</span></span>  
  
 <span data-ttu-id="0310b-103">Primäre Funktion des Eigenschaftensystems ist, berechnen Sie die Werte der Eigenschaften und Benachrichtigung des Systems zu Werten bereitzustellen, die geändert wurden.</span><span class="sxs-lookup"><span data-stu-id="0310b-103">The property system's primary function is to compute the values of properties, and to provide system notification about values that have changed.</span></span> <span data-ttu-id="0310b-104">Eine andere wichtige-Klasse, die im Eigenschaftensystem beteiligt ist, ist <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="0310b-104">Another key class that participates in the property system is <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="0310b-105"><xref:System.Windows.DependencyProperty> ermöglicht die Registrierung von Abhängigkeitseigenschaften im Eigenschaftensystem und stellt die Identifikation und Informationen über jede Abhängigkeitseigenschaft während <xref:System.Windows.DependencyObject> ermöglicht eine Basisklasse die Objekte, die die Abhängigkeitseigenschaften verwendet.</span><span class="sxs-lookup"><span data-stu-id="0310b-105"><xref:System.Windows.DependencyProperty> enables the registration of dependency properties into the property system, and provides identification and information about each dependency property, whereas <xref:System.Windows.DependencyObject> as a base class enables objects to use the dependency properties.</span></span>  
  
 <span data-ttu-id="0310b-106"><xref:System.Windows.DependencyObject> Dienste und Merkmale umfassen Folgendes:</span><span class="sxs-lookup"><span data-stu-id="0310b-106"><xref:System.Windows.DependencyObject> services and characteristics include the following:</span></span>  
  
-   <span data-ttu-id="0310b-107">Unterstützung für das hosting-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-107">Dependency property hosting support.</span></span> <span data-ttu-id="0310b-108">Sie registrieren eine Abhängigkeitseigenschaft durch Aufrufen der <xref:System.Windows.DependencyProperty.Register%2A> -Methode, und Speichern von der Methodenrückgabewert als öffentliches statisches Feld in der Klasse.</span><span class="sxs-lookup"><span data-stu-id="0310b-108">You register a dependency property by calling the <xref:System.Windows.DependencyProperty.Register%2A> method, and storing the method's return value as a public static field in your class.</span></span>  
  
-   <span data-ttu-id="0310b-109">Angefügte Eigenschaft, die Unterstützung für das hosting.</span><span class="sxs-lookup"><span data-stu-id="0310b-109">Attached property hosting support.</span></span> <span data-ttu-id="0310b-110">Sie Registrieren einer angefügten Eigenschaft durch Aufrufen der <xref:System.Windows.DependencyProperty.RegisterAttached%2A> -Methode, und Speichern der Rückgabewert der Methode als öffentliche statische schreibgeschützte Feld in der Klasse.</span><span class="sxs-lookup"><span data-stu-id="0310b-110">You register an attached property by calling the <xref:System.Windows.DependencyProperty.RegisterAttached%2A> method, and storing the method's return value as a public static read-only field in your class.</span></span> <span data-ttu-id="0310b-111">(Es gibt auch zusätzliche Memberanforderungen vor; Beachten Sie, dass dies stellt eine [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] bestimmte Implementierung für angefügte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-111">(There are also additional member requirements; note that this represents a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] specific implementation for attached properties.</span></span> <span data-ttu-id="0310b-112">Weitere Informationen finden Sie unter [Übersicht über angefügte Eigenschaften](~/docs/framework/wpf/advanced/attached-properties-overview.md).) Die angefügte Eigenschaft klicken Sie dann für jede abgeleitete Klasse festgelegt werden kann <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="0310b-112">For details, see [Attached Properties Overview](~/docs/framework/wpf/advanced/attached-properties-overview.md).) Your attached property can then be set on any class that derives from <xref:System.Windows.DependencyObject>.</span></span>  
  
-   <span data-ttu-id="0310b-113">Get-, Set- und Löschen von Hilfsmethoden für die Werte aller Abhängigkeitseigenschaften, die auf vorhanden der <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="0310b-113">Get, set, and clear utility methods for values of any dependency properties that exist on the <xref:System.Windows.DependencyObject>.</span></span>  
  
-   <span data-ttu-id="0310b-114">Metadaten, coerce wertunterstützung, Benachrichtigung der Eigenschaftenänderung und außer Kraft setzen-Rückrufe für Abhängigkeitseigenschaften oder angefügte Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-114">Metadata, coerce value support, property changed notification, and override callbacks for  dependency properties or attached properties.</span></span> <span data-ttu-id="0310b-115">Darüber hinaus die <xref:System.Windows.DependencyObject> Klasse vereinfacht das Eigenschaftenmetadaten für eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-115">Also, the <xref:System.Windows.DependencyObject> class facilitates the per-owner property metadata for a dependency property.</span></span>  
  
-   <span data-ttu-id="0310b-116">Eine allgemeine Basisklasse für Klassen abgeleitet <xref:System.Windows.ContentElement>, <xref:System.Windows.Freezable>, oder <xref:System.Windows.Media.Visual>.</span><span class="sxs-lookup"><span data-stu-id="0310b-116">A common base class for classes derived from <xref:System.Windows.ContentElement>, <xref:System.Windows.Freezable>, or <xref:System.Windows.Media.Visual>.</span></span> <span data-ttu-id="0310b-117">(<xref:System.Windows.UIElement>, Basiselementklasse, verfügt über eine Hierarchie von Klassen, die enthält <xref:System.Windows.Media.Visual>.)</span><span class="sxs-lookup"><span data-stu-id="0310b-117">(<xref:System.Windows.UIElement>, another base element class, has a class hierarchy that includes <xref:System.Windows.Media.Visual>.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-118">Im folgende Beispiel leitet sich von <xref:System.Windows.DependencyObject> um eine neue abstrakte Klasse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="0310b-118">The following example derives from <xref:System.Windows.DependencyObject> to create a new abstract class.</span></span> <span data-ttu-id="0310b-119">Die Klasse dann eine angefügte Eigenschaft registriert und enthält Elemente der Unterstützung für diese angefügte Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-119">The class then registers an attached property and includes support members for that attached property.</span></span>  
  
 [!code-csharp[WPFAquariumSln#DOMain](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#domain)]
 [!code-vb[WPFAquariumSln#DOMain](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#domain)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyObject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0310b-120">Initializes a new instance of the <see cref="T:System.Windows.DependencyObject" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-120">Initializes a new instance of the <see cref="T:System.Windows.DependencyObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ClearValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0310b-121">Clears the local value of a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-121">Clears the local value of a property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.ClearValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-122">The dependency property to be cleared, identified by a <see cref="T:System.Windows.DependencyProperty" /> object reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-122">The dependency property to be cleared, identified by a <see cref="T:System.Windows.DependencyProperty" /> object reference.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-123">Clears the local value of a property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-123">Clears the local value of a property.</span>
          </span>
          <span data-ttu-id="0310b-124">The property to be cleared is specified by a <see cref="T:System.Windows.DependencyProperty" /> identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-124">The property to be cleared is specified by a <see cref="T:System.Windows.DependencyProperty" /> identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-125">Löschen den Wert der Eigenschaft durch den Aufruf <xref:System.Windows.DependencyObject.ClearValue%2A> ist nicht zwingend auf einer Abhängigkeitseigenschaft den Standardwert, der in den Metadaten der Abhängigkeitseigenschaft angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="0310b-125">Clearing the property value by calling <xref:System.Windows.DependencyObject.ClearValue%2A> does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</span></span> <span data-ttu-id="0310b-126">Löschen die Eigenschaft nur speziell löscht der lokaler Wert möglicherweise angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="0310b-126">Clearing the property only specifically clears whatever local value may have been applied.</span></span> <span data-ttu-id="0310b-127">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-127">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-128">Das folgende Beispiel durchläuft alle Eigenschaften, die lokalen Werte, die für ein Objekt festgelegt werden ruft dann <xref:System.Windows.DependencyObject.ClearValue%2A> , deaktivieren Sie die Werte dieser Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-128">The following example iterates all properties that have local values set on an object, then calls <xref:System.Windows.DependencyObject.ClearValue%2A> to clear the values of each such property.</span></span>  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-129">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-129">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="P:System.Windows.DependencyObject.IsSealed" />
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public void ClearValue (System.Windows.DependencyPropertyKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ClearValue(class System.Windows.DependencyPropertyKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ClearValue (key As DependencyPropertyKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ClearValue(System::Windows::DependencyPropertyKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.ClearValue : System.Windows.DependencyPropertyKey -&gt; unit" Usage="dependencyObject.ClearValue key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0310b-130">The key for the dependency property to be cleared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-130">The key for the dependency property to be cleared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-131">Clears the local value of a read-only property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-131">Clears the local value of a read-only property.</span>
          </span>
          <span data-ttu-id="0310b-132">The property to be cleared is specified by a <see cref="T:System.Windows.DependencyPropertyKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-132">The property to be cleared is specified by a <see cref="T:System.Windows.DependencyPropertyKey" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-133">Ein <xref:System.Windows.DependencyPropertyKey> wird eine schreibgeschützte Abhängigkeitseigenschaft für die Operationen des Eigenschaftensystems identifiziert.</span><span class="sxs-lookup"><span data-stu-id="0310b-133">A <xref:System.Windows.DependencyPropertyKey> identifies a read-only dependency property for property system operations.</span></span> <span data-ttu-id="0310b-134">Klassen, die schreibgeschützten Abhängigkeitseigenschaften definieren sollten diesen Schlüssel mit öffentlichem Zugriff nicht verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="0310b-134">Classes that define read-only dependency properties should not expose this key with public access.</span></span> <span data-ttu-id="0310b-135">Ein öffentlich verfügbar gemachte Schlüssel würde einen öffentlichen Code-Pfad, der das Zeichen "schreibgeschützt" der Eigenschaft, die negiert bereitstellen, wenn Methoden, z. B. <xref:System.Windows.DependencyObject.ClearValue%2A> oder <xref:System.Windows.DependencyObject.SetValue%2A> außerhalb der Klasse oder Assembly verweisen auf den Schlüssel aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="0310b-135">A publicly exposed key would provide a public code pathway that negated the read-only character of the property, if methods such as <xref:System.Windows.DependencyObject.ClearValue%2A> or <xref:System.Windows.DependencyObject.SetValue%2A> could be called outside the class or assembly, referencing the key.</span></span>  
  
 <span data-ttu-id="0310b-136">Löschen den Wert der Eigenschaft durch den Aufruf <xref:System.Windows.DependencyObject.ClearValue%2A> ist nicht zwingend auf einer Abhängigkeitseigenschaft den Standardwert, der in den Metadaten der Abhängigkeitseigenschaft angegeben ist.</span><span class="sxs-lookup"><span data-stu-id="0310b-136">Clearing the property value by calling <xref:System.Windows.DependencyObject.ClearValue%2A> does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</span></span> <span data-ttu-id="0310b-137">Löschen des Werts nur speziell löscht der lokaler Wert möglicherweise angewendet wurden.</span><span class="sxs-lookup"><span data-stu-id="0310b-137">Clearing the value only specifically clears whatever local value may have been applied.</span></span> <span data-ttu-id="0310b-138">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-138">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-139">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-139">Attempted to call <see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /> on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
        <altmember cref="T:System.Windows.DependencyPropertyKey" />
      </Docs>
    </Member>
    <Member MemberName="CoerceValue">
      <MemberSignature Language="C#" Value="public void CoerceValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CoerceValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CoerceValue (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CoerceValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.CoerceValue : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.CoerceValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-140">The identifier for the dependency property to coerce.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-140">The identifier for the dependency property to coerce.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-141">Coerces the value of the specified dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-141">Coerces the value of the specified dependency property.</span>
          </span>
          <span data-ttu-id="0310b-142">This is accomplished by invoking any <see cref="T:System.Windows.CoerceValueCallback" /> function specified in property metadata for the dependency property as it exists on the calling <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-142">This is accomplished by invoking any <see cref="T:System.Windows.CoerceValueCallback" /> function specified in property metadata for the dependency property as it exists on the calling <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-143">Zusätzlich zum expliziten Aufruf durch den Aufruf <xref:System.Windows.DependencyObject.CoerceValue%2A>, <xref:System.Windows.CoerceValueCallback> für eine Abhängigkeit aufgerufen, wenn intern, wenn der Wert der Abhängigkeitseigenschaft von erneut bewertet wird die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Eigenschaftensystem.</span><span class="sxs-lookup"><span data-stu-id="0310b-143">In addition to being explicitly invoked through calling <xref:System.Windows.DependencyObject.CoerceValue%2A>, the <xref:System.Windows.CoerceValueCallback> for a dependency property is also invoked internally whenever the dependency property value is being re-evaluated by the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system.</span></span>  
  
 <span data-ttu-id="0310b-144">Beim Aufruf der <xref:System.Windows.DependencyObject.CoerceValue%2A> -Methode, Sie letztendlich den Rückruf zum Wert für die Eigenschaft, die Sie angeben.</span><span class="sxs-lookup"><span data-stu-id="0310b-144">When you invoke the <xref:System.Windows.DependencyObject.CoerceValue%2A> method, you are ultimately invoking the coerce value callback for the property that you specify.</span></span> <span data-ttu-id="0310b-145">In der Regel rufen Sie <xref:System.Windows.DependencyObject.CoerceValue%2A> nur, wenn Sie wissen, dass ein Coerce-Wert vorhanden ist und Sie wissen, dass der Rückruf die Kriterien für die Umwandlung.</span><span class="sxs-lookup"><span data-stu-id="0310b-145">Typically you will invoke <xref:System.Windows.DependencyObject.CoerceValue%2A> only if you know that a coerce value callback exists, and if you know the callback's criteria for coercion.</span></span>  
  
 <span data-ttu-id="0310b-146">Das häufigste Szenario für den Aufruf <xref:System.Windows.DependencyObject.CoerceValue%2A> befindet sich innerhalb der Klasse behandeln oder eine Eigenschaft ändern-Rückrufe verwandter Eigenschaften, die anderen Werte in einer abhängigen Weise beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="0310b-146">The most common scenario for calling <xref:System.Windows.DependencyObject.CoerceValue%2A> is within class handling or property change callbacks of related properties that influence each other's values in a dependent way.</span></span> <span data-ttu-id="0310b-147">Weitere Informationen finden Sie unter [Rückrufe und Validierung von Abhängigkeitseigenschaften](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-147">For more information, see [Dependency Property Callbacks and Validation](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-148">Im folgenden Beispiel wird <xref:System.Windows.DependencyObject.CoerceValue%2A> innerhalb einer <xref:System.Windows.PropertyChangedCallback> -Implementierung, die verwendet wird, als die <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> für eine andere Abhängigkeitseigenschaften für die gleiche Klasse.</span><span class="sxs-lookup"><span data-stu-id="0310b-148">The following example calls <xref:System.Windows.DependencyObject.CoerceValue%2A> within a <xref:System.Windows.PropertyChangedCallback> implementation that is used as the <xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A> for a different dependency properties on the same class.</span></span> <span data-ttu-id="0310b-149">Dies ist ein häufiges Muster für das Einführen von Wert "true"-Abhängigkeiten zwischen Abhängigkeitseigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-149">This is a common pattern for introducing true value dependencies between dependency properties.</span></span>  
  
 [!code-csharp[DPCallbackOverride#OnPCCurrent](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCallbackOverride/CSharp/SDKSampleLibrary/class1.cs#onpccurrent)]
 [!code-vb[DPCallbackOverride#OnPCCurrent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCallbackOverride/visualbasic/sdksamplelibrary/class1.vb#onpccurrent)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-150">The specified <paramref name="dp" /> or its value were invalid or do not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-150">The specified <paramref name="dp" /> or its value were invalid or do not exist.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.CoerceValueCallback" />
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="DependencyObjectType">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObjectType DependencyObjectType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObjectType DependencyObjectType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.DependencyObjectType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyObjectType As DependencyObjectType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObjectType ^ DependencyObjectType { System::Windows::DependencyObjectType ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyObjectType : System.Windows.DependencyObjectType" Usage="System.Windows.DependencyObject.DependencyObjectType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObjectType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0310b-151">Gets the <see cref="T:System.Windows.DependencyObjectType" /> that wraps the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] type of this instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-151">Gets the <see cref="T:System.Windows.DependencyObjectType" /> that wraps the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] type of this instance.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0310b-152">Ein <see cref="T:System.Windows.DependencyObjectType" /> , umschließt der [! Include[TLA2#tla_clr](~/Includes/tla2sharptla-CLR-MD.MD)]-Typ dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-152">A <see cref="T:System.Windows.DependencyObjectType" /> that wraps the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] type of this instance.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-153">Diese Eigenschaft ist nützlich, wenn ein Objekt, das von einer Methode zurückgegeben wird einen Typ des Rückgabewerts <xref:System.Windows.DependencyObject> und Sie spezifische Vorgänge des Eigenschaftensystems darauf abhängig von deren Typ ausführen möchten.</span><span class="sxs-lookup"><span data-stu-id="0310b-153">This property is useful if an object that is returned from a method has a return value type of <xref:System.Windows.DependencyObject> and you want to perform property system specific operations on it depending on its type.</span></span> <span data-ttu-id="0310b-154">Beispielsweise ist es effizienter, rufen Sie <xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29> mithilfe der <xref:System.Windows.DependencyObjectType> anstelle der [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Typ.</span><span class="sxs-lookup"><span data-stu-id="0310b-154">For example it is more efficient to call <xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29> using the <xref:System.Windows.DependencyObjectType> rather than the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] type.</span></span> <span data-ttu-id="0310b-155"><xref:System.Windows.DependencyObjectType> ermöglicht eine schnellere Suche.</span><span class="sxs-lookup"><span data-stu-id="0310b-155"><xref:System.Windows.DependencyObjectType> facilitates faster lookup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-156">Im folgenden Pseudocodebeispiel `MySubClass` erwartet, dass abgeleitete Klassen den Standardwert ändern, können die `MyCustom` Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-156">In the following pseudocode example, `MySubClass` anticipates that additional derived classes might change the default value of the `MyCustom` dependency property.</span></span> <span data-ttu-id="0310b-157">Die Klasse implementiert einen Standardkonstruktor, der die tatsächliche abgeleitete Klasse bestimmen kann, durch die Nutzung von Polymorphie auf die <xref:System.Windows.DependencyObjectType> Wert diesen Konstruktor verwendet wird, wie eine abgeleitete Klasse zurückgreift.</span><span class="sxs-lookup"><span data-stu-id="0310b-157">The class implements a default constructor that can determine the actual derived class by taking advantage of polymorphism on the <xref:System.Windows.DependencyObjectType> value whenever that constructor is used as a derived class instantiator.</span></span>  
  
 `public DOClass() : base()`  
  
 `{`  
  
 `__customPropertyCache = (CustomDP)`  
  
 `CustomDPProperty.GetMetadata(DependencyObjectType).DefaultValue;`  
  
 `}`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />
        <altmember cref="T:System.Windows.DependencyObjectType" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override sealed bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyObject.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="0310b-158">The <see cref="T:System.Windows.DependencyObject" /> to compare to the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-158">The <see cref="T:System.Windows.DependencyObject" /> to compare to the current instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-159">Determines whether a provided <see cref="T:System.Windows.DependencyObject" /> is equivalent to the current <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-159">Determines whether a provided <see cref="T:System.Windows.DependencyObject" /> is equivalent to the current <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-160">
            <see langword="true" /> if the two instances are the same; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-160">
              <see langword="true" /> if the two instances are the same; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-161">Diese Implementierung wird nur auf Verweisgleichheit und versucht nicht, die Wertgleichheit der enthaltenen Eigenschaften ausgewertet.</span><span class="sxs-lookup"><span data-stu-id="0310b-161">This implementation is reference equality only, and does not attempt to evaluate value equality of the contained properties.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0310b-162">
            <para>
              <see cref="T:System.Windows.DependencyObject" /> überschreibt und versiegelt anschließend zwei Basic <see cref="T:System.Object" /> Methoden: <see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /> und <see cref="M:System.Windows.DependencyObject.GetHashCode" />. Der Aufruf überschreibt die <see cref="T:System.Object" /> Implementierungen, die ein Objekt auf Gleichheit Verhalten. Der Zweck der arbeitsaufwendig beabsichtigt wird verhindert, dass abgeleitete Klassen möchten, definieren Sie eine Wertgleichheit für einen <see cref="T:System.Windows.DependencyObject" />. Wert Gleichheitsprädikate für <see cref="T:System.Windows.DependencyObject" /> werden nie genau aufgrund der ausgeprägten Eigenschaft verändernder Funktionen eine <see cref="T:System.Windows.DependencyObject" /> und der Abhängigkeitseigenschaften. Dazu gehören grundlegende [! Include[TLA2#tla_winclient](~/Includes/tla2sharptla-WinClient-MD.MD)]-Features wie z. B. die Datenbindung und [! Include[TLA2#tla_winclient](~/Includes/tla2sharptla-WinClient-MD.MD)]-Eigenschaftensystems.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-162">
              <para>
                <see cref="T:System.Windows.DependencyObject" /> overrides and then seals two basic <see cref="T:System.Object" /> methods: <see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /> and <see cref="M:System.Windows.DependencyObject.GetHashCode" />. The overrides call the <see cref="T:System.Object" /> implementations, resulting in an object equality behavior. The purpose of these deliberate overrides is to prevent derived classes from trying to define a value equality for a <see cref="T:System.Windows.DependencyObject" />. Value equalities for <see cref="T:System.Windows.DependencyObject" /> will never be accurate because of the innate property value-changing capabilities of a <see cref="T:System.Windows.DependencyObject" /> and its dependency properties. This includes fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features such as data binding and the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override sealed int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyObject.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0310b-163">Gets a hash code for this <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-163">Gets a hash code for this <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-164">A signed 32-bit integer hash code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-164">A signed 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0310b-165">
            <para>
              <see cref="T:System.Windows.DependencyObject" /> überschreibt und versiegelt anschließend zwei <see cref="T:System.Object" /> Methoden: <see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /> und <see cref="M:System.Windows.DependencyObject.GetHashCode" />. Der Aufruf überschreibt die <see cref="T:System.Object" /> Implementierungen, die ein Objekt auf Gleichheit Verhalten. Der Zweck der arbeitsaufwendig beabsichtigt wird verhindert, dass abgeleitete Klassen möchten, definieren Sie eine Wertgleichheit für einen <see cref="T:System.Windows.DependencyObject" />. Wert Gleichheitsprädikate für <see cref="T:System.Windows.DependencyObject" /> werden nie genau aufgrund der ausgeprägten Eigenschaft verändernder Funktionen eine <see cref="T:System.Windows.DependencyObject" /> und der Abhängigkeitseigenschaften. Dazu gehören grundlegende [! Include[TLA2#tla_winclient](~/Includes/tla2sharptla-WinClient-MD.MD)]-Features wie z. B. die Datenbindung und [! Include[TLA2#tla_winclient](~/Includes/tla2sharptla-WinClient-MD.MD)]-Eigenschaftensystems.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-165">
              <para>
                <see cref="T:System.Windows.DependencyObject" /> overrides and then seals two <see cref="T:System.Object" /> methods: <see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /> and <see cref="M:System.Windows.DependencyObject.GetHashCode" />. The overrides call the <see cref="T:System.Object" /> implementations, resulting in an object equality behavior. The purpose of these deliberate overrides is to prevent derived classes from trying to define a value equality for a <see cref="T:System.Windows.DependencyObject" />. Value equalities for <see cref="T:System.Windows.DependencyObject" /> will never be accurate because of the innate property value-changing capabilities of a <see cref="T:System.Windows.DependencyObject" /> and its dependency properties. This includes fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] features such as data binding and the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetLocalValueEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.LocalValueEnumerator GetLocalValueEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.LocalValueEnumerator GetLocalValueEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLocalValueEnumerator () As LocalValueEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::LocalValueEnumerator GetLocalValueEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetLocalValueEnumerator : unit -&gt; System.Windows.LocalValueEnumerator" Usage="dependencyObject.GetLocalValueEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LocalValueEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0310b-166">Creates a specialized enumerator for determining which dependency properties have locally set values on this <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-166">Creates a specialized enumerator for determining which dependency properties have locally set values on this <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-167">A specialized local value enumerator.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-167">A specialized local value enumerator.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-168">Ein *lokaler Wert* wird jeder Wert einer Abhängigkeitseigenschaft, die festgelegt wurde, indem <xref:System.Windows.DependencyObject.SetValue%2A>, im Gegensatz zu anderen Aspekte des Eigenschaftensystems.</span><span class="sxs-lookup"><span data-stu-id="0310b-168">A *local value* is any dependency property value that was set by <xref:System.Windows.DependencyObject.SetValue%2A>, as opposed to other aspects of the property system.</span></span>  
  
 <span data-ttu-id="0310b-169">Die <xref:System.Windows.LocalValueEnumerator> durch den Aufruf <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> können verwendet werden, um die Eigenschaften aufgelistet, die ein lokal festgelegter Wert in eine <xref:System.Windows.DependencyObject> Instanz.</span><span class="sxs-lookup"><span data-stu-id="0310b-169">The <xref:System.Windows.LocalValueEnumerator> obtained by calling <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> can be used to enumerate properties that have a locally set value on a <xref:System.Windows.DependencyObject> instance.</span></span> <span data-ttu-id="0310b-170">Jede dieser Eigenschaften ist dargestellt, im Enumerator durch eine <xref:System.Windows.LocalValueEntry> -Objekt, das Eigenschaften an, die die spezifischen verweisen <xref:System.Windows.DependencyProperty> und die zugehörigen Werte.</span><span class="sxs-lookup"><span data-stu-id="0310b-170">Each such property is represented in the enumerator by a <xref:System.Windows.LocalValueEntry> object, which has properties that reference the specific <xref:System.Windows.DependencyProperty> and its values.</span></span> <span data-ttu-id="0310b-171">Diese Technik aufzulisten, über die lokal festgelegte Werte können verwendet werden für die Optimierung oder für andere lokale Werte, z. B. um zu bestimmen, welche Eigenschaftswerte von einem <xref:System.Windows.DependencyObject> ändern würde, wenn sie gelöscht wurden.</span><span class="sxs-lookup"><span data-stu-id="0310b-171">This technique of enumerating over the locally set values can be used for optimization or for other handling of local values, such as to determine which property values of a <xref:System.Windows.DependencyObject> would change if they were cleared.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="0310b-172">Das zurückgegebene <xref:System.Windows.LocalValueEnumerator> enthält möglicherweise <xref:System.Windows.LocalValueEntry> Datensätze für Abhängigkeitseigenschaften, die schreibgeschützt sind oder Abhängigkeitseigenschaften, deren Werte vom Eigenschaftensystem berechnet werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-172">The returned <xref:System.Windows.LocalValueEnumerator> might contain <xref:System.Windows.LocalValueEntry> records for dependency properties that are read-only, or dependency properties where values are calculated by the property system.</span></span> <span data-ttu-id="0310b-173">Z. B. einen lokalen Wert für ein visuelles Element, das einer festgelegten durch Layout Breite meldet <xref:System.Windows.FrameworkElement.ActualWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="0310b-173">For example, a visual framework element that has an established width through layout will report a local value for <xref:System.Windows.FrameworkElement.ActualWidth%2A>.</span></span> <span data-ttu-id="0310b-174">Wenn Sie lokale Werte abrufen, um diese zurückzusetzen, überprüfen Sie die <xref:System.Windows.DependencyProperty.ReadOnly%2A> Wert der Eigenschaft-ID der einzelnen <xref:System.Windows.LocalValueEntry> zu überprüfen, ob die <xref:System.Windows.DependencyProperty> zweifelhaft ist nicht schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="0310b-174">If you are getting local values in order to reset them, check the <xref:System.Windows.DependencyProperty.ReadOnly%2A> value on the property identifier of each <xref:System.Windows.LocalValueEntry> to verify that the <xref:System.Windows.DependencyProperty> in question is not read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-175">Das folgende Beispiel durchläuft alle Eigenschaften, die lokalen Werte, die für ein Objekt festgelegt werden ruft dann <xref:System.Windows.DependencyObject.ClearValue%2A> , deaktivieren Sie die Werte dieser Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-175">The following example iterates all properties that have local values set on an object, then calls <xref:System.Windows.DependencyObject.ClearValue%2A> to clear the values of each such property.</span></span>  
  
 [!code-csharp[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/csharp/VS_Snippets_Wpf/DPClearValue/CSharp/default.xaml.cs#iteratelocalvaluesandclear)]
 [!code-vb[DPClearValue#IterateLocalValuesAndClear](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPClearValue/VisualBasic/default.xaml.vb#iteratelocalvaluesandclear)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.LocalValueEntry" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.GetValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-176">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-176">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-177">Returns the current effective value of a dependency property on this instance of a <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-177">Returns the current effective value of a dependency property on this instance of a <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-178">Returns the current effective value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-178">Returns the current effective value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-179">Die *effektiven Wert* ist der Wert der Eigenschaft, die vom Eigenschaftensystem für jeden Aufrufer zurückgegeben wird, der den Wert anfordert.</span><span class="sxs-lookup"><span data-stu-id="0310b-179">The *effective value* is the value of the property that is returned by the property system to any caller that is requesting the value.</span></span> <span data-ttu-id="0310b-180">Der effektive Wert ist das Ergebnis des Eigenschaftensystems nach Auswertung aller möglichen Eingaben, die in der System Eigenschaftswert-Rangfolge einbezogen.</span><span class="sxs-lookup"><span data-stu-id="0310b-180">The effective value is the result of the property system having evaluated all the possible inputs that participate in the property system value precedence.</span></span> <span data-ttu-id="0310b-181">Dies schließt die Umwandlung und Animationen.</span><span class="sxs-lookup"><span data-stu-id="0310b-181">This includes coercion and animation.</span></span> <span data-ttu-id="0310b-182">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-182">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="0310b-183">Diese Methode gibt nie <xref:System.Windows.DependencyProperty.UnsetValue>.</span><span class="sxs-lookup"><span data-stu-id="0310b-183">This method will never return <xref:System.Windows.DependencyProperty.UnsetValue>.</span></span> <span data-ttu-id="0310b-184">Die <xref:System.Windows.DependencyProperty.UnsetValue> ist ein Sentinelwert des Eigenschaftensystems, die in unterschiedlichen Kapazitäten, die intern und gelegentlich auch durch Umwandlung Rückrufe verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-184">The <xref:System.Windows.DependencyProperty.UnsetValue> is a sentinel value for the property system that is used in various capacities internally and occasionally also exposed through coercion callbacks.</span></span>  
  
 <span data-ttu-id="0310b-185">Wenn Sie nicht sicher sind, was den Typ der Eigenschaft handelt, können Sie den Bezeichner der angeforderten Abhängigkeitseigenschaft zu bestimmen, ob es eine weitere spezifische ist Abfragen <xref:System.Windows.DependencyProperty.PropertyType%2A> , die der Rückgabewert in konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0310b-185">If you are not sure what the property's type should be, you can query the identifier of the requested dependency property to determine whether there is a more specific <xref:System.Windows.DependencyProperty.PropertyType%2A> that the return value can be converted to.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-186">The specified <paramref name="dp" /> or its value was invalid, or the specified <paramref name="dp" /> does not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-186">The specified <paramref name="dp" /> or its value was invalid, or the specified <paramref name="dp" /> does not exist.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
        <altmember cref="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateProperty">
      <MemberSignature Language="C#" Value="public void InvalidateProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateProperty (dp As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.InvalidateProperty : System.Windows.DependencyProperty -&gt; unit" Usage="dependencyObject.InvalidateProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-187">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to invalidate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-187">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to invalidate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-188">Re-evaluates the effective value for the specified dependency property</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-188">Re-evaluates the effective value for the specified dependency property</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-189">Beim Aufruf <xref:System.Windows.DependencyObject.InvalidateProperty%2A>, alle zugeordneten und anwendbaren <xref:System.Windows.CoerceValueCallback> oder <xref:System.Windows.PropertyChangedCallback> Funktionen registriert wird, für die Abhängigkeitseigenschaft, die aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="0310b-189">When you call <xref:System.Windows.DependencyObject.InvalidateProperty%2A>, any associated and applicable <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions registered for that dependency property might be invoked.</span></span>  
  
 <span data-ttu-id="0310b-190">Aufrufen von <xref:System.Windows.DependencyObject.InvalidateProperty%2A> auf eine Eigenschaft mit dem lokalen Wert hat keine Auswirkungen, da der lokale Wert Vorrang vor anderen Eingaben des Eigenschaft-System, mit Ausnahme von Animationen hat.</span><span class="sxs-lookup"><span data-stu-id="0310b-190">Calling <xref:System.Windows.DependencyObject.InvalidateProperty%2A> on a property that has its local value set will have no effect, because the local value takes precedence over other property system inputs, except for animations.</span></span> <span data-ttu-id="0310b-191">Sie können jedoch aufrufen <xref:System.Windows.DependencyObject.ClearValue%2A>, rufen Sie anschließend <xref:System.Windows.DependencyObject.InvalidateProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="0310b-191">However, you could call <xref:System.Windows.DependencyObject.ClearValue%2A>, then call <xref:System.Windows.DependencyObject.InvalidateProperty%2A>.</span></span> <span data-ttu-id="0310b-192">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-192">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 <span data-ttu-id="0310b-193">Aufrufen von <xref:System.Windows.DependencyObject.InvalidateProperty%2A> ist nicht notwendigerweise auch für viele Szenarien der Dependency-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-193">Calling <xref:System.Windows.DependencyObject.InvalidateProperty%2A> is not necessarily applicable for many dependency property scenarios.</span></span> <span data-ttu-id="0310b-194">Wenn aufgrund von Änderungen in einer der Bestandteile eine Abhängigkeitseigenschaft ungültig wird, wird das Eigenschaftensystem erklärt und wertet die Abhängigkeitseigenschaft automatisch neu aus.</span><span class="sxs-lookup"><span data-stu-id="0310b-194">If a dependency property becomes invalidated because of value changes in any of the constituents, the property system invalidates and re-evaluates the dependency property automatically.</span></span> <span data-ttu-id="0310b-195">Es gibt jedoch noch einige Szenarios, in denen <xref:System.Windows.DependencyObject.InvalidateProperty%2A> eignet.</span><span class="sxs-lookup"><span data-stu-id="0310b-195">However, there are still some appropriate scenarios where <xref:System.Windows.DependencyObject.InvalidateProperty%2A> is useful.</span></span> <span data-ttu-id="0310b-196">Insbesondere können Sie <xref:System.Windows.DependencyObject.InvalidateProperty%2A> in die Coerce-Wert oder eine Eigenschaft geändert Rückruf für eine andere Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-196">In particular, you can use <xref:System.Windows.DependencyObject.InvalidateProperty%2A> inside the coerce value or property changed callback for a different dependency property.</span></span> <span data-ttu-id="0310b-197">Sie können auch <xref:System.Windows.DependencyObject.InvalidateProperty%2A> um eine erneute Auswertung von einer Bindung für eine Datenquelle zu erzwingen, die nicht die empfohlene implementieren kann <xref:System.ComponentModel.INotifyPropertyChanged> Benachrichtigungsmechanismus (vielleicht Datenklassen in Anspruch, kann nicht abgeleitet werden, oder die Daten, in denen eine statische sind, (Element).</span><span class="sxs-lookup"><span data-stu-id="0310b-197">You can also use <xref:System.Windows.DependencyObject.InvalidateProperty%2A> to force re-evaluation of a binding against a data source that is not able to implement the recommended <xref:System.ComponentModel.INotifyPropertyChanged> notification mechanism (perhaps if consuming data classes that cannot be derived from, or where the data is a static member).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-198">Im folgenden Beispiel wird <xref:System.Windows.DependencyObject.InvalidateProperty%2A> ändern für die benutzerdefinierte Eigenschaft jedes Mal, wenn Sie Eigenschaften, die in der Eigenschaft für ungültig erklärten Berechnungen beteiligt sind.</span><span class="sxs-lookup"><span data-stu-id="0310b-198">The following example calls <xref:System.Windows.DependencyObject.InvalidateProperty%2A> on a custom property, whenever properties that are involved in the invalidated property's calculations change.</span></span> <span data-ttu-id="0310b-199">Dies ist eine alternative Methode zum Aufruf der <xref:System.Windows.DependencyObject.CoerceValue%2A> -Methode, da die Eigenschaft für ungültig zu erklären auch jeden Aufruf wird registriert <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>.</span><span class="sxs-lookup"><span data-stu-id="0310b-199">This is an alternative technique to calling the <xref:System.Windows.DependencyObject.CoerceValue%2A> method, because invalidating the property will also call any registered <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>.</span></span>  
  
 [!code-csharp[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertySystemEsoterics/CSharp/SDKSampleLibrary/class1.cs#invalidateproperty)]
 [!code-vb[PropertySystemEsoterics#InvalidateProperty](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertySystemEsoterics/visualbasic/sdksamplelibrary/class1.vb#invalidateproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.DependencyProperty.UnsetValue" />
      </Docs>
    </Member>
    <Member MemberName="IsSealed">
      <MemberSignature Language="C#" Value="public bool IsSealed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSealed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyObject.IsSealed" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSealed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSealed { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSealed : bool" Usage="System.Windows.DependencyObject.IsSealed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0310b-200">Gets a value that indicates whether this instance is currently sealed (read-only).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-200">Gets a value that indicates whether this instance is currently sealed (read-only).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0310b-201">
            <see langword="true" /> Wenn diese Instanz versiegelt ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-201">
              <see langword="true" /> if this instance is sealed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-202">Dieser Wert wird intern festgelegt.</span><span class="sxs-lookup"><span data-stu-id="0310b-202">This value is set internally.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.FrameworkElementFactory" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="dependencyObject.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="0310b-203">Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-203">Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-204">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.DependencyObject" /> has been updated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-204">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.DependencyObject" /> has been updated.</span>
          </span>
          <span data-ttu-id="0310b-205">The specific dependency property that changed is reported in the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-205">The specific dependency property that changed is reported in the event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-206">Diese Methode ist nicht vorgesehen, in der Regel erkennen von Änderungen der einzelnen Eigenschaften oder invalidierungen der Eigenschaften, die pro-Fall zu Fall ausführen.</span><span class="sxs-lookup"><span data-stu-id="0310b-206">This method is not intended to generally detect individual property changes or perform invalidations of properties on a per-case basis.</span></span> <span data-ttu-id="0310b-207"><xref:System.Windows.DependencyObject.OnPropertyChanged%2A> stattdessen für Änderungen der allgemeinen invalidierung-Muster, richtet sich an, wenn bestimmte Informationen über wide Klassifizierungen der Eigenschaften, die bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="0310b-207"><xref:System.Windows.DependencyObject.OnPropertyChanged%2A> is instead intended for modifications of the general invalidation pattern, if certain information is known about wide classifications of properties.</span></span> <span data-ttu-id="0310b-208">Ändert sich beispielsweise einer <xref:System.Windows.Freezable> möglicherweise Änderungen in die Werttypen der der <xref:System.Windows.Freezable>, oder möglicherweise Untereigenschaften, in dem die Änderungen in den anderen sind <xref:System.Windows.Freezable> verweisen.</span><span class="sxs-lookup"><span data-stu-id="0310b-208">For example, changes in a <xref:System.Windows.Freezable> might be changes in the value types of the <xref:System.Windows.Freezable>, or might be subproperties, where the changes are within other <xref:System.Windows.Freezable> references.</span></span> <span data-ttu-id="0310b-209">Die <xref:System.Windows.Freezable> überschreiben Implementierung der <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> verwendet interne Informationen, um zu bestimmen, ob die Eigenschaften sind untergeordnete und entsprechenden Basisklasse Logik für das Vorarbeiten bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0310b-209">The <xref:System.Windows.Freezable> override implementation of <xref:System.Windows.DependencyObject.OnPropertyChanged%2A> uses internal information to determine whether the properties are subproperties, and provides appropriate base class logic for either case.</span></span>  
  
 <span data-ttu-id="0310b-210"><xref:System.Windows.DependencyObject.OnPropertyChanged%2A> oft wird möglicherweise während der Lebensdauer eines Objekts aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-210"><xref:System.Windows.DependencyObject.OnPropertyChanged%2A> is potentially invoked many times during the life of an object.</span></span> <span data-ttu-id="0310b-211">Aus diesem Grund können Sie eine bessere Leistung für das gesamte Eigenschaftensystem erzielen, wenn Sie die Metadaten der bestimmte Eigenschaften überschreiben, und Sie dann fügen <xref:System.Windows.CoerceValueCallback> oder <xref:System.Windows.PropertyChangedCallback> Funktionen für die einzelnen Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="0310b-211">Therefore, you can achieve better performance for the overall property system if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties.</span></span> <span data-ttu-id="0310b-212">Allerdings würden Sie diese Methode verwenden, wenn eine <xref:System.Windows.DependencyObject> umfasst eine Vielzahl von Wert in wechselseitiger Beziehung Abhängigkeitseigenschaften, oder wenn sie die Logik enthält, wie z. B. Renderingverhalten, die erneut ausgeführt werden, muss einige Fälle von eigenschafteninvalidierungen beziehen.</span><span class="sxs-lookup"><span data-stu-id="0310b-212">However, you would use this method if a <xref:System.Windows.DependencyObject> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0310b-213">
            <para>Rufen Sie immer die basisimplementierung. Geschieht dies nicht die gesamte erheblich deaktiviert [! Include[TLA2#tla_winclient](~/Includes/tla2sharptla-WinClient-MD.MD)] Eigenschaftensystem, bewirkt, dass falsche Werte gemeldet werden.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-213">
              <para>Always call the base implementation. Failure to do this will significantly disable the entire [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, causing incorrect values to be reported.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.FrameworkElement" />
      </Docs>
    </Member>
    <Member MemberName="ReadLocalValue">
      <MemberSignature Language="C#" Value="public object ReadLocalValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object ReadLocalValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadLocalValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ReadLocalValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.ReadLocalValue : System.Windows.DependencyProperty -&gt; obj" Usage="dependencyObject.ReadLocalValue dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-214">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-214">The <see cref="T:System.Windows.DependencyProperty" /> identifier of the property to retrieve the value for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-215">Returns the local value of a dependency property, if it exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-215">Returns the local value of a dependency property, if it exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-216">Returns the local value, or returns the sentinel value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> if no local value is set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-216">Returns the local value, or returns the sentinel value <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> if no local value is set.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-217">Verwenden Sie <xref:System.Windows.DependencyObject.GetValue%2A> für typische "get"-Vorgänge für eine Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="0310b-217">You should use <xref:System.Windows.DependencyObject.GetValue%2A> for most typical "get" operations for a dependency property.</span></span> <span data-ttu-id="0310b-218"><xref:System.Windows.DependencyObject.ReadLocalValue%2A> Gibt nicht zurück den gültigen Wert für eine Vielzahl von Situationen, in denen der Wert nicht lokal festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="0310b-218"><xref:System.Windows.DependencyObject.ReadLocalValue%2A> does not return the effective value for a variety of circumstances where the value was not locally set.</span></span>  
  
 <span data-ttu-id="0310b-219">Werte, die von Stilen, Designs, Vorlagen festgelegt werden, der Standardwert aus Metadaten oder die Vererbung von Eigenschaftswerten werden lokale Werte nicht berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="0310b-219">Values that are set by styles, themes, templates, the default value from metadata, or property value inheritance are not considered to be local values.</span></span> <span data-ttu-id="0310b-220">Allerdings gelten Bindungen und andere Ausdrücke als lokale Werte, nachdem sie ausgewertet wurden.</span><span class="sxs-lookup"><span data-stu-id="0310b-220">However, bindings and other expressions are considered to be local values, after they have been evaluated.</span></span>  
  
 <span data-ttu-id="0310b-221">Wenn kein lokaler Wert festgelegt ist, gibt diese Methode <xref:System.Windows.DependencyProperty.UnsetValue>.</span><span class="sxs-lookup"><span data-stu-id="0310b-221">When no local value is set, this method returns <xref:System.Windows.DependencyProperty.UnsetValue>.</span></span>  
  
 <span data-ttu-id="0310b-222">Wenn der zurückgegebene Wert außer <xref:System.Windows.DependencyProperty.UnsetValue>, Sie können Abfragen, die Metadaten für die angeforderte Abhängigkeitseigenschaft, um zu bestimmen, ob es ein spezifischer Typ, der der Rückgabewert konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="0310b-222">If the returned value is other than <xref:System.Windows.DependencyProperty.UnsetValue>, you can query the metadata of the requested dependency property to determine whether there is a more specific type that the return value can be converted to.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetLocalValueEnumerator" />
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="SetCurrentValue">
      <MemberSignature Language="C#" Value="public void SetCurrentValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCurrentValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCurrentValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCurrentValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetCurrentValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetCurrentValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-223">The identifier of the dependency property to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-223">The identifier of the dependency property to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0310b-224">The new local value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-224">The new local value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-225">Sets the value of a dependency property without changing its value source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-225">Sets the value of a dependency property without changing its value source.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-226">Diese Methode wird von einer Komponente verwendet, die den Wert von einem der über eigene Eigenschaften programmgesteuert festgelegt, ohne die einer Anwendung deklarierten Verwendung der Eigenschaft zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="0310b-226">This method is used by a component that programmatically sets the value of one of its own properties without disabling an application's declared use of the property.</span></span> <span data-ttu-id="0310b-227">Die <xref:System.Windows.DependencyObject.SetCurrentValue%2A> Methode ändert sich den effektiven Wert der Eigenschaft, aber vorhandene Trigger, datenbindungen und Stile sind weiterhin funktionsfähig.</span><span class="sxs-lookup"><span data-stu-id="0310b-227">The <xref:System.Windows.DependencyObject.SetCurrentValue%2A> method changes the effective value of the property, but existing triggers, data bindings, and styles will continue to work.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-228">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-228">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0310b-229">
            <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-229">
              <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0310b-230">Sets the local value of a dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-230">Sets the local value of a dependency property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyProperty dp, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyProperty dp, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (dp As DependencyProperty, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyProperty ^ dp, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyProperty * obj -&gt; unit" Usage="dependencyObject.SetValue (dp, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-231">The identifier of the dependency property to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-231">The identifier of the dependency property to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0310b-232">The new local value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-232">The new local value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-233">Sets the local value of a dependency property, specified by its dependency property identifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-233">Sets the local value of a dependency property, specified by its dependency property identifier.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-234">Wenn es sich bei der bereitgestellte Typ nicht mit den Typ übereinstimmt, der für die Abhängigkeitseigenschaft deklariert wird, wie es ursprünglich registriert wurde, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0310b-234">If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</span></span> <span data-ttu-id="0310b-235">Die `value` Parameter sollte immer den entsprechenden Typ angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-235">The `value` parameter should always be provided as the appropriate type.</span></span>  
  
 <span data-ttu-id="0310b-236">Die Ausnahmebedingungen möglicherweise beeinflusst die <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A> Rückruf, der auf den Bezeichner der festzulegenden Abhängigkeitseigenschaft Abhängigkeitseigenschaft vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="0310b-236">The exception conditions are potentially influenced by the <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A> callback that exists on the dependency property identifier of the dependency property being set.</span></span> <span data-ttu-id="0310b-237">Andernfalls kann der angegebene Wert ein Fehler auf allgemeine Typprüfung Bedingungen (z. B. eine Zeichenfolge übergeben, wenn der systemeigene Typ Double-Wert ist).</span><span class="sxs-lookup"><span data-stu-id="0310b-237">Otherwise, the value provided might be failing general type-checking conditions (for example, passing a string when the native type is Double).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0310b-238">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-238">Attempted to modify a read-only dependency property, or a property on a sealed <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0310b-239">
            <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-239">
              <paramref name="value" /> was not the correct type as registered for the <paramref name="dp" /> property.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (System.Windows.DependencyPropertyKey key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(class System.Windows.DependencyPropertyKey key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (key As DependencyPropertyKey, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Windows::DependencyPropertyKey ^ key, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="member this.SetValue : System.Windows.DependencyPropertyKey * obj -&gt; unit" Usage="dependencyObject.SetValue (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.DependencyPropertyKey" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="0310b-240">The <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the property to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-240">The <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the property to set.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0310b-241">The new local value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-241">The new local value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-242">Sets the local value of a read-only dependency property, specified by the <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-242">Sets the local value of a read-only dependency property, specified by the <see cref="T:System.Windows.DependencyPropertyKey" /> identifier of the dependency property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-243">Diese Signatur wird in der Regel verwendet, wenn Sie Werte für schreibgeschützte Abhängigkeitseigenschaften festlegen, die durch die benutzerdefinierten Klassen definiert werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-243">This signature is generally used when you set values for read-only dependency properties that are defined by your custom classes.</span></span> <span data-ttu-id="0310b-244">Im allgemeinen <xref:System.Windows.DependencyObject.SetValue%2A> heißt nur anhand des Typs, der die Abhängigkeitseigenschaft registriert die interne Logik implementiert, die den festgelegten Wert für die Abhängigkeitseigenschaft bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="0310b-244">Generally, <xref:System.Windows.DependencyObject.SetValue%2A> is called only from the type that registered that dependency property, which implements the internal logic that provides the determined value for the dependency property.</span></span> <span data-ttu-id="0310b-245">Weitere Informationen finden Sie unter [Schreibgeschützte Abhängigkeitseigenschaften](~/docs/framework/wpf/advanced/read-only-dependency-properties.md).</span><span class="sxs-lookup"><span data-stu-id="0310b-245">For more information, see [Read-Only Dependency Properties](~/docs/framework/wpf/advanced/read-only-dependency-properties.md).</span></span>  
  
 <span data-ttu-id="0310b-246">Wenn es sich bei der bereitgestellte Typ nicht mit den Typ übereinstimmt, der für die Abhängigkeitseigenschaft deklariert wird, wie es ursprünglich registriert wurde, wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="0310b-246">If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</span></span> <span data-ttu-id="0310b-247">Die `value` Parameter sollte immer den entsprechenden Typ angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="0310b-247">The `value` parameter should always be provided as the appropriate type.</span></span> <span data-ttu-id="0310b-248">Die Ausnahmebedingungen möglicherweise beeinflusst die <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A> Rückruf, der auf den Bezeichner der festzulegenden Abhängigkeitseigenschaft Abhängigkeitseigenschaft vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="0310b-248">The exception conditions are potentially influenced by the <xref:System.Windows.DependencyProperty.ValidateValueCallback%2A> callback that exists on the dependency property identifier of the dependency property being set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0310b-249">Das folgende Beispiel definiert eine schreibgeschützte Abhängigkeitseigenschaft zusammen mit einem `public static readonly` <xref:System.Windows.DependencyProperty> bereitstellt erforderlichen nur-Lese Kenntnisse in Bezug auf Abfragen der Eigenschaft bereitstellt, und die Get-Accessor für die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Wrapper.</span><span class="sxs-lookup"><span data-stu-id="0310b-249">The following example defines a read-only dependency property, along with a `public static readonly` <xref:System.Windows.DependencyProperty> that provides necessary read-only exposure to property consumers, and the get accessor for the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] wrapper.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeProperty">
      <MemberSignature Language="C#" Value="protected internal virtual bool ShouldSerializeProperty (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ShouldSerializeProperty(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ShouldSerializeProperty (dp As DependencyProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ShouldSerializeProperty(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool&#xA;override this.ShouldSerializeProperty : System.Windows.DependencyProperty -&gt; bool" Usage="dependencyObject.ShouldSerializeProperty dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="0310b-250">The identifier for the dependency property that should be serialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-250">The identifier for the dependency property that should be serialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0310b-251">Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-251">Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0310b-252">
            <see langword="true" /> if the dependency property that is supplied should be value-serialized; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-252">
              <see langword="true" /> if the dependency property that is supplied should be value-serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0310b-253">Die Standardimplementierung gibt `true` für alle Fälle, in dem eine Abhängigkeitseigenschaft einen lokalen Wert auf eingerichtet hatten, die <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="0310b-253">The default implementation returns `true` for all cases in which a dependency property had a local value established on the <xref:System.Windows.DependencyObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="0310b-254">
            <para>Außerkraftsetzungen für diese Methode möglicherweise für bestimmte Abhängigkeitseigenschaften unterschiedlich behandelt werden.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0310b-254">
              <para>Overrides for this method might handle specific dependency properties differently.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>