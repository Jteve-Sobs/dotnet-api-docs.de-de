<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DependencyObject.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac593e067f8bf97d79f7e4525a57db08a4a8d5109c2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">93e067f8bf97d79f7e4525a57db08a4a8d5109c2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.DependencyObject">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Stellt ein Objekt dar, das im Abhängigkeitseigenschaftensystem teilnimmt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> class enables <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> property system services on its many derived classes.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> -Klasse ermöglicht es <ph id="ph2">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> Eigenschaftensystemdienste für viele abgeleiteten Klassen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>The property system's primary function is to compute the values of properties, and to provide system notification about values that have changed.</source>
          <target state="translated">Primäre Funktion im Eigenschaftensystem wird zum Berechnen der Werte der Eigenschaften und systembenachrichtigung zu Werten bereitzustellen, die geändert wurden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Another key class that participates in the property system is <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated">Eine andere schlüsselklasse, die in dem Eigenschaftensystem einbezogen ist <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> enables the registration of dependency properties into the property system, and provides identification and information about each dependency property, whereas <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> as a base class enables objects to use the dependency properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> ermöglicht die Registrierung von Abhängigkeitseigenschaften im Eigenschaftensystem und Identifikation und Informationen für jede Abhängigkeitseigenschaft während <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph> eine Basisklasse ermöglicht die Objekte, die die Abhängigkeitseigenschaften verwendet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> services and characteristics include the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> Dienste und Merkmale umfassen Folgendes:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Dependency property hosting support.</source>
          <target state="translated">Unterstützung für das hosting Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>You register a dependency property by calling the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> method, and storing the method's return value as a public static field in your class.</source>
          <target state="translated">Registrieren Sie eine Abhängigkeitseigenschaft, durch Aufrufen der <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A&gt;</ph> -Methode, und Speichern der Rückgabewert der Methode als öffentliche statische Feld in Ihrer Klasse.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Attached property hosting support.</source>
          <target state="translated">Angefügte Eigenschaft, die Unterstützung für das hosting.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>You register an attached property by calling the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> method, and storing the method's return value as a public static read-only field in your class.</source>
          <target state="translated">Sie registrieren eine angefügte Eigenschaft durch Aufrufen der <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> -Methode, und Speichern der Rückgabewert der Methode als öffentliche statische schreibgeschützte Feld in Ihrer Klasse.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>(There are also additional member requirements; note that this represents a <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> specific implementation for attached properties.</source>
          <target state="translated">(Es gibt auch zusätzliche Memberanforderungen; Beachten Sie, dass dies stellt eine <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> spezifischen Implementierung für angefügte Eigenschaften.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>For details, see <bpt id="p1">[</bpt>Attached Properties Overview<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.) Your attached property can then be set on any class that derives from <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Eigenschaftenübersicht angefügt<ept id="p1">](~/docs/framework/wpf/advanced/attached-properties-overview.md)</ept>.) Die angefügte Eigenschaft kann dann festgelegt werden, auf jede Klasse, die abgeleitet <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Get, set, and clear utility methods for values of any dependency properties that exist on the <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">Abrufen, festlegen und Löschen von Hilfsmethoden für die Werte aller Abhängigkeitseigenschaften, die auf die <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Metadata, coerce value support, property changed notification, and override callbacks for  dependency properties or attached properties.</source>
          <target state="translated">Metadaten, coerce-Wert-Unterstützung, geänderten Eigenschaft Benachrichtigung und Außerkraftsetzung Rückrufe für Abhängigkeitseigenschaften oder angefügte Eigenschaften.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>Also, the <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> class facilitates the per-owner property metadata for a dependency property.</source>
          <target state="translated">Darüber hinaus die <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> Klasse vereinfacht die Eigenschaftenmetadaten für eine Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>A common base class for classes derived from <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</source>
          <target state="translated">Eine allgemeine Basisklasse für Klassen abgeleitet <ph id="ph1">&lt;xref:System.Windows.ContentElement&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>, oder <ph id="ph3">&lt;xref:System.Windows.Media.Visual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>(<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, another base element class, has a class hierarchy that includes <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.)</source>
          <target state="translated">(<ph id="ph1">&lt;xref:System.Windows.UIElement&gt;</ph>, Basiselementklasse, verfügt über eine Hierarchie von Klassen, die enthält <ph id="ph2">&lt;xref:System.Windows.Media.Visual&gt;</ph>.)</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>The following example derives from <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> to create a new abstract class.</source>
          <target state="translated">Im folgende Beispiel leitet sich von <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> zum Erstellen einer neuen abstrakte Klasse.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.DependencyObject">
          <source>The class then registers an attached property and includes support members for that attached property.</source>
          <target state="translated">Die Klasse registriert eine angefügte Eigenschaft dann und schließt Elemente der Unterstützung für diese angefügten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="T:System.Windows.DependencyObject">
          <source>Clears the local value of a property.</source>
          <target state="translated">Löscht den lokalen Wert einer Eigenschaft.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>The dependency property to be cleared, identified by a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> object reference.</source>
          <target state="translated">Die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll, wird durch einen <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>-Objektverweis identifiziert.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>Clears the local value of a property.</source>
          <target state="translated">Löscht den lokalen Wert einer Eigenschaft.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>The property to be cleared is specified by a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> identifier.</source>
          <target state="translated">Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>-Bezeichner angegeben.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>Clearing the property value by calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Löschen den Wert der Eigenschaft durch den Aufruf <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> ist nicht zwingend auf einer Abhängigkeitseigenschaft den Standardwert, der in den Metadaten der Abhängigkeitseigenschaft angegeben ist.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>Clearing the property only specifically clears whatever local value may have been applied.</source>
          <target state="translated">Löschen die Eigenschaft nur speziell löscht der lokaler Wert möglicherweise angewendet wurden.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Priorität von Abhängigkeitseigenschaftswerten<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>The following example iterates all properties that have local values set on an object, then calls <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> to clear the values of each such property.</source>
          <target state="translated">Das folgende Beispiel durchläuft alle Eigenschaften, die lokalen Werte, die auf ein Objekt festgelegt wurden ruft dann <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> So löschen Sie die Werte dieser Eigenschaften.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)">
          <source>Attempted to call <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /&gt;</ph> on a sealed <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Es wurde versucht, <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /&gt;</ph> für ein versiegeltes <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> aufzurufen.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>The key for the dependency property to be cleared.</source>
          <target state="translated">Der Schlüssel für die Abhängigkeitseigenschaft, deren Wert gelöscht werden soll.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>Clears the local value of a read-only property.</source>
          <target state="translated">Löscht den lokalen Wert einer schreibgeschützten Eigenschaft.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>The property to be cleared is specified by a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph>.</source>
          <target state="translated">Die Eigenschaft, deren Wert gelöscht werden soll, wird durch einen <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph> angegeben.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>A <ph id="ph1">&lt;xref:System.Windows.DependencyPropertyKey&gt;</ph> identifies a read-only dependency property for property system operations.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.DependencyPropertyKey&gt;</ph> eine schreibgeschützte Abhängigkeitseigenschaft für Systemvorgänge Eigenschaft identifiziert.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>Classes that define read-only dependency properties should not expose this key with public access.</source>
          <target state="translated">Klassen, die nur-Lese Abhängigkeitseigenschaften definieren sollten öffentlichen Zugriff auf diesen Schlüssel nicht verfügbar.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>A publicly exposed key would provide a public code pathway that negated the read-only character of the property, if methods such as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> could be called outside the class or assembly, referencing the key.</source>
          <target state="translated">Ein öffentlich verfügbarer Schlüssel würde eine öffentliche Code Weg, die schreibgeschützt sind und die Eigenschaft unterlaufen bereitstellen, wenn Methoden, z. B. <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> außerhalb der Klasse oder Assembly verweisen auf den Schlüssel aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>Clearing the property value by calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> does not necessarily give a dependency property the default value that is specified in the dependency property metadata.</source>
          <target state="translated">Löschen den Wert der Eigenschaft durch den Aufruf <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> ist nicht zwingend auf einer Abhängigkeitseigenschaft den Standardwert, der in den Metadaten der Abhängigkeitseigenschaft angegeben ist.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>Clearing the value only specifically clears whatever local value may have been applied.</source>
          <target state="translated">Löschen den Wert nur speziell löscht der lokaler Wert möglicherweise angewendet wurden.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Priorität von Abhängigkeitseigenschaftswerten<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)">
          <source>Attempted to call <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /&gt;</ph> on a sealed <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Es wurde versucht, <ph id="ph1">&lt;see cref="M:System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)" /&gt;</ph> für ein versiegeltes <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> aufzurufen.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>The identifier for the dependency property to coerce.</source>
          <target state="translated">Der Bezeichner für die zu erzwingende Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>Coerces the value of the specified dependency property.</source>
          <target state="translated">Erzwingt den Wert der angegebenen Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>This is accomplished by invoking any <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph> function specified in property metadata for the dependency property as it exists on the calling <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Dies erfolgt durch den Aufruf einer beliebigen <ph id="ph1">&lt;see cref="T:System.Windows.CoerceValueCallback" /&gt;</ph>-Funktion, die in den Metadaten für die Abhängigkeitseigenschaft angegeben ist, während sie beim aufrufenden <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> beendet wird.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>In addition to being explicitly invoked through calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> for a dependency property is also invoked internally whenever the dependency property value is being re-evaluated by the <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system.</source>
          <target state="translated">Zusätzlich zu den aufgerufenen explizit durch Aufrufen von <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> für eine Abhängigkeit Eigenschaft ist auch dann aufgerufen, intern Wenn Werts der Abhängigkeitseigenschaft vom erneut ausgewertet wird die <ph id="ph3">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Eigenschaftensystem.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>When you invoke the <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> method, you are ultimately invoking the coerce value callback for the property that you specify.</source>
          <target state="translated">Beim Aufruf der <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> -Methode, rufen Sie letztendlich den Rückruf zum Wert für die Eigenschaft, die Sie angeben.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>Typically you will invoke <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> only if you know that a coerce value callback exists, and if you know the callback's criteria for coercion.</source>
          <target state="translated">In der Regel rufen Sie <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> nur, wenn Sie wissen, dass ein Rückruf zum Wert vorhanden ist und Sie wissen, dass die Rückruf-Kriterien für die Umwandlung.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>The most common scenario for calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> is within class handling or property change callbacks of related properties that influence each other's values in a dependent way.</source>
          <target state="translated">Das häufigste Szenario für den Aufruf von <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> liegt innerhalb der Rückrufe Klasse behandeln oder die Eigenschaft der Änderung von verwandten Eigenschaften, die jeweils anderen Werte in einer abhängigen Weise beeinflussen.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Rückrufe und Validierung von Abhängigkeitseigenschaften<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)</ept>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> within a <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> implementation that is used as the <ph id="ph3">&lt;xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A&gt;</ph> for a different dependency properties on the same class.</source>
          <target state="translated">Im folgenden Beispiel wird <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> innerhalb einer <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> Implementierung, die verwendet wird, als die <ph id="ph3">&lt;xref:System.Windows.PropertyMetadata.PropertyChangedCallback%2A&gt;</ph> für einen anderen Abhängigkeitseigenschaften für die gleiche Klasse.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>This is a common pattern for introducing true value dependencies between dependency properties.</source>
          <target state="translated">Dies ist ein allgemeines Muster für die Einführung der Wert "true" Abhängigkeiten zwischen Abhängigkeitseigenschaften.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)">
          <source>The specified <ph id="ph1">&lt;paramref name="dp" /&gt;</ph> or its value were invalid or do not exist.</source>
          <target state="translated">Der angegebene <ph id="ph1">&lt;paramref name="dp" /&gt;</ph> oder sein Wert waren ungültig oder sind nicht vorhanden.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that wraps the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> ab, der den <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>-Typ dieser Instanz umschließt.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph> that wraps the <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> type of this instance.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObjectType" /&gt;</ph>, der den <ph id="ph2">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph>-Typ dieser Instanz umschließt.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>This property is useful if an object that is returned from a method has a return value type of <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> and you want to perform property system specific operations on it depending on its type.</source>
          <target state="translated">Diese Eigenschaft ist nützlich, wenn ein Objekt, das von einer Methode zurückgegeben wird einen Typ des Rückgabewerts enthält <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> und Eigenschaft System Ausführen bestimmter Vorgänge davon abhängig vom Anwendungstyp werden sollen.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>For example it is more efficient to call <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;</ph> using the <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> rather than the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> type.</source>
          <target state="translated">Beispielsweise ist es effizienter, rufen Sie <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.GetMetadata%28System.Windows.DependencyObjectType%29&gt;</ph> mithilfe der <ph id="ph2">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> statt über das <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> Typ.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> facilitates faster lookup.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> ermöglicht eine schnellere Suche.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>In the following pseudocode example, <ph id="ph1">`MySubClass`</ph> anticipates that additional derived classes might change the default value of the <ph id="ph2">`MyCustom`</ph> dependency property.</source>
          <target state="translated">Im folgenden Pseudocodebeispiel <ph id="ph1">`MySubClass`</ph> geht davon aus, dass abgeleitete Klassen den Standardwert ändern, können die <ph id="ph2">`MyCustom`</ph> Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.DependencyObjectType">
          <source>The class implements a default constructor that can determine the actual derived class by taking advantage of polymorphism on the <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> value whenever that constructor is used as a derived class instantiator.</source>
          <target state="translated">Die Klasse implementiert einen Standardkonstruktor, die die tatsächliche abgeleitete Klasse bestimmen kann, durch die Nutzung von Polymorphie auf die <ph id="ph1">&lt;xref:System.Windows.DependencyObjectType&gt;</ph> Wert als eine abgeleitete Klasse zurückgreift, Konstruktor verwendet wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> to compare to the current instance.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>, der mit der aktuellen Instanz verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>Determines whether a provided <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> is equivalent to the current <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob ein angegebenes <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> dem aktuellen <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> entspricht.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two instances are the same; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn beide Instanzen identisch sind, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>This implementation is reference equality only, and does not attempt to evaluate value equality of the contained properties.</source>
          <target state="translated">Diese Implementierung wird nur auf Verweisgleichheit und versucht nicht, Wertgleichheit der enthaltenen Eigenschaften auswerten.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> overrides and then seals two basic <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> methods: <ph id="ph3">&lt;see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.Windows.DependencyObject.GetHashCode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> außer Kraft gesetzt, und klicken Sie dann zwei Basic versiegelt <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> Methoden: <ph id="ph3">&lt;see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /&gt;</ph> und <ph id="ph4">&lt;see cref="M:System.Windows.DependencyObject.GetHashCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>The overrides call the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> implementations, resulting in an object equality behavior.</source>
          <target state="translated">Der Aufruf überschreibt die <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Implementierungen, die ein Objekt auf Gleichheit Verhalten führen.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>The purpose of these deliberate overrides is to prevent derived classes from trying to define a value equality for a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Der Zweck dieser absichtlichen Außerkraftsetzungen wird verhindert, dass abgeleitete Klassen eine Wertgleichheit für definieren möchten eine <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>Value equalities for <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> will never be accurate because of the innate property value-changing capabilities of a <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> and its dependency properties.</source>
          <target state="translated">Wert Gleichheitsprädikate für <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> werden nie genau aufgrund Wert ändern-Funktionen des Standard-Eigenschaft einer <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> und seine Abhängigkeitseigenschaften.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.Equals(System.Object)">
          <source>This includes fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> features such as data binding and the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system.</source>
          <target state="translated">Dazu gehören grundlegende <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Funktionen, z. B. Datenbindung und die <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Eigenschaftensystem.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Hashcode für diese <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>A signed 32-bit integer hash code.</source>
          <target state="translated">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> overrides and then seals two <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> methods: <ph id="ph3">&lt;see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /&gt;</ph> and <ph id="ph4">&lt;see cref="M:System.Windows.DependencyObject.GetHashCode" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> überschreibt und versiegelt anschließend zwei <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> Methoden: <ph id="ph3">&lt;see cref="M:System.Windows.DependencyObject.Equals(System.Object)" /&gt;</ph> und <ph id="ph4">&lt;see cref="M:System.Windows.DependencyObject.GetHashCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>The overrides call the <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> implementations, resulting in an object equality behavior.</source>
          <target state="translated">Der Aufruf überschreibt die <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> Implementierungen, die ein Objekt auf Gleichheit Verhalten führen.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>The purpose of these deliberate overrides is to prevent derived classes from trying to define a value equality for a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Der Zweck dieser absichtlichen Außerkraftsetzungen wird verhindert, dass abgeleitete Klassen eine Wertgleichheit für definieren möchten eine <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>Value equalities for <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> will never be accurate because of the innate property value-changing capabilities of a <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> and its dependency properties.</source>
          <target state="translated">Wert Gleichheitsprädikate für <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> werden nie genau aufgrund Wert ändern-Funktionen des Standard-Eigenschaft einer <ph id="ph2">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> und seine Abhängigkeitseigenschaften.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetHashCode">
          <source>This includes fundamental <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> features such as data binding and the <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system.</source>
          <target state="translated">Dazu gehören grundlegende <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Funktionen, z. B. Datenbindung und die <ph id="ph2">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Eigenschaftensystem.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>Creates a specialized enumerator for determining which dependency properties have locally set values on this <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Erstellt einen spezialisierten Enumerator, mit dem bestimmt wird, welche Abhängigkeitseigenschaften dieses <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> über lokal festgelegte Werte verfügen.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>A specialized local value enumerator.</source>
          <target state="translated">Ein spezialisierter lokaler Wertenumerator.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>A <bpt id="p1">*</bpt>local value<ept id="p1">*</ept> is any dependency property value that was set by <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>, as opposed to other aspects of the property system.</source>
          <target state="translated">Ein <bpt id="p1">*</bpt>lokaler Wert<ept id="p1">*</ept> ist jeder Wert einer Abhängigkeitseigenschaft, die festgelegt wurde, indem Sie <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph>, im Gegensatz zu anderen Aspekte des Eigenschaftensystems.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>The <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> obtained by calling <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> can be used to enumerate properties that have a locally set value on a <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> durch den Aufruf von <ph id="ph2">&lt;xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A&gt;</ph> können verwendet werden, um die Eigenschaften aufgelistet, die ein lokal festgelegter haben Wert auf eine <ph id="ph3">&lt;xref:System.Windows.DependencyObject&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>Each such property is represented in the enumerator by a <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> object, which has properties that reference the specific <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph> and its values.</source>
          <target state="translated">Jede dieser Eigenschaften wird dargestellt, in der Enumerator durch einen <ph id="ph1">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> -Objekt, das Eigenschaften verfügt, die die spezifische verweisen <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph> und die zugehörigen Werte.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>This technique of enumerating over the locally set values can be used for optimization or for other handling of local values, such as to determine which property values of a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> would change if they were cleared.</source>
          <target state="translated">Diese Technik Aufzählen über die lokal festgelegte Werte dienen zur Optimierung oder für andere Behandlung von lokalen Werte wie z. B. um zu bestimmen, welche Eigenschaftswerte des eine <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> ändern würde, wenn sie deaktiviert wurden.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>The returned <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> might contain <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> records for dependency properties that are read-only, or dependency properties where values are calculated by the property system.</source>
          <target state="translated">Das zurückgegebene <ph id="ph1">&lt;xref:System.Windows.LocalValueEnumerator&gt;</ph> enthalten möglicherweise <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> Datensätze für Abhängigkeitseigenschaften, die schreibgeschützt sind oder Abhängigkeitseigenschaften, deren Werte vom Eigenschaftensystem berechnet werden.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>For example, a visual framework element that has an established width through layout will report a local value for <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph>.</source>
          <target state="translated">Ein visuelles Element, das eine eingerichtete Breite durch Layout verfügt z. B. einen lokalen Wert für meldet <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.ActualWidth%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>If you are getting local values in order to reset them, check the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> value on the property identifier of each <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> to verify that the <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph> in question is not read-only.</source>
          <target state="translated">Wenn Sie lokale Werte abrufen, um diese zurückzusetzen, überprüfen Sie die <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ReadOnly%2A&gt;</ph> Wert der Eigenschaft-ID der einzelnen <ph id="ph2">&lt;xref:System.Windows.LocalValueEntry&gt;</ph> zu überprüfen, ob die <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph> zweifelhaft ist nicht schreibgeschützt.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetLocalValueEnumerator">
          <source>The following example iterates all properties that have local values set on an object, then calls <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> to clear the values of each such property.</source>
          <target state="translated">Das folgende Beispiel durchläuft alle Eigenschaften, die lokalen Werte, die auf ein Objekt festgelegt wurden ruft dann <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph> So löschen Sie die Werte dieser Eigenschaften.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> identifier of the property to retrieve the value for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>-Bezeichner der Eigenschaft, deren Wert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>Returns the current effective value of a dependency property on this instance of a <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Gibt den aktuellen effektiven Wert einer Abhängigkeitseigenschaft für diese Instanz eines <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>Returns the current effective value.</source>
          <target state="translated">Gibt den aktuellen effektiven Wert zurück.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>The <bpt id="p1">*</bpt>effective value<ept id="p1">*</ept> is the value of the property that is returned by the property system to any caller that is requesting the value.</source>
          <target state="translated">Die <bpt id="p1">*</bpt>effektiven Wert<ept id="p1">*</ept> ist der Wert der Eigenschaft, die von dem Eigenschaftensystem für jeden Aufrufer zurückgegeben wird, die den Wert anfordert.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>The effective value is the result of the property system having evaluated all the possible inputs that participate in the property system value precedence.</source>
          <target state="translated">Der effektive Wert ist das Ergebnis des Eigenschaftensystems müssen alle möglichen Eingaben, die in der Eigenschaft System Wert Rangfolge einbezogen ausgewertet.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>This includes coercion and animation.</source>
          <target state="translated">Dies schließt die Umwandlung und Animation.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Priorität von Abhängigkeitseigenschaftswerten<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>This method will never return <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.</source>
          <target state="translated">Diese Methode gibt nie zurück <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> is a sentinel value for the property system that is used in various capacities internally and occasionally also exposed through coercion callbacks.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph> ist ein Sentinelwert für die Eigenschaftensystem, in verschiedene Kapazitäten verfügbar gemachten intern und gelegentlich auch mithilfe von Rückrufen in Umwandlung verwendet wird.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>If you are not sure what the property's type should be, you can query the identifier of the requested dependency property to determine whether there is a more specific <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph> that the return value can be converted to.</source>
          <target state="translated">Wenn Sie nicht sicher sind, wie der Typ der Eigenschaft sein soll, können Sie den Bezeichner der angeforderten Abhängigkeitseigenschaft zu bestimmen, ob es eine spezifischere Abfragen <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.PropertyType%2A&gt;</ph> , die der Rückgabewert in konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)">
          <source>The specified <ph id="ph1">&lt;paramref name="dp" /&gt;</ph> or its value was invalid, or the specified <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> does not exist.</source>
          <target state="translated">Die angegebene <ph id="ph1">&lt;paramref name="dp" /&gt;</ph> oder ihr Wert ist ungültig, oder die angegebene <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> ist nicht vorhanden.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> identifier of the property to invalidate.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>-Bezeichner der neu zu berechnenden Eigenschaft.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>Re-evaluates the effective value for the specified dependency property</source>
          <target state="translated">Berechnet den effektiven Wert für die angegebene Abhängigkeitseigenschaft neu</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>When you call <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph>, any associated and applicable <ph id="ph2">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> functions registered for that dependency property might be invoked.</source>
          <target state="translated">Beim Aufruf <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph>, alle zugeordneten und anwendbaren <ph id="ph2">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> Funktionen registriert werden, für die Abhängigkeitseigenschaft aufgerufen werden kann.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> on a property that has its local value set will have no effect, because the local value takes precedence over other property system inputs, except for animations.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> auf eine Eigenschaft, die einen lokalen Wert festgelegt hat keine Auswirkungen, da der lokale Wert Vorrang vor anderen Eigenschaft System Eingaben, mit Ausnahme von Animationen enthält.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>However, you could call <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph>, then call <ph id="ph2">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph>.</source>
          <target state="translated">Sie können jedoch aufrufen <ph id="ph1">&lt;xref:System.Windows.DependencyObject.ClearValue%2A&gt;</ph>, rufen Sie anschließend <ph id="ph2">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>For more information, see <bpt id="p1">[</bpt>Dependency Property Value Precedence<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Priorität von Abhängigkeitseigenschaftswerten<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)</ept>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> is not necessarily applicable for many dependency property scenarios.</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> ist nicht notwendigerweise auch für viele Szenarien der Abhängigkeit-Eigenschaft.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>If a dependency property becomes invalidated because of value changes in any of the constituents, the property system invalidates and re-evaluates the dependency property automatically.</source>
          <target state="translated">Wenn aufgrund von wertänderungen in einer der Bestandteile eine Abhängigkeitseigenschaft ungültig wird, wird das Eigenschaftensystem führt und neuauswertung automatisch die Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>However, there are still some appropriate scenarios where <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> is useful.</source>
          <target state="translated">Es gibt jedoch immer noch einige Szenarios, in denen <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> eignet.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>In particular, you can use <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> inside the coerce value or property changed callback for a different dependency property.</source>
          <target state="translated">Insbesondere können Sie <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> innerhalb des zum Umwandeln von Werten oder die Eigenschaft geändert Rückruf für einen anderen Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>You can also use <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> to force re-evaluation of a binding against a data source that is not able to implement the recommended <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> notification mechanism (perhaps if consuming data classes that cannot be derived from, or where the data is a static member).</source>
          <target state="translated">Sie können auch <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> um eine erneute Auswertung von einer Bindung für eine Datenquelle zu erzwingen, die nicht die empfohlene implementieren kann <ph id="ph2">&lt;xref:System.ComponentModel.INotifyPropertyChanged&gt;</ph> Benachrichtigungsmechanismus (vielleicht Datenklassen in Anspruch, kann nicht abgeleitet werden, oder die Daten, in dem eine statische enthalten, Element).</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> on a custom property, whenever properties that are involved in the invalidated property's calculations change.</source>
          <target state="translated">Im folgenden Beispiel wird <ph id="ph1">&lt;xref:System.Windows.DependencyObject.InvalidateProperty%2A&gt;</ph> ändern für die benutzerdefinierte Eigenschaft bei jedem-Eigenschaften, die in die für ungültig erklärten Eigenschaft Berechnungen beteiligt sind.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)">
          <source>This is an alternative technique to calling the <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> method, because invalidating the property will also call any registered <ph id="ph2">&lt;xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A&gt;</ph>.</source>
          <target state="translated">Dies ist eine alternative Verfahren mit einem Aufruf der <ph id="ph1">&lt;xref:System.Windows.DependencyObject.CoerceValue%2A&gt;</ph> -Methode, da ungültig macht die Eigenschaft auch jeden Aufruf wird registriert <ph id="ph2">&lt;xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="P:System.Windows.DependencyObject.IsSealed">
          <source>Gets a value that indicates whether this instance is currently sealed (read-only).</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob diese Instanz derzeit versiegelt (schreibgeschützt) ist.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.IsSealed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this instance is sealed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn diese Instanz versiegelt ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.DependencyObject.IsSealed">
          <source>This value is set internally.</source>
          <target state="translated">Dieser Wert wird intern festgelegt.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Event data that will contain the dependency property identifier of interest, the property metadata for the type, and old and new values.</source>
          <target state="translated">Ereignisdaten, die den betreffenden Bezeichner für eine Abhängigkeitseigenschaft, die Eigenschaftsmetadaten für den Typ sowie die alten und neuen Werte enthalten.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Invoked whenever the effective value of any dependency property on this <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> has been updated.</source>
          <target state="translated">Wird immer dann aufgerufen, wenn der tatsächliche Wert einer Abhängigkeitseigenschaft für diese <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> aktualisiert wurde.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The specific dependency property that changed is reported in the event data.</source>
          <target state="translated">Welche spezifische Abhängigkeitseigenschaft geändert wird, wird in den Ereignisdaten gemeldet.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>This method is not intended to generally detect individual property changes or perform invalidations of properties on a per-case basis.</source>
          <target state="translated">Diese Methode dient nicht zum einzelne eigenschaftenänderungen in der Regel zu erkennen oder Ausführen von Außerkraftsetzungen aufgewendet von Eigenschaften pro Fall zu entscheiden.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> is instead intended for modifications of the general invalidation pattern, if certain information is known about wide classifications of properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> wird stattdessen für Änderungen des Musters allgemeine invalidierung vorgesehen, wenn bestimmte Informationen über wide Klassifizierungen Eigenschaften bekannt ist.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>For example, changes in a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> might be changes in the value types of the <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>, or might be subproperties, where the changes are within other <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> references.</source>
          <target state="translated">Ändert z. B. einem <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> möglicherweise Änderungen in die Werttypen der der <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph>, oder möglicherweise Untereigenschaften, in dem die Änderungen in anderen sind <ph id="ph3">&lt;xref:System.Windows.Freezable&gt;</ph> Verweise.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> override implementation of <ph id="ph2">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> uses internal information to determine whether the properties are subproperties, and provides appropriate base class logic for either case.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> -überschreibungsimplementierung von <ph id="ph2">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> verwendet interne Informationen, um zu bestimmen, ob die Eigenschaften sind untergeordnete sowie die entsprechenden Basisklasse Logik für jedem Fall.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> is potentially invoked many times during the life of an object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObject.OnPropertyChanged%2A&gt;</ph> oft wird möglicherweise während der Lebensdauer eines Objekts aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Therefore, you can achieve better performance for the overall property system if you override the metadata of specific properties and then attach <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> functions for individual properties.</source>
          <target state="translated">Aus diesem Grund können Sie eine bessere Leistung für die gesamte Eigenschaftensystem erzielen, wenn Sie die Metadaten bestimmter Eigenschaften überschreiben und Sie dann fügen <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> Funktionen für die einzelnen Eigenschaften.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>However, you would use this method if a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</source>
          <target state="translated">Allerdings würden Sie diese Methode verwenden, wenn eine <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> enthält eine signifikante Anzahl Wert verknüpft Abhängigkeitseigenschaften, oder wenn es die Logik enthält, wie z. B. Renderingverhalten, die erneut ausgeführt werden, muss mehrere Fälle der Ungültigkeitserklärungen beziehen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Always call the base implementation.</source>
          <target state="translated">Rufen Sie immer die grundlegende Implementierung.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)">
          <source>Failure to do this will significantly disable the entire <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> property system, causing incorrect values to be reported.</source>
          <target state="translated">Dies versäumt wird die gesamte erheblich deaktiviert <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Eigenschaftensystem, bewirkt, dass falsche Werte gemeldet werden.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> identifier of the property to retrieve the value for.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>-Bezeichner der Eigenschaft, deren Wert abgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>Returns the local value of a dependency property, if it exists.</source>
          <target state="translated">Gibt den lokalen Wert einer Abhängigkeitseigenschaft zurück, wenn dieser vorhanden ist.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>Returns the local value, or returns the sentinel value <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph> if no local value is set.</source>
          <target state="translated">Gibt den lokalen Wert zurück oder den Sentinelwert <ph id="ph1">&lt;see cref="F:System.Windows.DependencyProperty.UnsetValue" /&gt;</ph>, wenn kein lokaler Wert festgelegt ist.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>You should use <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph> for most typical "get" operations for a dependency property.</source>
          <target state="translated">Verwenden Sie <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph> für die meisten typischen "get"-Vorgänge für eine Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A&gt;</ph> does not return the effective value for a variety of circumstances where the value was not locally set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.DependencyObject.ReadLocalValue%2A&gt;</ph> Gibt nicht zurück den gültigen Wert für eine Vielzahl von Situationen, in denen der Wert nicht lokal festgelegt wurde.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>Values that are set by styles, themes, templates, the default value from metadata, or property value inheritance are not considered to be local values.</source>
          <target state="translated">Werte, die durch die Stile, Designs und Vorlagen festgelegt werden, der Standardwert von Metadaten oder Vererbung von Eigenschaftenwerten gelten nicht als lokale Werte sein.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>However, bindings and other expressions are considered to be local values, after they have been evaluated.</source>
          <target state="translated">Jedoch werden Bindungen und andere Ausdrücke interpretiert, um die lokalen Werte werden, nachdem sie ausgewertet wurden.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>When no local value is set, this method returns <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.</source>
          <target state="translated">Wenn kein lokaler Wert festgelegt ist, gibt diese Methode <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)">
          <source>If the returned value is other than <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>, you can query the metadata of the requested dependency property to determine whether there is a more specific type that the return value can be converted to.</source>
          <target state="translated">Wenn der zurückgegebene Wert, außer ist <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.UnsetValue&gt;</ph>, Sie können Abfragen, die Metadaten der angeforderten Abhängigkeitseigenschaft zu bestimmen, ob es ein spezifischeren Typ, der der Rückgabewert konvertiert werden kann.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>The new local value.</source>
          <target state="translated">Der neue lokale Wert.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>Sets the value of a dependency property without changing its value source.</source>
          <target state="translated">Legt den Wert einer Abhängigkeitseigenschaft fest, ohne deren Wertquelle zu ändern.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>This method is used by a component that programmatically sets the value of one of its own properties without disabling an application's declared use of the property.</source>
          <target state="translated">Diese Methode wird von einer Komponente verwendet, die den Wert eines der seine eigenen Eigenschaften programmgesteuert festgelegt, ohne eine Anwendung deklarierte Verwendung der Eigenschaft deaktivieren.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetCurrentValue%2A&gt;</ph> method changes the effective value of the property, but existing triggers, data bindings, and styles will continue to work.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetCurrentValue%2A&gt;</ph> Methode ändert sich den effektiven Wert der Eigenschaft, aber vorhandene Trigger, datenbindungen und Stile sind weiterhin funktionsfähig.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft in einem versiegelten <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> zu ändern.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> entsprach nicht dem für die <ph id="ph2">&lt;paramref name="dp" /&gt;</ph>-Eigenschaft registrierten Typ.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="T:System.Windows.DependencyObject">
          <source>Sets the local value of a dependency property.</source>
          <target state="translated">Legt den lokalen Wert einer Abhängigkeitseigenschaft fest.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>The identifier of the dependency property to set.</source>
          <target state="translated">Der Bezeichner der festzulegenden Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>The new local value.</source>
          <target state="translated">Der neue lokale Wert.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>Sets the local value of a dependency property, specified by its dependency property identifier.</source>
          <target state="translated">Legt den lokalen Wert einer Abhängigkeitseigenschaft fest, die durch ihren Bezeichner angegeben ist.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Wenn der angegebene Typ nicht mit dem Typ übereinstimmt, der für die Abhängigkeitseigenschaft deklariert wird, wie es ursprünglich registriert wurde, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter sollte immer in den entsprechenden Typ angegeben werden.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>The exception conditions are potentially influenced by the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</ph> callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Die Ausnahmebedingungen werden möglicherweise von diesem beeinflusst die <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</ph> Rückruf, der auf den Bezeichner der festzulegenden Abhängigkeitseigenschaft Abhängigkeit vorhanden ist.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>Otherwise, the value provided might be failing general type-checking conditions (for example, passing a string when the native type is Double).</source>
          <target state="translated">Andernfalls möglicherweise angegebene Wert fehlerhaft allgemeine Typprüfung Bedingungen (z. B. eine Zeichenfolge übergeben, wenn der systemeigene Typ Double).</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source>Attempted to modify a read-only dependency property, or a property on a sealed <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph>.</source>
          <target state="translated">Es wurde versucht, eine schreibgeschützte Abhängigkeitseigenschaft oder eine Eigenschaft in einem versiegelten <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> zu ändern.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> was not the correct type as registered for the <ph id="ph2">&lt;paramref name="dp" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> entsprach nicht dem für die <ph id="ph2">&lt;paramref name="dp" /&gt;</ph>-Eigenschaft registrierten Typ.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph> identifier of the property to set.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph>-Bezeichner der festzulegenden Eigenschaft.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>The new local value.</source>
          <target state="translated">Der neue lokale Wert.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>Sets the local value of a read-only dependency property, specified by the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph> identifier of the dependency property.</source>
          <target state="translated">Legt den lokalen Wert einer schreibgeschützten Abhängigkeitseigenschaft fest, die durch den <ph id="ph1">&lt;see cref="T:System.Windows.DependencyPropertyKey" /&gt;</ph>-Bezeichner der Abhängigkeitseigenschaft angegeben ist.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>This signature is generally used when you set values for read-only dependency properties that are defined by your custom classes.</source>
          <target state="translated">Diese Signatur wird normalerweise verwendet, wenn Sie Werte für schreibgeschützte Abhängigkeitseigenschaften festgelegt, die durch die benutzerdefinierten Klassen definiert werden.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>Generally, <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> is called only from the type that registered that dependency property, which implements the internal logic that provides the determined value for the dependency property.</source>
          <target state="translated">Im allgemeinen <ph id="ph1">&lt;xref:System.Windows.DependencyObject.SetValue%2A&gt;</ph> aufgerufen wird, nur anhand des Typs, der die Abhängigkeitseigenschaft registriert die interne Logik implementiert, die der festgelegten Wert für die Abhängigkeitseigenschaft bereitstellt.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Read-Only Dependency Properties<ept id="p1">](~/docs/framework/wpf/advanced/read-only-dependency-properties.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Schreibgeschützte Abhängigkeitseigenschaften<ept id="p1">](~/docs/framework/wpf/advanced/read-only-dependency-properties.md)</ept>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>If the provided type does not match the type that is declared for the dependency property as it was originally registered, an exception is thrown.</source>
          <target state="translated">Wenn der angegebene Typ nicht mit dem Typ übereinstimmt, der für die Abhängigkeitseigenschaft deklariert wird, wie es ursprünglich registriert wurde, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter should always be provided as the appropriate type.</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter sollte immer in den entsprechenden Typ angegeben werden.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>The exception conditions are potentially influenced by the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</ph> callback that exists on the dependency property identifier of the dependency property being set.</source>
          <target state="translated">Die Ausnahmebedingungen werden möglicherweise von diesem beeinflusst die <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.ValidateValueCallback%2A&gt;</ph> Rückruf, der auf den Bezeichner der festzulegenden Abhängigkeitseigenschaft Abhängigkeit vorhanden ist.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)">
          <source>The following example defines a read-only dependency property, along with a <ph id="ph1">`public static readonly`</ph> <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph> that provides necessary read-only exposure to property consumers, and the get accessor for the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> wrapper.</source>
          <target state="translated">Das folgende Beispiel definiert eine schreibgeschützte Abhängigkeitseigenschaft zusammen mit einem <ph id="ph1">`public static readonly`</ph> <ph id="ph2">&lt;xref:System.Windows.DependencyProperty&gt;</ph> bereitstellt erforderlichen nur-Lese Anfälligkeit für Consumer der Eigenschaft und die Get-Zugriffsmethode für die <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> Wrapper.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <source>The identifier for the dependency property that should be serialized.</source>
          <target state="translated">Der Bezeichner für die Abhängigkeitseigenschaft, die serialisiert werden soll.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <source>Returns a value that indicates whether serialization processes should serialize the value for the provided dependency property.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob Serialisierungsprozesse den Wert der bereitgestellten Abhängigkeitseigenschaft serialisieren sollen.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the dependency property that is supplied should be value-serialized; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der Wert der angegebenen Abhängigkeitseigenschaft serialisiert wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <source>The default implementation returns <ph id="ph1">`true`</ph> for all cases in which a dependency property had a local value established on the <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</source>
          <target state="translated">Gibt die standardmäßige Implementierung <ph id="ph1">`true`</ph> für alle Fälle, bei dem eine Abhängigkeitseigenschaft einen lokalen Wert festgelegt werden hatte, auf, die <ph id="ph2">&lt;xref:System.Windows.DependencyObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)">
          <source>Overrides for this method might handle specific dependency properties differently.</source>
          <target state="translated">Außerkraftsetzungen für diese Methode möglicherweise für bestimmte Abhängigkeitseigenschaften unterschiedlich behandelt werden.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>