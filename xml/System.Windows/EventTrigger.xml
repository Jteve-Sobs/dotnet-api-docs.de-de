<Type Name="EventTrigger" FullName="System.Windows.EventTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4c8c1561e195ba60e82ae04f05328a662935c972" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48755578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type EventTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Windows.Markup.ContentProperty("Actions")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Trigger dar, der eine Reihe von Aktionen als Reaktion auf ein Ereignis anwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Trigger> Objekte verfügen über die <xref:System.Windows.Trigger.Setters%2A>, <xref:System.Windows.TriggerBase.EnterActions%2A>, und <xref:System.Windows.TriggerBase.ExitActions%2A> Eigenschaften, die Änderungen oder Aktionen basierend auf den Zustand der bestimmte Eigenschaften, gelten beim <xref:System.Windows.EventTrigger> Objekte beginnen, einen Satz von <xref:System.Windows.EventTrigger.Actions%2A> Wenn ein bestimmtes Routingereignis auftritt. Sie möchten z. B. Verwenden einer <xref:System.Windows.EventTrigger> um einen Satz von Animationen zu starten, wenn der Mauszeiger über einem bestimmten [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Steuerelement. Im Gegensatz zu <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> hat kein Konzept für die Beendigung der Status, damit die Aktion nicht rückgängig gemacht werden wird, sobald die Bedingung, die das Ereignis ausgelöst hat, nicht mehr "true" ist.  
  
 Beachten Sie, dass bei Verwendung einer <xref:System.Windows.EventTrigger>, müssen Sie Ereignisse auswählen, die mit dem internen Verhalten des Steuerelements nicht beeinträchtigen. Steuert, wie z. B. <xref:System.Windows.Controls.Button> oder <xref:System.Windows.Controls.TextBox> bestimmte Aktionen wie Mausklicks Benutzereingabeereignisse und Tastaturereignisse. Z. B., wenn Sie einer Schalfläche und Festlegen der <xref:System.Windows.Input.Mouse.MouseDown> Ereignis als der <xref:System.Windows.EventTrigger.RoutedEvent%2A> von ein <xref:System.Windows.EventTrigger>, die <xref:System.Windows.EventTrigger> niemals angewendet, da zunächst von der Schaltfläche selbst das Ereignis behandelt wird. Sie können stattdessen die <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis oder ein anderes Ereignis.  
  
 Bei Verwendung der Datenbindung, bei Verwendung von der <xref:System.Windows.Data.Binding.TargetUpdated> Ereignis müssen Sie festlegen, die <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> Wert Ihrer <xref:System.Windows.Data.Binding> -Objekt `true` für das Ereignis ausgelöst werden soll.  
  
 Hinzufügen einer <xref:System.Windows.TriggerAction> untergeordnetes Element eine <xref:System.Windows.EventTrigger> Objekt implizit hinzugefügt der <xref:System.Windows.TriggerActionCollection> für die <xref:System.Windows.EventTrigger> Objekt.  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie mit Ereignistriggern in einem Stil zum Animieren der <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.MouseLeave> Ereignisse von einem <xref:System.Windows.FrameworkElement>. In diesem Beispiel die <xref:System.Windows.Style> hat die <xref:System.Windows.Style.TargetType%2A> festgelegt <xref:System.Windows.Shapes.Rectangle>. Daher besteht keine Notwendigkeit zur Qualifizierung der `MouseEnter` und `MouseLeave` Ereignisnamen mit dem Klassennamen.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.EventSetter" />
    <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=160010">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventTrigger : System.Windows.RoutedEvent -&gt; System.Windows.EventTrigger" Usage="new System.Windows.EventTrigger routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Das <see cref="T:System.Windows.RoutedEvent" />, das diesen Trigger aktiviert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse mit dem angegebenen Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection Actions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ Actions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Windows.TriggerActionCollection" Usage="System.Windows.EventTrigger.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Aktionen ab, die ausgeführt werden sollen, wenn das Ereignis auftritt.</summary>
        <value>Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger> hat kein Konzept für die Beendigung der Status, damit die Aktion nicht rückgängig gemacht werden wird, sobald die Bedingung, die das Ereignis ausgelöst hat, nicht mehr "true" ist.  
  
 Hinzufügen einer <xref:System.Windows.TriggerAction> untergeordnetes Element eine <xref:System.Windows.EventTrigger> Objekt implizit hinzugefügt der <xref:System.Windows.TriggerActionCollection> für die <xref:System.Windows.EventTrigger> Objekt.  
  
> [!NOTE]
>  Diese Eigenschaft kann nur festgelegt werden, [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] über die Auflistungssyntax angezeigt oder indem Sie den Zugriff auf das Objekt und dessen verschiedene Methoden wie z. B. hinzufügen. Die Eigenschaft auf das Auflistungsobjekt selbst ist schreibgeschützt, die Sammlung selbst ist Lese-/ Schreibzugriff.  
  
<a name="xamlPropertyElementUsage_Actions"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.Actions>  
    OneOrMoreTriggerActions  
  </object.Actions>  
</object>  
```  
  
<a name="xamlValues_Actions"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *OneOrMoreTriggerActions*  
 Eine oder mehrere <xref:System.Windows.TriggerAction> Objekte.  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie von Ereignistriggern in einem Stil zum Animieren dargestellt die <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.MouseLeave> Ereignisse von einem <xref:System.Windows.FrameworkElement>. Wie oben erwähnt, Hinzufügen einer <xref:System.Windows.TriggerAction> untergeordnetes Element eine <xref:System.Windows.EventTrigger> Objekt implizit hinzugefügt der <xref:System.Windows.TriggerActionCollection> für die <xref:System.Windows.EventTrigger> Objekt. In diesem Beispiel daher `<EventTrigger.Actions>` ist implizit.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=160010">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</related>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="eventTrigger.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.TriggerAction" />-Objekt, das der <see cref="P:System.Windows.EventTrigger.Actions" />-Auflistung dieses Triggers hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene Objekt der <see cref="P:System.Windows.EventTrigger.Actions" />-Auflistung des aktuellen Ereignistriggers hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="eventTrigger.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Dieser Parameter wird nicht verwendet.</param>
        <summary>Diese Methode wird nicht unterstützt und löst eine Ausnahme aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventTrigger.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das <see cref="T:System.Windows.RoutedEvent" /> ab, das diesen Trigger aktiviert, oder legt das Ereignis fest.</summary>
        <value>Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.EventTrigger>s gelten eine Reihe von Aktionen auf, wenn das angegebene Routingereignis auftritt. Sie möchten beispielsweise verwenden <xref:System.Windows.EventTrigger>s, um einen Satz von Animationen zu starten, wenn der Mauszeiger über einem bestimmten [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Steuerelement.  
  
 Wenn die Vorlage oder Stil, der diesen <xref:System.Windows.EventTrigger> verfügt nicht über die `TargetType` Eigenschaft angegeben wird, um die Qualität der Ereignisname, mit die Klasse mit benötigen Sie die `ClassName.EventName` Syntax.  
  
 <xref:System.Windows.EventTrigger> Objekte können keine Ereignisse behandelt, die bereits <xref:System.Windows.RoutedEventArgs.Handled%2A>. Steuert, wie z. B. <xref:System.Windows.Controls.Button> oder <xref:System.Windows.Controls.TextBox> bestimmte Aktionen wie Mausklicks Benutzereingabeereignisse und Tastaturereignisse. Z. B., wenn Sie einer Schalfläche und Festlegen der <xref:System.Windows.Input.Mouse.MouseDown> Ereignis als der <xref:System.Windows.EventTrigger.RoutedEvent%2A> von ein <xref:System.Windows.EventTrigger>, die <xref:System.Windows.EventTrigger> niemals angewendet, da zunächst von der Schaltfläche selbst das Ereignis behandelt wird. Sie können stattdessen die <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis oder ein anderes Ereignis.  
  
 Bei Verwendung der Datenbindung, bei Verwendung von der <xref:System.Windows.Data.Binding.TargetUpdated> Ereignis müssen Sie festlegen, die <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> Wert Ihrer <xref:System.Windows.Data.Binding> Objekt auf "true" für das Ereignis ausgelöst werden soll.  
  
   
  
## Examples  
 Dieses Beispiel zeigt, wie Sie mit Ereignistriggern in einem Stil zum Animieren der <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.MouseLeave> Ereignisse von einem <xref:System.Windows.FrameworkElement>. In diesem Beispiel die <xref:System.Windows.Style> hat die <xref:System.Windows.Style.TargetType%2A> festgelegt <xref:System.Windows.Shapes.Rectangle>. Daher besteht keine Notwendigkeit zur Qualifizierung der `MouseEnter` und `MouseLeave` Ereignisnamen mit dem Klassennamen.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Windows.EventTrigger.RoutedEvent" />-Eigenschaft darf nicht NULL sein.</exception>
        <related type="ExternalDocumentation" href="http://go.microsoft.com/fwlink/?LinkID=160010">Erstellen von Formaten und Vorlagen-Beispiel – Einführung</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeActions">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.ShouldSerializeActions" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeActions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeActions();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeActions : unit -&gt; bool" Usage="eventTrigger.ShouldSerializeActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.Windows.EventTrigger.Actions" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn der <see cref="P:System.Windows.EventTrigger.Actions" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.EventTrigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Objekts mit dem Ereignis ab, das diesen Trigger aktiviert, oder legt ihn fest. Wird nur von Elementtriggern oder Vorlagentriggern verwendet.</summary>
        <value>Der Standardwert ist <see langword="null" />. Wenn dieser Eigenschaftswert <see langword="null" /> ist, handelt es sich bei dem Element, für das das Auslösen des Ereignisses überwacht wird, um das auf Vorlagen basierende übergeordnete Element oder um den Stamm der logischen Struktur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft festlegen, auf den Namen eines Elements innerhalb des Bereichs, wo die triggerauflistung (der Auflistung, das von diesem <xref:System.Windows.EventTrigger> ist Teil des) angewendet wird. Dies ist normalerweise ein benanntes Element, das in der Vorlage ist, der diesen <xref:System.Windows.EventTrigger>. Wenn Sie festlegen, die <xref:System.Windows.FrameworkElement.Triggers%2A> -Eigenschaft auf ein Element direkt, dann ist ein benanntes Element innerhalb des Bereichs dieses übergeordneten Elements.  
  
 Sie können den Namen eines Objekts mit der [X: Name Directive](~/docs/framework/xaml-services/x-name-directive.md) Syntax.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Sobald ein <see cref="T:System.Windows.EventTrigger" /> in Verwendung ist, kann er nicht mehr geändert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzuzufügende untergeordnete Objekt.</param>
        <summary>Fügt ein untergeordnetes Objekt hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.EventTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der dem Objekt hinzuzufügende Text.</param>
        <summary>Fügt dem Objekt den Textinhalt eines Knotens hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.EventTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>