<Type Name="EventTrigger" FullName="System.Windows.EventTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed56bc32adf3a03e9805595981264aad267f5449" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86715717" /></Metadata><TypeSignature Language="C#" Value="public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class EventTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventTrigger : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type EventTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Windows.Markup.ContentProperty("Actions")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Windows.Markup.ContentProperty("Actions")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Trigger dar, der eine Reihe von Aktionen als Reaktion auf ein Ereignis anwendet.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Trigger> -Objekte verfügen über die <xref:System.Windows.Trigger.Setters%2A> <xref:System.Windows.TriggerBase.EnterActions%2A> Eigenschaften, und <xref:System.Windows.TriggerBase.ExitActions%2A> , die Änderungen oder Aktionen basierend auf dem Zustand bestimmter Eigenschaften anwenden, während- <xref:System.Windows.EventTrigger> Objekte eine Menge von starten, <xref:System.Windows.EventTrigger.Actions%2A> Wenn ein bestimmtes Routing Ereignis auftritt. Sie können z. b. verwenden, <xref:System.Windows.EventTrigger> um einen Animations Satz zu starten, wenn sich der Mauszeiger über einem bestimmten [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Steuerelement befindet. Anders als ist <xref:System.Windows.Trigger> <xref:System.Windows.EventTrigger> kein Konzept der Beendigung des Zustands vorhanden, sodass die Aktion nicht rückgängig gemacht wird, sobald die Bedingung, die das Ereignis ausgelöst hat, nicht mehr zutrifft.  
  
 Beachten Sie, dass <xref:System.Windows.EventTrigger> Sie bei der Verwendung von Ereignisse auswählen müssen, die das inhärente Verhalten Ihres Steuer Elements nicht beeinträchtigen. Steuerelemente, wie z <xref:System.Windows.Controls.Button> . b. oder, <xref:System.Windows.Controls.TextBox> führen bestimmte Aktionen für Benutzereingabe Ereignisse wie Mausklicks und Tastatur Ereignisse aus. Wenn Sie z. b. eine Schaltfläche formatieren und versuchen, das <xref:System.Windows.Input.Mouse.MouseDown> Ereignis als <xref:System.Windows.EventTrigger.RoutedEvent%2A> eines festzulegen <xref:System.Windows.EventTrigger> , <xref:System.Windows.EventTrigger> wird die nie angewendet, da das Ereignis zuerst von der Schaltfläche behandelt wird. Stattdessen können Sie das- <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis oder ein anderes Ereignis verwenden.  
  
 Wenn Sie das-Ereignis mit der Datenbindung verwenden, <xref:System.Windows.Data.Binding.TargetUpdated> müssen Sie den <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> Wert des- <xref:System.Windows.Data.Binding> Objekts auf festlegen, `true` damit das-Ereignis ausgelöst wird.  
  
 Wenn Sie einem Objekt ein untergeordnetes Element hinzufügen, wird <xref:System.Windows.TriggerAction> <xref:System.Windows.EventTrigger> es implizit dem <xref:System.Windows.TriggerActionCollection> für das-Objekt hinzugefügt <xref:System.Windows.EventTrigger> .  
  
   
  
## Examples  
 In diesem Beispiel wird gezeigt, wie Ereignis Trigger in einem Stil verwendet werden, um die <xref:System.Windows.UIElement.MouseEnter> -und- <xref:System.Windows.UIElement.MouseLeave> Ereignisse eines zu animieren <xref:System.Windows.FrameworkElement> . In diesem Beispiel <xref:System.Windows.Style> ist <xref:System.Windows.Style.TargetType%2A> auf festgelegt <xref:System.Windows.Shapes.Rectangle> . Daher ist es nicht erforderlich, die `MouseEnter` `MouseLeave` Ereignis Namen und mit dem Klassennamen zu qualifizieren.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.EventSetter" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Einführung in das Beispiel für formatieren und Vorlagen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventTrigger (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (routedEvent As RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventTrigger(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventTrigger : System.Windows.RoutedEvent -&gt; System.Windows.EventTrigger" Usage="new System.Windows.EventTrigger routedEvent" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Das <see cref="T:System.Windows.RoutedEvent" />, das diesen Trigger aktiviert.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventTrigger" />-Klasse mit dem angegebenen Ereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Actions">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerActionCollection Actions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerActionCollection Actions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.Actions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Actions As TriggerActionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerActionCollection ^ Actions { System::Windows::TriggerActionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Actions : System.Windows.TriggerActionCollection" Usage="System.Windows.EventTrigger.Actions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerActionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der Aktionen ab, die ausgeführt werden sollen, wenn das Ereignis auftritt.</summary>
        <value>Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Anders als ist <xref:System.Windows.Trigger> <xref:System.Windows.EventTrigger> kein Konzept der Beendigung des Zustands vorhanden, sodass die Aktion nicht rückgängig gemacht wird, sobald die Bedingung, die das Ereignis ausgelöst hat, nicht mehr zutrifft.  
  
 Wenn Sie einem Objekt ein untergeordnetes Element hinzufügen, wird <xref:System.Windows.TriggerAction> <xref:System.Windows.EventTrigger> es implizit dem <xref:System.Windows.TriggerActionCollection> für das-Objekt hinzugefügt <xref:System.Windows.EventTrigger> .  
  
> [!NOTE]
>  Diese Eigenschaft kann nur in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] über die angezeigte Auflistungs Syntax oder durch Zugriff auf das Auflistungs Objekt und mithilfe der verschiedenen Methoden, z. b. Add, festgelegt werden. Die-Eigenschaft für den Zugriff auf das Auflistungs Objekt selbst ist schreibgeschützt, die Auflistung selbst hat Lese-/Schreibzugriff.  
  
<a name="xamlPropertyElementUsage_Actions"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.Actions>  
    OneOrMoreTriggerActions  
  </object.Actions>  
</object>  
```  
  
<a name="xamlValues_Actions"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Oneormoretriggeractions*  
 Mindestens ein- <xref:System.Windows.TriggerAction> Objekt.  
  
   
  
## Examples  
 In diesem Beispiel wird beschrieben, wie Ereignis Trigger in einem Stil verwendet werden, um die <xref:System.Windows.UIElement.MouseEnter> -und- <xref:System.Windows.UIElement.MouseLeave> Ereignisse eines zu animieren <xref:System.Windows.FrameworkElement> . Wie bereits erwähnt, wird das Hinzufügen eines <xref:System.Windows.TriggerAction> untergeordneten Objekts zu einem <xref:System.Windows.EventTrigger> Objekt dem für das-Objekt implizit hinzugefügt <xref:System.Windows.TriggerActionCollection> <xref:System.Windows.EventTrigger> . In diesem Beispiel `<EventTrigger.Actions>` ist daher implizit.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Einführung in das Beispiel für formatieren und Vorlagen</related>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="protected virtual void AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddChild (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddChild(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddChild : obj -&gt; unit&#xA;override this.AddChild : obj -&gt; unit" Usage="eventTrigger.AddChild value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Ein <see cref="T:System.Windows.TriggerAction" />-Objekt, das der <see cref="P:System.Windows.EventTrigger.Actions" />-Auflistung dieses Triggers hinzugefügt werden soll.</param>
        <summary>Fügt das angegebene Objekt der <see cref="P:System.Windows.EventTrigger.Actions" />-Auflistung des aktuellen Ereignistriggers hinzu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddText">
      <MemberSignature Language="C#" Value="protected virtual void AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member AddText : string -&gt; unit&#xA;override this.AddText : string -&gt; unit" Usage="eventTrigger.AddText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Dieser Parameter wird nicht verwendet.</param>
        <summary>Diese Methode wird nicht unterstützt und löst eine Ausnahme aus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RoutedEvent">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent RoutedEvent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent RoutedEvent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.RoutedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Property RoutedEvent As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ RoutedEvent { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RoutedEvent : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventTrigger.RoutedEvent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft dieses <see cref="T:System.Windows.RoutedEvent" /> ab oder legt es fest, das diesen Trigger aktiviert.</summary>
        <value>Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.EventTrigger>s wenden eine Reihe von Aktionen an, wenn das angegebene Routing Ereignis auftritt. Beispielsweise können Sie s verwenden, <xref:System.Windows.EventTrigger> um eine Reihe von Animationen zu starten, wenn sich der Mauszeiger über einem bestimmten [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Steuerelement befindet.  
  
 Wenn für die Vorlage oder den Stil, in der dieses enthalten ist <xref:System.Windows.EventTrigger> , die- `TargetType` Eigenschaft nicht angegeben ist, müssen Sie den Ereignis Namen mithilfe der-Syntax mit dem Klassennamen qualitativ hoch setzen `ClassName.EventName` .  
  
 <xref:System.Windows.EventTrigger> -Objekte können Ereignisse, die bereits waren, nicht verarbeiten <xref:System.Windows.RoutedEventArgs.Handled%2A> . Steuerelemente, wie z <xref:System.Windows.Controls.Button> . b. oder, <xref:System.Windows.Controls.TextBox> führen bestimmte Aktionen für Benutzereingabe Ereignisse wie Mausklicks und Tastatur Ereignisse aus. Wenn Sie z. b. eine Schaltfläche formatieren und versuchen, das <xref:System.Windows.Input.Mouse.MouseDown> Ereignis als <xref:System.Windows.EventTrigger.RoutedEvent%2A> eines festzulegen <xref:System.Windows.EventTrigger> , <xref:System.Windows.EventTrigger> wird die nie angewendet, da das Ereignis zuerst von der Schaltfläche behandelt wird. Stattdessen können Sie das- <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis oder ein anderes Ereignis verwenden.  
  
 Wenn Sie das-Ereignis mit der Datenbindung verwenden, <xref:System.Windows.Data.Binding.TargetUpdated> müssen Sie den <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> Wert des- <xref:System.Windows.Data.Binding> Objekts auf true festlegen, damit das-Ereignis ausgelöst wird.  
  
   
  
## Examples  
 In diesem Beispiel wird gezeigt, wie Ereignis Trigger in einem Stil verwendet werden, um die <xref:System.Windows.UIElement.MouseEnter> -und- <xref:System.Windows.UIElement.MouseLeave> Ereignisse eines zu animieren <xref:System.Windows.FrameworkElement> . In diesem Beispiel <xref:System.Windows.Style> ist <xref:System.Windows.Style.TargetType%2A> auf festgelegt <xref:System.Windows.Shapes.Rectangle> . Daher ist es nicht erforderlich, die `MouseEnter` `MouseLeave` Ereignis Namen und mit dem Klassennamen zu qualifizieren.  
  
 [!code-xaml[StyleEventTriggerAnimation#EventTriggerSnippet](~/samples/snippets/csharp/VS_Snippets_Wpf/StyleEventTriggerAnimation/CS/Default.xaml#eventtriggersnippet)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Die <see cref="P:System.Windows.EventTrigger.RoutedEvent" />-Eigenschaft darf nicht NULL sein.</exception>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160010">Einführung in das Beispiel für formatieren und Vorlagen</related>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeActions">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeActions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeActions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.ShouldSerializeActions" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeActions () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeActions();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeActions : unit -&gt; bool" Usage="eventTrigger.ShouldSerializeActions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob Serialisierungsprozesse den tatsächlichen Wert der <see cref="P:System.Windows.EventTrigger.Actions" />-Eigenschaft bei Instanzen dieser Klasse serialisieren sollen.</summary>
        <returns>Gibt <see langword="true" /> zurück, wenn der <see cref="P:System.Windows.EventTrigger.Actions" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceName">
      <MemberSignature Language="C#" Value="public string SourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SourceName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventTrigger.SourceName" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceName : string with get, set" Usage="System.Windows.EventTrigger.SourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DefaultValue(null)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DefaultValue(null)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Objekts mit dem Ereignis ab, das diesen Trigger aktiviert, oder legt ihn fest. Wird nur von Elementtriggern oder Vorlagentriggern verwendet.</summary>
        <value>Der Standardwert ist <see langword="null" />. Wenn dieser Eigenschaftswert <see langword="null" /> ist, entspricht das Element, das auf das Auslösen des Ereignisses überwacht wird, dem vorlagenbasierten übergeordneten Element oder dem Stamm der logischen Struktur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft auf den Namen eines beliebigen Elements innerhalb des Bereichs festlegen, in dem die auslöserauflistung (die Auflistung, zu der es <xref:System.Windows.EventTrigger> gehört) angewendet wird. Dabei handelt es sich in der Regel um ein benanntes Element, das sich in der Vorlage befindet <xref:System.Windows.EventTrigger> Wenn Sie die- <xref:System.Windows.FrameworkElement.Triggers%2A> Eigenschaft für ein Element direkt festlegen, ist es ein benanntes Element innerhalb des Gültigkeits Bereichs dieses übergeordneten Elements.  
  
 Sie können ein Objekt mit der [x:Name](/dotnet/framework/xaml-services/x-name-directive) -Direktivensyntax benennen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Sobald ein <see cref="T:System.Windows.EventTrigger" /> verwendet wird, kann er nicht mehr geändert werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddChild : obj -&gt; unit" Usage="eventTrigger.System.Windows.Markup.IAddChild.AddChild value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzuzufügende untergeordnete Objekt.</param>
        <summary>Fügt ein untergeordnetes Objekt hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.EventTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Markup.IAddChild.AddText : string -&gt; unit&#xA;override this.System.Windows.Markup.IAddChild.AddText : string -&gt; unit" Usage="eventTrigger.System.Windows.Markup.IAddChild.AddText text" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der dem Objekt hinzuzufügende Text.</param>
        <summary>Fügt dem Objekt den Textinhalt eines Knotens hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.EventTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
