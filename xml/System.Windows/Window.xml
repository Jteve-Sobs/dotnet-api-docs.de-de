<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Window.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57fb443b6a52f587d274ec4a644c7ec8fd50eb8cf.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7fb443b6a52f587d274ec4a644c7ec8fd50eb8cf</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Window">
          <source>Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</source>
          <target state="translated">Bietet die Möglichkeit, die Lebensdauer von Fenstern und Dialogfeldern zu erstellen, zu konfigurieren, anzuzeigen und zu verwalten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The point of interaction between a user and a standalone application is a window.</source>
          <target state="translated">Der Ort der Interaktion zwischen einem Benutzer und eine eigenständige Anwendung ist ein Fenster.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> window consists of two distinct areas:</source>
          <target state="translated">Ein <ph id="ph1">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]</ph> Fenster besteht aus zwei unterschiedlichen Bereichen:</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</source>
          <target state="translated">Ein nicht-Clientbereich, hostet die Windows-Zusatzelemente, z. B. ein Symbol, Titel, Systemmenü, Minimieren-Schaltfläche, Schaltfläche, Schaltfläche "Wiederherstellen", Schaltfläche "Schließen" und einen Rahmen zu maximieren.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A client area, which hosts application-specific content.</source>
          <target state="translated">Ein Client-Bereich, der anwendungsspezifischen Inhalt hostet.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A standard window is shown in the following figure:</source>
          <target state="translated">Standardfensters ist in der folgenden Abbildung gezeigt:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><bpt id="p1">![</bpt>Window elements<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure1.PNG "</bpt>Window elements<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Fensterelemente<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure1.PNG "</bpt>Fensterelemente<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Kapselt die Möglichkeit zu erstellen, konfigurieren, anzeigen und Verwalten der Lebensdauer von Fenstern und Dialogfeldern, und stellt die folgenden wichtige Dienste bereit:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><bpt id="p1">**</bpt>Lifetime Management<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.Activate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Close%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.Closed&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Window.Closing&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Window.Deactivated&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Verwaltung der Objektlebensdauer<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.Activate%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Close%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.Closed&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Window.Closing&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Window.Deactivated&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><bpt id="p1">**</bpt>Window Management<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.GetWindow%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Fensterverwaltung<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.GetWindow%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><bpt id="p1">**</bpt>Appearance and Behavior<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Window.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Window.ResizeMode%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;</ph>, <ph id="ph11">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph>, <ph id="ph12">&lt;xref:System.Windows.Window.StateChanged&gt;</ph>, <ph id="ph13">&lt;xref:System.Windows.Window.Title%2A&gt;</ph>, <ph id="ph14">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, <ph id="ph15">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph>, <ph id="ph16">&lt;xref:System.Windows.Window.WindowStartupLocation%2A&gt;</ph>, <ph id="ph17">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph>, <ph id="ph18">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph></source>
          <target state="translated"><bpt id="p1">**</bpt>Aussehen und Verhalten<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.Window.Left%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph>, <ph id="ph7">&lt;xref:System.Windows.Window.ResizeMode%2A&gt;</ph>, <ph id="ph8">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>, <ph id="ph9">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph>, <ph id="ph10">&lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;</ph>, <ph id="ph11">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph>, <ph id="ph12">&lt;xref:System.Windows.Window.StateChanged&gt;</ph>, <ph id="ph13">&lt;xref:System.Windows.Window.Title%2A&gt;</ph>, <ph id="ph14">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, <ph id="ph15">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph>, <ph id="ph16">&lt;xref:System.Windows.Window.WindowStartupLocation%2A&gt;</ph>, <ph id="ph17">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph>, <ph id="ph18">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><bpt id="p1">**</bpt>Dialog Boxes<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>Dialogfelder<ept id="p1">**</ept>: <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Additionally, <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> exposes special support for managing all of the windows in an application:</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Windows.Application&gt;</ph> spezielle Unterstützung für die Verwaltung aller Fenster in einer Anwendung macht:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Application maintains a list of all the windows that are currently instantiated in the application.</source>
          <target state="translated">Dienstanwendung verwaltet eine Liste aller Fenster angezeigt, die zurzeit in der Anwendung instanziiert werden.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>This list is exposed by the <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property.</source>
          <target state="translated">Diese Liste wird verfügbar gemacht, indem die <ph id="ph1">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>By default, <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> is automatically set with a reference to the first <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> that is instantiated in an application.</source>
          <target state="translated">Standardmäßig <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> wird automatisch mit einem Verweis auf das erste festgelegt <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> , die in einer Anwendung instanziiert wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>This thereby making the window the main application window.</source>
          <target state="translated">Diese und dem Fenster das Hauptanwendungsfenster macht.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> can be implemented using markup, markup and code-behind, or code.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> mit Markup, Markup und CodeBehind oder Code implementiert werden können.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is primarily used to display windows and dialog boxes for standalone applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> wird hauptsächlich verwendet, um Fenster und Dialogfelder für eigenständige Anwendungen anzuzeigen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>However, for applications that require navigation at the window level, such as wizards, you can use <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> instead; <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> derives from <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> and extends it with browser-style navigation support.</source>
          <target state="translated">Für Anwendungen, die Navigation auf der Fenster-Ebene, z. B. Assistenten, erfordern Sie können jedoch <ph id="ph1">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> stattdessen; <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph> leitet sich von <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> und erweitert sie mit Unterstützung für die Navigation im Webbrowserstil.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Islands of navigable content can be incorporated into other content and content containers using <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</source>
          <target state="translated">Inseln navigierbar Inhalte können integriert werden, in andere Inhalte und Container, die mit <ph id="ph1">&lt;xref:System.Windows.Controls.Frame&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> needs <ph id="ph2">`UnmanagedCode`</ph> security permission to be instantiated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> muss <ph id="ph2">`UnmanagedCode`</ph> Sicherheitsberechtigung instanziiert werden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>This has the following consequences:</source>
          <target state="translated">Dies hat folgenden Konsequenzen:</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]</ph>-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]</ph>-bereitgestellten eigenständige Anwendungen fordert berechtigungserweiterung beim Start von Zonen "Internet" oder "Lokales Intranet.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source><ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)]</ph> die fordern etwas kleiner als die uneingeschränkte Berechtigungen nicht Windows oder Dialogfelder instanziieren können.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>For information about standalone application deployment and security considerations, see <bpt id="p1">[</bpt>WPF Security Strategy - Platform Security<ept id="p1">](~/docs/framework/wpf/wpf-security-strategy-platform-security.md)</ept>.</source>
          <target state="translated">Informationen zur Bereitstellung einer eigenständigen Anwendung und Überlegungen zur Sicherheit finden Sie unter <bpt id="p1">[</bpt>WPF-Sicherheitsstrategie – Plattformsicherheit<ept id="p1">](~/docs/framework/wpf/wpf-security-strategy-platform-security.md)</ept>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> ist eine <ph id="ph2">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>, was bedeutet, dass es ein einzelnes Objekt eines beliebigen Typs (z. B. eine Zeichenfolge, ein Bild oder ein Bereich) enthalten kann.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph> class.</source>
          <target state="translated">Weitere Informationen finden Sie in den Ausführungen zur <ph id="ph1">&lt;xref:System.Windows.Controls.ContentControl&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Also, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is a root element and, therefore, cannot be part of another element's content.</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> ein Stammelement und aus diesem Grund darf nicht Teil einer anderen Elementinhalt.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> properties set on a <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph> through a style will not be applied at run time.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> Eigenschaften für eine <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph> über einen Stil nicht ausgeglichen werden zur Laufzeit.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Customizing the Window Control</source>
          <target state="translated">Anpassen des Window-Steuerelements</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>To apply the same property settings to multiple <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> controls, use the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> property.</source>
          <target state="translated">Zum Anwenden der gleichen eigenschafteneinstellungen mit mehreren <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> -Steuerelemente verwenden die <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Style%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>You can modify the default <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> to give the control a unique appearance.</source>
          <target state="translated">Sie können den Standardwert ändern <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph> auf dem Steuerelement ein einzigartiges aussehen zu verleihen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>For more information about creating a <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, see <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Erstellen einer <ph id="ph1">&lt;xref:System.Windows.Controls.ControlTemplate&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>To see the parts and states that are specific to the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, see <bpt id="p1">[</bpt>Window Styles and Templates<ept id="p1">](~/docs/framework/wpf/controls/window-styles-and-templates.md)</ept>.</source>
          <target state="translated">Um anzuzeigen, die Teile und Zustände, die spezifisch für die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Fensterstile und Vorlagen<ept id="p1">](~/docs/framework/wpf/controls/window-styles-and-templates.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Dependency properties for this control might be set by the control’s default style.</source>
          <target state="translated">Abhängigkeitseigenschaften für dieses Steuerelement können vom Standardformat für das Steuerelement festgelegt werden.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>If a property is set by a default style, the property might change from its default value when the control appears in the application.</source>
          <target state="translated">Wenn eine Eigenschaft von einem Standardformat festgelegt ist, kann die Eigenschaft von seinem Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The default style is determined by which desktop theme is used when the application is running.</source>
          <target state="translated">Das Standardformat wird bestimmt, welche desktop Design verwendet wird, wenn die Anwendung ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>For more information, see <bpt id="p1">[</bpt>Default WPF Themes<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Standard-WPF-Designs<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=158252)</ept>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>Setting a visual property will only have an effect if that property is both present in <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> control's default template and is set by using a .</source>
          <target state="translated">Festlegen einer visuellen Eigenschaft haben nur Auswirkungen, wenn diese Eigenschaft sowohl in vorhanden ist <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Steuerelement die Standardvorlage und festgelegt ist, mit ein.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in <bpt id="p1">[</bpt>Customizing the Appearance of an Existing Control by Creating a ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</source>
          <target state="translated">Sie finden eine Liste der Eigenschaften visueller Elemente im Abschnitt "Ändern der visuellen Struktur eines Steuerelements" <bpt id="p1">[</bpt>Anpassen der Darstellung von einem vorhandenen Steuerelement durch Erstellen einer ControlTemplate<ept id="p1">](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The following example shows how a standard window is defined using only markup:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie ein standard-Fenster wird nur mit Markup definiert:</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The following example shows how a standard window is defined using only code:</source>
          <target state="translated">Das folgende Beispiel zeigt, wie ein Standardfenster mit definiert wurde nur code:</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Window">
          <source>The following example shows how a standard window is defined using a combination of markup and code-behind.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie ein standard-Fenster wird mit einer Kombination von Markup und CodeBehind definiert.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.#ctor">
          <source>The constructor initializes the <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> properties to their default <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph> values.</source>
          <target state="translated">Der Konstruktor initialisiert die <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> Eigenschaften mit ihren Standardwerten <ph id="ph5">&lt;xref:System.Windows.Window&gt;</ph> Werte.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.#ctor">
          <source>If a window is created within an <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> that has an <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> object, the constructor adds the <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> object to the set of <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>-managed windows via the <ph id="ph5">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> property of the <ph id="ph6">&lt;xref:System.Windows.Application&gt;</ph> object.</source>
          <target state="translated">Erstellt ein Fenster innerhalb eine <ph id="ph1">&lt;xref:System.AppDomain&gt;</ph> mit dem ein <ph id="ph2">&lt;xref:System.Windows.Application&gt;</ph> -Objekt, fügt der Konstruktor der <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> Objekt, das den Satz von <ph id="ph4">&lt;xref:System.Windows.Application&gt;</ph>-verwaltete Windows über die <ph id="ph5">&lt;xref:System.Windows.Application.Windows%2A&gt;</ph> Eigenschaft von der <ph id="ph6">&lt;xref:System.Windows.Application&gt;</ph> Objekt.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.#ctor">
          <source>for permission for this object to call unsafe native methods.</source>
          <target state="translated">für die Berechtigung für dieses Objekt unsichere systemeigene Methoden aufrufen.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.#ctor">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Activate">
          <source>Attempts to bring the window to the foreground and activates it.</source>
          <target state="translated">Versucht, das Fenster in den Vordergrund zu bringen, und aktiviert dieses.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Activate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> was successfully activated; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> erfolgreich aktiviert wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Activate">
          <source>The rules that determine whether the window is activated are the same as those used by the <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> <ph id="ph2">`SetForegroundWindow`</ph> function (User32.dll).</source>
          <target state="translated">Die Regeln, die bestimmen, ob das Fenster aktiviert ist, sind identisch mit denen von verwendet die <ph id="ph1">[!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)]</ph> <ph id="ph2">`SetForegroundWindow`</ph> Funktion ("User32.dll").</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Activate">
          <source>If the window is activated in a <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> application that is not the user's foreground application, <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> event is raised.</source>
          <target state="translated">Wenn das Fenster, in aktiviert ist eine <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> Anwendung, die nicht die benutzeranwendung Vordergrund ist <ph id="ph2">&lt;xref:System.Windows.Application.Activated&gt;</ph> Ereignis wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Activate">
          <source>This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Diese Methode kann nicht aufgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Activate">
          <source>for permission to activate a window.</source>
          <target state="translated">nach der Installationsberechtigung für ein Fenster zu aktivieren.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Activate">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Activated">
          <source>Occurs when a window becomes the foreground window.</source>
          <target state="translated">Tritt auf, wenn ein Fenster in den Vordergrund gesetzt wird.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>A window is activated (becomes the foreground window) when:</source>
          <target state="translated">Ein Fenster aktiviert ist (wird das Fenster im Vordergrund) Wenn:</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>The window is first opened.</source>
          <target state="translated">Das Fenster wird zuerst geöffnet werden.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</source>
          <target state="translated">Ein Benutzer wechselt zu einem Fenster, indem Sie sie auswählen, mit der Maus, und drücken ALT + TAB, oder im Task Manager.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>A user clicks the window's taskbar button.</source>
          <target state="translated">Ein Benutzer klickt auf die Schaltfläche auf der Taskleiste des Fensters.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>Windows that need to detect when they become activate can handle the <ph id="ph1">&lt;xref:System.Windows.Window.Activated&gt;</ph> event.</source>
          <target state="translated">Windows, die erkennen, wenn es sich bei Aktivierung müssen können behandeln die <ph id="ph1">&lt;xref:System.Windows.Window.Activated&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</source>
          <target state="translated">Nachdem ein Fenster erstmals aktiviert ist, kann es deaktiviert und erneut mehrere Male während seiner Lebensdauer aktiviert.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>If an application's behavior or state depends on its activation state, it can inspect <ph id="ph1">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph> to determine which activation state it's in.</source>
          <target state="translated">Wenn das Verhalten einer Anwendungsverzeichnis oder der Zustand von Aktivierungszustand abhängig ist, können Sie überprüfen <ph id="ph1">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph> um zu bestimmen, welche Aktivierungsstatus befindet sich im.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Activated">
          <source>An application can also be <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph>.</source>
          <target state="translated">Eine Anwendung kann auch <ph id="ph1">&lt;xref:System.Windows.Application.Activated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.AllowsTransparency">
          <source>Gets or sets a value that indicates whether a window's client area supports transparency.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob der Clientbereich eines Fensters Transparenz unterstützt.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window supports transparency; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Fenster Transparenz unterstützt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> property of a window is set to a transparent color, using <ph id="ph2">&lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;</ph> for example, the window remains opaque.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Controls.Control.Background%2A&gt;</ph> Eigenschaft eines Fensters festgelegt ist, um eine transparente Farbe, mit <ph id="ph2">&lt;xref:System.Windows.Media.Brushes.Transparent%2A&gt;</ph> beispielsweise bleibt das Fenster nicht transparent.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>This means that the desktop and any running applications "beneath" the window cannot be seen.</source>
          <target state="translated">Dies bedeutet, dass alle ausgeführten Anwendungen "das Fenster beneath" und auf dem Desktop nicht angezeigt werden.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>To enable this type of transparency, <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> must be set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">So aktivieren Sie diese Art von Transparenz, <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> muss festgelegt werden, um <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> exists to facilitate the creation of non-rectangular windows, and, consequently, when <ph id="ph2">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>, a window's <ph id="ph4">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph> property must be set to <ph id="ph5">&lt;xref:System.Windows.WindowStyle.None&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> ist vorhanden, um die Erstellung von nicht rechteckigen Fenstern zu erleichtern und folglich beim <ph id="ph2">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph> festgelegt ist, um <ph id="ph3">`true`</ph>, ein Fenster <ph id="ph4">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph> Eigenschaft muss festgelegt werden, um <ph id="ph5">&lt;xref:System.Windows.WindowStyle.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.AllowsTransparency">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.AllowsTransparency">
          <source>A window that has a <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowStyle" /&gt;</ph> value of anything other than <ph id="ph2">&lt;see cref="F:System.Windows.WindowStyle.None" /&gt;</ph>.</source>
          <target state="translated">Ein Fenster, das über einen beliebigen anderen <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowStyle" /&gt;</ph>-Wert als <ph id="ph2">&lt;see cref="F:System.Windows.WindowStyle.None" /&gt;</ph> verfügt.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.AllowsTransparencyProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.AllowsTransparency" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.AllowsTransparency" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that reflects the final size that the window should use to arrange itself and its children.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, die die endgültige Größe wiedergibt, anhand derer das Fenster sich selbst und seine untergeordneten Elemente anordnen soll.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source>Override this method to arrange and size a window and its child elements.</source>
          <target state="translated">Überschreiben Sie diese Methode, um ein Fenster und dessen untergeordnete Elemente anzuordnen und in der Größe zu ändern.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that reflects the actual size that was used.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, die die verwendete tatsächliche Größe wiedergibt.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.ArrangeOverride%2A&gt;</ph> is not called when the <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property has a value of <ph id="ph3">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.ArrangeOverride%2A&gt;</ph> wird nicht aufgerufen, wenn die <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft hat den Wert des <ph id="ph3">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property is either <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.ArrangeOverride%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.ArrangeOverride%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)">
          <source>When either <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> are called, the <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property of a <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> is set to <ph id="ph5">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</source>
          <target state="translated">Wenn entweder <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> aufgerufen werden, die <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft eine <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> auf festgelegt ist <ph id="ph5">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Close">
          <source>Manually closes a <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Schließt ein <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> manuell.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> kann geschlossen werden, verwenden eine von mehreren, bekannte, vom System bereitgestellte Mechanismen in der Titelleiste befindet:</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>ALT+F4.</source>
          <target state="translated">ALT+F4.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>System menu &amp;#124; <bpt id="p1">**</bpt>Close<ept id="p1">**</ept>.</source>
          <target state="translated">Systemmenü &amp;#124; <bpt id="p1">**</bpt>schließen<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source><bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated"><bpt id="p1">**</bpt>Schließen<ept id="p1">**</ept> Schaltfläche.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> kann geschlossen werden mit einer von mehreren bekannten Mechanismen im Clientbereich, die von Entwicklern, einschließlich bereitgestellt werden:</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source><bpt id="p1">**</bpt>File<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>Exit<ept id="p2">**</ept> on a main window.</source>
          <target state="translated"><bpt id="p1">**</bpt>Datei<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>beenden<ept id="p2">**</ept> auf ein Hauptfenster.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source><bpt id="p1">**</bpt>File<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>Close<ept id="p2">**</ept> or a <bpt id="p3">**</bpt>Close<ept id="p3">**</ept> button on a child window.</source>
          <target state="translated"><bpt id="p1">**</bpt>Datei<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>schließen<ept id="p2">**</ept> oder ein <bpt id="p3">**</bpt>schließen<ept id="p3">**</ept> auf ein untergeordnetes Fenster auf die Schaltfläche.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source><bpt id="p1">**</bpt>OK<ept id="p1">**</ept> and <bpt id="p2">**</bpt>Cancel<ept id="p2">**</ept> buttons on a dialog box are also developer-provided, although will likely set <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>, which automatically closes a window that was opened by calling <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">**</bpt>OK<ept id="p1">**</ept> und <bpt id="p2">**</bpt>"Abbrechen"<ept id="p2">**</ept> Schaltflächen in einem Dialogfeld werden auch von Entwicklern bereitgestellt, obwohl wird wahrscheinlich Satz <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>, die automatisch geschlossen wird, ein Fenster, das durch den Aufruf geöffnet wurde <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>These mechanisms require you to explicitly call <ph id="ph1">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> to close a window.</source>
          <target state="translated">Diese Mechanismen erfordern Sie explizit aufrufen <ph id="ph1">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> um ein Fenster zu schließen.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>If a window, opened by calling <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, and with a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> with its <ph id="ph3">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</source>
          <target state="translated">Wenn ein Fenster geöffnet wird, durch den Aufruf <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, und mit einer <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> mit seiner <ph id="ph3">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph> -Eigenschaft auf "true" festgelegt wird automatisch geschlossen, wenn die Schaltfläche geklickt oder die ESC-Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>If the window was opened using <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, however, <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> must be explicitly called, such as from <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler for the <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">Wenn das Fenster geöffnet wurde mit <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, allerdings <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> muss explizit aufgerufen werden, z. B. <ph id="ph3">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> -Ereignishandler für das <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>Closing a window causes the <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> event to be raised.</source>
          <target state="translated">Schließen eines Fensters bewirkt, dass die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis ausgelöst wurde.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> event isn't canceled, the following occurs:</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis wird nicht abgebrochen, geschieht Folgendes:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is removed from <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType&gt;</ph> (if an <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> object exists).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> wird daraus <ph id="ph2">&lt;xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType&gt;</ph> (wenn ein <ph id="ph3">&lt;xref:System.Windows.Application&gt;</ph> Objekt vorhanden ist).</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is removed from the owner <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> if the owner/owned relationship was established before the owned <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> was shown and after the owner <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> was opened.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> wird vom Besitzer entfernt <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> , wenn die Besitzer contosoit Beziehung hergestellt wurde vor der Besitzer <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> angezeigt wurde und nach der Besitzer <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> geöffnet wurde.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Window.Closed&gt;</ph> event is raised.</source>
          <target state="translated">Das <ph id="ph1">&lt;xref:System.Windows.Window.Closed&gt;</ph>-Ereignis wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>Unmanaged resources created by the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> are disposed.</source>
          <target state="translated">Nicht verwaltete Ressourcen erstellt, indem die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> verworfen werden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> was called to show the <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> returns.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> wurde aufgerufen, um das Anzeigen der <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> zurückgibt.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>Closing a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> causes any windows that it owns to be closed.</source>
          <target state="translated">Schließen einer <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> bewirkt, dass alle Fenster, die er besitzt, um die geschlossen werden.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>Furthermore, closing a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may cause an application to stop running depending on how the <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType&gt;</ph> property is set.</source>
          <target state="translated">Darüber hinaus schließen eine <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> kann dazu führen, dass eine Anwendung beendet wird, je nachdem, wie der <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType&gt;</ph> festgelegt wird.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Diese Methode kann nicht aufgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>The following example shows a <bpt id="p1">**</bpt>File<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>Exit<ept id="p2">**</ept> menu being handled to explicitly call <ph id="ph1">&lt;xref:System.Windows.Window.Close%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt eine <bpt id="p1">**</bpt>Datei<ept id="p1">**</ept> &amp;#124; <bpt id="p2">**</bpt>beenden<ept id="p2">**</ept> Menü wird behandelt, um explizit aufrufen <ph id="ph1">&lt;xref:System.Windows.Window.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>for permission to use all windows and user input events without restriction.</source>
          <target state="translated">nach der Installationsberechtigung für alle Fenster und Benutzereingabeereignisse uneingeschränkt verwenden.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Close">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Closed">
          <source>Occurs when the window is about to close.</source>
          <target state="translated">Tritt kurz vor dem Schließen des Fensters auf.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closed">
          <source>Once this event is raised, a window cannot be prevented from closing.</source>
          <target state="translated">Nachdem dieses Ereignis ausgelöst wird, kann nicht schließen ein Fensters verhindert werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Closed">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.UIElement.Visibility" /&gt;</ph> is set, or <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Windows.Window.Hide" /&gt;</ph> is called while a window is closing.</source>
          <target state="translated">Während ein Fenster schließt, wird <ph id="ph1">&lt;see cref="P:System.Windows.UIElement.Visibility" /&gt;</ph> festgelegt, oder <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> oder <ph id="ph4">&lt;see cref="M:System.Windows.Window.Hide" /&gt;</ph> wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Closing">
          <source>Occurs directly after <ph id="ph1">&lt;see cref="M:System.Windows.Window.Close" /&gt;</ph> is called, and can be handled to cancel window closure.</source>
          <target state="translated">Tritt unmittelbar nach dem Aufruf von <ph id="ph1">&lt;see cref="M:System.Windows.Window.Close" /&gt;</ph> auf und kann behandelt werden, um das Schließen des Fensters abzubrechen.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> can be handled to detect when a window is being closed (for example, when <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> is called).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> kann behandelt werden, um zu erkennen, wenn ein Fenster geschlossen wird (z. B. wenn <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> aufgerufen wird).</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>Furthermore, <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> can be used to prevent a window from closing.</source>
          <target state="translated">Darüber hinaus <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> können verwendet werden, um zu verhindern, dass ein Fenster schließen.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>To prevent a window from closing, you can set the <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> argument to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Zum Schließen ein Fensters zu verhindern, legen Sie die <ph id="ph1">&lt;xref:System.ComponentModel.CancelEventArgs.Cancel%2A&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.ComponentModel.CancelEventArgs&gt;</ph> Argument für <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> event is raised when <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis wird ausgelöst, wenn <ph id="ph2">&lt;xref:System.Windows.Window.Close%2A&gt;</ph> aufgerufen wird, wenn ein Fenster Schaltfläche "Schließen" geklickt wird oder wenn der Benutzer drückt, ALT + F4.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>If an owned window was opened by its owner window using <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, and the owner window is closed, the owned window's <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event is not raised.</source>
          <target state="translated">Wenn ein Besitzer Fenster geöffnet wurde, dessen Besitzer Fenster mit <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, und der Besitzer Fenster geschlossen ist, wird des zugehörige Fensters <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis wird nicht ausgelöst.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>If the owner of a window is closed (see <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>), <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> is not raised on the owned window.</source>
          <target state="translated">Wenn der Besitzer eines Fensters geschlossen wird (finden Sie unter <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>), <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> nicht für das zugehörige Fenster ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> is called, the <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event for each window is raised.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Application.Shutdown%2A&gt;</ph> aufgerufen wird, die <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis für jedes Fenster wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>However, if <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> is canceled, cancellation is ignored.</source>
          <target state="translated">Jedoch wenn <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> wird abgebrochen, Abbruch wird ignoriert.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>If a session ends because a user logs off or shuts down, <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> is not raised; handle <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> to implement code that cancels application closure.</source>
          <target state="translated">Wenn eine Sitzung beendet, da ein Benutzer abmeldet oder Herunterfahren <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> wird nicht ausgelöst; behandeln <ph id="ph2">&lt;xref:System.Windows.Application.SessionEnding&gt;</ph> um Code zu implementieren, das Schließen der Anwendung abbricht.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> event, cancel it, and call the <ph id="ph2">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie anzeigen oder Ausblenden eines Fensters während der Lebensdauer einer Anwendung mehrmals möchten und nicht das Fenster jedes Mal neu instanziieren möchten Sie diese anzeigen, können Sie behandeln die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis, brechen Sie ihn ab, und rufen die <ph id="ph2">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>Then, you can call <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> on the same instance to reopen it.</source>
          <target state="translated">Rufen Sie Sie dann <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> in der gleichen Instanz aus, um es erneut zu öffnen.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Closing">
          <source>The following example demonstrates a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> that determines whether it needs user intervention to close.</source>
          <target state="translated">Das folgende Beispiel zeigt eine <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> , der bestimmt, ob zum Schließen ein Benutzereingriff erforderlich.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Closing">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.UIElement.Visibility" /&gt;</ph> is set, or <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph>, or <ph id="ph4">&lt;see cref="M:System.Windows.Window.Close" /&gt;</ph> is called while a window is closing.</source>
          <target state="translated">Während ein Fenster schließt, wird <ph id="ph1">&lt;see cref="P:System.Windows.UIElement.Visibility" /&gt;</ph> festgelegt, oder <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph>, <ph id="ph3">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> oder <ph id="ph4">&lt;see cref="M:System.Windows.Window.Close" /&gt;</ph> wird aufgerufen.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.ContentRendered">
          <source>Occurs after a window's content has been rendered.</source>
          <target state="translated">Tritt nach dem Rendern des Inhalts eines Fensters auf.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.ContentRendered">
          <source>If the window has no content, this event is not raised.</source>
          <target state="translated">Wenn das Fenster um keinen Inhalt hat, wird dieses Ereignis nicht ausgelöst.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.Deactivated">
          <source>Occurs when a window becomes a background window.</source>
          <target state="translated">Tritt auf, wenn ein Fenster zum Hintergrundfenster wird.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>A window is deactivated (becomes a background window) when:</source>
          <target state="translated">Ein Fenster ist deaktiviert (wird zu einem Hintergrundfenster) Wenn:</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>A user switches to another window in the current application.</source>
          <target state="translated">Ein Benutzer wechselt zu einem anderen Fenster in der aktuellen Anwendung.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>A user switches to the window in another application by using ALT+TAB or by using Task Manager.</source>
          <target state="translated">Ein Benutzer wechselt zum Fenster in einer anderen Anwendung mithilfe der Tastenkombination ALT + TAB oder mithilfe von Task-Manager.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>A user clicks the taskbar button for a window in another application.</source>
          <target state="translated">Ein Benutzer klickt auf die Taskleistenschaltfläche für ein Fenster in einer anderen Anwendung.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>Windows that need to detect when they become deactivated by handling the <ph id="ph1">&lt;xref:System.Windows.Window.Deactivated&gt;</ph> event.</source>
          <target state="translated">Windows, die erkennen, wenn die Deaktivierung durch behandeln müssen die <ph id="ph1">&lt;xref:System.Windows.Window.Deactivated&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</source>
          <target state="translated">Nachdem ein Fenster zunächst deaktiviert ist, kann Sie erneut aktiviert und oft während seiner Lebensdauer deaktiviert werden.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>If an application's behavior or state depends on its activation state, it can inspect <ph id="ph1">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph> to determine which activation state it's in.</source>
          <target state="translated">Wenn das Verhalten einer Anwendungsverzeichnis oder der Zustand von Aktivierungszustand abhängig ist, können Sie überprüfen <ph id="ph1">&lt;xref:System.Windows.Window.IsActive%2A&gt;</ph> um zu bestimmen, welche Aktivierungsstatus befindet sich im.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.Deactivated">
          <source>An application can also be <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph>.</source>
          <target state="translated">Eine Anwendung kann auch <ph id="ph1">&lt;xref:System.Windows.Application.Deactivated&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.DialogResult">
          <source>Gets or sets the dialog result value, which is the value that is returned from the <ph id="ph1">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> method.</source>
          <target state="translated">Ruft den Ergebniswert des Dialogfelds ab, d. h. den von der <ph id="ph1">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph>-Methode zurückgegebenen Wert, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> value of type <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>-Wert vom Typ <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> can be used from the code that showed a dialog box to determine whether a user accepted (<ph id="ph2">`true`</ph>) or canceled (<ph id="ph3">`false`</ph>) the dialog box.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> kann verwendet werden, aus dem Code, der ein Dialogfeld, um zu bestimmen, ob ein Benutzer akzeptiert ergab (<ph id="ph2">`true`</ph>) oder abgebrochen wurde (<ph id="ph3">`false`</ph>) des Dialogfelds "".</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</source>
          <target state="translated">Wenn ein Dialogfeld akzeptiert wurde, bedeutet dies, um den Code, der zum Abrufen von Daten, die vom Benutzer gesammelt wurden und verarbeiten sie das Dialogfeld geöffnet.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</source>
          <target state="translated">Wenn ein Dialogfeld abgebrochen wurde, allerdings bedeutet dies, dass das Aufrufen von Code beendet werden soll, weitere Verarbeitung.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>By default, a dialog box is canceled when a user does one of the following:</source>
          <target state="translated">Wird standardmäßig ein Dialogfeld abgebrochen wird, wenn ein Benutzer eine der folgenden ist:</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>PressesALT+F4.</source>
          <target state="translated">PressesALT+F4.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>Clicks the <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> button.</source>
          <target state="translated">Klickt der <bpt id="p1">**</bpt>schließen<ept id="p1">**</ept> Schaltfläche.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>Selects <bpt id="p1">**</bpt>Close<ept id="p1">**</ept> from the System menu.</source>
          <target state="translated">Wählt <bpt id="p1">**</bpt>schließen<ept id="p1">**</ept> aus dem Systemmenü.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>In all of these cases, <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> is <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">In all diesen Fällen <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> ist <ph id="ph2">`false`</ph> standardmäßig.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>A dialog box typically provides a special button to cancel a dialog, which is the button whose <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Ein Dialogfeld, in der Regel stellt eine spezielle Schaltfläche, um ein Dialogfeld "Abbrechen", die die Schaltfläche "", deren <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsCancel%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</source>
          <target state="translated">Eine Schaltfläche, die auf diese Weise konfiguriert wird ein Fenster automatisch geschlossen, wenn entweder es gedrückt wird oder wenn die ESC-Taste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>In either of these cases, <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> remains <ph id="ph2">`false`</ph>.</source>
          <target state="translated">In diesen Fällen <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> bleibt <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>A dialog box also typically provides an accept button, which is the button whose <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Ein Dialogfeld in der Regel auch eine Bestätigungsschaltfläche, die die Schaltfläche "" enthält, deren <ph id="ph1">&lt;xref:System.Windows.Controls.Button.IsDefault%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>A button configured this way will raise its <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event when either it or the ENTER key is pressed.</source>
          <target state="translated">Eine Schaltfläche, die diese Art konfigurierten löst die <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> Ereignis aus, wenn sie oder die EINGABETASTE gedrückt wird.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>However, it won't automatically close the dialog box, nor will it set <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Jedoch wird nicht automatisch das Dialogfeld schließen, noch wird festgelegt <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>You need to manually write this code, usually from the <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> event handler for the default button.</source>
          <target state="translated">Müssen Sie manuell dieser Schreiben von Code in der Regel aus der <ph id="ph1">&lt;xref:System.Windows.Controls.Primitives.ButtonBase.Click&gt;</ph> -Ereignishandler für die Standardschaltfläche.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> is <ph id="ph2">`null`</ph> when the dialog box is shown but neither accepted nor canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> ist <ph id="ph2">`null`</ph> das Dialogfeld wird angezeigt, wenn jedoch weder akzeptiert noch abgebrochen.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>After a dialog box closes, you can get the dialog result from the value returned by <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> method, or by inspecting the <ph id="ph2">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> property.</source>
          <target state="translated">Nachdem ein Dialogfeld wird, und geschlossen Sie erhalten das Dialogergebnis über den Rückgabewert von <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> -Methode, oder durch Überprüfen der <ph id="ph2">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> can only be set when a <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> is opened by calling its <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> kann nur festgelegt werden, wenn eine <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph> geöffnet wird, durch Aufrufen seiner <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.DialogResult">
          <source>The following example shows how to configure an OK button and a Cancel button to return the appropriate <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie eine Schaltfläche "OK" und eine Schaltfläche "Abbrechen", um die entsprechende zurückzugeben konfigurieren <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.DialogResult">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph> is set before a window is opened by calling <ph id="ph2">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph> wird festgelegt, bevor ein Fenster durch Aufrufen von <ph id="ph2">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> geöffnet wird.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.DialogResult">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.DialogResult">
          <source><ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph> is set on a window that is opened by calling <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph> wird in einem Fenster festgelegt, das durch Aufrufen von <ph id="ph2">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph> geöffnet wird.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.DpiChanged">
          <source>Occurs after the DPI of the screen on which the Window is displayed changes.</source>
          <target state="translated">Tritt auf, nachdem sich die DPI-Auflösung des Bildschirms geändert hat, auf dem das Fenster angezeigt wird.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.DpiChangedEvent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> for when the DPI of the screen the Window is on changes.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.RoutedEvent" /&gt;</ph> für den Fall, dass der DPI-Wert des Bildschirms, der das Fenster anzeigt, geändert wird.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.DragMove">
          <source>Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</source>
          <target state="translated">Ermöglicht es, ein Fenster mit der Maus auf einen verfügbar gemachten Bereich im Clientbereich des Fensters zu ziehen, indem die linke Maustaste gedrückt wird.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>The left mouse button must be down when <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> is called.</source>
          <target state="translated">Die linke Maustaste gedrückt werden muss, heruntergefahren, wenn <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>One way to detect when the left mouse button is pressed is to handle the <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> event.</source>
          <target state="translated">Eine Möglichkeit zum erkennen, wenn die linke Maustaste gedrückt wird, zu behandeln ist die <ph id="ph1">&lt;xref:System.Windows.UIElement.MouseLeftButtonDown&gt;</ph> Ereignis.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> is called, the left mouse button must be depressed over an exposed area of the window's client area.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> aufgerufen wird, wird die linke Maustaste über einen verfügbar gemachten Bereich des Clientbereichs des Fensters gedrückt werden muss.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Diese Methode kann nicht aufgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>The following example shows how to override <ph id="ph1">&lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt;</ph> to call <ph id="ph2">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht das Überschreiben <ph id="ph1">&lt;xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A&gt;</ph> Aufrufen <ph id="ph2">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.DragMove">
          <source>The left mouse button is not down.</source>
          <target state="translated">Die linke Maustaste wird nicht gedrückt gehalten.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>for permission to drag a window.</source>
          <target state="translated">nach der Installationsberechtigung für ein Fenster ziehen.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.DragMove">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
          <source>The dependency object.</source>
          <target state="translated">Das Abhängigkeitsobjekt.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
          <source>Returns a reference to the <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> object that hosts the content tree within which the dependency object is located.</source>
          <target state="translated">Gibt einen Verweis auf das <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>-Objekt zurück, das die Inhaltsstruktur mit dem Abhängigkeitsobjekt hostet.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> reference to the host window.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>-Verweis auf das Hostfenster.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> is null.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dependencyObject" /&gt;</ph> ist NULL.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Hide">
          <source>Makes a window invisible.</source>
          <target state="translated">Macht ein Fenster unsichtbar.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>A window is not closed when it is hidden, and neither the <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> nor <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph> event is raised.</source>
          <target state="translated">Ein Fenster wird nicht geschlossen, wenn es ausgeblendet ist, und weder die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> noch <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph> Ereignis wird ausgelöst.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>Instead, the window's <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property is set to <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Stattdessen des Fensters <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>If a window is the application's <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> and the application's <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> is <ph id="ph3">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>, the application does not shut down.</source>
          <target state="translated">Wenn ein Fenster der Anwendungsverzeichnis wird <ph id="ph1">&lt;xref:System.Windows.Application.MainWindow%2A&gt;</ph> und die Anwendung <ph id="ph2">&lt;xref:System.Windows.Application.ShutdownMode%2A&gt;</ph> ist <ph id="ph3">&lt;xref:System.Windows.ShutdownMode.OnMainWindowClose&gt;</ph>, die Anwendung wird nicht heruntergefahren.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <ph id="ph1">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>.</source>
          <target state="translated">Andererseits die Anwendung wird nicht heruntergefahren, wenn ein Fenster das einzige Fenster ist und Modus Herunterfahren der Anwendung <ph id="ph1">&lt;xref:System.Windows.ShutdownMode.OnLastWindowClose&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> event, cancel it, and call the <ph id="ph2">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie anzeigen oder Ausblenden eines Fensters während der Lebensdauer einer Anwendung mehrmals, und nicht das Fenster jedes Mal erneut instanziieren möchten Sie diese anzeigen, können Sie behandeln die <ph id="ph1">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis, brechen Sie ihn ab, und rufen die <ph id="ph2">&lt;xref:System.Windows.Window.Hide%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Hide">
          <source>Then, you can call <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> on the same instance to re-open it.</source>
          <target state="translated">Rufen Sie Sie dann <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> in der gleichen Instanz aus, um es erneut zu öffnen.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Hide">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Window.Hide" /&gt;</ph> is called on a window that is closing (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) or has been closed (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Window.Hide" /&gt;</ph> wird für ein Fenster aufgerufen, das geschlossen wird (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) oder geschlossen wurde (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Icon">
          <source>Gets or sets a window's icon.</source>
          <target state="translated">Ruft das Symbol eines Fensters ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>An <ph id="ph1">&lt;see cref="T:System.Windows.Media.ImageSource" /&gt;</ph> object that represents the icon.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.Media.ImageSource" /&gt;</ph>-Objekt, das das Symbol darstellt.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> standalone applications have two types of icons:</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> eigenständige Anwendungen sind zwei Symbole:</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>One assembly icon, which is specified by using the <ph id="ph1">`&lt;ApplicationIcon&gt;`</ph> property in the application's project build file.</source>
          <target state="translated">Eine Assembly-Symbol, das mithilfe des Parameters der <ph id="ph1">`&lt;ApplicationIcon&gt;`</ph> Datei Eigenschaft im Projekt der Anwendung zu erstellen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>This icon is used as the desktop icon for an assembly.</source>
          <target state="translated">Dieses Symbol wird als das Desktopsymbol für eine Assembly verwendet.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>When debugging in Visual Studio, your icon may not appear due to the hosting process.</source>
          <target state="translated">Beim Debuggen in Visual Studio möglicherweise das Symbol nicht aufgrund der Hostprozess angezeigt.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>If you run the executable, the icon will appear.</source>
          <target state="translated">Wenn Sie die ausführbare Datei ausführen, wird das Symbol angezeigt.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>For more information, see <bpt id="p1">[</bpt>Hosting Process (vshost.exe)<ept id="p1">](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Hostprozess („vshost.exe“)<ept id="p1">](http://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b)</ept>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>One icon per window that is specified by setting <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>.</source>
          <target state="translated">Ein Symbol pro Fenster, das durch Festlegen von angegebenen <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</source>
          <target state="translated">Für jedes Fenster wird dieses Symbol in der Titelleiste der Taskleistenschaltfläche und in die Tastenkombination ALT + TAB Auswahl-Liste Anwendungseintrag verwendet.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>A <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> window always displays an icon.</source>
          <target state="translated">Ein <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> Fenster wird immer ein Symbol angezeigt.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>When one is not provided by setting <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> chooses an icon to display based on the following rules:</source>
          <target state="translated">Wenn nicht bereitgestellt durch Festlegen von <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph>, <ph id="ph2">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> wählt ein Symbol, um anzuzeigen, anhand der folgenden Regeln:</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Use the assembly icon, if specified.</source>
          <target state="translated">Verwenden Sie das Symbol "Assembly", falls angegeben.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>If the assembly icon is not specified, use the default <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> icon.</source>
          <target state="translated">Wenn das Symbol "Assembly" nicht angegeben ist, verwenden Sie den Standardnamen <ph id="ph1">[!INCLUDE[TLA#tla_win](~/includes/tlasharptla-win-md.md)]</ph> Symbol.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>If you use <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> to specify a custom window icon, you can restore the default application icon by setting <ph id="ph2">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> to <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Bei Verwendung von <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> um ein benutzerdefiniertes Fenstersymbol angeben, können Sie das Standardsymbol für die Anwendung wiederherstellen, indem festlegen <ph id="ph2">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> auf <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>A single icon can be used in a variety of ways in <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph>, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</source>
          <target state="translated">Ein einzelnes Symbol in einer Vielzahl von Möglichkeiten genutzt werden <ph id="ph1">[!INCLUDE[TLA#tla_mswin](~/includes/tlasharptla-mswin-md.md)]</ph>, einschließlich der in der Titelleiste eines Fensters, auf der Taskleiste für ein Fenster angezeigt wird die Tastenkombination ALT + TAB Auswahlliste Datei.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</source>
          <target state="translated">Jedes davon wird gezeigt, das Symbol mit einer anderen Größe: ein 16 x 16 Pixel-Symbol wird in der Titelleiste eines Fensters und in der Taskleiste angezeigt, während ein 32 x 32 Pixel großes Symbol in der Dateiliste Auswahl ALT + TAB angezeigt wird.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Some applications, like <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph>, provide a <bpt id="p1">**</bpt>View<ept id="p1">**</ept> menu that allows you to choose the size of the icon you'd like to view.</source>
          <target state="translated">Einige Anwendungen wie <ph id="ph1">[!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)]</ph>, geben Sie einen <bpt id="p1">**</bpt>Ansicht<ept id="p1">**</ept> Menü, mit dem Sie die Größe des Symbols zu wählen, Sie anzeigen möchten.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</source>
          <target state="translated">Um die verschiedenen Anzeigegrößen erfüllen, eine Symboldatei mindestens eine tatsächliche Symbole besteht, in denen jeweils eine Version des Symbols darstellt, die eine bestimmte Größe und Farbe Tiefe ausgerichtet ist.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</source>
          <target state="translated">Beispielsweise kann ein Symbol nur besitzen ein einzelnes 16 x 16 Pixelsymbol mit 16 Farben während eine andere 16 x 16 Pixel und 32 x 32 Pixel großes Symbole mit 16 Farben und 256 Farben enthalten kann.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>If icons for all possible sizes and color depths exist within an icon file, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> will use the appropriate icon.</source>
          <target state="translated">Wenn in einer Symboldatei Symbole für alle möglichen Größen und Farbtiefen vorhanden <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> wird das entsprechende Symbol verwenden.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>If an icon file contains only a subset of all the possible icons, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> uses the next most appropriate icon in order of decreasing sizes and color depth.</source>
          <target state="translated">Wenn eine Symboldatei nur eine Teilmenge aller möglichen Symbole enthält <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> das nächste Symbol "am besten geeignete" sinkender Größen und Farbtiefe verwendet.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>The result is that an icon will always be used by <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, although the icon used may not target the required size and color depth.</source>
          <target state="translated">Das Ergebnis ist, dass ein Symbol wird immer durch verwendet, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, obwohl das Symbol verwendet nicht die erforderliche Größe und die Farbtiefe Ziel verwenden kann.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</source>
          <target state="translated">Beispielsweise kann ein Pixelsymbol 16 x 16 mit 16 Farben für die Anzeige als ein 32 x 32 Pixel großes Symbol mit 256 Farben verwendet werden.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</source>
          <target state="translated">Dies kann dazu führen, dass unerwünschte visuelle Effekte wie geglättet, jedoch möglicherweise vermieden werden, indem Sie die Symbole für alle entsprechenden Größe und Farbe Tiefen erstellen.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>The following example shows how to set a window icon.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie ein Symbol "Fenster" festgelegt wird.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>for permission to set the icon.</source>
          <target state="translated">für die Berechtigung zum Festlegen des Symbols.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Icon">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.IconProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.Icon" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Icon" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.IsActive">
          <source>Gets a value that indicates whether the window is active.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das Fenster aktiv ist.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Fenster aktiv ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</source>
          <target state="translated">Ein aktiven Fensters wird der aktuelle Vordergrundfenster des Benutzers und den Fokus hat, was durch die aktive Darstellung der Titelleiste angezeigt wird.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>An active window will also be the top-most of all top-level windows that don't explicitly set the <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> property.</source>
          <target state="translated">Ein aktives Fenster werden auch die oberste alle Fenster auf oberster Ebene, die nicht explizit festlegen der <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.IsActive">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.IsActiveProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.IsActive" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.IsActive" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Left">
          <source>Gets or sets the position of the window's left edge, in relation to the desktop.</source>
          <target state="translated">Ruft die Position des linken Fensterrands im Verhältnis zum Desktop ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>The position of the window's left edge, in logical units (1/96th of an inch).</source>
          <target state="translated">Die Position des linken Fensterrands in logischen Einheiten (1/96 Zoll).</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is maximized or minimized, this value represents the left edge of the restore point for the <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> maximiert wird oder minimiert, dieser Wert darstellt, die der linke Rand der Wiederherstellung von Wiederherstellungspunkten für die <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>This property cannot be set through a style.</source>
          <target state="translated">Diese Eigenschaft kann nicht über einen Stil festgelegt werden.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>If you do not specify a value, <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> is set to the system default value.</source>
          <target state="translated">Wenn Sie einen Wert nicht angeben <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> auf den Standardwert des Systems festgelegt ist.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>You can also specify the system default value by setting <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated">Sie können auch die Systemstandardwert angeben, durch Festlegen von <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> auf <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>Neither <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph> nor <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph> is a valid value for <ph id="ph3">&lt;xref:System.Windows.Window.Left%2A&gt;</ph>.</source>
          <target state="translated">Weder <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph> noch <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph> ist ein gültiger Wert für <ph id="ph3">&lt;xref:System.Windows.Window.Left%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Left">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.LeftProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.Left" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Left" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.LocationChanged">
          <source>Occurs when the window's location changes.</source>
          <target state="translated">Tritt auf, wenn die Position des Fensters geändert wird.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>A window's location changes when:</source>
          <target state="translated">Die Position des Fensters wird geändert, wenn:</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>A user moves a window by dragging it with the window's title bar.</source>
          <target state="translated">Ein Benutzer verschiebt ein Fenster durch ziehen es mit der Titelleiste des Fensters.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>A window is moved after <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> is called.</source>
          <target state="translated">Ein Fenster verschoben wird, nachdem <ph id="ph1">&lt;xref:System.Windows.Window.DragMove%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>Either the <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> property is set programmatically.</source>
          <target state="translated">Entweder die <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> Eigenschaft programmgesteuert festgelegt ist.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>The <bpt id="p1">**</bpt>Move<ept id="p1">**</ept> menu item of a window's System menu is chosen.</source>
          <target state="translated">Die <bpt id="p1">**</bpt>verschieben<ept id="p1">**</ept> Menüelement Systemmenü des Fensters ausgewählt ist.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Windows.Window.LocationChanged">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph> property is changed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph> -Eigenschaft geändert wird.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.LogicalChildren">
          <source>Gets an enumerator for a window's logical child elements.</source>
          <target state="translated">Ruft einen Enumerator für die logischen untergeordneten Elemente eines Fensters ab.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.LogicalChildren">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> a window's logical child elements.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> für die logischen untergeordneten Elemente eines Fensters.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that reflects the available size that this window can give to the child.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, die die verfügbare Größe wiedergibt, die dieses Fenster für das untergeordnete Element bereitstellen kann.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>Infinity can be given as a value to indicate that the window will size to whatever content is available.</source>
          <target state="translated">Sie können den Wert als unendlich angeben, um anzuzeigen, dass das Fenster an die Größe jedes beliebigen Inhalts angepasst wird.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>Override this method to measure the size of a window.</source>
          <target state="translated">Überschreiben Sie diese Methode, um die Größe eines Fensters zu messen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Windows.Size" /&gt;</ph>, die die Größe wiedergibt, die dieses Fenster auf der Grundlage der Berechnung der Größe der untergeordneten Elemente bestimmt und während des Layouts benötigt.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.MeasureOverride%2A&gt;</ph> is not called when the <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property has a value of <ph id="ph3">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.MeasureOverride%2A&gt;</ph> wird nicht aufgerufen, wenn die <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft hat den Wert des <ph id="ph3">&lt;xref:System.Windows.Visibility.Collapsed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>If the value of the <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property is either <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.MeasureOverride%2A&gt;</ph> is called.</source>
          <target state="translated">Wenn der Wert der <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft <ph id="ph2">&lt;xref:System.Windows.Visibility.Hidden&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.Window.MeasureOverride%2A&gt;</ph> aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.MeasureOverride(System.Windows.Size)">
          <source>When either <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> are called, the <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property of a <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> is set to <ph id="ph5">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</source>
          <target state="translated">Wenn entweder <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> aufgerufen werden, die <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft eine <ph id="ph4">&lt;xref:System.Windows.Window&gt;</ph> auf festgelegt ist <ph id="ph5">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.Activated" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.Activated" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnActivated(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnActivated%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.Activated&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnClosed%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.Closed&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.ComponentModel.CancelEventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnClosing%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
          <source>A reference to the root of the old content tree.</source>
          <target state="translated">Ein Verweis auf den Stamm der alten Inhaltsstruktur.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
          <source>A reference to the root of the new content tree.</source>
          <target state="translated">Ein Verweis auf den Stamm der neuen Inhaltsstruktur.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)">
          <source>Called when the <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContentControl.Content" /&gt;</ph> property changes.</source>
          <target state="translated">Wird aufgerufen, wenn die <ph id="ph1">&lt;see cref="P:System.Windows.Controls.ContentControl.Content" /&gt;</ph>-Eigenschaft geändert wird.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.ContentRendered" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.ContentRendered" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnContentRendered(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnContentRendered%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.ContentRendered&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnCreateAutomationPeer">
          <source>Creates and returns a <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Erstellt ein <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /&gt;</ph>-Objekt für dieses <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> und gibt es zurück.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnCreateAutomationPeer">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /&gt;</ph> object for this <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /&gt;</ph>-Objekt für diesen <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnCreateAutomationPeer">
          <source>This method overrides <ph id="ph1">&lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;</ph>.</source>
          <target state="translated">Diese Methode überschreibt <ph id="ph1">&lt;xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.Deactivated" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.Deactivated" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.Deactivated&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.Deactivated&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnDeactivated(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.Deactivated&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnDeactivated%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.Deactivated&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The previous DPI scale setting.</source>
          <target state="translated">Die vorherige DPI-Größeneinstellung.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>The new DPI scale setting.</source>
          <target state="translated">Die neue DPI-Größeneinstellung.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)">
          <source>Called when the DPI at which this window is rendered changes.</source>
          <target state="translated">Wird aufgerufen, wenn sich der DPI-Wert ändert, mit dem dieses Fenster gerendert wird.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.LocationChanged" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.LocationChanged" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnLocationChanged(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnLocationChanged%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.LocationChanged&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>The data for the event.</source>
          <target state="translated">Die Daten für das Ereignis.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>Called when the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /&gt;</ph> event occurs.</source>
          <target state="translated">Wird aufgerufen, wenn das <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /&gt;</ph>-Ereignis eintritt.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>This implementation does not change the handled state (the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> property) of the <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph> event data.</source>
          <target state="translated">Diese Implementierung ändert nicht zum behandelten Zustand (die <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> Eigenschaft) von der <ph id="ph2">&lt;xref:System.Windows.UIElement.ManipulationBoundaryFeedback&gt;</ph> Ereignisdaten.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>If you override <ph id="ph1">&lt;see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /&gt;</ph>, always call the base implementation in your <ph id="ph2">&lt;see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /&gt;</ph> implementation.</source>
          <target state="translated">Wenn Sie außer Kraft setzen <ph id="ph1">&lt;see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /&gt;</ph>, rufen Sie immer die grundlegende Implementierung Ihrer <ph id="ph2">&lt;see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /&gt;</ph> Implementierung.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</source>
          <target state="translated">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses, die das Laufzeitverhalten der endgültigen Klasse ändern kann.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)">
          <source>You can call the base implementation either before or after your special handling, depending on your requirements.</source>
          <target state="translated">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.SourceInitialized" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.SourceInitialized" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnSourceInitialized%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.SourceInitialized&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> that contains the event data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph>, das die Ereignisdaten enthält.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Windows.Window.StateChanged" /&gt;</ph> event.</source>
          <target state="translated">Löst das <ph id="ph1">&lt;see cref="E:System.Windows.Window.StateChanged" /&gt;</ph>-Ereignis aus.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph> raises the <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph> event.</source>
          <target state="translated">Durch <ph id="ph1">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph> wird das <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph>-Ereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <source>A type that derives from <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> may override <ph id="ph2">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph>.</source>
          <target state="translated">Ein Typ, der von ableitet <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Überschreiben dieses möglicherweise <ph id="ph2">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.OnStateChanged(System.EventArgs)">
          <source>The overridden method must call <ph id="ph1">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph> on the base class if <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph> needs to be raised.</source>
          <target state="translated">Die überschriebene Methode aufrufen, muss <ph id="ph1">&lt;xref:System.Windows.Window.OnStateChanged%2A&gt;</ph> in der Basisklasse Wenn <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph> ausgelöst werden soll.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>The previous parent.</source>
          <target state="translated">Das bisherige übergeordnete Element.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Set to null if the <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> did not have a previous parent.</source>
          <target state="translated">Wird auf NULL festgelegt, wenn das <ph id="ph1">&lt;see cref="T:System.Windows.DependencyObject" /&gt;</ph> kein vorheriges übergeordnetes Element aufweist.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)">
          <source>Called when the parent of the window is changed.</source>
          <target state="translated">Wird aufgerufen, wenn das übergeordnete Element des Fensters geändert wird.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.OwnedWindows">
          <source>Gets a collection of windows for which this window is the owner.</source>
          <target state="translated">Ruft eine Auflistung von Fenstern ab, deren Besitzer dieses Fenster ist.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.OwnedWindows">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.WindowCollection" /&gt;</ph> that contains references to the windows for which this window is the owner.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Windows.WindowCollection" /&gt;</ph> mit Verweisen auf die Fenster, deren Besitzer dieses Fenster ist.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.OwnedWindows">
          <source>An owned window is one whose <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property is set with a reference to another window, which is known as the owner window.</source>
          <target state="translated">Ein im Besitz befindlichen Fenster ist eine, deren <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> Eigenschaftensatz mit einem Verweis auf ein anderes Fenster, das als das besitzende Fenster bezeichnet wird.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.OwnedWindows">
          <source>To find all the windows that an owner window owns, you can enumerate <ph id="ph1">&lt;xref:System.Windows.WindowCollection&gt;</ph> that is returned by the <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> property.</source>
          <target state="translated">Um alle Fenster suchen, die einem Besitzerfenster gehören, können Sie auflisten <ph id="ph1">&lt;xref:System.Windows.WindowCollection&gt;</ph> der zurückgegeben wird, indem die <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.OwnedWindows">
          <source>The following example shows how to enumerate <ph id="ph1">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie auflisten <ph id="ph1">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> that owns this <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Ruft das <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> ab, das dieses <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> besitzt.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph> object that represents the owner of this <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.Window" /&gt;</ph>-Objekt, das den Besitzer dieses <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> darstellt.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>When a child window is opened by a parent window by calling <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, an implicit relationship is established between both parent and child window.</source>
          <target state="translated">Wenn ein untergeordnetes Fenster durch Aufrufen von einem übergeordneten Fenster geöffnet wird <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, eine implizite Beziehung zwischen übergeordneten und untergeordneten Fenster eingerichtet.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</source>
          <target state="translated">Diese Beziehung erzwingt bestimmte Verhaltensweisen, z. B. in Bezug auf Maximieren, minimieren und wiederherstellen.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>When a child window is created by a parent window by calling <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, however, the child window does not have a relationship with the parent window.</source>
          <target state="translated">Wenn ein untergeordnetes Fenster durch Aufruf von einem übergeordneten Fenster erstellt wurde <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, das untergeordnete Fenster verfügt jedoch nicht über eine Beziehung mit dem übergeordneten Fenster.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>This means that:</source>
          <target state="translated">Dies bedeutet Folgendes:</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>The child window does not have a reference to the parent window.</source>
          <target state="translated">Einen Verweis auf das übergeordnete Fenster keine untergeordneten Fenster.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</source>
          <target state="translated">Das Verhalten des untergeordneten Fensters ist nicht das Verhalten des übergeordneten Fensters abhängig; entweder Fenster deckt die andere oder minimiert, maximiert und unabhängig voneinander wiederhergestellt.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>To allow you to create a relationship between a child window and a parent window, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> supports the notion of ownership.</source>
          <target state="translated">Ermöglicht das Erstellen eine Beziehung zwischen einem untergeordneten Fenster und ein übergeordnetes Fenster, <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> unterstützt das Konzept des Besitzes.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>Ownership is established when the <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property of a window (the owned window) is set with a reference to another window (the owner window).</source>
          <target state="translated">Besitz wird eingerichtet, wenn die <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> Eigenschaft eines Fensters (das im Besitz befindlichen Fenster) mit einem Verweis auf ein anderes Fenster (das Besitzerfenster) festgelegt ist.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>Once this relationship is established, the following behaviors are exhibited:</source>
          <target state="translated">Sobald diese Beziehung hergestellt wurde, werden die folgenden Verhalten gezeigt:</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If an owner window is minimized, all its owned windows are minimized as well.</source>
          <target state="translated">Wenn ein Besitzerfenster minimiert wird, werden auch alle seine zugehörige Fenster minimiert.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If an owned window is minimized, its owner is not minimized.</source>
          <target state="translated">Wenn ein Fenster im Besitz befindlichen minimiert wird, ist der Besitzer nicht minimiert.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If an owner window is maximized, both the owner window and its owned windows are restored.</source>
          <target state="translated">Wenn ein Besitzerfenster maximiert ist, werden das besitzende Fenster und die zugehörige Windows wiederhergestellt.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>An owner window can never cover an owned window.</source>
          <target state="translated">Ein Besitzerfenster kann nie eine zugehörige Fenster abdecken.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>Owned windows that were not opened using <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> are not modal.</source>
          <target state="translated">Im Besitz von Fenstern, die nicht mit geöffnet wurden <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> sind nicht modal.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>The user can still interact with the owner window.</source>
          <target state="translated">Die Benutzer kann weiterhin das besitzende Fenster interagieren.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If you close an owner window, its owned windows are also closed.</source>
          <target state="translated">Wenn Sie ein Besitzerfenster schließen, werden die im Besitz befindlichen Windows ebenfalls geschlossen.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If an owned window was opened by its owner window using <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, and the owner window is closed, the owned window's <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> event is not raised.</source>
          <target state="translated">Wenn ein Besitzer Fenster geöffnet wurde, dessen Besitzer Fenster mit <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>, und der Besitzer Fenster geschlossen ist, wird des zugehörige Fensters <ph id="ph2">&lt;xref:System.Windows.Window.Closing&gt;</ph> Ereignis wird nicht ausgelöst.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>When you open a child window by calling <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, you should also set the <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property of the child window.</source>
          <target state="translated">Wenn Sie ein untergeordnetes Fenster öffnen, durch den Aufruf <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, Sie sollten auch festlegen, die <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> Eigenschaft des untergeordneten Fensters.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</source>
          <target state="translated">Wenn Sie dies nicht tun, wird nicht Ihre Benutzer untergeordnetes Fenster und übergeordneten Fenster durch Drücken der Taskleistenschaltfläche wiederherstellen können.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</source>
          <target state="translated">Drücken die Taskleistenschaltfläche, wird eine Liste von Windows, einschließlich der untergeordneten und übergeordneten Fenster, um Wählen Sie stattdessen ergeben; nur das ausgewählte Fenster wird wiederhergestellt.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>You should also set the <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property on a window that that is opened by calling <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> to ensure correct behavior with .</source>
          <target state="translated">Sie sollten auch festlegen, die <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> -Eigenschaft für ein Fenster, die durch den Aufruf geöffnet ist <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> , das richtige Verhalten mit sicherzustellen.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>The following example shows how to establish the owner/owned relationship.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie die Besitzer contosoit Beziehung hergestellt wird.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>A window tries to own itself</source>
          <target state="translated">Ein Fenster versucht, sich selbst zu besitzen</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>Two windows try to own each other.</source>
          <target state="translated">Zwei Fenster versuchen, einander zu besitzen.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Window.Owner" /&gt;</ph> property is set on a visible window shown using <ph id="ph2">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph></source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Owner" /&gt;</ph>-Eigenschaft wird für ein sichtbares Fenster festgelegt, das mit <ph id="ph2">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> angezeigt wird</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Owner">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Window.Owner" /&gt;</ph> property is set with a window that has not been previously shown.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Owner" /&gt;</ph>-Eigenschaft wird für ein Fenster festgelegt, das bisher nicht angezeigt wurde.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>for permission to use all windows and user input events without restriction.</source>
          <target state="translated">nach der Installationsberechtigung für alle Fenster und Benutzereingabeereignisse uneingeschränkt verwenden.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Owner">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.ResizeMode">
          <source>Gets or sets the resize mode.</source>
          <target state="translated">Ruft den Größenänderungsmodus ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.ResizeMode" /&gt;</ph> value specifying the resize mode.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.ResizeMode" /&gt;</ph>-Wert, der den Größenänderungsmodus angibt.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>There are four options:</source>
          <target state="translated">Es gibt vier Optionen aus:</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source><bpt id="p1">**</bpt>NoResize<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>NoResize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The user cannot resize the window.</source>
          <target state="translated">Der Benutzer kann nicht die Fenstergröße ändern.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The Maximize and Minimize boxes are not shown.</source>
          <target state="translated">Die Maximieren und minimieren Felder werden nicht angezeigt.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source><bpt id="p1">**</bpt>CanMinimize<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>CanMinimize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The user can only minimize the window and restore it from the taskbar.</source>
          <target state="translated">Der Benutzer kann nur das Fenster minimieren und Wiederherstellen über die Taskleiste aus.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</source>
          <target state="translated">Die Felder minimieren und Maximieren werden angezeigt, aber nur das Kästchen zum Minimieren aktiviert ist.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source><bpt id="p1">**</bpt>CanResize<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>CanResize<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</source>
          <target state="translated">Der Benutzer kann die vollständige Größe des Fensters Felder minimieren und Maximieren und Größenänderungsoptionen verwenden, um das Fenster.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>The Minimize and Maximize boxes are shown and enabled.</source>
          <target state="translated">Die Felder minimieren und Maximieren sind angezeigt und aktiviert.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>(Default).</source>
          <target state="translated">(Standard).</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source><bpt id="p1">**</bpt>CanResizeWithGrip<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>CanResizeWithGrip<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>This option has the same functionality as <ph id="ph1">&lt;xref:System.Windows.ResizeMode.CanResize&gt;</ph>, but adds a "resize grip" to the lower right corner of the window.</source>
          <target state="translated">Diese Option hat die gleiche Funktionalität wie <ph id="ph1">&lt;xref:System.Windows.ResizeMode.CanResize&gt;</ph>, aber der unteren rechten Ecke des Fensters "Resize Ziehpunkts" hinzugefügt.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ResizeMode">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.ResizeModeProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.ResizeMode" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.ResizeMode" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.RestoreBounds">
          <source>Gets the size and location of a window before being either minimized or maximized.</source>
          <target state="translated">Ruft die Größe und Position eines Fensters vor dem Minimieren oder Maximieren ab.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph> that specifies the size and location of a window before being either minimized or maximized.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.Rect" /&gt;</ph>, das die Größe und Position eines Fensters vor dem Minimieren oder Maximieren angibt.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>The restore rectangle is the region occupied by the window before it was minimized or maximized.</source>
          <target state="translated">Das Rechteck für die Wiederherstellung ist die Region, die vom Fenster belegt wird, bevor es minimiert oder maximiert wurde.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>You can use <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</source>
          <target state="translated">Sie können <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> die letzte Größe und Position eines Fensters zu speichern, bevor eine Anwendung geschlossen wird, und diese Werte das nächste Mal eine Anwendung gestartet wird, um ein Fenster der Art und Weise wiederherzustellen, ein Benutzer sie abrufen.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>If you query <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> before the window has been shown or after it has been closed, <ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> is returned.</source>
          <target state="translated">Wenn Sie Abfragen <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> bevor das Fenster angezeigt wird oder nachdem er geschlossen wurde, <ph id="ph2">&lt;xref:System.Windows.Rect.Empty%2A&gt;</ph> wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>You cannot get this property when a window is hosted in a browser.</source>
          <target state="translated">Diese Eigenschaft kann nicht abgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</source>
          <target state="translated">Im folgenden Beispiel wird <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph> und isolierten Speicher, um sicherzustellen, dass die Größe und Position eines Fensters sind die gleiche wie beim vorherigen Mal Fenster gezeigt wurde.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>for permission to query for the size and location of a window's bounding rectangle.</source>
          <target state="translated">Berechtigung zum Abfragen der Größe und Position eines Fensters für das umgebende Rechteck.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.RestoreBounds">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Show">
          <source>Opens a window and returns without waiting for the newly opened window to close.</source>
          <target state="translated">Öffnet ein Fenster und wird beendet, ohne auf das Schließen des neu geöffneten Fensters zu warten.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> class is instantiated, it is not visible by default.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Klasse instanziiert wird, ist jedoch nicht standardmäßig angezeigt.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> shows a window and returns immediately, without waiting for the window to be closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> Zeigt ein Fenster, und gibt sofort zurück, ohne zu warten, für das Fenster geschlossen werden.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>Consequently, the opened window does not prevent users from interacting with other windows in the application.</source>
          <target state="translated">Daher wird das geöffnete Fenster nicht Benutzer verhindert Interaktion mit anderen Fenstern in der Anwendung.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>This type of window is called a <bpt id="p1">*</bpt>modeless<ept id="p1">*</ept> window.</source>
          <target state="translated">Diese Art von Fenster bezeichnet ist ein <bpt id="p1">*</bpt>nicht modalen<ept id="p1">*</ept> Fenster.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>Common examples of modeless windows are properties windows, toolboxes, and palettes.</source>
          <target state="translated">Allgemeine Beispiele für nicht modale Fenster sind Eigenschaftenfenster, Toolboxen und Paletten.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>To restrict a user to interacting with a specific window, the window must be opened by calling <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">Um ein Benutzer auf die Interaktion mit einem bestimmten Fenster beschränken möchten, muss das Fenster geöffnet werden durch Aufrufen von <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>A window that is opened by calling <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</source>
          <target state="translated">Ein Fenster, das durch Aufrufen von <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> wird nicht automatisch eine Beziehung mit dem Fenster, das sie geöffnet haben, insbesondere das geöffnete Fenster weiß nicht, welches Fenster öffnen.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>This relationship can be established using the <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property and managed using the <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> property.</source>
          <target state="translated">Diese Beziehung mit hergestellt werden kann die <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> Eigenschaft und verwalteten mithilfe der <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> achieves the same end result as setting <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> object to <ph id="ph4">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</source>
          <target state="translated">Aufrufen <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> erzielt wird das gleiche Endergebnis als Einstellung <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Eigenschaft von der <ph id="ph3">&lt;xref:System.Windows.Window&gt;</ph> -Objekt <ph id="ph4">&lt;xref:System.Windows.Visibility.Visible&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>However, there is a difference between the two from a timing perspective.</source>
          <target state="translated">Allerdings besteht ein Unterschied zwischen den beiden hinsichtlich der zeitlichen Steuerung.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>Calling <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> is a synchronous operation that returns only after the <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> event on the child window has been raised:</source>
          <target state="translated">Aufrufen von <ph id="ph1">&lt;xref:System.Windows.Window.Show%2A&gt;</ph> ist ein synchroner Vorgang, der erst nach zurückgibt der <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.Loaded&gt;</ph> auf das untergeordnete Fenster-Ereignis ausgelöst wurde:</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph>, however, is an asynchronous operation that returns immediately:</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph>, jedoch ist ein asynchroner Vorgang, der sofort zurückgibt:</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>When setting <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph>, any window events you register before you set <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> may not be raised until after the method in which you set <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> has completed execution.</source>
          <target state="translated">Beim Festlegen von <ph id="ph1">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph>, alle Fensterereignisse, die Sie registrieren, bevor Sie festlegen, <ph id="ph2">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> kann nicht ausgelöst werden, erst nach der Methode, in dem Sie festlegen <ph id="ph3">&lt;xref:System.Windows.UIElement.Visibility%2A&gt;</ph> Ausführung abgeschlossen hat.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.Show">
          <source>The following sample demonstrates how to open a modeless window.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, wie ein nicht modales Fenster zu öffnen.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.Show">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph> is called on a window that is closing (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) or has been closed (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Window.Show" /&gt;</ph> wird für ein Fenster aufgerufen, das geschlossen wird (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) oder geschlossen wurde (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.ShowActivated">
          <source>Gets or sets a value that indicates whether a window is activated when first shown.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Fenster beim ersten Anzeigen aktiviert wird.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a window is activated when first shown; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn ein Fenster beim ersten Anzeigen aktiviert wird, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>When a window with its <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> property set to <ph id="ph2">`false`</ph> is opened, the window is not activated and its <ph id="ph3">&lt;xref:System.Windows.Window.Activated&gt;</ph> event is not raised until a user manually activates the window by selecting it.</source>
          <target state="translated">Wenn ein Fenster mit seiner <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph> ist geöffnet, wird das Fenster nicht aktiviert und die zugehörige <ph id="ph3">&lt;xref:System.Windows.Window.Activated&gt;</ph> Ereignis wird nicht ausgelöst, bis ein Benutzer das Fenster manuell durch Auswahl aktiviert.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>After the window is selected, it activates and deactivates normally.</source>
          <target state="translated">Nachdem das Fenster ausgewählt ist, aktiviert und normalerweise deaktiviert.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>To prevent a window from being activated when it opens, the <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> property must be set to <ph id="ph2">`false`</ph> before the window is shown (by calling <ph id="ph3">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>); setting <ph id="ph4">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> to <ph id="ph5">`false`</ph> after a window is shown has no effect.</source>
          <target state="translated">Um zu verhindern, dass ein Fenster wird aktiviert, wenn er geöffnet wird, die <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> Eigenschaft muss festgelegt werden, um <ph id="ph2">`false`</ph> , bevor das Fenster angezeigt wird (durch Aufrufen von <ph id="ph3">&lt;xref:System.Windows.Window.Show%2A&gt;</ph>); Einstellung <ph id="ph4">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> auf <ph id="ph5">`false`</ph> ein Fenster angezeigt wird, hat keine Auswirkungen, die nach.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> to <ph id="ph2">`false`</ph> on a window that is opened modally, by calling <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, has no real impact.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Windows.Window.ShowActivated%2A&gt;</ph> auf <ph id="ph2">`false`</ph> für ein Fenster, das durch den Aufruf modal, geöffnet wird <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>, keine tatsächlichen Auswirkungen hat.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</source>
          <target state="translated">Obwohl das modale Fenster nicht aktiviert wird, wird mit modale Fenster verhindert, dass den Benutzer andere Anwendungsfenster aktivieren.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>The following example shows how to use markup to configure a window to be opened without being activated.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Markup verwendet wird, so konfigurieren Sie ein Fenster geöffnet werden, ohne aktiviert wird.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowActivated">
          <source>The following example shows how to use code to configure a window to be opened without it being activated.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Code verwenden, so konfigurieren Sie ein Fenster geöffnet werden, ohne dass es aktiviert wird.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.ShowActivatedProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.ShowActivated" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.ShowActivated" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ShowDialog">
          <source>Opens a window and returns only when the newly opened window is closed.</source>
          <target state="translated">Öffnet ein Fenster und wird erst beendet, wenn das neu geöffnete Fenster geschlossen wird.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ShowDialog">
          <source>A <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph> value of type <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> that specifies whether the activity was accepted (<ph id="ph3">&lt;see langword="true" /&gt;</ph>) or canceled (<ph id="ph4">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Nullable`1" /&gt;</ph>-Wert vom Typ <ph id="ph2">&lt;see cref="T:System.Boolean" /&gt;</ph> gibt an, ob die Aktivität bestätigt (<ph id="ph3">&lt;see langword="true" /&gt;</ph>) oder abgebrochen (<ph id="ph4">&lt;see langword="false" /&gt;</ph>) wurde.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ShowDialog">
          <source>The return value is the value of the <ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph> property before a window closes.</source>
          <target state="translated">Der Rückgabewert ist der Wert der <ph id="ph1">&lt;see cref="P:System.Windows.Window.DialogResult" /&gt;</ph>-Eigenschaft, bevor ein Fenster geschlossen wird.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>When a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> class is instantiated, it is not visible by default.</source>
          <target state="translated">Wenn eine <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> Klasse instanziiert wird, ist jedoch nicht standardmäßig angezeigt.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> shows the window, disables all other windows in the application, and returns only when the window is closed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> Zeigt das Fenster deaktiviert alle anderen Fenster in der Anwendung und gibt nur, wenn das Fenster geschlossen wird.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>This type of window is known as a <bpt id="p1">*</bpt>modal<ept id="p1">*</ept> window.</source>
          <target state="translated">Diese Art von Fenster wird als bezeichnet eine <bpt id="p1">*</bpt>modale<ept id="p1">*</ept> Fenster.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>Modal windows are primarily used as dialog boxes.</source>
          <target state="translated">Modale Fenster werden in erster Linie als Dialogfelder verwendet.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</source>
          <target state="translated">Ein Dialogfeld ist eine besondere Art von Fenster, die Anwendungen für die Interaktion mit Benutzern die Ausführung von Aufgaben wie das Öffnen von Dateien oder Drucken von Dokumenten verwenden.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</source>
          <target state="translated">Dialogfelder Benutzern häufig zu akzeptieren, oder brechen Sie den Task für den sie vor dem Schließen des Dialogfelds angezeigt wurden.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> returns a <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph><ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value that specifies whether the activity was accepted or canceled.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> Gibt eine <ph id="ph2">&lt;xref:System.Nullable%601&gt;</ph> <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> Wert, der angibt, ob die Aktivität bestätigt oder abgebrochen wurde.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>The return value is the value of the <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph> property before a window closes.</source>
          <target state="translated">Der Rückgabewert ist der Wert der <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>-Eigenschaft, bevor ein Fenster geschlossen wird.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <ph id="ph1">&lt;xref:System.Windows.Window.DialogResult%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>A window that is opened by calling the <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</source>
          <target state="translated">Ein Fenster, das durch Aufrufen von der <ph id="ph1">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph> Methode muss nicht automatisch eine Beziehung mit dem Fenster, die es geöffnet; insbesondere das geöffnete Fenster weiß nicht, welches Fenster öffnen.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>This relationship can be established using the <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> property and managed using the <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> property.</source>
          <target state="translated">Diese Beziehung mit hergestellt werden kann die <ph id="ph1">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> Eigenschaft und verwalteten mithilfe der <ph id="ph2">&lt;xref:System.Windows.Window.OwnedWindows%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>To support <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> automation (see <bpt id="p1">[</bpt>UI Automation Overview<ept id="p1">](~/docs/framework/ui-automation/ui-automation-overview.md)</ept>), <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> must be set for a window opened by calling <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</source>
          <target state="translated">Zur Unterstützung <ph id="ph1">[!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]</ph> Automation (finden Sie unter <bpt id="p1">[</bpt>Übersicht über die Benutzeroberflächenautomatisierung<ept id="p1">](~/docs/framework/ui-automation/ui-automation-overview.md)</ept>), <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph> muss festgelegt werden, für ein Fenster geöffnet, die durch den Aufruf <ph id="ph3">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>When a modal <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> window (a window opened by calling <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>) is closed, the previously activated window is reactivated.</source>
          <target state="translated">Wenn ein modales <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> Fenster (ein Fenster geöffnet wird, durch den Aufruf <ph id="ph2">&lt;xref:System.Windows.Window.ShowDialog%2A&gt;</ph>) geschlossen wird, die zuvor aktivierten Fenster erneut aktiviert.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>If a modal <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> window has an owner window (see <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>), the owner window is not reactivated when the modal <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> window is closed unless it was the previously activated window.</source>
          <target state="translated">Wenn ein modales <ph id="ph1">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> Fenster verfügt über kein Besitzerfenster (finden Sie unter <ph id="ph2">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>), das besitzende Fenster wird nicht erneut aktiviert, wenn der modale <ph id="ph3">[!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)]</ph> Fenster wird geschlossen, es sei denn, sie Fenster zuvor aktiviert war.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>This method cannot be called when a window is hosted in a browser.</source>
          <target state="translated">Diese Methode kann nicht aufgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>The following sample demonstrates how to open a modal window.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, wie ein modales Fenster geöffnet.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Windows.Window.ShowDialog">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> is called on a window that is closing (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) or has been closed (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Window.ShowDialog" /&gt;</ph> wird für ein Fenster aufgerufen, das geschlossen wird (<ph id="ph2">&lt;see cref="E:System.Windows.Window.Closing" /&gt;</ph>) oder geschlossen wurde (<ph id="ph3">&lt;see cref="E:System.Windows.Window.Closed" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>for permission to activate a window.</source>
          <target state="translated">nach der Installationsberechtigung für ein Fenster zu aktivieren.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Window.ShowDialog">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>Gets or sets a value that indicates whether the window has a task bar button.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob das Fenster über eine Taskleistenschaltfläche verfügt, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window has a task bar button; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Fenster über eine Taskleistenschaltfläche verfügt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>Does not apply when the window is hosted in a browser.</source>
          <target state="translated">Wird nicht angewendet, wenn das Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;</ph> is set to <ph id="ph2">`true`</ph>, the window will also appear in the ALT+TAB application selection list.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.ShowInTaskbar%2A&gt;</ph> festgelegt ist, um <ph id="ph2">`true`</ph>, das Fenster wird auch in der Auswahlliste der Tastenkombination ALT + TAB-Anwendung angezeigt.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> property.</source>
          <target state="translated">Das Symbol, das für die Taskleistenschaltfläche und die Tastenkombination ALT + TAB Anwendungsauswahlliste verwendet wird, ist der Wert von der <ph id="ph1">&lt;xref:System.Windows.Window.Icon%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.ShowInTaskbar">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.ShowInTaskbarProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.ShowInTaskbar" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.ShowInTaskbar" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.SizeToContent">
          <source>Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</source>
          <target state="translated">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob ein Fenster seine Größe automatisch an die Größe seines Inhalts anpasst.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.SizeToContent" /&gt;</ph> value.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.SizeToContent" /&gt;</ph>-Wert.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.SizeToContent.Manual" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.Windows.SizeToContent.Manual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.SizeToContent.WidthAndHeight&gt;</ph>, setting either <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> has no effect; both properties can be set, but the values they are set with are not applied to the window.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> festgelegt ist, um <ph id="ph2">&lt;xref:System.Windows.SizeToContent.WidthAndHeight&gt;</ph>, Einstellung <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> oder <ph id="ph4">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> hat keine Auswirkungen; beide Eigenschaften können festgelegt werden, aber die Werte, die sie festgelegt werden nicht an das Fenster angewendet.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Height&gt;</ph>, setting <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> does not change the height of the window.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> festgelegt ist, um <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Height&gt;</ph>, wobei <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Height%2A&gt;</ph> ändert sich nicht auf die Höhe des Fensters.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>When <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Width&gt;</ph>, setting <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> does not change the width of the window.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> festgelegt ist, um <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Width&gt;</ph>, wobei <ph id="ph3">&lt;xref:System.Windows.FrameworkElement.Width%2A&gt;</ph> ändert sich nicht auf die Breite des Fensters.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> has a value other than <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph>:</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> verfügt über einen Wert außer <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> is automatically set to <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph> if a user resizes the window by using the resize grip or dragging the border.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> wird automatisch festgelegt, um <ph id="ph2">&lt;xref:System.Windows.SizeToContent.Manual&gt;</ph> , wenn ein Benutzer durch den Ziehpunkt auf der Größe oder Ziehen des Rahmens Größe des Fensters ändern.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>If the size of the content changes in a way that causes the window to resize itself, <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.SizeChanged&gt;</ph> is raised.</source>
          <target state="translated">Wenn die Größe des Inhalts auf eine Weise ändert, die das Fenster selbst, ändern Sie die Größe wird <ph id="ph1">&lt;xref:System.Windows.FrameworkElement.SizeChanged&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>If a window is transparent (see <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph>), you should consider setting <ph id="ph2">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> to <ph id="ph3">&lt;xref:System.Windows.SizeToContent.WidthAndHeight&gt;</ph> to ensure the window is no larger than its visible content.</source>
          <target state="translated">Wenn ein Fenster sicherheitstransparent ist (finden Sie unter <ph id="ph1">&lt;xref:System.Windows.Window.AllowsTransparency%2A&gt;</ph>), sollten Sie die Einstellung <ph id="ph2">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> auf <ph id="ph3">&lt;xref:System.Windows.SizeToContent.WidthAndHeight&gt;</ph> sicherzustellen, dass das Fenster nicht größer als die sichtbaren Inhalt.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.SizeToContent">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> property in code to specify how a window resizes to fit its content.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie zum Festlegen der <ph id="ph1">&lt;xref:System.Windows.Window.SizeToContent%2A&gt;</ph> -Eigenschaft im Code angeben, wie die Fenstergröße an ihren Inhalt.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.SizeToContentProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.SizeToContent" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.SizeToContent" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.SourceInitialized">
          <source>This event is raised to support interoperation with <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph>.</source>
          <target state="translated">Dieses Ereignis wird ausgelöst, um die Interoperation mit <ph id="ph1">[!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)]</ph> zu unterstützen.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.SourceInitialized">
          <source>See <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</source>
          <target state="translated">Siehe <ph id="ph1">&lt;see cref="T:System.Windows.Interop.HwndSource" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="E:System.Windows.Window.StateChanged">
          <source>Occurs when the window's <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowState" /&gt;</ph> property changes.</source>
          <target state="translated">Tritt ein, wenn die <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowState" /&gt;</ph>-Eigenschaft des Fensters geändert wird.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.TaskbarItemInfo">
          <source>Gets or sets the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar thumbnail for the <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Ruft die <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>-Taskleistenminiaturansicht für <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph> ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.TaskbarItemInfo">
          <source>The <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar thumbnail for the <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph>-Taskleistenminiaturansicht für <ph id="ph2">&lt;see cref="T:System.Windows.Window" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.TaskbarItemInfo">
          <source>For more information about how to use the <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> taskbar thumbnail, see the <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> class.</source>
          <target state="translated">Weitere Informationen zur Verwendung der <ph id="ph1">[!INCLUDE[win7](~/includes/win7-md.md)]</ph> Taskleiste Miniaturansichten, finden Sie unter der <ph id="ph2">&lt;xref:System.Windows.Shell.TaskbarItemInfo&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.TaskbarItemInfoProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.TaskbarItemInfo" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.TaskbarItemInfo" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Title">
          <source>Gets or sets a window's title.</source>
          <target state="translated">Ruft den Titel eines Fensters ab bzw. legt diesen fest.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the window's title.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, der den Titel des Fensters enthält.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>The title of a <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, or <ph id="ph3">[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]</ph>, can also be set by using <ph id="ph4">&lt;xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der Titel des eine <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Navigation.NavigationWindow&gt;</ph>, oder <ph id="ph3">[!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)]</ph>, kann auch festgelegt werden, mithilfe von <ph id="ph4">&lt;xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Title">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.TitleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.Title" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Title" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Top">
          <source>Gets or sets the position of the window's top edge, in relation to the desktop.</source>
          <target state="translated">Ruft die Position des oberen Fensterrands im Verhältnis zum Desktop ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>The position of the window's top, in logical units (1/96").</source>
          <target state="translated">Die Position des oberen Fensterrands in logischen Einheiten (1/96 ").</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> is maximized or minimized, this value represents the top edge of the restore point for the <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Window&gt;</ph> maximiert wird oder minimiert, dieser Wert stellt den obere Rand der Wiederherstellung von Wiederherstellungspunkten für die <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>This property cannot be set through a style.</source>
          <target state="translated">Diese Eigenschaft kann nicht über einen Stil festgelegt werden.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>If you do not specify a value, <ph id="ph1">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> is set to the system default value.</source>
          <target state="translated">Wenn Sie einen Wert nicht angeben <ph id="ph1">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> auf den Standardwert des Systems festgelegt ist.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>You can also specify the system default value by setting <ph id="ph1">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> to <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>.</source>
          <target state="translated">Sie können auch die Systemstandardwert angeben, durch Festlegen von <ph id="ph1">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> auf <ph id="ph2">&lt;xref:System.Double.NaN&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>Neither <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph> nor <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph> is a valid value for <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>.</source>
          <target state="translated">Weder <ph id="ph1">&lt;xref:System.Double.NegativeInfinity&gt;</ph> noch <ph id="ph2">&lt;xref:System.Double.PositiveInfinity&gt;</ph> ist ein gültiger Wert für <ph id="ph3">&lt;xref:System.Windows.Window.Top%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Top">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.Topmost">
          <source>Gets or sets a value that indicates whether a window appears in the topmost z-order.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Fenster in der z-Reihenfolge zuoberst angezeigt wird, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the window is topmost; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn es sich um das oberste Fenster handelt, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>A window whose <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph> appears above all windows whose <ph id="ph3">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> properties are set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Ein Fenster, dessen <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph> über alle Fenster angezeigt, deren <ph id="ph3">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> Eigenschaften werden festgelegt, um <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>In the group of windows that have <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the window that is currently activated is the topmost window.</source>
          <target state="translated">In der Gruppe, von denen Windows <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`true`</ph>, das Fenster, das derzeit aktiviert ist das oberste Fenster ist.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>Likewise for the group of windows that have <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> property is set to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">Ebenso für die Gruppe von Fenstern, die über <ph id="ph1">&lt;xref:System.Windows.Window.Topmost%2A&gt;</ph> -Eigenschaftensatz auf <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.Topmost">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.TopmostProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.Topmost" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Topmost" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.TopProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.Top" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.Top" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>Gets or sets the position of the window when first shown.</source>
          <target state="translated">Ruft die Position des Fensters beim ersten Anzeigen ab bzw. legt diese fest.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.WindowStartupLocation" /&gt;</ph> value that specifies the top/left position of a window when first shown.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.WindowStartupLocation" /&gt;</ph>-Wert, der die Position links oben für ein Fenster beim ersten Anzeigen angibt.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.WindowStartupLocation.Manual" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.Windows.WindowStartupLocation.Manual" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.Manual&gt;</ph> causes a window to be positioned according to its <ph id="ph3">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> property values.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> auf <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.Manual&gt;</ph> bewirkt, dass ein Fenster entsprechend dem positioniert werden seine <ph id="ph3">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> und <ph id="ph4">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> Eigenschaftswerte.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>If either the <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> properties aren't specified, their values are determined by <ph id="ph3">[!INCLUDE[TLA2#tla_mswin](~/includes/tla2sharptla-mswin-md.md)]</ph>.</source>
          <target state="translated">Wenn entweder die <ph id="ph1">&lt;xref:System.Windows.Window.Left%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Windows.Window.Top%2A&gt;</ph> Eigenschaften nicht angegeben wird, deren Werte werden durch bestimmt <ph id="ph3">[!INCLUDE[TLA2#tla_mswin](~/includes/tla2sharptla-mswin-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation.CenterScreen&gt;</ph> causes a window to be positioned in the center of the screen that contains the mouse cursor.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation.CenterScreen&gt;</ph> bewirkt, dass ein Fenster in der Mitte des Bildschirms positioniert werden, die den Cursor enthält.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>Setting <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> to <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.CenterOwner&gt;</ph> causes a window to be positioned in the center of its owner window (see <ph id="ph3">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>), if specified.</source>
          <target state="translated">Festlegen von <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> auf <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.CenterOwner&gt;</ph> bewirkt, dass ein Fenster in der Mitte des Besitzerfensters positioniert sein (finden Sie unter <ph id="ph3">&lt;xref:System.Windows.Window.Owner%2A&gt;</ph>) angegeben.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>The owner window can be either another WPF window or a non-WPF window.</source>
          <target state="translated">Das besitzende Fenster kann es sich um einen anderen WPF-Fenster oder in einem nicht-WPF-Fenster sein.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>For more information about WPF windows with non-WPF windows, see <bpt id="p1">[</bpt>WPF and Win32 Interoperation<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept> and <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph>.</source>
          <target state="translated">Weitere Informationen zu WPF-Fenstern mit nicht-WPF-Fenstern finden Sie unter <bpt id="p1">[</bpt>WPF und Win32 Interoperation<ept id="p1">](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md)</ept> und <ph id="ph1">&lt;xref:System.Windows.Interop.WindowInteropHelper&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>If an owner window is not specified, the position of the window is determined in the same way as if <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> is set to <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.Manual&gt;</ph>.</source>
          <target state="translated">Wenn ein Besitzerfenster nicht angegeben ist, richtet sich die Position des Fensters auf die gleiche Weise wie wenn <ph id="ph1">&lt;xref:System.Windows.WindowStartupLocation&gt;</ph> auf festgelegt ist <ph id="ph2">&lt;xref:System.Windows.WindowStartupLocation.Manual&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStartupLocation">
          <source>You cannot set or get the value of this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder rufen Sie den Wert dieser Eigenschaft ein, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.WindowState">
          <source>Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Fenster wiederhergestellt, minimiert oder maximiert ist, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.WindowState" /&gt;</ph> that determines whether a window is restored, minimized, or maximized.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.WindowState" /&gt;</ph>, der bestimmt, ob ein Fenster wiederhergestellt, minimiert oder maximiert ist.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.WindowState.Normal" /&gt;</ph> (restored).</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.Windows.WindowState.Normal" /&gt;</ph> (wiederhergestellt).</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>Before a window is minimized or maximized, its size and location are stored in <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>.</source>
          <target state="translated">Bevor ein Fenster minimiert oder maximiert ist, seiner Größe und Position befinden sich <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>When a window is subsequently restored, its size and location values are restored with the values from <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>.</source>
          <target state="translated">Wenn ein Fenster später wiederhergestellt wird, werden seine Größe und Position Werte mit den Werten aus wiederhergestellt <ph id="ph1">&lt;xref:System.Windows.Window.RestoreBounds%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph> property is changed, <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph> is raised.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Window.WindowState%2A&gt;</ph> Eigenschaft geändert wird, <ph id="ph2">&lt;xref:System.Windows.Window.StateChanged&gt;</ph> ausgelöst wird.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowState">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.WindowStateProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowState" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowState" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" uid="P:System.Windows.Window.WindowStyle">
          <source>Gets or sets a window's border style.</source>
          <target state="translated">Ruft die Rahmenart eines Fensters ab bzw. legt diese fest.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Windows.WindowStyle" /&gt;</ph> that specifies a window's border style.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Windows.WindowStyle" /&gt;</ph>, der die Rahmenart eines Fensters angibt.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>The default is <ph id="ph1">&lt;see cref="F:System.Windows.WindowStyle.SingleBorderWindow" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see cref="F:System.Windows.WindowStyle.SingleBorderWindow" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source><ph id="ph1">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph> can be one of the <ph id="ph2">&lt;xref:System.Windows.WindowStyle&gt;</ph> enumeration values, including <ph id="ph3">&lt;xref:System.Windows.WindowStyle.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.WindowStyle.ToolWindow&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.WindowStyle.SingleBorderWindow&gt;</ph> (default), and <ph id="ph6">&lt;xref:System.Windows.WindowStyle.ThreeDBorderWindow&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Window.WindowStyle%2A&gt;</ph> kann eine von der <ph id="ph2">&lt;xref:System.Windows.WindowStyle&gt;</ph> -Enumerationswerte fest, einschließlich <ph id="ph3">&lt;xref:System.Windows.WindowStyle.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Windows.WindowStyle.ToolWindow&gt;</ph>, <ph id="ph5">&lt;xref:System.Windows.WindowStyle.SingleBorderWindow&gt;</ph> (Standard), und <ph id="ph6">&lt;xref:System.Windows.WindowStyle.ThreeDBorderWindow&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>The following figure shows the window styles on <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)]</ph> (Windows Vista Aero theme, with transparent glass enabled):</source>
          <target state="translated">Die folgende Abbildung zeigt die Fensterstile auf <ph id="ph1">[!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)]</ph> (Windows Vista Aero Design, mit aktiviertem transparentem Glaseffekt):</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source><bpt id="p1">![</bpt>Window styles<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure6.PNG "</bpt>Window styles<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Fensterstile<ept id="p1">]</ept><bpt id="p2">(~/add/media/windowoverviewfigure6.PNG "</bpt>Fensterstile<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>You cannot set or get this property when a window is hosted in a browser.</source>
          <target state="translated">Sie können nicht festgelegt oder diese Eigenschaft abzurufen, wenn ein Fenster in einem Browser gehostet wird.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>Dependency Property Information</source>
          <target state="translated">Informationen zur Abhängigkeitseigenschaft</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>Identifier field</source>
          <target state="translated">Bezeichnerfeld</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>Metadata properties set to <ph id="ph1">`true`</ph></source>
          <target state="translated">Metadaten-Eigenschaften festgelegt auf. <ph id="ph1">`true`</ph></target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Window.WindowStyle">
          <source>None</source>
          <target state="translated">Keiner</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="F:System.Windows.Window.WindowStyleProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowStyle" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Window.WindowStyle" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>