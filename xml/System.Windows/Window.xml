<Type Name="Window" FullName="System.Windows.Window">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a0ac2c01a09097a3c5164262a178d0eca19b0a17" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55410902" /></Metadata><TypeSignature Language="C#" Value="public class Window : System.Windows.Controls.ContentControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Window extends System.Windows.Controls.ContentControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Window" />
  <TypeSignature Language="VB.NET" Value="Public Class Window&#xA;Inherits ContentControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Window : System::Windows::Controls::ContentControl" />
  <TypeSignature Language="F#" Value="type Window = class&#xA;    inherit ContentControl" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Ignore)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fcb0f-101">Bietet die Möglichkeit, die Lebensdauer von Fenstern und Dialogfeldern zu erstellen, zu konfigurieren, anzuzeigen und zu verwalten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-101">Provides the ability to create, configure, show, and manage the lifetime of windows and dialog boxes.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-102">Der Punkt der Interaktion zwischen Benutzer und eine eigenständige Anwendung ist ein Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-102">The point of interaction between a user and a standalone application is a window.</span></span> <span data-ttu-id="fcb0f-103">Ein [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Fenster besteht aus zwei unterschiedlichen Bereichen:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-103">A [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] window consists of two distinct areas:</span></span>  
  
-   <span data-ttu-id="fcb0f-104">Eine nicht-Clientbereich, hostet die Windows-Zusatzelemente, z. B. ein Symbol, Titel, Systemmenü, Schaltfläche zum Minimieren, maximieren, Schaltfläche, Schaltfläche "Wiederherstellen", Schaltfläche "Schließen" und einen Rahmen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-104">A non-client area, which hosts the windows adornments, including an icon, title, System menu, minimize button, maximize button, restore button, close button, and a border.</span></span>  
  
-   <span data-ttu-id="fcb0f-105">Ein Client-Bereich, anwendungsspezifischen Inhalt hostet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-105">A client area, which hosts application-specific content.</span></span>  
  
 <span data-ttu-id="fcb0f-106">Ein Standardfenster ist in der folgenden Abbildung dargestellt:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-106">A standard window is shown in the following figure:</span></span>  
  
 <span data-ttu-id="fcb0f-107">![Fensterelemente](~/add/media/windowoverviewfigure1.PNG "Fensterelemente")</span><span class="sxs-lookup"><span data-stu-id="fcb0f-107">![Window elements](~/add/media/windowoverviewfigure1.PNG "Window elements")</span></span>  
  
 <span data-ttu-id="fcb0f-108"><xref:System.Windows.Window> Kapselt die Möglichkeit zu erstellen, konfigurieren, anzeigen und Verwalten der Lebensdauer von Fenstern und Dialogfeldern, und bietet die folgenden wichtigsten Dienste:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-108"><xref:System.Windows.Window> encapsulates the ability to create, configure, show, and manage the lifetime of both windows and dialog boxes, and provides the following key services:</span></span>  
  
 <span data-ttu-id="fcb0f-109">**Verwaltung der Lebensdauer**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-109">**Lifetime Management**: <xref:System.Windows.Window.Activate%2A>, <xref:System.Windows.Window.Activated>, <xref:System.Windows.Window.Close%2A>, <xref:System.Windows.Window.Closed>, <xref:System.Windows.Window.Closing>, <xref:System.Windows.Window.Deactivated>, <xref:System.Windows.Window.Hide%2A>, <xref:System.Windows.Window.IsActive%2A>, <xref:System.Windows.Window.Show%2A>, <xref:System.Windows.Window.SourceInitialized>.</span></span>  
  
 <span data-ttu-id="fcb0f-110">**Fensterverwaltung**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-110">**Window Management**: <xref:System.Windows.Window.GetWindow%2A>, <xref:System.Windows.Window.OwnedWindows%2A>, <xref:System.Windows.Window.Owner%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-111">**Aussehen und Verhalten**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span><span class="sxs-lookup"><span data-stu-id="fcb0f-111">**Appearance and Behavior**: <xref:System.Windows.Window.AllowsTransparency%2A>, <xref:System.Windows.Window.ContentRendered>, <xref:System.Windows.Window.DragMove%2A>, <xref:System.Windows.Window.Icon%2A>, <xref:System.Windows.Window.Left%2A>, <xref:System.Windows.Window.LocationChanged>, <xref:System.Windows.Window.ResizeMode%2A>, <xref:System.Windows.Window.RestoreBounds%2A>, <xref:System.Windows.Window.ShowActivated%2A>, <xref:System.Windows.Window.ShowInTaskbar%2A>, <xref:System.Windows.Window.SizeToContent%2A>, <xref:System.Windows.Window.StateChanged>, <xref:System.Windows.Window.Title%2A>, <xref:System.Windows.Window.Top%2A>, <xref:System.Windows.Window.Topmost%2A>, <xref:System.Windows.Window.WindowStartupLocation%2A>, <xref:System.Windows.Window.WindowState%2A>, <xref:System.Windows.Window.WindowStyle%2A></span></span>  
  
 <span data-ttu-id="fcb0f-112">**Dialogfelder**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-112">**Dialog Boxes**: <xref:System.Windows.Window.DialogResult%2A>, <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-113">Darüber hinaus <xref:System.Windows.Application> stellt spezielle Unterstützung für die Verwaltung aller Fenster in einer Anwendung:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-113">Additionally, <xref:System.Windows.Application> exposes special support for managing all of the windows in an application:</span></span>  
  
-   <span data-ttu-id="fcb0f-114">Dienstanwendung verwaltet eine Liste aller Fenster, die derzeit in der Anwendung instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-114">Application maintains a list of all the windows that are currently instantiated in the application.</span></span> <span data-ttu-id="fcb0f-115">Diese Liste wird verfügbar gemacht, indem die <xref:System.Windows.Application.Windows%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-115">This list is exposed by the <xref:System.Windows.Application.Windows%2A> property.</span></span>  
  
-   <span data-ttu-id="fcb0f-116">In der Standardeinstellung <xref:System.Windows.Application.MainWindow%2A> wird automatisch festgelegt, mit einem Verweis auf das erste <xref:System.Windows.Window> , die in einer Anwendung instanziiert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-116">By default, <xref:System.Windows.Application.MainWindow%2A> is automatically set with a reference to the first <xref:System.Windows.Window> that is instantiated in an application.</span></span> <span data-ttu-id="fcb0f-117">Diese und macht dem Fenster das Hauptanwendungsfenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-117">This thereby making the window the main application window.</span></span>  
  
 <span data-ttu-id="fcb0f-118">Ein <xref:System.Windows.Window> Markup, Markup und Code-Behind oder in Code implementiert werden können.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-118">A <xref:System.Windows.Window> can be implemented using markup, markup and code-behind, or code.</span></span>  
  
 <span data-ttu-id="fcb0f-119"><xref:System.Windows.Window> wird hauptsächlich verwendet, um Fenster und Dialogfelder für eigenständige Anwendungen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-119"><xref:System.Windows.Window> is primarily used to display windows and dialog boxes for standalone applications.</span></span> <span data-ttu-id="fcb0f-120">Für Anwendungen, die Navigation auf der Ebene des Fenster z. B. Assistenten, benötigen Sie können jedoch <xref:System.Windows.Navigation.NavigationWindow> stattdessen <xref:System.Windows.Navigation.NavigationWindow> leitet sich von <xref:System.Windows.Window> und erweitert diese Unterstützung der Navigation im Browserstil.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-120">However, for applications that require navigation at the window level, such as wizards, you can use <xref:System.Windows.Navigation.NavigationWindow> instead; <xref:System.Windows.Navigation.NavigationWindow> derives from <xref:System.Windows.Window> and extends it with browser-style navigation support.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-121">Inseln navigierbarem Inhalt können integriert werden, in anderen Inhalten und Containern, die unter Verwendung von <xref:System.Windows.Controls.Frame>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-121">Islands of navigable content can be incorporated into other content and content containers using <xref:System.Windows.Controls.Frame>.</span></span>  
  
 <span data-ttu-id="fcb0f-122"><xref:System.Windows.Window> muss `UnmanagedCode` Sicherheitsberechtigung instanziiert werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-122"><xref:System.Windows.Window> needs `UnmanagedCode` security permission to be instantiated.</span></span> <span data-ttu-id="fcb0f-123">Dies hat folgenden Konsequenzen:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-123">This has the following consequences:</span></span>  
  
-   [!INCLUDE[TLA#tla_clickonce](~/includes/tlasharptla-clickonce-md.md)]<span data-ttu-id="fcb0f-124">-bereitgestellten eigenständigen Anwendungen fordert berechtigungserweiterung, wenn die durch die Zonen "Internet" oder "Lokales Intranet gestartet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-124">-deployed standalone applications will request permission elevation when launched from either the Internet or Local Intranet zones.</span></span>  
  
-   [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] <span data-ttu-id="fcb0f-125">jede beliebige Anforderung, die, kleiner als vollständige Berechtigungen nicht Fenster oder Dialogfelder instanziieren können.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-125">that request anything less than full permissions will not be able to instantiate windows or dialog boxes.</span></span>  
  
 <span data-ttu-id="fcb0f-126">Informationen zu eigenständigen Anwendung bereitstellungs- und sicherheitsüberlegungen finden Sie unter [WPF-Sicherheitsstrategie – Plattformsicherheit](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-126">For information about standalone application deployment and security considerations, see [WPF Security Strategy - Platform Security](~/docs/framework/wpf/wpf-security-strategy-platform-security.md).</span></span>  
  
 <span data-ttu-id="fcb0f-127">Ein <xref:System.Windows.Window> ist eine <xref:System.Windows.Controls.ContentControl>, was bedeutet, dass es ein einzelnes Objekt eines beliebigen Typs (z. B. eine Zeichenfolge, ein Bild oder einen Bereich) enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-127">A <xref:System.Windows.Window> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="fcb0f-128">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.ContentControl>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-128">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span> <span data-ttu-id="fcb0f-129">Darüber hinaus <xref:System.Windows.Window> ein Stammelement ist und daher nicht Teil des Inhalts von einem anderen Element vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-129">Also, <xref:System.Windows.Window> is a root element and, therefore, cannot be part of another element's content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-130">Die <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, und <xref:System.Windows.Window.Left%2A> Eigenschaften für eine <xref:System.Windows.Window> über einen Stil wird nicht angewendet werden zur Laufzeit.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-130">The <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties set on a <xref:System.Windows.Window> through a style will not be applied at run time.</span></span>  
  
## <a name="customizing-the-window-control"></a><span data-ttu-id="fcb0f-131">Das Window-Steuerelement anpassen</span><span class="sxs-lookup"><span data-stu-id="fcb0f-131">Customizing the Window Control</span></span>  
 <span data-ttu-id="fcb0f-132">Zum Anwenden der gleichen eigenschafteneinstellungen mit mehreren <xref:System.Windows.Window> -Steuerelemente verwenden die <xref:System.Windows.FrameworkElement.Style%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-132">To apply the same property settings to multiple <xref:System.Windows.Window> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="fcb0f-133">Sie können den Standardwert ändern <xref:System.Windows.Controls.ControlTemplate> auf dem Steuerelement eine unverwechselbare Darstellung verleihen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-133">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="fcb0f-134">Weitere Informationen zum Erstellen einer <xref:System.Windows.Controls.ControlTemplate>, finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-134">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="fcb0f-135">Um anzuzeigen, die Teile und Zustände, die spezifisch für die <xref:System.Windows.Window>, finden Sie unter [Window-Stile und-Vorlagen](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-135">To see the parts and states that are specific to the <xref:System.Windows.Window>, see [Window Styles and Templates](~/docs/framework/wpf/controls/window-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="fcb0f-136">Abhängigkeitseigenschaften für dieses Steuerelement können vom Standardformat des Steuerelements festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-136">Dependency properties for this control might be set by the control's default style.</span></span>  <span data-ttu-id="fcb0f-137">Wenn eine Eigenschaft von einem standardmäßigen Format festgelegt ist, kann die Eigenschaft den Standardwert ändern, wenn das Steuerelement in der Anwendung angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-137">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="fcb0f-138">Das Standardformat wird bestimmt durch die Desktopdesign verwendet wird, wenn die Anwendung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-138">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="fcb0f-139">Weitere Informationen finden Sie unter [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-139">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-140">Festlegen einer visuellen Eigenschaft haben nur Auswirkungen, wenn diese Eigenschaft sowohl in vorhanden ist <xref:System.Windows.Window> Steuerelement der Standardvorlage und wird festgelegt, indem Sie mit ein.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-140">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Window> control's default template and is set by using a .</span></span> <span data-ttu-id="fcb0f-141">Eine Liste der Eigenschaften visueller Elemente finden Sie im Abschnitt "Ändern der visuellen Struktur eines Steuerelements" [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-141">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-142">Das folgende Beispiel zeigt, wie ein Standardfenster ist nur mit Markup definiert:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-142">The following example shows how a standard window is defined using only markup:</span></span>  
  
 [!code-xaml[WindowSnippets#WindowMARKUPONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MarkupOnlyWindow.xaml#windowmarkuponly)]  
  
 <span data-ttu-id="fcb0f-143">Das folgende Beispiel zeigt, wie ein Standardfenster mit definiert wird nur code:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-143">The following example shows how a standard window is defined using only code:</span></span>  
  
 [!code-csharp[WindowSnippets#WindowCODEONLY](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/CodeOnlyWindow.cs#windowcodeonly)]
 [!code-vb[WindowSnippets#WindowCODEONLY](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/codeonlywindow.vb#windowcodeonly)]  
  
 <span data-ttu-id="fcb0f-144">Das folgende Beispiel zeigt, wie ein standard-Fenster mit einer Kombination aus Markup und CodeBehind definiert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-144">The following example shows how a standard window is defined using a combination of markup and code-behind.</span></span>  
  
 [!code-xaml[WindowSnippets#WindowXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml#windowxaml)]  
  
 [!code-csharp[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowSnippets/CSharp/MainWindow.xaml.cs#windowcodebehind)]
 [!code-vb[WindowSnippets#WindowCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowSnippets/visualbasic/mainwindow.xaml.vb#windowcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Window.Show" />
    <altmember cref="M:System.Windows.Window.ShowDialog" />
    <altmember cref="P:System.Windows.Window.DialogResult" />
    <altmember cref="T:System.Windows.Application" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Window ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Window();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-145">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Window" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-145">Initializes a new instance of the <see cref="T:System.Windows.Window" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-146">Der Konstruktor initialisiert die <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, und <xref:System.Windows.Window.Left%2A> Eigenschaften mit ihren Standardwerten <xref:System.Windows.Window> Werte.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-146">The constructor initializes the <xref:System.Windows.FrameworkElement.Width%2A>, <xref:System.Windows.FrameworkElement.Height%2A>, <xref:System.Windows.Window.Top%2A>, and <xref:System.Windows.Window.Left%2A> properties to their default <xref:System.Windows.Window> values.</span></span>  
  
 <span data-ttu-id="fcb0f-147">Bei Erstellung ein Fensters innerhalb einer <xref:System.AppDomain> , bei dem ein <xref:System.Windows.Application> Objekt, fügt der Konstruktor der <xref:System.Windows.Window> Objekt, das den Satz von <xref:System.Windows.Application>-verwaltet Windows über die <xref:System.Windows.Application.Windows%2A> Eigenschaft der <xref:System.Windows.Application> Objekt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-147">If a window is created within an <xref:System.AppDomain> that has an <xref:System.Windows.Application> object, the constructor adds the <xref:System.Windows.Window> object to the set of <xref:System.Windows.Application>-managed windows via the <xref:System.Windows.Application.Windows%2A> property of the <xref:System.Windows.Application> object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="fcb0f-148">für die Berechtigung für dieses Objekt um unsicheren native Methoden aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-148">for permission for this object to call unsafe native methods.</span></span> <span data-ttu-id="fcb0f-149">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-149">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="public bool Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Activate" />
      <MemberSignature Language="VB.NET" Value="Public Function Activate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; bool" Usage="window.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-150">Versucht, das Fenster in den Vordergrund zu bringen, und aktiviert dieses.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-150">Attempts to bring the window to the foreground and activates it.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-151"><see langword="true" />, wenn das <see cref="T:System.Windows.Window" /> erfolgreich aktiviert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-151"><see langword="true" /> if the <see cref="T:System.Windows.Window" /> was successfully activated; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-152">Die Regeln, die bestimmen, ob das Fenster aktiviert ist sind identisch mit denen ein, die die [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` Funktion ("User32.dll").</span><span class="sxs-lookup"><span data-stu-id="fcb0f-152">The rules that determine whether the window is activated are the same as those used by the [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] `SetForegroundWindow` function (User32.dll).</span></span>  
  
 <span data-ttu-id="fcb0f-153">Wenn das Fenster in einer Windows Presentation Foundation-Anwendung aktiviert ist, die nicht der Benutzer die Anwendung im Vordergrund, <xref:System.Windows.Application.Activated> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-153">If the window is activated in a Windows Presentation Foundation application that is not the user's foreground application, <xref:System.Windows.Application.Activated> event is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-154">Diese Methode werden nicht aufgerufen, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-154">This method cannot be called when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-155">für die Berechtigung, um ein Fenster zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-155">for permission to activate a window.</span></span> <span data-ttu-id="fcb0f-156">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-156">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-157">Tritt auf, wenn ein Fenster in den Vordergrund gesetzt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-157">Occurs when a window becomes the foreground window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-158">Ein Fenster aktiviert ist (wird das Fenster im Vordergrund) beim:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-158">A window is activated (becomes the foreground window) when:</span></span>  
  
-   <span data-ttu-id="fcb0f-159">Öffnen des Fensters ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-159">The window is first opened.</span></span>  
  
-   <span data-ttu-id="fcb0f-160">Ein Benutzer wechselt zu einem Fenster, indem Sie sie auswählen, mit der Maus, und drücken ALT + TAB, oder dem Task-Manager.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-160">A user switches to a window by selecting it with the mouse, pressing ALT+TAB, or from Task Manager.</span></span>  
  
-   <span data-ttu-id="fcb0f-161">Ein Benutzer auf die Taskleistenschaltfläche des Fensters klickt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-161">A user clicks the window's taskbar button.</span></span>  
  
 <span data-ttu-id="fcb0f-162">Windows, die erkennen, wenn es sich bei Aktivierung müssen können behandeln die <xref:System.Windows.Window.Activated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-162">Windows that need to detect when they become activate can handle the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="fcb0f-163">Nachdem ein Fenster erstmals aktiviert ist, kann er deaktiviert und oft während seiner Lebensdauer erneut aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-163">After a window is first activated, it may be deactivated and reactivated many times during its lifetime.</span></span> <span data-ttu-id="fcb0f-164">Wenn vom Aktivierungszustand Verhalten oder der Zustand der Anwendung abhängig ist, prüft er <xref:System.Windows.Window.IsActive%2A> um zu bestimmen, welche Aktivierungszustand ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-164">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="fcb0f-165">Eine Anwendung kann auch sein, <xref:System.Windows.Application.Activated>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-165">An application can also be <xref:System.Windows.Application.Activated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Deactivated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparency">
      <MemberSignature Language="C#" Value="public bool AllowsTransparency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsTransparency" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.AllowsTransparency" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowsTransparency As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsTransparency { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowsTransparency : bool with get, set" Usage="System.Windows.Window.AllowsTransparency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-166">Ruft einen Wert ab, der angibt, ob der Clientbereich eines Fensters Transparenz unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-166">Gets or sets a value that indicates whether a window's client area supports transparency.</span></span></summary>
        <value><span data-ttu-id="fcb0f-167"><see langword="true" />, wenn das Fenster Transparenz unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-167"><see langword="true" /> if the window supports transparency; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-168">Wenn die <xref:System.Windows.Controls.Control.Background%2A> eines Fensters-Eigenschaftensatz auf eine transparente Farbe, mit <xref:System.Windows.Media.Brushes.Transparent%2A> z. B. das Fenster bleibt nicht transparent.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-168">When the <xref:System.Windows.Controls.Control.Background%2A> property of a window is set to a transparent color, using <xref:System.Windows.Media.Brushes.Transparent%2A> for example, the window remains opaque.</span></span> <span data-ttu-id="fcb0f-169">Dies bedeutet, dass der Desktop und alle ausgeführten Anwendungen "beneath" im Fenster nicht sichtbar ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-169">This means that the desktop and any running applications "beneath" the window cannot be seen.</span></span> <span data-ttu-id="fcb0f-170">So aktivieren Sie diese Art von Transparenz <xref:System.Windows.Window.AllowsTransparency%2A> muss festgelegt werden, um `true`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-170">To enable this type of transparency, <xref:System.Windows.Window.AllowsTransparency%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="fcb0f-171"><xref:System.Windows.Window.AllowsTransparency%2A> vorhanden ist, um die Erstellung von nicht rechteckigen Fenstern, zu vereinfachen und folglich beim <xref:System.Windows.Window.AllowsTransparency%2A> nastaven NA hodnotu `true`, eines Fensters <xref:System.Windows.Window.WindowStyle%2A> Eigenschaft muss festgelegt werden, um <xref:System.Windows.WindowStyle.None>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-171"><xref:System.Windows.Window.AllowsTransparency%2A> exists to facilitate the creation of non-rectangular windows, and, consequently, when <xref:System.Windows.Window.AllowsTransparency%2A> is set to `true`, a window's <xref:System.Windows.Window.WindowStyle%2A> property must be set to <xref:System.Windows.WindowStyle.None>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowAllowsTransparency"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-172">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-172">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-173">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-173">Identifier field</span></span>|<xref:System.Windows.Window.AllowsTransparencyProperty>|  
|<span data-ttu-id="fcb0f-174">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-174">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-175">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-175">None</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-176">Ein Fenster, das über einen beliebigen anderen <see cref="P:System.Windows.Window.WindowStyle" />-Wert als <see cref="F:System.Windows.WindowStyle.None" /> verfügt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-176">A window that has a <see cref="P:System.Windows.Window.WindowStyle" /> value of anything other than <see cref="F:System.Windows.WindowStyle.None" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AllowsTransparencyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowsTransparencyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowsTransparencyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.AllowsTransparencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowsTransparencyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowsTransparencyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowsTransparencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.AllowsTransparencyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-177">Identifiziert die <see cref="P:System.Windows.Window.AllowsTransparency" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-177">Identifies the <see cref="P:System.Windows.Window.AllowsTransparency" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size ArrangeOverride (System.Windows.Size arrangeBounds);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size arrangeBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ArrangeOverride (arrangeBounds As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size ArrangeOverride(System::Windows::Size arrangeBounds);" />
      <MemberSignature Language="F#" Value="override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.ArrangeOverride arrangeBounds" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrangeBounds" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="arrangeBounds"><span data-ttu-id="fcb0f-178">Eine <see cref="T:System.Windows.Size" />, die die endgültige Größe wiedergibt, anhand derer das Fenster sich selbst und seine untergeordneten Elemente anordnen soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-178">A <see cref="T:System.Windows.Size" /> that reflects the final size that the window should use to arrange itself and its children.</span></span></param>
        <summary><span data-ttu-id="fcb0f-179">Überschreiben Sie diese Methode, um ein Fenster und dessen untergeordnete Elemente anzuordnen und in der Größe zu ändern.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-179">Override this method to arrange and size a window and its child elements.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-180">Eine <see cref="T:System.Windows.Size" />, die die verwendete tatsächliche Größe wiedergibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-180">A <see cref="T:System.Windows.Size" /> that reflects the actual size that was used.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-181"><xref:System.Windows.Window.ArrangeOverride%2A> wird nicht aufgerufen, wenn die <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft hat den Wert <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-181"><xref:System.Windows.Window.ArrangeOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="fcb0f-182">Wenn der Wert des der <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft <xref:System.Windows.Visibility.Hidden> oder <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-182">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.ArrangeOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-183">Wenn entweder <xref:System.Windows.Window.Show%2A> oder <xref:System.Windows.Window.ShowDialog%2A> aufgerufen werden, die <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft eine <xref:System.Windows.Window> nastaven NA hodnotu <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-183">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="window.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-184">Schließt ein <see cref="T:System.Windows.Window" /> manuell.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-184">Manually closes a <see cref="T:System.Windows.Window" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-185">Ein <xref:System.Windows.Window> kann geschlossen werden, mit einer von mehreren, bekannte, vom System bereitgestellten Mechanismen befindet sich in der Titelleiste, einschließlich:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-185">A <xref:System.Windows.Window> can be closed using one of several, well-known, system-provided mechanisms located in its title bar, including:</span></span>  
  
-   <span data-ttu-id="fcb0f-186">ALT+F4.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-186">ALT+F4.</span></span>  
  
-   <span data-ttu-id="fcb0f-187">Systemmenü &#124; **schließen**.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-187">System menu &#124; **Close**.</span></span>  
  
-   <span data-ttu-id="fcb0f-188">**Schließen** Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-188">**Close** button.</span></span>  
  
 <span data-ttu-id="fcb0f-189">Ein <xref:System.Windows.Window> kann geschlossen werden mit mehreren bekannten Mechanismen im Clientbereich, die von Entwicklern, einschließlich bereitgestellt werden:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-189">A <xref:System.Windows.Window> can also be closed using one of several well-known mechanisms within the client area that are provided by developers, including:</span></span>  
  
-   <span data-ttu-id="fcb0f-190">**Datei** &#124; **beenden** in einem Hauptfenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-190">**File** &#124; **Exit** on a main window.</span></span>  
  
-   <span data-ttu-id="fcb0f-191">**Datei** &#124; **schließen** oder **schließen** Schaltfläche in einem untergeordneten Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-191">**File** &#124; **Close** or a **Close** button on a child window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-192">**OK** und **Abbrechen** Schaltflächen in einem Dialogfeld werden auch an Entwickler bereitgestellt, jedoch werden Sie wahrscheinlich Satz <xref:System.Windows.Window.DialogResult%2A>, die automatisch geschlossen wird, ein Fenster, das durch den Aufruf geöffnet wurde <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-192">**OK** and **Cancel** buttons on a dialog box are also developer-provided, although will likely set <xref:System.Windows.Window.DialogResult%2A>, which automatically closes a window that was opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-193">Diese Mechanismen müssen Sie explizit aufrufen, <xref:System.Windows.Window.Close%2A> um ein Fenster zu schließen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-193">These mechanisms require you to explicitly call <xref:System.Windows.Window.Close%2A> to close a window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-194">Wenn ein Fenster geöffnet wird, durch den Aufruf <xref:System.Windows.Window.ShowDialog%2A>, und mit einer <xref:System.Windows.Controls.Button> mit seiner <xref:System.Windows.Controls.Button.IsCancel%2A> Eigenschaft auf "true" festgelegt ist, wird automatisch geschlossen, wenn entweder die Schaltfläche geklickt wird, oder die ESC-Taste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-194">If a window, opened by calling <xref:System.Windows.Window.ShowDialog%2A>, and with a <xref:System.Windows.Controls.Button> with its <xref:System.Windows.Controls.Button.IsCancel%2A> property set to true, will automatically close when the button is either clicked, or ESC is pressed.</span></span> <span data-ttu-id="fcb0f-195">Wenn das Fenster geöffnet wurde, mithilfe von <xref:System.Windows.Window.Show%2A>jedoch <xref:System.Windows.Window.Close%2A> muss explizit aufgerufen werden, z. B. <xref:System.Windows.Controls.Primitives.ButtonBase.Click> -Ereignishandler für die <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-195">If the window was opened using <xref:System.Windows.Window.Show%2A>, however, <xref:System.Windows.Window.Close%2A> must be explicitly called, such as from <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="fcb0f-196">Schließen eines Fensters bewirkt, dass die <xref:System.Windows.Window.Closing> Ereignis ausgelöst wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-196">Closing a window causes the <xref:System.Windows.Window.Closing> event to be raised.</span></span> <span data-ttu-id="fcb0f-197">Wenn die <xref:System.Windows.Window.Closing> Ereignis wird nicht abgebrochen, geschieht Folgendes:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-197">If the <xref:System.Windows.Window.Closing> event isn't canceled, the following occurs:</span></span>  
  
-   <span data-ttu-id="fcb0f-198">Die <xref:System.Windows.Window> aus entfernt <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (wenn ein <xref:System.Windows.Application> Objekt vorhanden ist).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-198">The <xref:System.Windows.Window> is removed from <xref:System.Windows.Application.Windows%2A?displayProperty=nameWithType> (if an <xref:System.Windows.Application> object exists).</span></span>  
  
-   <span data-ttu-id="fcb0f-199">Die <xref:System.Windows.Window> wird vom Besitzer entfernt <xref:System.Windows.Window> , wenn die Besitzer/owned-Beziehung hergestellt wurde vor der im Besitz des Benutzers <xref:System.Windows.Window> wurde angezeigt und nach dem Besitzer <xref:System.Windows.Window> geöffnet wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-199">The <xref:System.Windows.Window> is removed from the owner <xref:System.Windows.Window> if the owner/owned relationship was established before the owned <xref:System.Windows.Window> was shown and after the owner <xref:System.Windows.Window> was opened.</span></span>  
  
-   <span data-ttu-id="fcb0f-200">Das <xref:System.Windows.Window.Closed>-Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-200">The <xref:System.Windows.Window.Closed> event is raised.</span></span>  
  
-   <span data-ttu-id="fcb0f-201">Nicht verwaltete Ressourcen, die erstellt werden, indem die <xref:System.Windows.Window> verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-201">Unmanaged resources created by the <xref:System.Windows.Window> are disposed.</span></span>  
  
-   <span data-ttu-id="fcb0f-202">Wenn <xref:System.Windows.Window.ShowDialog%2A> war aufgerufen, um das Anzeigen der <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-202">If <xref:System.Windows.Window.ShowDialog%2A> was called to show the <xref:System.Windows.Window>, <xref:System.Windows.Window.ShowDialog%2A> returns.</span></span>  
  
 <span data-ttu-id="fcb0f-203">Schließen einer <xref:System.Windows.Window> bewirkt, dass alle Fenster, die es besitzt, um die geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-203">Closing a <xref:System.Windows.Window> causes any windows that it owns to be closed.</span></span> <span data-ttu-id="fcb0f-204">Darüber hinaus schließen eine <xref:System.Windows.Window> kann dazu führen, dass eine Anwendung nicht mehr ausgeführt wird, je nachdem, wie der <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-204">Furthermore, closing a <xref:System.Windows.Window> may cause an application to stop running depending on how the <xref:System.Windows.Application.ShutdownMode%2A?displayProperty=nameWithType> property is set.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-205">Diese Methode werden nicht aufgerufen, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-205">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-206">Das folgende Beispiel zeigt eine **Datei** &#124; **beenden** Menü wird behandelt, um explizit aufrufen <xref:System.Windows.Window.Close%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-206">The following example shows a **File** &#124; **Exit** menu being handled to explicitly call <xref:System.Windows.Window.Close%2A>.</span></span>  
  
 [!code-xaml[WindowCloseSnippets#WindowCloseXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml#windowclosexaml)]  
  
 [!code-csharp[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowCloseSnippets/CSharp/MainWindow.xaml.cs#windowclosecodebehind)]
 [!code-vb[WindowCloseSnippets#WindowCloseCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowCloseSnippets/visualbasic/mainwindow.xaml.vb#windowclosecodebehind)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-207">für die Berechtigung, die alle Fenster und Benutzereingabeereignisse uneingeschränkt verwenden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-207">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="fcb0f-208">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-208">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="P:System.Windows.Window.DialogResult" />
        <altmember cref="P:System.Windows.Window.Owner" />
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="Closed">
      <MemberSignature Language="C#" Value="public event EventHandler Closed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Closed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Closed;" />
      <MemberSignature Language="F#" Value="member this.Closed : EventHandler " Usage="member this.Closed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-209">Tritt kurz vor dem Schließen des Fensters auf.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-209">Occurs when the window is about to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-210">Wenn dieses Ereignis ausgelöst wird, kann nicht schließen ein Fensters verhindert werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-210">Once this event is raised, a window cannot be prevented from closing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-211">Während ein Fenster schließt, wird <see cref="P:System.Windows.UIElement.Visibility" /> festgelegt, oder <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> oder <see cref="M:System.Windows.Window.Hide" /> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-211"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Hide" /> is called while a window is closing.</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closing" />
        <altmember cref="M:System.Windows.Application.Shutdown" />
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="E:System.Windows.Application.SessionEnding" />
      </Docs>
    </Member>
    <Member MemberName="Closing">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CancelEventHandler Closing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CancelEventHandler Closing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Closing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Closing As CancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CancelEventHandler ^ Closing;" />
      <MemberSignature Language="F#" Value="member this.Closing : System.ComponentModel.CancelEventHandler " Usage="member this.Closing : System.ComponentModel.CancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-212">Tritt unmittelbar nach dem Aufruf von <see cref="M:System.Windows.Window.Close" /> auf und kann behandelt werden, um das Schließen des Fensters abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-212">Occurs directly after <see cref="M:System.Windows.Window.Close" /> is called, and can be handled to cancel window closure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-213"><xref:System.Windows.Window.Closing> können behandelt werden, um zu ermitteln, wenn ein Fenster geschlossen wird (z. B. wenn <xref:System.Windows.Window.Close%2A> aufgerufen wird).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-213"><xref:System.Windows.Window.Closing> can be handled to detect when a window is being closed (for example, when <xref:System.Windows.Window.Close%2A> is called).</span></span> <span data-ttu-id="fcb0f-214">Darüber hinaus <xref:System.Windows.Window.Closing> können verwendet werden, um zu verhindern, dass ein Fenster schließen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-214">Furthermore, <xref:System.Windows.Window.Closing> can be used to prevent a window from closing.</span></span> <span data-ttu-id="fcb0f-215">Zum Schließen ein Fensters zu verhindern, Sie können festlegen, die <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Eigenschaft der <xref:System.ComponentModel.CancelEventArgs> Argument `true`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-215">To prevent a window from closing, you can set the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> argument to `true`.</span></span>  
  
 <span data-ttu-id="fcb0f-216">Die <xref:System.Windows.Window.Closing> Ereignis wird ausgelöst, wenn <xref:System.Windows.Window.Close%2A> aufgerufen wird, wenn ein Fenster auf die Schaltfläche "Schließen" geklickt wird oder wenn der Benutzer ALT + F4 drücken.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-216">The <xref:System.Windows.Window.Closing> event is raised when <xref:System.Windows.Window.Close%2A> is called, if a window's Close button is clicked, or if the user presses ALT+F4.</span></span>  
  
 <span data-ttu-id="fcb0f-217">Wenn ein zum Besitzer gehörige Fenster, mithilfe von dessen Besitzer Fenster geöffnet wurde <xref:System.Windows.Window.Show%2A>, und der Besitzer geschlossen wird, die im Besitz des Fensters <xref:System.Windows.Window.Closing> Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-217">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span> <span data-ttu-id="fcb0f-218">Wenn der Besitzer eines Fensters geschlossen wird (finden Sie unter <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> nicht für das Fenster im Besitz des Benutzers ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-218">If the owner of a window is closed (see <xref:System.Windows.Window.Owner%2A>), <xref:System.Windows.Window.Closing> is not raised on the owned window.</span></span>  
  
 <span data-ttu-id="fcb0f-219">Wenn <xref:System.Windows.Application.Shutdown%2A> aufgerufen wird, die <xref:System.Windows.Window.Closing> Ereignis für jedes Fenster wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-219">If <xref:System.Windows.Application.Shutdown%2A> is called, the <xref:System.Windows.Window.Closing> event for each window is raised.</span></span> <span data-ttu-id="fcb0f-220">Aber wenn <xref:System.Windows.Window.Closing> wird abgebrochen, Abbruch wird ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-220">However, if <xref:System.Windows.Window.Closing> is canceled, cancellation is ignored.</span></span>  
  
 <span data-ttu-id="fcb0f-221">Wenn eine Sitzung beendet, weil ein Benutzer abmeldet oder wird heruntergefahren, <xref:System.Windows.Window.Closing> wird nicht ausgelöst; behandeln <xref:System.Windows.Application.SessionEnding> zur Implementierung von Code, in dem Schließen der Anwendung abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-221">If a session ends because a user logs off or shuts down, <xref:System.Windows.Window.Closing> is not raised; handle <xref:System.Windows.Application.SessionEnding> to implement code that cancels application closure.</span></span>  
  
 <span data-ttu-id="fcb0f-222">Wenn auf Sie ein- und Ausblenden von einem Fenster mehrere Male während der Lebensdauer einer Anwendung werden sollen, und nicht das Fenster jedes Mal neu instanziieren möchten Sie diese anzeigen, können Sie behandeln die <xref:System.Windows.Window.Closing> -Ereignis, brechen Sie den Befehl, und rufen Sie die <xref:System.Windows.Window.Hide%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-222">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to reinstantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="fcb0f-223">Anschließend rufen Sie <xref:System.Windows.Window.Show%2A> auf der gleichen Instanz aus, um es erneut zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-223">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to reopen it.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-224">Das folgende Beispiel zeigt eine <xref:System.Windows.Window> , der bestimmt, ob schließen ein Benutzereingriff erforderlich.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-224">The following example demonstrates a <xref:System.Windows.Window> that determines whether it needs user intervention to close.</span></span>  
  
 [!code-xaml[WindowClosingSnippets#WindowClosingXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml#windowclosingxaml1)]  
  
 [!code-csharp[WindowClosingSnippets](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowClosingSnippets/CSharp/DataWindow.xaml.cs)]
 [!code-vb[WindowClosingSnippets](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowClosingSnippets/visualbasic/datawindow.xaml.vb)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-225">Während ein Fenster schließt, wird <see cref="P:System.Windows.UIElement.Visibility" /> festgelegt, oder <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" /> oder <see cref="M:System.Windows.Window.Close" /> wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-225"><see cref="P:System.Windows.UIElement.Visibility" /> is set, or <see cref="M:System.Windows.Window.Show" />, <see cref="M:System.Windows.Window.ShowDialog" />, or <see cref="M:System.Windows.Window.Close" /> is called while a window is closing.</span></span></exception>
        <altmember cref="P:System.Windows.Application.ShutdownMode" />
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="E:System.Windows.Window.Closed" />
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ ContentRendered;" />
      <MemberSignature Language="F#" Value="member this.ContentRendered : EventHandler " Usage="member this.ContentRendered : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-226">Tritt nach dem Rendern des Inhalts eines Fensters auf.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-226">Occurs after a window's content has been rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-227">Wenn das Fenster um keinen Inhalt hat, wird dieses Ereignis nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-227">If the window has no content, this event is not raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.ContentControl.Content" />
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-228">Tritt auf, wenn ein Fenster zum Hintergrundfenster wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-228">Occurs when a window becomes a background window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-229">Ein Fenster deaktiviert ist (wird zu einem Hintergrundfenster) beim:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-229">A window is deactivated (becomes a background window) when:</span></span>  
  
-   <span data-ttu-id="fcb0f-230">Ein Benutzer wechselt zu einem anderen Fenster in der aktuellen Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-230">A user switches to another window in the current application.</span></span>  
  
-   <span data-ttu-id="fcb0f-231">Ein Benutzer wechselt zum Fenster in einer anderen Anwendung mit ALT + TAB oder mithilfe des Task-Manager.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-231">A user switches to the window in another application by using ALT+TAB or by using Task Manager.</span></span>  
  
-   <span data-ttu-id="fcb0f-232">Ein Benutzer klickt auf die Taskleistenschaltfläche für ein Fenster in einer anderen Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-232">A user clicks the taskbar button for a window in another application.</span></span>  
  
 <span data-ttu-id="fcb0f-233">Windows, die erkennen, wenn die Deaktivierung durch Behandeln der <xref:System.Windows.Window.Deactivated> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-233">Windows that need to detect when they become deactivated by handling the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="fcb0f-234">Nachdem ein Fenster zunächst deaktiviert wurde, kann er erneut aktiviert und deaktiviert oft während seiner Lebensdauer.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-234">After a window is first deactivated, it may be reactivated and deactivated many times during its lifetime.</span></span> <span data-ttu-id="fcb0f-235">Wenn vom Aktivierungszustand Verhalten oder der Zustand der Anwendung abhängig ist, prüft er <xref:System.Windows.Window.IsActive%2A> um zu bestimmen, welche Aktivierungszustand ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-235">If an application's behavior or state depends on its activation state, it can inspect <xref:System.Windows.Window.IsActive%2A> to determine which activation state it's in.</span></span>  
  
 <span data-ttu-id="fcb0f-236">Eine Anwendung kann auch sein, <xref:System.Windows.Application.Deactivated>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-236">An application can also be <xref:System.Windows.Application.Deactivated>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="P:System.Windows.Window.IsActive" />
      </Docs>
    </Member>
    <Member MemberName="DialogResult">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; DialogResult { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; DialogResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.DialogResult" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogResult As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; DialogResult { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.DialogResult : Nullable&lt;bool&gt; with get, set" Usage="System.Windows.Window.DialogResult" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.DialogResultConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-237">Ruft den Ergebniswert des Dialogfelds ab, d. h. den von der <see cref="M:System.Windows.Window.ShowDialog" />-Methode zurückgegebenen Wert, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-237">Gets or sets the dialog result value, which is the value that is returned from the <see cref="M:System.Windows.Window.ShowDialog" /> method.</span></span></summary>
        <value><span data-ttu-id="fcb0f-238">Ein <see cref="T:System.Nullable`1" />-Wert vom Typ <see cref="T:System.Boolean" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-238">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" />.</span></span> <span data-ttu-id="fcb0f-239">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-239">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-240"><xref:System.Windows.Window.DialogResult%2A> kann verwendet werden, aus dem Code, die ein Dialogfeld, um zu bestimmen, ob ein Benutzer akzeptiert angezeigt wurde (`true`) oder abgebrochen (`false`) das Dialogfeld.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-240"><xref:System.Windows.Window.DialogResult%2A> can be used from the code that showed a dialog box to determine whether a user accepted (`true`) or canceled (`false`) the dialog box.</span></span> <span data-ttu-id="fcb0f-241">Wenn ein Dialogfeld akzeptiert wurde, bedeutet dies, um den Code, der zum Abrufen von Daten, die vom Benutzer erfasst wurden und verarbeiten sie das Dialogfeld öffnen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-241">If a dialog box was accepted, this signifies to the code that opened the dialog box to retrieve the data that was collected by the user and process it.</span></span> <span data-ttu-id="fcb0f-242">Wenn ein Dialogfeld abgebrochen wurde, allerdings bedeutet dies, dass das Aufrufen von Code beendet werden soll, weitere Verarbeitung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-242">If a dialog box was canceled, however, this signifies that calling code should stop any further processing.</span></span>  
  
 <span data-ttu-id="fcb0f-243">Standardmäßig wird ein Dialogfeld, das abgebrochen, wenn ein Benutzer eine der folgenden ausführt:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-243">By default, a dialog box is canceled when a user does one of the following:</span></span>  
  
-   <span data-ttu-id="fcb0f-244">PressesALT + F4.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-244">PressesALT+F4.</span></span>  
  
-   <span data-ttu-id="fcb0f-245">Klickt der **schließen** Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-245">Clicks the **Close** button.</span></span>  
  
-   <span data-ttu-id="fcb0f-246">Wählt **schließen** im Systemmenü.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-246">Selects **Close** from the System menu.</span></span>  
  
 <span data-ttu-id="fcb0f-247">In allen diesen Fällen <xref:System.Windows.Window.DialogResult%2A> ist `false` standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-247">In all of these cases, <xref:System.Windows.Window.DialogResult%2A> is `false` by default.</span></span>  
  
 <span data-ttu-id="fcb0f-248">Ein Dialogfeld, das in der Regel stellt einer speziellen Schaltfläche zum abzubrechen. Dies ist die Schaltfläche wird ein Dialogfeld, deren <xref:System.Windows.Controls.Button.IsCancel%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-248">A dialog box typically provides a special button to cancel a dialog, which is the button whose <xref:System.Windows.Controls.Button.IsCancel%2A> property is set to `true`.</span></span> <span data-ttu-id="fcb0f-249">Eine Schaltfläche auf diese Weise konfiguriert wird ein Fenster automatisch geschlossen, wenn entweder es gedrückt wird oder wenn die ESC-Taste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-249">A button configured this way will automatically close a window when either it is pressed, or when the ESC key is pressed.</span></span> <span data-ttu-id="fcb0f-250">In beiden Fällen <xref:System.Windows.Window.DialogResult%2A> bleibt `false`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-250">In either of these cases, <xref:System.Windows.Window.DialogResult%2A> remains `false`.</span></span>  
  
 <span data-ttu-id="fcb0f-251">Ein Dialogfeld, das auch in der Regel enthält einer Schaltfläche annehmen, wird die Schaltfläche, deren <xref:System.Windows.Controls.Button.IsDefault%2A> -Eigenschaftensatz auf `true`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-251">A dialog box also typically provides an accept button, which is the button whose <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true`.</span></span> <span data-ttu-id="fcb0f-252">Eine Schaltfläche, die diese Art konfigurierten löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis aus, wenn sie oder die EINGABETASTE gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-252">A button configured this way will raise its <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event when either it or the ENTER key is pressed.</span></span> <span data-ttu-id="fcb0f-253">Allerdings es wird nicht automatisch das Dialogfeld zu schließen, noch wird festgelegt <xref:System.Windows.Window.DialogResult%2A> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-253">However, it won't automatically close the dialog box, nor will it set <xref:System.Windows.Window.DialogResult%2A> to `true`.</span></span> <span data-ttu-id="fcb0f-254">Sie müssen manuell dieser Schreiben von Code in der Regel aus der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> -Ereignishandler für die Schaltfläche "Standard".</span><span class="sxs-lookup"><span data-stu-id="fcb0f-254">You need to manually write this code, usually from the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event handler for the default button.</span></span>  
  
 <span data-ttu-id="fcb0f-255"><xref:System.Windows.Window.DialogResult%2A> ist `null` das Dialogfeld wird angezeigt, wenn jedoch weder akzeptiert noch abgebrochen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-255"><xref:System.Windows.Window.DialogResult%2A> is `null` when the dialog box is shown but neither accepted nor canceled.</span></span>  
  
 <span data-ttu-id="fcb0f-256">Nachdem ein Dialogfeld wird, und geschlossen Sie erhalten das Dialogfeldergebnis aus den Rückgabewert von <xref:System.Windows.Window.ShowDialog%2A> -Methode, oder durch Überprüfen der <xref:System.Windows.Window.DialogResult%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-256">After a dialog box closes, you can get the dialog result from the value returned by <xref:System.Windows.Window.ShowDialog%2A> method, or by inspecting the <xref:System.Windows.Window.DialogResult%2A> property.</span></span>  
  
 <span data-ttu-id="fcb0f-257"><xref:System.Windows.Window.DialogResult%2A> kann nur festgelegt werden, wenn eine <xref:System.Windows.Window> geöffnet wird, durch den Aufruf der <xref:System.Windows.Window.ShowDialog%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-257"><xref:System.Windows.Window.DialogResult%2A> can only be set when a <xref:System.Windows.Window> is opened by calling its <xref:System.Windows.Window.ShowDialog%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-258">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-258">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-259">Das folgende Beispiel zeigt, wie so konfigurieren Sie die Schaltfläche "OK" und eine Schaltfläche "Abbrechen", um die entsprechende zurückzugeben <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-259">The following example shows how to configure an OK button and a Cancel button to return the appropriate <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 [!code-xaml[WindowDialogResultSnippets#WindowDialogResultXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml#windowdialogresultxaml)]  
  
 [!code-csharp[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDialogResultSnippets/CSharp/DialogBox.xaml.cs#windowdialogresultcodebehind)]
 [!code-vb[WindowDialogResultSnippets#WindowDialogResultCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDialogResultSnippets/visualbasic/dialogbox.xaml.vb#windowdialogresultcodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-260"><see cref="P:System.Windows.Window.DialogResult" /> wird festgelegt, bevor ein Fenster durch Aufrufen von <see cref="M:System.Windows.Window.ShowDialog" /> geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-260"><see cref="P:System.Windows.Window.DialogResult" /> is set before a window is opened by calling <see cref="M:System.Windows.Window.ShowDialog" />.</span></span>  
  
<span data-ttu-id="fcb0f-261">- oder -</span><span class="sxs-lookup"><span data-stu-id="fcb0f-261">-or-</span></span> 
 <span data-ttu-id="fcb0f-262"><see cref="P:System.Windows.Window.DialogResult" /> wird in einem Fenster festgelegt, das durch Aufrufen von <see cref="M:System.Windows.Window.Show" /> geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-262"><see cref="P:System.Windows.Window.DialogResult" /> is set on a window that is opened by calling <see cref="M:System.Windows.Window.Show" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DpiChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DpiChangedEventHandler DpiChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DpiChangedEventHandler DpiChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.DpiChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DpiChanged As DpiChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DpiChangedEventHandler ^ DpiChanged;" />
      <MemberSignature Language="F#" Value="member this.DpiChanged : System.Windows.DpiChangedEventHandler " Usage="member this.DpiChanged : System.Windows.DpiChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DpiChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-263">Tritt auf, nachdem sich die DPI-Auflösung des Bildschirms geändert hat, auf dem das Fenster angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-263">Occurs after the DPI of the screen on which the Window is displayed changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DpiChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DpiChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DpiChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.DpiChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DpiChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DpiChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DpiChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Window.DpiChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-264">Ein <see cref="T:System.Windows.RoutedEvent" /> für den Fall, dass der DPI-Wert des Bildschirms, der das Fenster anzeigt, geändert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-264">A <see cref="T:System.Windows.RoutedEvent" /> for when the DPI of the screen the Window is on changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DragMove">
      <MemberSignature Language="C#" Value="public void DragMove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DragMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.DragMove" />
      <MemberSignature Language="VB.NET" Value="Public Sub DragMove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DragMove();" />
      <MemberSignature Language="F#" Value="member this.DragMove : unit -&gt; unit" Usage="window.DragMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-265">Ermöglicht es, ein Fenster mit der Maus auf einen verfügbar gemachten Bereich im Clientbereich des Fensters zu ziehen, indem die linke Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-265">Allows a window to be dragged by a mouse with its left button down over an exposed area of the window's client area.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-266">Die linke Maustaste gedrückt werden muss, heruntergefahren, wenn <xref:System.Windows.Window.DragMove%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-266">The left mouse button must be down when <xref:System.Windows.Window.DragMove%2A> is called.</span></span> <span data-ttu-id="fcb0f-267">Eine Möglichkeit zum erkennen, wenn die linke Maustaste gedrückt wird, behandeln wird die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-267">One way to detect when the left mouse button is pressed is to handle the <xref:System.Windows.UIElement.MouseLeftButtonDown> event.</span></span>  
  
 <span data-ttu-id="fcb0f-268">Wenn <xref:System.Windows.Window.DragMove%2A> aufgerufen wird, wird die linke Maustaste über einen verfügbar gemachten Teil des Clientbereichs des Fensters gedrückt werden muss.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-268">When <xref:System.Windows.Window.DragMove%2A> is called, the left mouse button must be depressed over an exposed area of the window's client area.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-269">Diese Methode werden nicht aufgerufen, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-269">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-270">Das folgende Beispiel veranschaulicht das Überschreiben <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> aufzurufende <xref:System.Windows.Window.DragMove%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-270">The following example shows how to override <xref:System.Windows.UIElement.OnMouseLeftButtonDown%2A> to call <xref:System.Windows.Window.DragMove%2A>.</span></span>  
  
 [!code-csharp[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowDragMoveSnippets/CSharp/MainWindow.xaml.cs#callwindowdragmovecodebehind)]
 [!code-vb[WindowDragMoveSnippets#CallWindowDragMoveCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowDragMoveSnippets/visualbasic/mainwindow.xaml.vb#callwindowdragmovecodebehind)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-271">Die linke Maustaste wird nicht gedrückt gehalten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-271">The left mouse button is not down.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-272">für die Berechtigung, ein Fenster ziehen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-272">for permission to drag a window.</span></span> <span data-ttu-id="fcb0f-273">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-273">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="E:System.Windows.Window.LocationChanged" />
      </Docs>
    </Member>
    <Member MemberName="GetWindow">
      <MemberSignature Language="C#" Value="public static System.Windows.Window GetWindow (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Window GetWindow(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.GetWindow(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Window ^ GetWindow(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetWindow : System.Windows.DependencyObject -&gt; System.Windows.Window" Usage="System.Windows.Window.GetWindow dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="fcb0f-274">Das Abhängigkeitsobjekt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-274">The dependency object.</span></span></param>
        <summary><span data-ttu-id="fcb0f-275">Gibt einen Verweis auf das <see cref="T:System.Windows.Window" />-Objekt zurück, das die Inhaltsstruktur mit dem Abhängigkeitsobjekt hostet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-275">Returns a reference to the <see cref="T:System.Windows.Window" /> object that hosts the content tree within which the dependency object is located.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-276">Ein <see cref="T:System.Windows.Window" />-Verweis auf das Hostfenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-276">A <see cref="T:System.Windows.Window" /> reference to the host window.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fcb0f-277"><paramref name="dependencyObject" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-277"><paramref name="dependencyObject" /> is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Hide">
      <MemberSignature Language="C#" Value="public void Hide ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Hide() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Hide" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hide ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hide();" />
      <MemberSignature Language="F#" Value="member this.Hide : unit -&gt; unit" Usage="window.Hide " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-278">Macht ein Fenster unsichtbar.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-278">Makes a window invisible.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-279">Ein Fenster wird nicht geschlossen, wenn es ausgeblendet ist, und weder der <xref:System.Windows.Window.Closing> noch <xref:System.Windows.Window.Closed> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-279">A window is not closed when it is hidden, and neither the <xref:System.Windows.Window.Closing> nor <xref:System.Windows.Window.Closed> event is raised.</span></span> <span data-ttu-id="fcb0f-280">Stattdessen des Fensters <xref:System.Windows.UIElement.Visibility%2A> -Eigenschaftensatz auf <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-280">Instead, the window's <xref:System.Windows.UIElement.Visibility%2A> property is set to <xref:System.Windows.Visibility.Hidden?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="fcb0f-281">Wenn ein Fenster der Anwendung ist <xref:System.Windows.Application.MainWindow%2A> und der Anwendung <xref:System.Windows.Application.ShutdownMode%2A> ist <xref:System.Windows.ShutdownMode.OnMainWindowClose>, die Anwendung wird nicht heruntergefahren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-281">If a window is the application's <xref:System.Windows.Application.MainWindow%2A> and the application's <xref:System.Windows.Application.ShutdownMode%2A> is <xref:System.Windows.ShutdownMode.OnMainWindowClose>, the application does not shut down.</span></span> <span data-ttu-id="fcb0f-282">Andererseits die Anwendung wird nicht heruntergefahren, wenn ein Fenster das einzige Fenster ist und Modus für das Herunterfahren der Anwendung <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-282">Likewise, the application does not shut down if a window is the only window and the application's shutdown mode is <xref:System.Windows.ShutdownMode.OnLastWindowClose>.</span></span>  
  
 <span data-ttu-id="fcb0f-283">Wenn auf Sie ein- und Ausblenden von einem Fenster mehrere Male während der Lebensdauer einer Anwendung werden sollen, und nicht das Fenster jedes Mal erneut instanziieren möchten Sie diese anzeigen, können Sie behandeln die <xref:System.Windows.Window.Closing> -Ereignis, brechen Sie den Befehl, und rufen Sie die <xref:System.Windows.Window.Hide%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-283">If you want to show and hide a window multiple times during the lifetime of an application, and you don't want to re-instantiate the window each time you show it, you can handle the <xref:System.Windows.Window.Closing> event, cancel it, and call the <xref:System.Windows.Window.Hide%2A> method.</span></span> <span data-ttu-id="fcb0f-284">Anschließend rufen Sie <xref:System.Windows.Window.Show%2A> auf der gleichen Instanz aus, um es erneut zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-284">Then, you can call <xref:System.Windows.Window.Show%2A> on the same instance to re-open it.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-285"><see cref="M:System.Windows.Window.Hide" /> wird für ein Fenster aufgerufen, das geschlossen wird (<see cref="E:System.Windows.Window.Closing" />) oder geschlossen wurde (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-285"><see cref="M:System.Windows.Window.Hide" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Show" />
        <altmember cref="M:System.Windows.Window.ShowDialog" />
        <altmember cref="M:System.Windows.Window.Close" />
      </Docs>
    </Member>
    <Member MemberName="Icon">
      <MemberSignature Language="C#" Value="public System.Windows.Media.ImageSource Icon { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.ImageSource Icon" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Icon" />
      <MemberSignature Language="VB.NET" Value="Public Property Icon As ImageSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::ImageSource ^ Icon { System::Windows::Media::ImageSource ^ get(); void set(System::Windows::Media::ImageSource ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Icon : System.Windows.Media.ImageSource with get, set" Usage="System.Windows.Window.Icon" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.ImageSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-286">Ruft das Symbol eines Fensters ab oder legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-286">Gets or sets a window's icon.</span></span></summary>
        <value><span data-ttu-id="fcb0f-287">Ein <see cref="T:System.Windows.Media.ImageSource" />-Objekt, das das Symbol darstellt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-287">An <see cref="T:System.Windows.Media.ImageSource" /> object that represents the icon.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-288">Windows Presentation Foundation (WPF) von eigenständigen Anwendungen haben zwei Arten von Symbolen:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-288">Windows Presentation Foundation (WPF) standalone applications have two types of icons:</span></span>  
  
-   <span data-ttu-id="fcb0f-289">Eine Assembly-Symbol, das mit der `<ApplicationIcon>` erstellen Datei-Eigenschaft im Projekt der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-289">One assembly icon, which is specified by using the `<ApplicationIcon>` property in the application's project build file.</span></span> <span data-ttu-id="fcb0f-290">Dieses Symbol wird als das Desktopsymbol für eine Assembly verwendet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-290">This icon is used as the desktop icon for an assembly.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="fcb0f-291">Beim Debuggen in Visual Studio möglicherweise Ihr Symbol nicht aufgrund der Hostprozess angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-291">When debugging in Visual Studio, your icon may not appear due to the hosting process.</span></span> <span data-ttu-id="fcb0f-292">Wenn Sie die ausführbare Datei ausführen, wird das Symbol angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-292">If you run the executable, the icon will appear.</span></span> <span data-ttu-id="fcb0f-293">Weitere Informationen finden Sie unter [Hostprozess („vshost.exe“)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-293">For more information, see [Hosting Process (vshost.exe)](https://msdn.microsoft.com/library/c6b9e2be-f18d-4d75-ac52-56d55784734b).</span></span>  
  
-   <span data-ttu-id="fcb0f-294">Ein Symbol pro Fenster, das durch das Festlegen von angegeben wird <xref:System.Windows.Window.Icon%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-294">One icon per window that is specified by setting <xref:System.Windows.Window.Icon%2A>.</span></span> <span data-ttu-id="fcb0f-295">Für jedes Fenster wird dieses Symbol in der Titelleiste angezeigt wird, seine Taskleistenschaltfläche, und der ALT-TAB Anwendung Auswahl Listeneintrag verwendet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-295">For each window, this icon is used in its title bar, its task bar button, and in its ALT-TAB application selection list entry.</span></span>  
  
 <span data-ttu-id="fcb0f-296">Ein WPF-Fenster wird immer ein Symbol angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-296">A WPF window always displays an icon.</span></span> <span data-ttu-id="fcb0f-297">Wenn nicht bereitgestellt durch Festlegen von <xref:System.Windows.Window.Icon%2A>, WPF auswählt, ein Symbol angezeigt wird basierend auf den folgenden Regeln:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-297">When one is not provided by setting <xref:System.Windows.Window.Icon%2A>, WPF chooses an icon to display based on the following rules:</span></span>  
  
1.  <span data-ttu-id="fcb0f-298">Verwenden Sie das Symbol "Assembly", falls angegeben.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-298">Use the assembly icon, if specified.</span></span>  
  
2.  <span data-ttu-id="fcb0f-299">Wenn das Symbol "Assembly" nicht angegeben ist, verwenden Sie das Standardsymbol für das Microsoft Windows.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-299">If the assembly icon is not specified, use the default Microsoft Windows icon.</span></span>  
  
 <span data-ttu-id="fcb0f-300">Bei Verwendung von <xref:System.Windows.Window.Icon%2A> um ein benutzerdefiniertes Symbol anzugeben, können Sie das Standardanwendungssymbol wiederherstellen, indem festlegen <xref:System.Windows.Window.Icon%2A> zu `null`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-300">If you use <xref:System.Windows.Window.Icon%2A> to specify a custom window icon, you can restore the default application icon by setting <xref:System.Windows.Window.Icon%2A> to `null`.</span></span>  
  
 <span data-ttu-id="fcb0f-301">Ein einzelnes Symbol kann in einer Vielzahl von Methoden in Windows, einschließlich der in der Titelleiste eines Fensters, auf der Taskleiste für ein Fenster, die Dateiliste Auswahl ALT + TAB angezeigt wird, verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-301">A single icon can be used in a variety of ways in Windows, including being shown in the title bar of a window, the task bar for a window, the ALT+TAB file selection list.</span></span> <span data-ttu-id="fcb0f-302">Jedes davon wird das Symbol in unterschiedlichen Größen angezeigt. eine 16 x 16 Pixelsymbol wird in der Titelleiste eines Fensters, und klicken Sie in der Taskleiste angezeigt, während ein 32 x 32 Pixel großes Symbol in der Auswahlliste der ALT + TAB-Datei angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-302">Each of these shows the icon using a different size; a 16x16 pixel icon is displayed in the title bar of a window and in the task bar, while a 32x32 pixel icon is displayed in the ALT+TAB file selection list.</span></span> <span data-ttu-id="fcb0f-303">Einige Anwendungen, z. B. [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], geben Sie einen **Ansicht** Menü, das können Sie auf die Größe des Symbols, Sie anzeigen möchten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-303">Some applications, like [!INCLUDE[TLA#tla_winexpl](~/includes/tlasharptla-winexpl-md.md)], provide a **View** menu that allows you to choose the size of the icon you'd like to view.</span></span>  
  
 <span data-ttu-id="fcb0f-304">Um die verschiedenen Anzeigegrößen zu erfüllen, eine Symboldatei einen oder mehrere tatsächliche Symbole besteht, wobei jeweils eine Version des Symbols darstellt, die einer bestimmten Größe und Farbtiefe ausgerichtet ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-304">To cater to the various display sizes, an icon file is composed of one or more actual icons where each one represents a version of the icon that targets a specific size and color depth.</span></span> <span data-ttu-id="fcb0f-305">Z. B. möglicherweise ein Symbol nur das ein einzelnes Pixelsymbol von 16 x 16 und 16 Farben, während eine andere 16 x 16 Pixel und 32 x 32 Pixel großes Symbole mit 16 Farben und 256 Farben enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-305">For example, one icon may only have a single 16x16 pixel icon with 16 colors, while another may contain 16x16 pixel and 32x32 pixel icons with both 16 colors and 256 colors.</span></span>  
  
 <span data-ttu-id="fcb0f-306">Wenn Symbole für alle möglichen Größen und Farbtiefen innerhalb einer Symboldatei vorhanden <xref:System.Windows.Window> verwendet das entsprechende Symbol.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-306">If icons for all possible sizes and color depths exist within an icon file, <xref:System.Windows.Window> will use the appropriate icon.</span></span> <span data-ttu-id="fcb0f-307">Wenn eine Symboldatei nur eine Teilmenge aller möglichen Symbole enthält <xref:System.Windows.Window> das nächste am besten geeignete Symbol in der Reihenfolge abnehmender Größe und Farbtiefe verwendet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-307">If an icon file contains only a subset of all the possible icons, <xref:System.Windows.Window> uses the next most appropriate icon in order of decreasing sizes and color depth.</span></span>  
  
 <span data-ttu-id="fcb0f-308">Das Ergebnis ist, dass ein Symbol wird immer durch verwendet, <xref:System.Windows.Window>, obwohl das Symbol, das möglicherweise nicht die erforderliche Größe und Farbtiefe entspricht.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-308">The result is that an icon will always be used by <xref:System.Windows.Window>, although the icon used may not target the required size and color depth.</span></span> <span data-ttu-id="fcb0f-309">Beispielsweise kann ein Pixelsymbol 16 x 16 mit 16 Farben für die Anzeige als 32 x 32 Pixel großes Symbol mit 256 Farben verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-309">For example, a 16x16 pixel icon with 16 colors may be used for display as a 32x32 pixel icon with 256 colors.</span></span> <span data-ttu-id="fcb0f-310">Dies kann dazu führen, dass unerwünschte visuelle Effekte wie geglättet, jedoch kann durch Erstellen von Symbolen für die aller als Ziel festgelegten Größe und Farbe Tiefen vermieden werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-310">This can cause undesirable visual effects, such as pixilation, but may be avoided by creating icons for all targeted sizes and color depths.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-311">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-311">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIcon"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-312">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-312">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-313">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-313">Identifier field</span></span>|<xref:System.Windows.Window.IconProperty>|  
|<span data-ttu-id="fcb0f-314">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-314">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-315">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-315">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-316">Das folgende Beispiel zeigt, wie ein Fenstersymbol festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-316">The following example shows how to set a window icon.</span></span>  
  
 [!code-xaml[WindowIconSnippets#WindowIconSetXAML](~/samples/snippets/xaml/VS_Snippets_Wpf/WindowIconSnippets/XAML/MainWindow.xaml#windowiconsetxaml)]  
  
 [!code-csharp[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowIconSnippets/CSharp/MainWindow.xaml.cs#setwindowiconincode)]
 [!code-vb[WindowIconSnippets#SetWindowIconInCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowIconSnippets/visualbasic/mainwindow.xaml.vb#setwindowiconincode)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-317">für die Berechtigung zum Festlegen des Symbols.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-317">for permission to set the icon.</span></span> <span data-ttu-id="fcb0f-318">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-318">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="IconProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IconProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IconProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IconProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IconProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IconProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IconProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IconProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-319">Identifiziert die <see cref="P:System.Windows.Window.Icon" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-319">Identifies the <see cref="P:System.Windows.Window.Icon" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Window.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-320">Ruft einen Wert ab, der angibt, ob das Fenster aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-320">Gets a value that indicates whether the window is active.</span></span></summary>
        <value><span data-ttu-id="fcb0f-321"><see langword="true" />, wenn das Fenster aktiv ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-321"><see langword="true" /> if the window is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fcb0f-322">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-322">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-323">Ein aktiven Fensters wird das aktuelle Vordergrundfenster in des Benutzers und den Fokus hat, was durch die aktive Darstellung der Titelleiste angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-323">An active window is the user's current foreground window and has the focus, which is signified by the active appearance of the title bar.</span></span> <span data-ttu-id="fcb0f-324">Ein aktiven Fensters zuoberst angeordnetes alle Fenster auf oberster Ebene, die nicht explizit festlegen. Außerdem wird die <xref:System.Windows.Window.Topmost%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-324">An active window will also be the top-most of all top-level windows that don't explicitly set the <xref:System.Windows.Window.Topmost%2A> property.</span></span>  
  
<a name="dependencyPropertyInfo_WindowIsActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-325">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-325">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-326">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-326">Identifier field</span></span>|<xref:System.Windows.Window.IsActiveProperty>|  
|<span data-ttu-id="fcb0f-327">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-327">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-328">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-328">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.Activate" />
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="IsActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.IsActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.IsActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-329">Identifiziert die <see cref="P:System.Windows.Window.IsActive" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-329">Identifies the <see cref="P:System.Windows.Window.IsActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public double Left { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Left" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Left" />
      <MemberSignature Language="VB.NET" Value="Public Property Left As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Left { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Left : double with get, set" Usage="System.Windows.Window.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-330">Ruft die Position des linken Fensterrands im Verhältnis zum Desktop ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-330">Gets or sets the position of the window's left edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="fcb0f-331">Die Position des linken Fensterrands in logischen Einheiten (1/96 Zoll).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-331">The position of the window's left edge, in logical units (1/96th of an inch).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-332">Wenn die <xref:System.Windows.Window> maximiert oder minimiert, dieser Wert darstellt, die der linke Rand der Wiederherstellung für zeigen die <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-332">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the left edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="fcb0f-333">Diese Eigenschaft kann nicht über einen Stil festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-333">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="fcb0f-334">Wenn Sie einen Wert nicht angeben <xref:System.Windows.Window.Left%2A> auf den Standardwert des Systems festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-334">If you do not specify a value, <xref:System.Windows.Window.Left%2A> is set to the system default value.</span></span> <span data-ttu-id="fcb0f-335">Sie können auch den standardmäßigen Systemwert angeben, durch Festlegen von <xref:System.Windows.Window.Left%2A> zu <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-335">You can also specify the system default value by setting <xref:System.Windows.Window.Left%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="fcb0f-336">Weder <xref:System.Double.NegativeInfinity> noch <xref:System.Double.PositiveInfinity> ist ein gültiger Wert für <xref:System.Windows.Window.Left%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-336">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Left%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-337">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-337">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowLeft"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-338">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-338">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-339">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-339">Identifier field</span></span>|<xref:System.Windows.Window.LeftProperty>|  
|<span data-ttu-id="fcb0f-340">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-340">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-341">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-341">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="LeftProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LeftProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LeftProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.LeftProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LeftProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LeftProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LeftProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.LeftProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-342">Identifiziert die <see cref="P:System.Windows.Window.Left" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-342">Identifies the <see cref="P:System.Windows.Window.Left" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LocationChanged">
      <MemberSignature Language="C#" Value="public event EventHandler LocationChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler LocationChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.LocationChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LocationChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ LocationChanged;" />
      <MemberSignature Language="F#" Value="member this.LocationChanged : EventHandler " Usage="member this.LocationChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-343">Tritt auf, wenn die Position des Fensters geändert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-343">Occurs when the window's location changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-344">Die Position des Fensters wird geändert, wenn:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-344">A window's location changes when:</span></span>  
  
-   <span data-ttu-id="fcb0f-345">Ein Benutzer verschiebt ein Fenster, um mit der Titelleiste des Fensters ziehen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-345">A user moves a window by dragging it with the window's title bar.</span></span>  
  
-   <span data-ttu-id="fcb0f-346">Ein Fenster verschoben wird, nach dem <xref:System.Windows.Window.DragMove%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-346">A window is moved after <xref:System.Windows.Window.DragMove%2A> is called.</span></span>  
  
-   <span data-ttu-id="fcb0f-347">Entweder die <xref:System.Windows.Window.Left%2A> oder <xref:System.Windows.Window.Top%2A> -Eigenschaft programmgesteuert festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-347">Either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> property is set programmatically.</span></span>  
  
-   <span data-ttu-id="fcb0f-348">Die **verschieben** Menüelement eines Fensters Systemmenü ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-348">The **Move** menu item of a window's System menu is chosen.</span></span>  
  
-   <span data-ttu-id="fcb0f-349">Die <xref:System.Windows.Window.WindowState%2A> -Eigenschaft geändert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-349">The <xref:System.Windows.Window.WindowState%2A> property is changed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.Window.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-350">Ruft einen Enumerator für die logischen untergeordneten Elemente eines Fensters ab.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-350">Gets an enumerator for a window's logical child elements.</span></span></summary>
        <value><span data-ttu-id="fcb0f-351">Ein <see cref="T:System.Collections.IEnumerator" /> für die logischen untergeordneten Elemente eines Fensters.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-351">An <see cref="T:System.Collections.IEnumerator" /> a window's logical child elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.FrameworkElement.LogicalChildren" />
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected override System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="window.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize"><span data-ttu-id="fcb0f-352">Eine <see cref="T:System.Windows.Size" />, die die verfügbare Größe wiedergibt, die dieses Fenster für das untergeordnete Element bereitstellen kann.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-352">A <see cref="T:System.Windows.Size" /> that reflects the available size that this window can give to the child.</span></span> <span data-ttu-id="fcb0f-353">Sie können den Wert als unendlich angeben, um anzuzeigen, dass das Fenster an die Größe jedes beliebigen Inhalts angepasst wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-353">Infinity can be given as a value to indicate that the window will size to whatever content is available.</span></span></param>
        <summary><span data-ttu-id="fcb0f-354">Überschreiben Sie diese Methode, um die Größe eines Fensters zu messen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-354">Override this method to measure the size of a window.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-355">Eine <see cref="T:System.Windows.Size" />, die die Größe wiedergibt, die dieses Fenster auf der Grundlage der Berechnung der Größe der untergeordneten Elemente bestimmt und während des Layouts benötigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-355">A <see cref="T:System.Windows.Size" /> that reflects the size that this window determines it needs during layout, based on its calculations of children's sizes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-356"><xref:System.Windows.Window.MeasureOverride%2A> wird nicht aufgerufen, wenn die <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft hat den Wert <xref:System.Windows.Visibility.Collapsed>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-356"><xref:System.Windows.Window.MeasureOverride%2A> is not called when the <xref:System.Windows.UIElement.Visibility%2A> property has a value of <xref:System.Windows.Visibility.Collapsed>.</span></span> <span data-ttu-id="fcb0f-357">Wenn der Wert des der <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft <xref:System.Windows.Visibility.Hidden> oder <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-357">If the value of the <xref:System.Windows.UIElement.Visibility%2A> property is either <xref:System.Windows.Visibility.Hidden> or <xref:System.Windows.Visibility.Visible>, <xref:System.Windows.Window.MeasureOverride%2A> is called.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-358">Wenn entweder <xref:System.Windows.Window.Show%2A> oder <xref:System.Windows.Window.ShowDialog%2A> aufgerufen werden, die <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft eine <xref:System.Windows.Window> nastaven NA hodnotu <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-358">When either <xref:System.Windows.Window.Show%2A> or <xref:System.Windows.Window.ShowDialog%2A> are called, the <xref:System.Windows.UIElement.Visibility%2A> property of a <xref:System.Windows.Window> is set to <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
      </Docs>
    </Member>
    <Member MemberName="OnActivated">
      <MemberSignature Language="C#" Value="protected virtual void OnActivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnActivated : EventArgs -&gt; unit&#xA;override this.OnActivated : EventArgs -&gt; unit" Usage="window.OnActivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-359">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-359">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-360">Löst das <see cref="E:System.Windows.Window.Activated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-360">Raises the <see cref="E:System.Windows.Window.Activated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-361">Durch <xref:System.Windows.Window.OnActivated%2A> wird das <xref:System.Windows.Window.Activated>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-361"><xref:System.Windows.Window.OnActivated%2A> raises the <xref:System.Windows.Window.Activated> event.</span></span>  
  
 <span data-ttu-id="fcb0f-362">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnActivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-362">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnActivated%2A>.</span></span> <span data-ttu-id="fcb0f-363">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnActivated%2A> in der Basisklasse Wenn <xref:System.Windows.Window.Activated> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-363">The overridden method must call <xref:System.Windows.Window.OnActivated%2A> on the base class if <xref:System.Windows.Window.Activated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected virtual void OnClosed (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosed(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosed (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosed(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosed : EventArgs -&gt; unit&#xA;override this.OnClosed : EventArgs -&gt; unit" Usage="window.OnClosed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-364">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-364">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-365">Löst das <see cref="E:System.Windows.Window.Closed" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-365">Raises the <see cref="E:System.Windows.Window.Closed" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-366">Durch <xref:System.Windows.Window.OnClosed%2A> wird das <xref:System.Windows.Window.Closed>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-366"><xref:System.Windows.Window.OnClosed%2A> raises the <xref:System.Windows.Window.Closed> event.</span></span>  
  
 <span data-ttu-id="fcb0f-367">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnClosed%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-367">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosed%2A>.</span></span> <span data-ttu-id="fcb0f-368">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnClosed%2A> in der Basisklasse Wenn <xref:System.Windows.Window.Closed> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-368">The overridden method must call <xref:System.Windows.Window.OnClosed%2A> on the base class if <xref:System.Windows.Window.Closed> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnClosing (System.ComponentModel.CancelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClosing(class System.ComponentModel.CancelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnClosing(System.ComponentModel.CancelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClosing (e As CancelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClosing(System::ComponentModel::CancelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit&#xA;override this.OnClosing : System.ComponentModel.CancelEventArgs -&gt; unit" Usage="window.OnClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.CancelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-369">Ein <see cref="T:System.ComponentModel.CancelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-369">A <see cref="T:System.ComponentModel.CancelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-370">Löst das <see cref="E:System.Windows.Window.Closing" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-370">Raises the <see cref="E:System.Windows.Window.Closing" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-371">Durch <xref:System.Windows.Window.OnClosing%2A> wird das <xref:System.Windows.Window.Closing>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-371"><xref:System.Windows.Window.OnClosing%2A> raises the <xref:System.Windows.Window.Closing> event.</span></span>  
  
 <span data-ttu-id="fcb0f-372">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnClosing%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-372">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnClosing%2A>.</span></span> <span data-ttu-id="fcb0f-373">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnClosing%2A> in der Basisklasse Wenn <xref:System.Windows.Window.Closing> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-373">The overridden method must call <xref:System.Windows.Window.OnClosing%2A> on the base class if <xref:System.Windows.Window.Closing> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnClosed(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnContentChanged (object oldContent, object newContent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContentChanged(object oldContent, object newContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentChanged(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContentChanged (oldContent As Object, newContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContentChanged(System::Object ^ oldContent, System::Object ^ newContent);" />
      <MemberSignature Language="F#" Value="override this.OnContentChanged : obj * obj -&gt; unit" Usage="window.OnContentChanged (oldContent, newContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldContent" Type="System.Object" />
        <Parameter Name="newContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="oldContent"><span data-ttu-id="fcb0f-374">Ein Verweis auf den Stamm der alten Inhaltsstruktur.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-374">A reference to the root of the old content tree.</span></span></param>
        <param name="newContent"><span data-ttu-id="fcb0f-375">Ein Verweis auf den Stamm der neuen Inhaltsstruktur.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-375">A reference to the root of the new content tree.</span></span></param>
        <summary><span data-ttu-id="fcb0f-376">Wird aufgerufen, wenn sich die <see cref="P:System.Windows.Controls.ContentControl.Content" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-376">Called when the <see cref="P:System.Windows.Controls.ContentControl.Content" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContentRendered">
      <MemberSignature Language="C#" Value="protected virtual void OnContentRendered (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContentRendered(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnContentRendered(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContentRendered (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContentRendered(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContentRendered : EventArgs -&gt; unit&#xA;override this.OnContentRendered : EventArgs -&gt; unit" Usage="window.OnContentRendered e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-377">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-377">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-378">Löst das <see cref="E:System.Windows.Window.ContentRendered" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-378">Raises the <see cref="E:System.Windows.Window.ContentRendered" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-379">Durch <xref:System.Windows.Window.OnContentRendered%2A> wird das <xref:System.Windows.Window.ContentRendered>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-379"><xref:System.Windows.Window.OnContentRendered%2A> raises the <xref:System.Windows.Window.ContentRendered> event.</span></span>  
  
 <span data-ttu-id="fcb0f-380">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnContentRendered%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-380">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnContentRendered%2A>.</span></span> <span data-ttu-id="fcb0f-381">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnContentRendered%2A> in der Basisklasse Wenn <xref:System.Windows.Window.ContentRendered> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-381">The overridden method must call <xref:System.Windows.Window.OnContentRendered%2A> on the base class if <xref:System.Windows.Window.ContentRendered> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="window.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-382">Erstellt ein <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />-Objekt für dieses <see cref="T:System.Windows.Window" /> und gibt es zurück.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-382">Creates and returns a <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-383">Ein <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" />-Objekt für diesen <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-383">A <see cref="T:System.Windows.Automation.Peers.WindowAutomationPeer" /> object for this <see cref="T:System.Windows.Window" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-384">Diese Methode überschreibt <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-384">This method overrides <xref:System.Windows.ContentElement.OnCreateAutomationPeer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeactivated">
      <MemberSignature Language="C#" Value="protected virtual void OnDeactivated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeactivated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDeactivated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeactivated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeactivated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeactivated : EventArgs -&gt; unit&#xA;override this.OnDeactivated : EventArgs -&gt; unit" Usage="window.OnDeactivated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-385">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-385">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-386">Löst das <see cref="E:System.Windows.Window.Deactivated" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-386">Raises the <see cref="E:System.Windows.Window.Deactivated" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-387">Durch <xref:System.Windows.Window.OnDeactivated%2A> wird das <xref:System.Windows.Window.Deactivated>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-387"><xref:System.Windows.Window.OnDeactivated%2A> raises the <xref:System.Windows.Window.Deactivated> event.</span></span>  
  
 <span data-ttu-id="fcb0f-388">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnDeactivated%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-388">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnDeactivated%2A>.</span></span> <span data-ttu-id="fcb0f-389">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnDeactivated%2A> in der Basisklasse Wenn <xref:System.Windows.Window.Deactivated> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-389">The overridden method must call <xref:System.Windows.Window.OnDeactivated%2A> on the base class if <xref:System.Windows.Window.Deactivated> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.OnActivated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDpiChanged">
      <MemberSignature Language="C#" Value="protected override void OnDpiChanged (System.Windows.DpiScale oldDpi, System.Windows.DpiScale newDpi);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDpiChanged(valuetype System.Windows.DpiScale oldDpi, valuetype System.Windows.DpiScale newDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnDpiChanged(System.Windows.DpiScale,System.Windows.DpiScale)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDpiChanged (oldDpi As DpiScale, newDpi As DpiScale)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDpiChanged(System::Windows::DpiScale oldDpi, System::Windows::DpiScale newDpi);" />
      <MemberSignature Language="F#" Value="override this.OnDpiChanged : System.Windows.DpiScale * System.Windows.DpiScale -&gt; unit" Usage="window.OnDpiChanged (oldDpi, newDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldDpi" Type="System.Windows.DpiScale" />
        <Parameter Name="newDpi" Type="System.Windows.DpiScale" />
      </Parameters>
      <Docs>
        <param name="oldDpi"><span data-ttu-id="fcb0f-390">Die vorherige DPI-Größeneinstellung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-390">The previous DPI scale setting.</span></span></param>
        <param name="newDpi"><span data-ttu-id="fcb0f-391">Die neue DPI-Größeneinstellung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-391">The new DPI scale setting.</span></span></param>
        <summary><span data-ttu-id="fcb0f-392">Wird aufgerufen, wenn sich der DPI-Wert ändert, mit dem dieses Fenster gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-392">Called when the DPI at which this window is rendered changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLocationChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnLocationChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLocationChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnLocationChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLocationChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLocationChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLocationChanged : EventArgs -&gt; unit&#xA;override this.OnLocationChanged : EventArgs -&gt; unit" Usage="window.OnLocationChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-393">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-393">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-394">Löst das <see cref="E:System.Windows.Window.LocationChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-394">Raises the <see cref="E:System.Windows.Window.LocationChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-395">Durch <xref:System.Windows.Window.OnLocationChanged%2A> wird das <xref:System.Windows.Window.LocationChanged>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-395"><xref:System.Windows.Window.OnLocationChanged%2A> raises the <xref:System.Windows.Window.LocationChanged> event.</span></span>  
  
 <span data-ttu-id="fcb0f-396">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnLocationChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-396">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnLocationChanged%2A>.</span></span> <span data-ttu-id="fcb0f-397">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnLocationChanged%2A> in der Basisklasse Wenn <xref:System.Windows.Window.LocationChanged> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-397">The overridden method must call <xref:System.Windows.Window.OnLocationChanged%2A> on the base class if <xref:System.Windows.Window.LocationChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
        <altmember cref="P:System.Windows.Window.Top" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationBoundaryFeedback">
      <MemberSignature Language="C#" Value="protected override void OnManipulationBoundaryFeedback (System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnManipulationBoundaryFeedback(class System.Windows.Input.ManipulationBoundaryFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnManipulationBoundaryFeedback (e As ManipulationBoundaryFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnManipulationBoundaryFeedback(System::Windows::Input::ManipulationBoundaryFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnManipulationBoundaryFeedback : System.Windows.Input.ManipulationBoundaryFeedbackEventArgs -&gt; unit" Usage="window.OnManipulationBoundaryFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.ManipulationBoundaryFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-398">Die Daten für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-398">The data for the event.</span></span></param>
        <summary><span data-ttu-id="fcb0f-399">Wird aufgerufen, wenn das <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" />-Ereignis eintritt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-399">Called when the <see cref="E:System.Windows.UIElement.ManipulationBoundaryFeedback" /> event occurs.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-400">Diese Implementierung ändert nicht zum behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft) von der <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-400">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="fcb0f-401">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, rufen Sie die basisimplementierung immer Ihre <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-401">If you override <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Window.OnManipulationBoundaryFeedback(System.Windows.Input.ManipulationBoundaryFeedbackEventArgs)" /> implementation.</span></span> <span data-ttu-id="fcb0f-402">Fehler beim Aufrufen der basisimplementierung wird verhindert, dass Basisklassen Behandlung des Ereignisses, das das Laufzeitverhalten der endgültige Klasse ändern kann.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-402">Failure to call the base implementation prevents base classes from handling the event, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="fcb0f-403">Sie können die basisimplementierung vor oder nach der speziellen Behandlung je nach Anforderung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-403">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSourceInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnSourceInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSourceInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnSourceInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSourceInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSourceInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSourceInitialized : EventArgs -&gt; unit&#xA;override this.OnSourceInitialized : EventArgs -&gt; unit" Usage="window.OnSourceInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-404">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-404">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-405">Löst das <see cref="E:System.Windows.Window.SourceInitialized" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-405">Raises the <see cref="E:System.Windows.Window.SourceInitialized" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-406">Durch <xref:System.Windows.Window.OnSourceInitialized%2A> wird das <xref:System.Windows.Window.SourceInitialized>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-406"><xref:System.Windows.Window.OnSourceInitialized%2A> raises the <xref:System.Windows.Window.SourceInitialized> event.</span></span>  
  
 <span data-ttu-id="fcb0f-407">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnSourceInitialized%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-407">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnSourceInitialized%2A>.</span></span> <span data-ttu-id="fcb0f-408">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnSourceInitialized%2A> in der Basisklasse Wenn <xref:System.Windows.Window.SourceInitialized> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-408">The overridden method must call <xref:System.Windows.Window.OnSourceInitialized%2A> on the base class if <xref:System.Windows.Window.SourceInitialized> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStateChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStateChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStateChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnStateChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStateChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStateChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStateChanged : EventArgs -&gt; unit&#xA;override this.OnStateChanged : EventArgs -&gt; unit" Usage="window.OnStateChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="fcb0f-409">Ein <see cref="T:System.EventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-409">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="fcb0f-410">Löst das <see cref="E:System.Windows.Window.StateChanged" />-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-410">Raises the <see cref="E:System.Windows.Window.StateChanged" /> event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-411">Durch <xref:System.Windows.Window.OnStateChanged%2A> wird das <xref:System.Windows.Window.StateChanged>-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-411"><xref:System.Windows.Window.OnStateChanged%2A> raises the <xref:System.Windows.Window.StateChanged> event.</span></span>  
  
 <span data-ttu-id="fcb0f-412">Ein Typ, der abgeleitet <xref:System.Windows.Window> kann überschreiben <xref:System.Windows.Window.OnStateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-412">A type that derives from <xref:System.Windows.Window> may override <xref:System.Windows.Window.OnStateChanged%2A>.</span></span> <span data-ttu-id="fcb0f-413">Die überschriebene Methode aufrufen muss <xref:System.Windows.Window.OnStateChanged%2A> in der Basisklasse Wenn <xref:System.Windows.Window.StateChanged> ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-413">The overridden method must call <xref:System.Windows.Window.OnStateChanged%2A> on the base class if <xref:System.Windows.Window.StateChanged> needs to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualChildrenChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualChildrenChanged (System.Windows.DependencyObject visualAdded, System.Windows.DependencyObject visualRemoved);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualChildrenChanged(class System.Windows.DependencyObject visualAdded, class System.Windows.DependencyObject visualRemoved) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualChildrenChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualChildrenChanged (visualAdded As DependencyObject, visualRemoved As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualChildrenChanged(System::Windows::DependencyObject ^ visualAdded, System::Windows::DependencyObject ^ visualRemoved);" />
      <MemberSignature Language="F#" Value="override this.OnVisualChildrenChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualChildrenChanged (visualAdded, visualRemoved)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visualAdded" Type="System.Windows.DependencyObject" />
        <Parameter Name="visualRemoved" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="visualAdded"><span data-ttu-id="fcb0f-414">Das der Auflistung hinzugefügte <see cref="T:System.Windows.Media.Visual" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-414">The <see cref="T:System.Windows.Media.Visual" /> that was added to the collection.</span></span></param>
        <param name="visualRemoved"><span data-ttu-id="fcb0f-415">Das aus der Auflistung entfernte <see cref="T:System.Windows.Media.Visual" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-415">The <see cref="T:System.Windows.Media.Visual" /> that was removed from the collection.</span></span></param>
        <summary><span data-ttu-id="fcb0f-416">Wird aufgerufen, wenn <see cref="T:System.Windows.Media.VisualCollection" /> für dieses <see cref="T:System.Windows.Window" />-Objekt geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-416">Called when the <see cref="T:System.Windows.Media.VisualCollection" /> of this <see cref="T:System.Windows.Window" /> object is modified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override sealed void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides NotOverridable Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="window.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent"><span data-ttu-id="fcb0f-417">Das bisherige übergeordnete Element.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-417">The previous parent.</span></span> <span data-ttu-id="fcb0f-418">Wird auf NULL festgelegt, wenn das <see cref="T:System.Windows.DependencyObject" /> kein vorheriges übergeordnetes Element aufweist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-418">Set to null if the <see cref="T:System.Windows.DependencyObject" /> did not have a previous parent.</span></span></param>
        <summary><span data-ttu-id="fcb0f-419">Wird aufgerufen, wenn das übergeordnete Element des Fensters geändert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-419">Called when the parent of the window is changed.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OwnedWindows">
      <MemberSignature Language="C#" Value="public System.Windows.WindowCollection OwnedWindows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.WindowCollection OwnedWindows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.OwnedWindows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OwnedWindows As WindowCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowCollection ^ OwnedWindows { System::Windows::WindowCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OwnedWindows : System.Windows.WindowCollection" Usage="System.Windows.Window.OwnedWindows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-420">Ruft eine Auflistung von Fenstern ab, deren Besitzer dieses Fenster ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-420">Gets a collection of windows for which this window is the owner.</span></span></summary>
        <value><span data-ttu-id="fcb0f-421">Eine <see cref="T:System.Windows.WindowCollection" /> mit Verweisen auf die Fenster, deren Besitzer dieses Fenster ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-421">A <see cref="T:System.Windows.WindowCollection" /> that contains references to the windows for which this window is the owner.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-422">Ein zum Besitzer gehörige Fenster ist eine, deren <xref:System.Windows.Window.Owner%2A> Eigenschaft wird festgelegt, mit einem Verweis auf ein anderes Fenster, das als das besitzende Fenster bezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-422">An owned window is one whose <xref:System.Windows.Window.Owner%2A> property is set with a reference to another window, which is known as the owner window.</span></span> <span data-ttu-id="fcb0f-423">Um alle Fenster suchen, die einem Besitzerfenster gehören, können Sie auflisten <xref:System.Windows.WindowCollection> das zurückgegeben wird, indem die <xref:System.Windows.Window.OwnedWindows%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-423">To find all the windows that an owner window owns, you can enumerate <xref:System.Windows.WindowCollection> that is returned by the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-424">Das folgende Beispiel zeigt, wie Sie auflisten <xref:System.Windows.Window.OwnedWindows%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-424">The following example shows how to enumerate <xref:System.Windows.Window.OwnedWindows%2A>.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#getwindowownedwindowscode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#GetWindowOwnedWindowsCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#getwindowownedwindowscode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Owner">
      <MemberSignature Language="C#" Value="public System.Windows.Window Owner { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Window Owner" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Owner" />
      <MemberSignature Language="VB.NET" Value="Public Property Owner As Window" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Window ^ Owner { System::Windows::Window ^ get(); void set(System::Windows::Window ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Owner : System.Windows.Window with get, set" Usage="System.Windows.Window.Owner" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Window</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-425">Ruft das <see cref="T:System.Windows.Window" /> ab, das dieses <see cref="T:System.Windows.Window" /> besitzt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-425">Gets or sets the <see cref="T:System.Windows.Window" /> that owns this <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="fcb0f-426">Ein <see cref="T:System.Windows.Window" />-Objekt, das den Besitzer dieses <see cref="T:System.Windows.Window" /> darstellt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-426">A <see cref="T:System.Windows.Window" /> object that represents the owner of this <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-427">Wenn ein untergeordnetes Fenster durch Aufrufen von einem übergeordneten Fenster geöffnet wird <xref:System.Windows.Window.ShowDialog%2A>, eine Beziehung zwischen über- und untergeordneten Fenster eingerichtet ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-427">When a child window is opened by a parent window by calling <xref:System.Windows.Window.ShowDialog%2A>, an implicit relationship is established between both parent and child window.</span></span> <span data-ttu-id="fcb0f-428">Diese Beziehung erzwingt bestimmte Verhalten, wie in Bezug auf Minimieren, Maximieren und wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-428">This relationship enforces certain behaviors, including with respect to minimizing, maximizing, and restoring.</span></span>  
  
 <span data-ttu-id="fcb0f-429">Wenn ein untergeordnetes Fenster durch Aufrufen von einem übergeordneten Fenster erstellt wird <xref:System.Windows.Window.Show%2A>, das untergeordnete Fenster verfügt jedoch nicht über eine Beziehung mit dem übergeordneten Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-429">When a child window is created by a parent window by calling <xref:System.Windows.Window.Show%2A>, however, the child window does not have a relationship with the parent window.</span></span> <span data-ttu-id="fcb0f-430">Dies bedeutet Folgendes:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-430">This means that:</span></span>  
  
-   <span data-ttu-id="fcb0f-431">Das untergeordnete Fenster muss sich nicht auf einen Verweis auf das übergeordnete Fenster aus.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-431">The child window does not have a reference to the parent window.</span></span>  
  
-   <span data-ttu-id="fcb0f-432">Das Verhalten des untergeordneten Fensters ist nicht das Verhalten des übergeordneten Fensters abhängig. Beide Fenster kann abdecken, die andere oder minimiert, maximiert und wiederhergestellt, unabhängig voneinander.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-432">The behavior of the child window is not dependent on the behavior of the parent window; either window can cover the other, or be minimized, maximized, and restored independently of the other.</span></span>  
  
 <span data-ttu-id="fcb0f-433">Erstellen Sie eine Beziehung zwischen einem untergeordneten Fenster und ein übergeordnetes Fenster, ermöglichen <xref:System.Windows.Window> unterstützt das Konzept der Gesamtbetriebskosten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-433">To allow you to create a relationship between a child window and a parent window, <xref:System.Windows.Window> supports the notion of ownership.</span></span> <span data-ttu-id="fcb0f-434">Besitz wird hergestellt, wenn die <xref:System.Windows.Window.Owner%2A> Eigenschaft eines Window (das im Besitz des Benutzers Fenster) mit einem Verweis auf ein anderes Fenster (das Besitzerfenster) festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-434">Ownership is established when the <xref:System.Windows.Window.Owner%2A> property of a window (the owned window) is set with a reference to another window (the owner window).</span></span>  
  
 <span data-ttu-id="fcb0f-435">Sobald diese Beziehung eingerichtet ist, werden die folgenden Verhalten gezeigt:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-435">Once this relationship is established, the following behaviors are exhibited:</span></span>  
  
-   <span data-ttu-id="fcb0f-436">Wenn ein Besitzerfenster minimiert wird, werden auch alle seine eigenen Fenster minimiert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-436">If an owner window is minimized, all its owned windows are minimized as well.</span></span>  
  
-   <span data-ttu-id="fcb0f-437">Wenn ein zum Besitzer gehörige Fenster minimiert wird, wird der Besitzer nicht minimiert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-437">If an owned window is minimized, its owner is not minimized.</span></span>  
  
-   <span data-ttu-id="fcb0f-438">Wenn eine besitzende Fenster maximiert ist, werden sowohl das besitzende Fenster als auch die im Besitz des Benutzers Windows wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-438">If an owner window is maximized, both the owner window and its owned windows are restored.</span></span>  
  
-   <span data-ttu-id="fcb0f-439">Ein Besitzerfenster kann nie einen Besitzer gehörige Fenster abdecken.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-439">An owner window can never cover an owned window.</span></span>  
  
-   <span data-ttu-id="fcb0f-440">Im Besitz von Fenstern, die nicht mit geöffnet wurden <xref:System.Windows.Window.ShowDialog%2A> sind nicht modal.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-440">Owned windows that were not opened using <xref:System.Windows.Window.ShowDialog%2A> are not modal.</span></span> <span data-ttu-id="fcb0f-441">Der Benutzer kann das besitzende Fenster weiterhin interagieren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-441">The user can still interact with the owner window.</span></span>  
  
-   <span data-ttu-id="fcb0f-442">Wenn Sie über eine besitzende Fenster schließen, werden die im Besitz des Benutzers Windows ebenfalls geschlossen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-442">If you close an owner window, its owned windows are also closed.</span></span>  
  
-   <span data-ttu-id="fcb0f-443">Wenn ein zum Besitzer gehörige Fenster, mithilfe von dessen Besitzer Fenster geöffnet wurde <xref:System.Windows.Window.Show%2A>, und der Besitzer geschlossen wird, die im Besitz des Fensters <xref:System.Windows.Window.Closing> Ereignis wird nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-443">If an owned window was opened by its owner window using <xref:System.Windows.Window.Show%2A>, and the owner window is closed, the owned window's <xref:System.Windows.Window.Closing> event is not raised.</span></span>  
  
 <span data-ttu-id="fcb0f-444">Wenn Sie ein untergeordnetes Fenster öffnen, durch den Aufruf <xref:System.Windows.Window.ShowDialog%2A>, sollten Sie auch Festlegen der <xref:System.Windows.Window.Owner%2A> Eigenschaft des untergeordneten Fensters.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-444">When you open a child window by calling <xref:System.Windows.Window.ShowDialog%2A>, you should also set the <xref:System.Windows.Window.Owner%2A> property of the child window.</span></span> <span data-ttu-id="fcb0f-445">Falls nicht, klicken Sie dann Ihre Benutzer untergeordnete und übergeordnete Fenster wiederhergestellt, drücken Sie die Taskleistenschaltfläche nicht.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-445">If you don't, then your users won't be able to restore both child window and parent window by pressing the task bar button.</span></span> <span data-ttu-id="fcb0f-446">Drücken die Taskleistenschaltfläche wird stattdessen eine Liste von Windows, einschließlich untergeordnete und das übergeordnete Fenster für diese Auswahl ergeben; Es wird nur das ausgewählte Fenster wiederhergestellt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-446">Instead, pressing the task bar button will yield a list of windows, including both child and parent window, for them to select; only the selected window is restored.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fcb0f-447">Sie sollten auch festlegen, die <xref:System.Windows.Window.Owner%2A> Eigenschaft für ein Fenster, das durch den Aufruf geöffnet wird <xref:System.Windows.Window.ShowDialog%2A> um sicherzustellen, dass korrektes Verhalten bei.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-447">You should also set the <xref:System.Windows.Window.Owner%2A> property on a window that is opened by calling <xref:System.Windows.Window.ShowDialog%2A> to ensure correct behavior with .</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-448">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-448">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-449">Das folgende Beispiel zeigt, wie Sie die Besitzer/owned Beziehung herzustellen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-449">The following example shows how to establish the owner/owned relationship.</span></span>  
  
 [!code-csharp[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/CSharp/MainWindow.xaml.cs#setwindowownercode)]
 [!code-vb[WindowOwnerOwnedWindowsSnippets#SetWindowOwnerCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowOwnerOwnedWindowsSnippets/visualbasic/mainwindow.xaml.vb#setwindowownercode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fcb0f-450">Ein Fenster versucht, sich selbst zu besitzen</span><span class="sxs-lookup"><span data-stu-id="fcb0f-450">A window tries to own itself</span></span> 
<span data-ttu-id="fcb0f-451">- oder -</span><span class="sxs-lookup"><span data-stu-id="fcb0f-451">-or-</span></span> 
<span data-ttu-id="fcb0f-452">Zwei Fenster versuchen, einander zu besitzen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-452">Two windows try to own each other.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-453">Die <see cref="P:System.Windows.Window.Owner" />-Eigenschaft wird für ein sichtbares Fenster festgelegt, das mit <see cref="M:System.Windows.Window.ShowDialog" /> angezeigt wird</span><span class="sxs-lookup"><span data-stu-id="fcb0f-453">The <see cref="P:System.Windows.Window.Owner" /> property is set on a visible window shown using <see cref="M:System.Windows.Window.ShowDialog" /></span></span>  
  
<span data-ttu-id="fcb0f-454">- oder -</span><span class="sxs-lookup"><span data-stu-id="fcb0f-454">-or-</span></span> 
<span data-ttu-id="fcb0f-455">Die <see cref="P:System.Windows.Window.Owner" />-Eigenschaft wird für ein Fenster festgelegt, das bisher nicht angezeigt wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-455">The <see cref="P:System.Windows.Window.Owner" /> property is set with a window that has not been previously shown.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-456">für die Berechtigung, die alle Fenster und Benutzereingabeereignisse uneingeschränkt verwenden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-456">for permission to use all windows and user input events without restriction.</span></span> <span data-ttu-id="fcb0f-457">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-457">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="P:System.Windows.Window.OwnedWindows" />
      </Docs>
    </Member>
    <Member MemberName="ResizeMode">
      <MemberSignature Language="C#" Value="public System.Windows.ResizeMode ResizeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.ResizeMode ResizeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ResizeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ResizeMode As ResizeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResizeMode ResizeMode { System::Windows::ResizeMode get(); void set(System::Windows::ResizeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ResizeMode : System.Windows.ResizeMode with get, set" Usage="System.Windows.Window.ResizeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ResizeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-458">Ruft den Größenänderungsmodus ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-458">Gets or sets the resize mode.</span></span></summary>
        <value><span data-ttu-id="fcb0f-459">Ein <see cref="T:System.Windows.ResizeMode" />-Wert, der den Größenänderungsmodus angibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-459">A <see cref="T:System.Windows.ResizeMode" /> value specifying the resize mode.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-460">Es gibt vier Optionen aus:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-460">There are four options:</span></span>  
  
-   <span data-ttu-id="fcb0f-461">**False**.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-461">**NoResize**.</span></span> <span data-ttu-id="fcb0f-462">Der Benutzer nicht über das Fenster anpassen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-462">The user cannot resize the window.</span></span> <span data-ttu-id="fcb0f-463">Die Maximieren und minimieren-Felder werden nicht angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-463">The Maximize and Minimize boxes are not shown.</span></span>  
  
-   <span data-ttu-id="fcb0f-464">**CanMinimize**.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-464">**CanMinimize**.</span></span> <span data-ttu-id="fcb0f-465">Der Benutzer kann nur das Fenster minimieren und Wiederherstellen über die Taskleiste.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-465">The user can only minimize the window and restore it from the taskbar.</span></span> <span data-ttu-id="fcb0f-466">Die Felder minimieren und Maximieren werden angezeigt, jedoch nur das Minimieren-Feld aktiviert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-466">The Minimize and Maximize boxes are both shown, but only the Minimize box is enabled.</span></span>  
  
-   <span data-ttu-id="fcb0f-467">**CanResize**.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-467">**CanResize**.</span></span> <span data-ttu-id="fcb0f-468">Der Benutzer hat die uneingeschränkte Möglichkeit zum Ändern der Größe der Fenster mithilfe der Felder minimieren und Maximieren und Größenänderungsoptionen um das Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-468">The user has the full ability to resize the window, using the Minimize and Maximize boxes, and a draggable outline around the window.</span></span> <span data-ttu-id="fcb0f-469">Die Felder minimieren und Maximieren sind angezeigt und aktiviert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-469">The Minimize and Maximize boxes are shown and enabled.</span></span> <span data-ttu-id="fcb0f-470">(Standard).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-470">(Default).</span></span>  
  
-   <span data-ttu-id="fcb0f-471">**CanResizeWithGrip**.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-471">**CanResizeWithGrip**.</span></span> <span data-ttu-id="fcb0f-472">Diese Option hat die gleiche Funktionalität wie <xref:System.Windows.ResizeMode.CanResize>, aber der unteren rechten Ecke des Fensters "Ziehpunkt zur Größenänderung" hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-472">This option has the same functionality as <xref:System.Windows.ResizeMode.CanResize>, but adds a "resize grip" to the lower right corner of the window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-473">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-473">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowResizeMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-474">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-474">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-475">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-475">Identifier field</span></span>|<xref:System.Windows.Window.ResizeModeProperty>|  
|<span data-ttu-id="fcb0f-476">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-476">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Primitives.ResizeGrip" />
      </Docs>
    </Member>
    <Member MemberName="ResizeModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ResizeModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ResizeModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ResizeModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ResizeModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ResizeModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ResizeModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ResizeModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-477">Identifiziert die <see cref="P:System.Windows.Window.ResizeMode" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-477">Identifies the <see cref="P:System.Windows.Window.ResizeMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RestoreBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect RestoreBounds { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect RestoreBounds" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.RestoreBounds" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RestoreBounds As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect RestoreBounds { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.RestoreBounds : System.Windows.Rect" Usage="System.Windows.Window.RestoreBounds" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-478">Ruft die Größe und Position eines Fensters vor dem Minimieren oder Maximieren ab.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-478">Gets the size and location of a window before being either minimized or maximized.</span></span></summary>
        <value><span data-ttu-id="fcb0f-479">Ein <see cref="T:System.Windows.Rect" />, das die Größe und Position eines Fensters vor dem Minimieren oder Maximieren angibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-479">A <see cref="T:System.Windows.Rect" /> that specifies the size and location of a window before being either minimized or maximized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-480">Das Rechteck für die Wiederherstellung ist die Region, die vom Fenster belegt wird, bevor sie minimiert oder maximiert wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-480">The restore rectangle is the region occupied by the window before it was minimized or maximized.</span></span> <span data-ttu-id="fcb0f-481">Sie können <xref:System.Windows.Window.RestoreBounds%2A> rufen diese Werte beim nächsten Start eine Anwendung ein Fenster mit der Art und Weise wiederherstellen ein Benutzers zu belassen, und speichern Sie die letzte Größe und Position eines Fensters, bevor eine Anwendung geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-481">You can use <xref:System.Windows.Window.RestoreBounds%2A> to save the last size and location of a window before an application is closed, and retrieve those values the next time an application starts to restore a window to the way a user left it.</span></span>  
  
 <span data-ttu-id="fcb0f-482">Wenn Sie Abfragen <xref:System.Windows.Window.RestoreBounds%2A> vor das Fenster angezeigt wurde, oder nachdem es geschlossen wurde, <xref:System.Windows.Rect.Empty%2A> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-482">If you query <xref:System.Windows.Window.RestoreBounds%2A> before the window has been shown or after it has been closed, <xref:System.Windows.Rect.Empty%2A> is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-483">Diese Eigenschaft kann nicht abgerufen werden, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-483">You cannot get this property when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-484">Im folgenden Beispiel wird <xref:System.Windows.Window.RestoreBounds%2A> und isolierter Speicher, um sicherzustellen, dass die Größe und Position eines Fensters der gleiche wie beim vorherigen Mal das Fenster angezeigt wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-484">The following example uses <xref:System.Windows.Window.RestoreBounds%2A> and isolated storage to ensure the size and location of a window are the same as they were the previous time the window was shown.</span></span>  
  
 [!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml1)]  
[!code-xaml[WindowRestoreBoundsSnippets#WindowRestoreBoundsXAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml#windowrestoreboundsxaml2)]  
  
 [!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind1)]
 [!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind1)]  
[!code-csharp[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/CSharp/MainWindow.xaml.cs#windowrestoreboundscodebehind2)]
[!code-vb[WindowRestoreBoundsSnippets#WindowRestoreBoundsCODEBEHIND2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowRestoreBoundsSnippets/visualbasic/mainwindow.xaml.vb#windowrestoreboundscodebehind2)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-485">für die Berechtigung zum Abfragen der Größe und Position eines Fensters des umschließenden Rechtecks.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-485">for permission to query for the size and location of a window's bounding rectangle.</span></span> <span data-ttu-id="fcb0f-486">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-486">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.Show" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show();" />
      <MemberSignature Language="F#" Value="member this.Show : unit -&gt; unit" Usage="window.Show " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-487">Öffnet ein Fenster und wird beendet, ohne auf das Schließen des neu geöffneten Fensters zu warten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-487">Opens a window and returns without waiting for the newly opened window to close.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-488">Wenn die <xref:System.Windows.Window> Klasse instanziiert wird, es ist nicht standardmäßig angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-488">When the <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="fcb0f-489"><xref:System.Windows.Window.Show%2A> Zeigt ein Fenster, und gibt sofort zurück, ohne zu warten, für das Fenster geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-489"><xref:System.Windows.Window.Show%2A> shows a window and returns immediately, without waiting for the window to be closed.</span></span> <span data-ttu-id="fcb0f-490">Daher ist das geöffnete Fenster nicht, dass Benutzer von der Interaktion mit anderen Fenstern in der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-490">Consequently, the opened window does not prevent users from interacting with other windows in the application.</span></span> <span data-ttu-id="fcb0f-491">Diese Art von Fenster wird aufgerufen, eine *nicht modale* Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-491">This type of window is called a *modeless* window.</span></span> <span data-ttu-id="fcb0f-492">Häufige Beispiele nicht modale Fenster sind Eigenschaftenfenster, Toolboxen und Paletten.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-492">Common examples of modeless windows are properties windows, toolboxes, and palettes.</span></span> <span data-ttu-id="fcb0f-493">Um einen Benutzer interagieren mit einem bestimmten Fenster zu beschränken, muss das Fenster geöffnet werden durch Aufrufen von <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-493">To restrict a user to interacting with a specific window, the window must be opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-494">Ein Fenster, das durch Aufrufen von <xref:System.Windows.Window.Show%2A> wird nicht automatisch über eine Beziehung mit dem Fenster, die es geöffnet; insbesondere das geöffnete Fenster weiß nicht, welches Fenster, die sie geöffnet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-494">A window that is opened by calling <xref:System.Windows.Window.Show%2A> does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="fcb0f-495">Diese Beziehung kann hergestellt werden, mithilfe der <xref:System.Windows.Window.Owner%2A> -Eigenschaft und Verwenden von verwalteten der <xref:System.Windows.Window.OwnedWindows%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-495">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span>  
  
 <span data-ttu-id="fcb0f-496">Aufrufen von <xref:System.Windows.Window.Show%2A> erzielt dasselbe Endergebnis wie das Festlegen <xref:System.Windows.UIElement.Visibility%2A> Eigenschaft der <xref:System.Windows.Window> -Objekt <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-496">Calling <xref:System.Windows.Window.Show%2A> achieves the same end result as setting <xref:System.Windows.UIElement.Visibility%2A> property of the <xref:System.Windows.Window> object to <xref:System.Windows.Visibility.Visible>.</span></span> <span data-ttu-id="fcb0f-497">Allerdings besteht ein Unterschied zwischen den beiden hinsichtlich der zeitlichen Steuerung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-497">However, there is a difference between the two from a timing perspective.</span></span>  
  
 <span data-ttu-id="fcb0f-498">Aufrufen von <xref:System.Windows.Window.Show%2A> ist ein synchroner Vorgang, der erst nach zurückgibt. die <xref:System.Windows.FrameworkElement.Loaded> -Ereignis für das untergeordnete Element ausgelöst wurde:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-498">Calling <xref:System.Windows.Window.Show%2A> is a synchronous operation that returns only after the <xref:System.Windows.FrameworkElement.Loaded> event on the child window has been raised:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowSync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showsync)]
 [!code-vb[WindowShowTimingSnippets#ShowSync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showsync)]  
  
 <span data-ttu-id="fcb0f-499">Festlegen von <xref:System.Windows.UIElement.Visibility%2A>, jedoch ist ein asynchroner Vorgang, der sofort beendet:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-499">Setting <xref:System.Windows.UIElement.Visibility%2A>, however, is an asynchronous operation that returns immediately:</span></span>  
  
 [!code-csharp[WindowShowTimingSnippets#ShowASync](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowTimingSnippets/CSharp/Window1.xaml.cs#showasync)]
 [!code-vb[WindowShowTimingSnippets#ShowASync](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowTimingSnippets/visualbasic/window1.xaml.vb#showasync)]  
  
 <span data-ttu-id="fcb0f-500">Beim Festlegen <xref:System.Windows.UIElement.Visibility%2A>, alle Fensterereignisse, die Sie registrieren, bevor Sie festlegen, <xref:System.Windows.UIElement.Visibility%2A> möglicherweise nicht ausgelöst werden, erst nach der Methode, in dem Sie festlegen <xref:System.Windows.UIElement.Visibility%2A> die Ausführung abgeschlossen hat.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-500">When setting <xref:System.Windows.UIElement.Visibility%2A>, any window events you register before you set <xref:System.Windows.UIElement.Visibility%2A> may not be raised until after the method in which you set <xref:System.Windows.UIElement.Visibility%2A> has completed execution.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-501">Im folgende Beispiel veranschaulicht, wie ein nicht modales Fenster zu öffnen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-501">The following sample demonstrates how to open a modeless window.</span></span>  
  
 [!code-csharp[WindowShowSnippets#WindowShowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowSnippets/CSharp/MainWindow.xaml.cs#windowshowcode)]
 [!code-vb[WindowShowSnippets#WindowShowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowSnippets/visualbasic/mainwindow.xaml.vb#windowshowcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-502"><see cref="M:System.Windows.Window.Show" /> wird für ein Fenster aufgerufen, das geschlossen wird (<see cref="E:System.Windows.Window.Closing" />) oder geschlossen wurde (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-502"><see cref="M:System.Windows.Window.Show" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="M:System.Windows.Window.Hide" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowActivated">
      <MemberSignature Language="C#" Value="public bool ShowActivated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowActivated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowActivated" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowActivated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowActivated { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowActivated : bool with get, set" Usage="System.Windows.Window.ShowActivated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-503">Ruft einen Wert ab, der angibt, ob ein Fenster beim ersten Anzeigen aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-503">Gets or sets a value that indicates whether a window is activated when first shown.</span></span></summary>
        <value><span data-ttu-id="fcb0f-504"><see langword="true" />, wenn ein Fenster beim ersten Anzeigen aktiviert wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-504"><see langword="true" /> if a window is activated when first shown; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fcb0f-505">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-505">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-506">Wenn ein Fenster mit der <xref:System.Windows.Window.ShowActivated%2A> -Eigenschaft auf festgelegt `false` wird geöffnet, wird das Fenster nicht aktiviert und die zugehörige <xref:System.Windows.Window.Activated> Ereignis wird nicht ausgelöst, bis ein Benutzer das Fenster manuell aktiviert, indem Sie ihn auswählen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-506">When a window with its <xref:System.Windows.Window.ShowActivated%2A> property set to `false` is opened, the window is not activated and its <xref:System.Windows.Window.Activated> event is not raised until a user manually activates the window by selecting it.</span></span> <span data-ttu-id="fcb0f-507">Nachdem das Fenster aktiviert ist, aktiviert und deaktiviert die Regel.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-507">After the window is selected, it activates and deactivates normally.</span></span>  
  
 <span data-ttu-id="fcb0f-508">Um zu verhindern, dass ein Fenster aktiviert wird, wenn es geöffnet wird, die <xref:System.Windows.Window.ShowActivated%2A> Eigenschaft muss festgelegt werden, um `false` , bevor das Fenster angezeigt wird (durch Aufrufen von <xref:System.Windows.Window.Show%2A>); Einstellung <xref:System.Windows.Window.ShowActivated%2A> zu `false` nachdem ein Fenster angezeigt wird, wirkt sich nicht.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-508">To prevent a window from being activated when it opens, the <xref:System.Windows.Window.ShowActivated%2A> property must be set to `false` before the window is shown (by calling <xref:System.Windows.Window.Show%2A>); setting <xref:System.Windows.Window.ShowActivated%2A> to `false` after a window is shown has no effect.</span></span>  
  
 <span data-ttu-id="fcb0f-509">Festlegen von <xref:System.Windows.Window.ShowActivated%2A> zu `false` in einem Fenster, die durch den Aufruf modal, geöffnet wird <xref:System.Windows.Window.ShowDialog%2A>, verfügt über keine tatsächlichen Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-509">Setting <xref:System.Windows.Window.ShowActivated%2A> to `false` on a window that is opened modally, by calling <xref:System.Windows.Window.ShowDialog%2A>, has no real impact.</span></span> <span data-ttu-id="fcb0f-510">Obwohl das modale Fenster nicht aktiviert wird, wird das modale Fenster verhindert, dass den Benutzer andere Anwendungsfenster aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-510">Although the modal window will not be activated, the modal window will prevent the user from activating any other open application windows.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowActivated"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-511">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-511">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-512">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-512">Identifier field</span></span>|<xref:System.Windows.Window.ShowActivatedProperty>|  
|<span data-ttu-id="fcb0f-513">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-513">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-514">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-514">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-515">Das folgende Beispiel zeigt, wie Sie das Markup zu verwenden, um ein Fenster geöffnet werden, ohne Aktivierung zu konfigurieren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-515">The following example shows how to use markup to configure a window to be opened without being activated.</span></span>  
  
 [!code-xaml[WindowShowActivatedSnippets#ShowUnactivatedMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml#showunactivatedmarkup1)]  
  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/AWindow.xaml.cs#showunactivatedcodebehind)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/awindow.xaml.vb#showunactivatedcodebehind)]  
  
 <span data-ttu-id="fcb0f-516">Das folgende Beispiel zeigt, wie Sie Code verwenden, so konfigurieren Sie ein Fenster ohne aktivierte geöffnet werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-516">The following example shows how to use code to configure a window to be opened without it being activated.</span></span>  
  
 [!code-csharp[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowActivatedSnippets/CSharp/Window1.xaml.cs#showunactivatedwindowcode)]
 [!code-vb[WindowShowActivatedSnippets#ShowUnactivatedWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowActivatedSnippets/visualbasic/window1.xaml.vb#showunactivatedwindowcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowActivatedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowActivatedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowActivatedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowActivatedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowActivatedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowActivatedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowActivatedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowActivatedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-517">Identifiziert die <see cref="P:System.Windows.Window.ShowActivated" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-517">Identifies the <see cref="P:System.Windows.Window.ShowActivated" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowDialog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;bool&gt; ShowDialog() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Window.ShowDialog" />
      <MemberSignature Language="VB.NET" Value="Public Function ShowDialog () As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;bool&gt; ShowDialog();" />
      <MemberSignature Language="F#" Value="member this.ShowDialog : unit -&gt; Nullable&lt;bool&gt;" Usage="window.ShowDialog " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fcb0f-518">Öffnet ein Fenster und wird erst beendet, wenn das neu geöffnete Fenster geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-518">Opens a window and returns only when the newly opened window is closed.</span></span></summary>
        <returns><span data-ttu-id="fcb0f-519">Ein <see cref="T:System.Nullable`1" />-Wert vom Typ <see cref="T:System.Boolean" /> gibt an, ob die Aktivität bestätigt (<see langword="true" />) oder abgebrochen (<see langword="false" />) wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-519">A <see cref="T:System.Nullable`1" /> value of type <see cref="T:System.Boolean" /> that specifies whether the activity was accepted (<see langword="true" />) or canceled (<see langword="false" />).</span></span> <span data-ttu-id="fcb0f-520">Der Rückgabewert ist der Wert der <see cref="P:System.Windows.Window.DialogResult" />-Eigenschaft, bevor ein Fenster geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-520">The return value is the value of the <see cref="P:System.Windows.Window.DialogResult" /> property before a window closes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-521">Wenn eine <xref:System.Windows.Window> Klasse instanziiert wird, es ist nicht standardmäßig angezeigt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-521">When a <xref:System.Windows.Window> class is instantiated, it is not visible by default.</span></span> <span data-ttu-id="fcb0f-522"><xref:System.Windows.Window.ShowDialog%2A> Zeigt das Fenster deaktiviert alle anderen Fenster in der Anwendung und gibt nur, wenn das Fenster geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-522"><xref:System.Windows.Window.ShowDialog%2A> shows the window, disables all other windows in the application, and returns only when the window is closed.</span></span> <span data-ttu-id="fcb0f-523">Diese Art von Fenster wird als bezeichnet ein *modale* Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-523">This type of window is known as a *modal* window.</span></span>  
  
 <span data-ttu-id="fcb0f-524">Modale Fenster werden in erster Linie als Dialogfelder verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-524">Modal windows are primarily used as dialog boxes.</span></span> <span data-ttu-id="fcb0f-525">Ein Dialogfeld, das ist eine besondere Art von Fenster, die Anwendungen, die für die Interaktion mit Benutzern die Ausführung von Aufgaben wie das Öffnen von Dateien oder Drucken von Dokumenten verwenden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-525">A dialog box is a special type of window that applications use to interact with users to complete tasks, such as opening files or printing documents.</span></span> <span data-ttu-id="fcb0f-526">Dialogfelder ermöglichen im Allgemeinen Benutzer zum annehmen oder Abbrechen der Aufgabe, die für die sie angezeigt wurden, bevor Sie das Dialogfeld geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-526">Dialog boxes commonly allow users to accept or cancel the task for which they were shown before the dialog box is closed.</span></span> <span data-ttu-id="fcb0f-527"><xref:System.Windows.Window.ShowDialog%2A> Gibt eine <xref:System.Nullable%601> <xref:System.Boolean> Wert, der angibt, ob die Aktivität bestätigt oder abgebrochen wurde.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-527"><xref:System.Windows.Window.ShowDialog%2A> returns a <xref:System.Nullable%601><xref:System.Boolean> value that specifies whether the activity was accepted or canceled.</span></span> <span data-ttu-id="fcb0f-528">Der Rückgabewert ist der Wert der <xref:System.Windows.Window.DialogResult%2A>-Eigenschaft, bevor ein Fenster geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-528">The return value is the value of the <xref:System.Windows.Window.DialogResult%2A> property before a window closes.</span></span> <span data-ttu-id="fcb0f-529">Weitere Informationen finden Sie unter <xref:System.Windows.Window.DialogResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-529">For more information, see <xref:System.Windows.Window.DialogResult%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-530">Ein Fenster, das durch den Aufruf geöffnet wird die <xref:System.Windows.Window.ShowDialog%2A> Methode muss nicht automatisch eine Beziehung mit dem Fenster, die es geöffnet; insbesondere das geöffnete Fenster weiß nicht, welches Fenster, die sie geöffnet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-530">A window that is opened by calling the <xref:System.Windows.Window.ShowDialog%2A> method does not automatically have a relationship with the window that opened it; specifically, the opened window does not know which window opened it.</span></span> <span data-ttu-id="fcb0f-531">Diese Beziehung kann hergestellt werden, mithilfe der <xref:System.Windows.Window.Owner%2A> -Eigenschaft und Verwenden von verwalteten der <xref:System.Windows.Window.OwnedWindows%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-531">This relationship can be established using the <xref:System.Windows.Window.Owner%2A> property and managed using the <xref:System.Windows.Window.OwnedWindows%2A> property.</span></span> <span data-ttu-id="fcb0f-532">Zur Unterstützung [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] Automation (finden Sie unter [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> muss festgelegt werden, für ein Fenster durch Aufrufen von <xref:System.Windows.Window.ShowDialog%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-532">To support [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] automation (see [UI Automation Overview](~/docs/framework/ui-automation/ui-automation-overview.md)), <xref:System.Windows.Window.Owner%2A> must be set for a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-533">Wenn eine modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Fenster (ein Fenster geöffnet wird, durch den Aufruf <xref:System.Windows.Window.ShowDialog%2A>) geschlossen ist, das zuvor aktivierte Fenster erneut aktiviert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-533">When a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window (a window opened by calling <xref:System.Windows.Window.ShowDialog%2A>) is closed, the previously activated window is reactivated.</span></span> <span data-ttu-id="fcb0f-534">Wenn ein modales [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Fenster verfügt über eine besitzende Fenster (finden Sie unter <xref:System.Windows.Window.Owner%2A>), das besitzende Fenster ist nicht erneut aktiviert, wenn der modale [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Fenster wird geschlossen, es sei denn, das zuvor aktivierte Fenster war.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-534">If a modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window has an owner window (see <xref:System.Windows.Window.Owner%2A>), the owner window is not reactivated when the modal [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] window is closed unless it was the previously activated window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-535">Diese Methode werden nicht aufgerufen, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-535">This method cannot be called when a window is hosted in a browser.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-536">Im folgende Beispiel wird veranschaulicht, wie ein modales Fenster geöffnet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-536">The following sample demonstrates how to open a modal window.</span></span>  
  
 [!code-csharp[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/WindowShowDialogSnippets/CSharp/MainWindow.xaml.cs#windowshowdialogcode)]
 [!code-vb[WindowShowDialogSnippets#WindowShowDialogCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WindowShowDialogSnippets/visualbasic/mainwindow.xaml.vb#windowshowdialogcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="fcb0f-537"><see cref="M:System.Windows.Window.ShowDialog" /> wird für ein Fenster aufgerufen, das geschlossen wird (<see cref="E:System.Windows.Window.Closing" />) oder geschlossen wurde (<see cref="E:System.Windows.Window.Closed" />).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-537"><see cref="M:System.Windows.Window.ShowDialog" /> is called on a window that is closing (<see cref="E:System.Windows.Window.Closing" />) or has been closed (<see cref="E:System.Windows.Window.Closed" />).</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="fcb0f-538">für die Berechtigung, um ein Fenster zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-538">for permission to activate a window.</span></span> <span data-ttu-id="fcb0f-539">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span><span class="sxs-lookup"><span data-stu-id="fcb0f-539">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span></span></permission>
        <altmember cref="M:System.Windows.Window.Close" />
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbar">
      <MemberSignature Language="C#" Value="public bool ShowInTaskbar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowInTaskbar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.ShowInTaskbar" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowInTaskbar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowInTaskbar { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowInTaskbar : bool with get, set" Usage="System.Windows.Window.ShowInTaskbar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-540">Ruft einen Wert ab, der angibt, ob das Fenster über eine Taskleistenschaltfläche verfügt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-540">Gets or sets a value that indicates whether the window has a task bar button.</span></span></summary>
        <value><span data-ttu-id="fcb0f-541"><see langword="true" />, wenn das Fenster über eine Taskleistenschaltfläche verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-541"><see langword="true" /> if the window has a task bar button; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="fcb0f-542">Wird nicht angewendet, wenn das Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-542">Does not apply when the window is hosted in a browser.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-543">Wenn <xref:System.Windows.Window.ShowInTaskbar%2A> nastaven NA hodnotu `true`, das Fenster wird auch angezeigt, in der Auswahlliste der ALT + TAB-Anwendung.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-543">If <xref:System.Windows.Window.ShowInTaskbar%2A> is set to `true`, the window will also appear in the ALT+TAB application selection list.</span></span>  
  
 <span data-ttu-id="fcb0f-544">Das Symbol, das für die Taskleisten-Schaltfläche und der Auswahlliste der ALT + TAB-Anwendung verwendet wird, ist der Wert des der <xref:System.Windows.Window.Icon%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-544">The icon that is used for both the task bar button and the ALT+TAB application selection list is the value of the <xref:System.Windows.Window.Icon%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-545">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-545">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowShowInTaskbar"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-546">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-546">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-547">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-547">Identifier field</span></span>|<xref:System.Windows.Window.ShowInTaskbarProperty>|  
|<span data-ttu-id="fcb0f-548">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-548">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-549">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-549">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowInTaskbarProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ShowInTaskbarProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ShowInTaskbarProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.ShowInTaskbarProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ShowInTaskbarProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ShowInTaskbarProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ShowInTaskbarProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.ShowInTaskbarProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-550">Identifiziert die <see cref="P:System.Windows.Window.ShowInTaskbar" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-550">Identifies the <see cref="P:System.Windows.Window.ShowInTaskbar" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeToContent">
      <MemberSignature Language="C#" Value="public System.Windows.SizeToContent SizeToContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.SizeToContent SizeToContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.SizeToContent" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeToContent As SizeToContent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SizeToContent SizeToContent { System::Windows::SizeToContent get(); void set(System::Windows::SizeToContent value); };" />
      <MemberSignature Language="F#" Value="member this.SizeToContent : System.Windows.SizeToContent with get, set" Usage="System.Windows.Window.SizeToContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeToContent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-551">Ruft einen Wert ab (bzw. legt diesen fest), der angibt, ob ein Fenster seine Größe automatisch an die Größe seines Inhalts anpasst.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-551">Gets or sets a value that indicates whether a window will automatically size itself to fit the size of its content.</span></span></summary>
        <value><span data-ttu-id="fcb0f-552">Ein <see cref="T:System.Windows.SizeToContent" />-Wert.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-552">A <see cref="T:System.Windows.SizeToContent" /> value.</span></span> <span data-ttu-id="fcb0f-553">Die Standardeinstellung ist <see cref="F:System.Windows.SizeToContent.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-553">The default is <see cref="F:System.Windows.SizeToContent.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-554">Wenn <xref:System.Windows.Window.SizeToContent%2A> nastaven NA hodnotu <xref:System.Windows.SizeToContent.WidthAndHeight>, Einstellung <xref:System.Windows.FrameworkElement.Height%2A> oder <xref:System.Windows.FrameworkElement.Width%2A> hat keine Auswirkungen; beide Eigenschaften können festgelegt werden, aber die Werte werden festgelegt, mit nicht auf das Fenster angewendet.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-554">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.WidthAndHeight>, setting either <xref:System.Windows.FrameworkElement.Height%2A> or <xref:System.Windows.FrameworkElement.Width%2A> has no effect; both properties can be set, but the values they are set with are not applied to the window.</span></span>  
  
 <span data-ttu-id="fcb0f-555">Wenn <xref:System.Windows.Window.SizeToContent%2A> nastaven NA hodnotu <xref:System.Windows.SizeToContent.Height>, wobei <xref:System.Windows.FrameworkElement.Height%2A> ändert sich nicht auf die Höhe des Fensters.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-555">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Height>, setting <xref:System.Windows.FrameworkElement.Height%2A> does not change the height of the window.</span></span>  
  
 <span data-ttu-id="fcb0f-556">Wenn <xref:System.Windows.Window.SizeToContent%2A> nastaven NA hodnotu <xref:System.Windows.SizeToContent.Width>, wobei <xref:System.Windows.FrameworkElement.Width%2A> ändert sich nicht auf die Breite des Fensters.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-556">When <xref:System.Windows.Window.SizeToContent%2A> is set to <xref:System.Windows.SizeToContent.Width>, setting <xref:System.Windows.FrameworkElement.Width%2A> does not change the width of the window.</span></span>  
  
 <span data-ttu-id="fcb0f-557">Wenn <xref:System.Windows.Window.SizeToContent%2A> verfügt über einen Wert als <xref:System.Windows.SizeToContent.Manual>:</span><span class="sxs-lookup"><span data-stu-id="fcb0f-557">If <xref:System.Windows.Window.SizeToContent%2A> has a value other than <xref:System.Windows.SizeToContent.Manual>:</span></span>  
  
-   <span data-ttu-id="fcb0f-558"><xref:System.Windows.Window.SizeToContent%2A> wird automatisch festgelegt, um <xref:System.Windows.SizeToContent.Manual> , wenn ein Benutzer die Fenstergröße wird durch den Ziehpunkt zur Größenänderung oder Ziehen des Rahmens.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-558"><xref:System.Windows.Window.SizeToContent%2A> is automatically set to <xref:System.Windows.SizeToContent.Manual> if a user resizes the window by using the resize grip or dragging the border.</span></span>  
  
-   <span data-ttu-id="fcb0f-559">Wenn die Größe des Inhalts auf eine Weise ändert, die bewirkt, dass das Fenster selbst, Ändern der Größe <xref:System.Windows.FrameworkElement.SizeChanged> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-559">If the size of the content changes in a way that causes the window to resize itself, <xref:System.Windows.FrameworkElement.SizeChanged> is raised.</span></span>  
  
 <span data-ttu-id="fcb0f-560">Wenn ein Fenster transparent ist (finden Sie unter <xref:System.Windows.Window.AllowsTransparency%2A>), sollten Sie die Einstellung <xref:System.Windows.Window.SizeToContent%2A> zu <xref:System.Windows.SizeToContent.WidthAndHeight> um sicherzustellen, dass das Fenster ist nicht größer als die sichtbaren Inhalts.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-560">If a window is transparent (see <xref:System.Windows.Window.AllowsTransparency%2A>), you should consider setting <xref:System.Windows.Window.SizeToContent%2A> to <xref:System.Windows.SizeToContent.WidthAndHeight> to ensure the window is no larger than its visible content.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-561">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-561">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowSizeToContent"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-562">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-562">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-563">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-563">Identifier field</span></span>|<xref:System.Windows.Window.SizeToContentProperty>|  
|<span data-ttu-id="fcb0f-564">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-564">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-565">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-565">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="fcb0f-566">Im folgende Beispiel veranschaulicht die legen Sie die <xref:System.Windows.Window.SizeToContent%2A> Eigenschaft im Code, um anzugeben, wie die Fenstergröße um seinen Inhalt anzupassen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-566">The following example shows how to set the <xref:System.Windows.Window.SizeToContent%2A> property in code to specify how a window resizes to fit its content.</span></span>  
  
 [!code-csharp[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/CSharp/MainWindow.xaml.cs#setwindowsizetocontentpropertycode)]
 [!code-vb[HOWTOWindowManagementSnippets#SetWindowSizeToContentPropertyCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HOWTOWindowManagementSnippets/visualbasic/mainwindow.xaml.vb#setwindowsizetocontentpropertycode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Window.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="P:System.Windows.Window.ResizeMode" />
      </Docs>
    </Member>
    <Member MemberName="SizeToContentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SizeToContentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SizeToContentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.SizeToContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeToContentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SizeToContentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeToContentProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.SizeToContentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-567">Identifiziert die <see cref="P:System.Windows.Window.SizeToContent" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-567">Identifies the <see cref="P:System.Windows.Window.SizeToContent" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceInitialized">
      <MemberSignature Language="C#" Value="public event EventHandler SourceInitialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SourceInitialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.SourceInitialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceInitialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SourceInitialized;" />
      <MemberSignature Language="F#" Value="member this.SourceInitialized : EventHandler " Usage="member this.SourceInitialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-568">Dieses Ereignis wird ausgelöst, um die Interoperation mit [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-568">This event is raised to support interoperation with [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)].</span></span> <span data-ttu-id="fcb0f-569">Siehe <see cref="T:System.Windows.Interop.HwndSource" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-569">See <see cref="T:System.Windows.Interop.HwndSource" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler StateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler StateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Window.StateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StateChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ StateChanged;" />
      <MemberSignature Language="F#" Value="member this.StateChanged : EventHandler " Usage="member this.StateChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-570">Tritt ein, wenn die <see cref="P:System.Windows.Window.WindowState" />-Eigenschaft des Fensters geändert wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-570">Occurs when the window's <see cref="P:System.Windows.Window.WindowState" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Window.WindowState" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfo">
      <MemberSignature Language="C#" Value="public System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Shell.TaskbarItemInfo TaskbarItemInfo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.TaskbarItemInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property TaskbarItemInfo As TaskbarItemInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Shell::TaskbarItemInfo ^ TaskbarItemInfo { System::Windows::Shell::TaskbarItemInfo ^ get(); void set(System::Windows::Shell::TaskbarItemInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TaskbarItemInfo : System.Windows.Shell.TaskbarItemInfo with get, set" Usage="System.Windows.Window.TaskbarItemInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Shell.TaskbarItemInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-571">Ruft die [!INCLUDE[win7](~/includes/win7-md.md)]-Taskleistenminiaturansicht für <see cref="T:System.Windows.Window" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-571">Gets or sets the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></summary>
        <value><span data-ttu-id="fcb0f-572">Die [!INCLUDE[win7](~/includes/win7-md.md)]-Taskleistenminiaturansicht für <see cref="T:System.Windows.Window" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-572">The [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail for the <see cref="T:System.Windows.Window" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-573">Weitere Informationen zur Verwendung der [!INCLUDE[win7](~/includes/win7-md.md)] Taskleiste Miniaturansichten, finden Sie unter den <xref:System.Windows.Shell.TaskbarItemInfo> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-573">For more information about how to use the [!INCLUDE[win7](~/includes/win7-md.md)] taskbar thumbnail, see the <xref:System.Windows.Shell.TaskbarItemInfo> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="N:System.Windows.Shell" />
      </Docs>
    </Member>
    <Member MemberName="TaskbarItemInfoProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TaskbarItemInfoProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TaskbarItemInfoProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TaskbarItemInfoProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TaskbarItemInfoProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TaskbarItemInfoProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TaskbarItemInfoProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-574">Identifiziert die <see cref="P:System.Windows.Window.TaskbarItemInfo" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-574">Identifies the <see cref="P:System.Windows.Window.TaskbarItemInfo" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Window.Title" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IWindowService.Title</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Title)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-575">Ruft den Titel eines Fensters ab bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-575">Gets or sets a window's title.</span></span></summary>
        <value><span data-ttu-id="fcb0f-576">Ein <see cref="T:System.String" />, der den Titel des Fensters enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-576">A <see cref="T:System.String" /> that contains the window's title.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-577">Der Titel des eine <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, oder [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], kann auch festgelegt werden, mithilfe von <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-577">The title of a <xref:System.Windows.Window>, <xref:System.Windows.Navigation.NavigationWindow>, or [!INCLUDE[TLA#tla_iegeneric](~/includes/tlasharptla-iegeneric-md.md)], can also be set by using <xref:System.Windows.Controls.Page.WindowTitle%2A?displayProperty=nameWithType>.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTitle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-578">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-578">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-579">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-579">Identifier field</span></span>|<xref:System.Windows.Window.TitleProperty>|  
|<span data-ttu-id="fcb0f-580">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-580">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-581">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-581">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TitleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TitleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TitleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TitleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TitleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TitleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-582">Identifiziert die <see cref="P:System.Windows.Window.Title" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-582">Identifies the <see cref="P:System.Windows.Window.Title" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public double Top { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Top" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Top" />
      <MemberSignature Language="VB.NET" Value="Public Property Top As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Top { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Top : double with get, set" Usage="System.Windows.Window.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.LengthConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-583">Ruft die Position des oberen Fensterrands im Verhältnis zum Desktop ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-583">Gets or sets the position of the window's top edge, in relation to the desktop.</span></span></summary>
        <value><span data-ttu-id="fcb0f-584">Die Position des oberen Fensterrands in logischen Einheiten (1/96 ").</span><span class="sxs-lookup"><span data-stu-id="fcb0f-584">The position of the window's top, in logical units (1/96").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-585">Wenn die <xref:System.Windows.Window> maximiert oder minimiert, dieser Wert darstellt, zeigen Sie der obere Rand der Wiederherstellung für, die <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-585">When the <xref:System.Windows.Window> is maximized or minimized, this value represents the top edge of the restore point for the <xref:System.Windows.Window>.</span></span>  
  
 <span data-ttu-id="fcb0f-586">Diese Eigenschaft kann nicht über einen Stil festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-586">This property cannot be set through a style.</span></span>  
  
 <span data-ttu-id="fcb0f-587">Wenn Sie einen Wert nicht angeben <xref:System.Windows.Window.Top%2A> auf den Standardwert des Systems festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-587">If you do not specify a value, <xref:System.Windows.Window.Top%2A> is set to the system default value.</span></span> <span data-ttu-id="fcb0f-588">Sie können auch den standardmäßigen Systemwert angeben, durch Festlegen von <xref:System.Windows.Window.Top%2A> zu <xref:System.Double.NaN>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-588">You can also specify the system default value by setting <xref:System.Windows.Window.Top%2A> to <xref:System.Double.NaN>.</span></span> <span data-ttu-id="fcb0f-589">Weder <xref:System.Double.NegativeInfinity> noch <xref:System.Double.PositiveInfinity> ist ein gültiger Wert für <xref:System.Windows.Window.Top%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-589">Neither <xref:System.Double.NegativeInfinity> nor <xref:System.Double.PositiveInfinity> is a valid value for <xref:System.Windows.Window.Top%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-590">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-590">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-591">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-591">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-592">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-592">Identifier field</span></span>|<xref:System.Windows.Window.TopProperty>|  
|<span data-ttu-id="fcb0f-593">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-593">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-594">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-594">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.Left" />
      </Docs>
    </Member>
    <Member MemberName="Topmost">
      <MemberSignature Language="C#" Value="public bool Topmost { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Topmost" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.Topmost" />
      <MemberSignature Language="VB.NET" Value="Public Property Topmost As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Topmost { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Topmost : bool with get, set" Usage="System.Windows.Window.Topmost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-595">Ruft einen Wert ab, der angibt, ob ein Fenster in der z-Reihenfolge zuoberst angezeigt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-595">Gets or sets a value that indicates whether a window appears in the topmost z-order.</span></span></summary>
        <value><span data-ttu-id="fcb0f-596"><see langword="true" />, wenn es sich um das oberste Fenster handelt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-596"><see langword="true" /> if the window is topmost; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-597">Ein Fenster, dessen <xref:System.Windows.Window.Topmost%2A> -Eigenschaftensatz auf `true` wird über alle Fenster, dessen <xref:System.Windows.Window.Topmost%2A> Eigenschaften festgelegt werden, um `false`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-597">A window whose <xref:System.Windows.Window.Topmost%2A> property is set to `true` appears above all windows whose <xref:System.Windows.Window.Topmost%2A> properties are set to `false`.</span></span>  
  
 <span data-ttu-id="fcb0f-598">In der Gruppe von Windows, die <xref:System.Windows.Window.Topmost%2A> -Eigenschaftensatz auf `true`, das Fenster, das derzeit aktiviert ist, ist das oberste Fenster.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-598">In the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `true`, the window that is currently activated is the topmost window.</span></span> <span data-ttu-id="fcb0f-599">Dasselbe gilt für die Gruppe von Windows, die <xref:System.Windows.Window.Topmost%2A> -Eigenschaftensatz auf `false`.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-599">Likewise for the group of windows that have <xref:System.Windows.Window.Topmost%2A> property is set to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-600">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-600">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowTopmost"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-601">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-602">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-602">Identifier field</span></span>|<xref:System.Windows.Window.TopmostProperty>|  
|<span data-ttu-id="fcb0f-603">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-603">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-604">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Window.Activated" />
        <altmember cref="E:System.Windows.Window.Deactivated" />
      </Docs>
    </Member>
    <Member MemberName="TopmostProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopmostProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopmostProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopmostProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopmostProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopmostProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopmostProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopmostProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-605">Identifiziert die <see cref="P:System.Windows.Window.Topmost" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-605">Identifies the <see cref="P:System.Windows.Window.Topmost" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TopProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TopProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TopProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.TopProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TopProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TopProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TopProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.TopProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-606">Identifiziert die <see cref="P:System.Windows.Window.Top" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-606">Identifies the <see cref="P:System.Windows.Window.Top" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStartupLocation">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStartupLocation WindowStartupLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStartupLocation WindowStartupLocation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStartupLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStartupLocation As WindowStartupLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStartupLocation WindowStartupLocation { System::Windows::WindowStartupLocation get(); void set(System::Windows::WindowStartupLocation value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStartupLocation : System.Windows.WindowStartupLocation with get, set" Usage="System.Windows.Window.WindowStartupLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStartupLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-607">Ruft die Position des Fensters beim ersten Anzeigen ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-607">Gets or sets the position of the window when first shown.</span></span></summary>
        <value><span data-ttu-id="fcb0f-608">Ein <see cref="T:System.Windows.WindowStartupLocation" />-Wert, der die Position links oben für ein Fenster beim ersten Anzeigen angibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-608">A <see cref="T:System.Windows.WindowStartupLocation" /> value that specifies the top/left position of a window when first shown.</span></span> <span data-ttu-id="fcb0f-609">Die Standardeinstellung ist <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-609">The default is <see cref="F:System.Windows.WindowStartupLocation.Manual" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-610">Festlegen der `WindowStartupLocation` Eigenschaft <xref:System.Windows.WindowStartupLocation.Manual> bewirkt, dass ein Fenster entsprechend positioniert werden die <xref:System.Windows.Window.Left%2A> und <xref:System.Windows.Window.Top%2A> Eigenschaftswerte.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-610">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.Manual> causes a window to be positioned according to its <xref:System.Windows.Window.Left%2A> and <xref:System.Windows.Window.Top%2A> property values.</span></span> <span data-ttu-id="fcb0f-611">Wenn entweder die <xref:System.Windows.Window.Left%2A> oder <xref:System.Windows.Window.Top%2A> Eigenschaften nicht angegeben werden, deren Werte werden durch Windows bestimmt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-611">If either the <xref:System.Windows.Window.Left%2A> or <xref:System.Windows.Window.Top%2A> properties aren't specified, their values are determined by Windows.</span></span>  
  
 <span data-ttu-id="fcb0f-612">Festlegen der `WindowStartupLocation` Eigenschaft <xref:System.Windows.WindowStartupLocation.CenterScreen> wird ein Fenster in der Mitte des Bildschirms positioniert werden, die den Cursor enthält.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-612">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterScreen> causes a window to be positioned in the center of the screen that contains the mouse cursor.</span></span>  
  
 <span data-ttu-id="fcb0f-613">Festlegen der `WindowStartupLocation` Eigenschaft <xref:System.Windows.WindowStartupLocation.CenterOwner> bewirkt, dass ein Fenster in der Mitte des Besitzerfensters positioniert werden soll (finden Sie unter <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>) angegeben.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-613">Setting the `WindowStartupLocation` property to <xref:System.Windows.WindowStartupLocation.CenterOwner> causes a window to be positioned in the center of its owner window (see <xref:System.Windows.Window.Owner%2A?displayProperty=nameWithType>), if specified.</span></span> <span data-ttu-id="fcb0f-614">Das besitzende Fenster kann entweder eine andere WPF-Fenster oder ein nicht-WPF-Fenster sein.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-614">The owner window can be either another WPF window or a non-WPF window.</span></span>

> [!NOTE]   
>  <span data-ttu-id="fcb0f-615">Weitere Informationen zu WPF-Fenster mit nicht-WPF-Fenstern, finden Sie unter [WPF und Win32-Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) und <xref:System.Windows.Interop.WindowInteropHelper>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-615">For more information about WPF windows with non-WPF windows, see [WPF and Win32 Interoperation](~/docs/framework/wpf/advanced/wpf-and-win32-interoperation.md) and <xref:System.Windows.Interop.WindowInteropHelper>.</span></span> 

 <span data-ttu-id="fcb0f-616">Wenn ein Fenster "Besitzer" nicht angegeben ist, richtet sich die Position des Fensters auf die gleiche Weise wie die `WindowStartupLocation` -Eigenschaftensatz auf <xref:System.Windows.WindowStartupLocation.Manual>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-616">If an owner window is not specified, the position of the window is determined in the same way as if the `WindowStartupLocation` property is set to <xref:System.Windows.WindowStartupLocation.Manual>.</span></span>

> [!NOTE]
>  <span data-ttu-id="fcb0f-617">Sie können nicht festgelegt, oder rufen Sie den Wert dieser Eigenschaft ein, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-617">You cannot set or get the value of this property when a window is hosted in a browser.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowState">
      <MemberSignature Language="C#" Value="public System.Windows.WindowState WindowState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowState WindowState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowState" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowState As WindowState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowState WindowState { System::Windows::WindowState get(); void set(System::Windows::WindowState value); };" />
      <MemberSignature Language="F#" Value="member this.WindowState : System.Windows.WindowState with get, set" Usage="System.Windows.Window.WindowState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-618">Ruft einen Wert ab, der angibt, ob ein Fenster wiederhergestellt, minimiert oder maximiert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-618">Gets or sets a value that indicates whether a window is restored, minimized, or maximized.</span></span></summary>
        <value><span data-ttu-id="fcb0f-619">Ein <see cref="T:System.Windows.WindowState" />, der bestimmt, ob ein Fenster wiederhergestellt, minimiert oder maximiert ist.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-619">A <see cref="T:System.Windows.WindowState" /> that determines whether a window is restored, minimized, or maximized.</span></span> <span data-ttu-id="fcb0f-620">Der Standardwert ist <see cref="F:System.Windows.WindowState.Normal" /> (wiederhergestellt).</span><span class="sxs-lookup"><span data-stu-id="fcb0f-620">The default is <see cref="F:System.Windows.WindowState.Normal" /> (restored).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-621">Bevor ein Fenster minimiert oder maximiert wird, die die Größe und Position werden in gespeichert <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-621">Before a window is minimized or maximized, its size and location are stored in <xref:System.Windows.Window.RestoreBounds%2A>.</span></span> <span data-ttu-id="fcb0f-622">Wenn ein Fenster später wiederhergestellt wird, werden die Werte für Größe und Position mit den Werten aus wiederhergestellt <xref:System.Windows.Window.RestoreBounds%2A>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-622">When a window is subsequently restored, its size and location values are restored with the values from <xref:System.Windows.Window.RestoreBounds%2A>.</span></span>  
  
 <span data-ttu-id="fcb0f-623">Wenn die <xref:System.Windows.Window.WindowState%2A> -Eigenschaft geändert wird, <xref:System.Windows.Window.StateChanged> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-623">When the <xref:System.Windows.Window.WindowState%2A> property is changed, <xref:System.Windows.Window.StateChanged> is raised.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-624">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-624">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowState"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-625">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-625">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-626">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-626">Identifier field</span></span>|<xref:System.Windows.Window.WindowStateProperty>|  
|<span data-ttu-id="fcb0f-627">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-627">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Window.RestoreBounds" />
      </Docs>
    </Member>
    <Member MemberName="WindowStateProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStateProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStateProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStateProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStateProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStateProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStateProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStateProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-628">Identifiziert die <see cref="P:System.Windows.Window.WindowState" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-628">Identifies the <see cref="P:System.Windows.Window.WindowState" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyle">
      <MemberSignature Language="C#" Value="public System.Windows.WindowStyle WindowStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WindowStyle WindowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Window.WindowStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property WindowStyle As WindowStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WindowStyle WindowStyle { System::Windows::WindowStyle get(); void set(System::Windows::WindowStyle value); };" />
      <MemberSignature Language="F#" Value="member this.WindowStyle : System.Windows.WindowStyle with get, set" Usage="System.Windows.Window.WindowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WindowStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-629">Ruft die Rahmenart eines Fensters ab bzw. legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-629">Gets or sets a window's border style.</span></span></summary>
        <value><span data-ttu-id="fcb0f-630">Ein <see cref="T:System.Windows.WindowStyle" />, der die Rahmenart eines Fensters angibt.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-630">A <see cref="T:System.Windows.WindowStyle" /> that specifies a window's border style.</span></span> <span data-ttu-id="fcb0f-631">Die Standardeinstellung ist <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-631">The default is <see cref="F:System.Windows.WindowStyle.SingleBorderWindow" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fcb0f-632"><xref:System.Windows.Window.WindowStyle%2A> kann die <xref:System.Windows.WindowStyle> -Enumerationswerte fest, einschließlich <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (Standard), und <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-632"><xref:System.Windows.Window.WindowStyle%2A> can be one of the <xref:System.Windows.WindowStyle> enumeration values, including <xref:System.Windows.WindowStyle.None>, <xref:System.Windows.WindowStyle.ToolWindow>, <xref:System.Windows.WindowStyle.SingleBorderWindow> (default), and <xref:System.Windows.WindowStyle.ThreeDBorderWindow>.</span></span>  
  
 <span data-ttu-id="fcb0f-633">Die folgende Abbildung zeigt das Window-Stile auf [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero-Design, mit aktiviertem transparenten Glaseffekt):</span><span class="sxs-lookup"><span data-stu-id="fcb0f-633">The following figure shows the window styles on [!INCLUDE[TLA#tla_longhorn](~/includes/tlasharptla-longhorn-md.md)] (Windows Vista Aero theme, with transparent glass enabled):</span></span>  
  
 <span data-ttu-id="fcb0f-634">![Window-Stile](~/add/media/windowoverviewfigure6.PNG "Window-Stile")</span><span class="sxs-lookup"><span data-stu-id="fcb0f-634">![Window styles](~/add/media/windowoverviewfigure6.PNG "Window styles")</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fcb0f-635">Sie können nicht festgelegt oder diese Eigenschaft zu erhalten, wenn ein Fenster in einem Browser gehostet wird.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-635">You cannot set or get this property when a window is hosted in a browser.</span></span>  
  
<a name="dependencyPropertyInfo_WindowWindowStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="fcb0f-636">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="fcb0f-636">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="fcb0f-637">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="fcb0f-637">Identifier field</span></span>|<xref:System.Windows.Window.WindowStyleProperty>|  
|<span data-ttu-id="fcb0f-638">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="fcb0f-638">Metadata properties set to `true`</span></span>|<span data-ttu-id="fcb0f-639">None</span><span class="sxs-lookup"><span data-stu-id="fcb0f-639">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WindowStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WindowStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Window.WindowStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WindowStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WindowStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WindowStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Window.WindowStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fcb0f-640">Identifiziert die <see cref="P:System.Windows.Window.WindowStyle" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="fcb0f-640">Identifies the <see cref="P:System.Windows.Window.WindowStyle" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>