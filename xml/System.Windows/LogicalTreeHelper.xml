<Type Name="LogicalTreeHelper" FullName="System.Windows.LogicalTreeHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b687beab6de52a0f10dd5f6c73d526bc11521043" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64185404" /></Metadata><TypeSignature Language="C#" Value="public static class LogicalTreeHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit LogicalTreeHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.LogicalTreeHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class LogicalTreeHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class LogicalTreeHelper abstract sealed" />
  <TypeSignature Language="F#" Value="type LogicalTreeHelper = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="84f8d-101">Stellt statische Hilfsmethoden zum Abfragen von Objekten in der logischen Struktur bereit.</span><span class="sxs-lookup"><span data-stu-id="84f8d-101">Provides static helper methods for querying objects in the logical tree.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f8d-102">Die <xref:System.Windows.LogicalTreeHelper> -Klasse bietet Methoden, die untergeordneten Auflistungen von Objekten zurückgeben können, oder spezifische Objekte aus, in der Unterknoten der logischen Struktur.</span><span class="sxs-lookup"><span data-stu-id="84f8d-102">The <xref:System.Windows.LogicalTreeHelper> class provides methods that you can use to return child collections of objects, or specific objects from within subnodes of the logical tree.</span></span> <span data-ttu-id="84f8d-103">Jedoch die meisten Objekt Struktur Vorgänge, die Sie normalerweise ausführen, werden ebenfalls verfügbar gemacht durch ähnliche Methoden oder Eigenschaften auf <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="84f8d-103">However, most of the object tree operations that you typically perform are also exposed by similar methods or properties on <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span> <span data-ttu-id="84f8d-104">Versuchen Sie beispielsweise Folgendes ein:</span><span class="sxs-lookup"><span data-stu-id="84f8d-104">For example, try the following:</span></span>  
  
-   <span data-ttu-id="84f8d-105">Anstelle von Aufrufen der statischen <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> -Methode, die einen Enumerator für die logischen untergeordneten Objekte zurückgibt, verwenden Sie die dedizierte Sammlung, die in das Inhaltsmodell für dieses Objekt verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="84f8d-105">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.GetChildren%2A> method, which returns an enumerator for the logical child objects, use the dedicated collection exposed in the content model for that object.</span></span> <span data-ttu-id="84f8d-106">Fast alle Objekte, die einem Inhaltsmodell zu unterstützen verfügbar machen, eine Eigenschaft, die enthält die Auflistung der untergeordneten Objekte und Unterstützung der Schnittstelle direkt für diese Auflistung bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="84f8d-106">Nearly all objects that support a content model expose some property that contains the collection of child objects, and provides collection interface support directly on that collection.</span></span>  
  
-   <span data-ttu-id="84f8d-107">Anstelle von Aufrufen der statischen <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> Methode, um ein untergeordnetes Objekt abzurufen, durch Angeben des Namens, den Aufruf der <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> oder <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> Methode für bestimmte Objekte.</span><span class="sxs-lookup"><span data-stu-id="84f8d-107">Instead of calling the static <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> method to obtain a child object by specifying its name, call the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> method on specific objects.</span></span>  
  
 <span data-ttu-id="84f8d-108"><xref:System.Windows.LogicalTreeHelper> eignet sich am besten für Szenarios, in denen Sie unterwegs sind, nach oben oder unten die logische Struktur rekursiv über mehrere Ebenen und einen einheitlichen Ansatz für das Analysieren der unterschiedlichen über- oder untergeordneten Elemente verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-108"><xref:System.Windows.LogicalTreeHelper> is most useful for analysis scenarios where you are traveling up or down the logical tree recursively through multiple levels, and want to use a consistent approach for examining the various parent or child objects.</span></span> <span data-ttu-id="84f8d-109">In diesem Fall werden Sie möglicherweise eine Mischung von Inhaltsmodelle Zugriff auf, und verwenden die weitere Inhaltsmodell spezifische APIs wäre zu komplex.</span><span class="sxs-lookup"><span data-stu-id="84f8d-109">In this case, you might be accessing a mixture of content models, and using the more content-model specific APIs would be too complex.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public static void BringIntoView (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void BringIntoView(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub BringIntoView (current As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void BringIntoView(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member BringIntoView : System.Windows.DependencyObject -&gt; unit" Usage="System.Windows.LogicalTreeHelper.BringIntoView current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="84f8d-110">Das Benutzeroberflächenelement, das angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-110">The UI element to bring into view.</span></span></param>
        <summary><span data-ttu-id="84f8d-111">Versucht, das angeforderte Benutzeroberflächenelement anzuzeigen, und löst das <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />-Ereignis für das Ziel aus, um die Ergebnisse zu melden.</span><span class="sxs-lookup"><span data-stu-id="84f8d-111">Attempts to bring the requested UI element into view and raises the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> event on the target in order to report the results.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f8d-112">Ist es in der Regel praktischer aufrufen, die Instanzmethoden <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> oder <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> anstatt diese statische Hilfsmethode.</span><span class="sxs-lookup"><span data-stu-id="84f8d-112">It is typically more convenient to call the instance methods <xref:System.Windows.FrameworkElement.BringIntoView%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.BringIntoView%2A?displayProperty=nameWithType> rather than this static utility method.</span></span> <span data-ttu-id="84f8d-113">Das Verhalten der Instanzmethoden entspricht das Verhalten der statischen Methode.</span><span class="sxs-lookup"><span data-stu-id="84f8d-113">The behavior of the instance methods is equivalent to the behavior of the static method.</span></span>  
  
 <span data-ttu-id="84f8d-114">Auch wenn die `current` UI-Element angegeben wurde eine <xref:System.Windows.FrameworkContentElement>, das resultierende Ereignis ist immer noch <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> Ereignis mit den ursprünglichen <xref:System.Windows.FrameworkContentElement> erkennbar, überprüfen die Daten des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="84f8d-114">Even if the `current` UI element provided was a <xref:System.Windows.FrameworkContentElement>, the resulting event is still the same <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> event, with the originating <xref:System.Windows.FrameworkContentElement> identifiable by checking the event data of the event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      </Docs>
    </Member>
    <Member MemberName="FindLogicalNode">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject FindLogicalNode (System.Windows.DependencyObject logicalTreeNode, string elementName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject FindLogicalNode(class System.Windows.DependencyObject logicalTreeNode, string elementName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.FindLogicalNode(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLogicalNode (logicalTreeNode As DependencyObject, elementName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ FindLogicalNode(System::Windows::DependencyObject ^ logicalTreeNode, System::String ^ elementName);" />
      <MemberSignature Language="F#" Value="static member FindLogicalNode : System.Windows.DependencyObject * string -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.FindLogicalNode (logicalTreeNode, elementName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logicalTreeNode" Type="System.Windows.DependencyObject" />
        <Parameter Name="elementName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="logicalTreeNode"><span data-ttu-id="84f8d-115">Das Objekt, bei dem die Suche begonnen werden soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-115">The object to start searching from.</span></span> <span data-ttu-id="84f8d-116">Bei diesem Objekt muss es sich um ein <see cref="T:System.Windows.FrameworkElement" /> oder um ein <see cref="T:System.Windows.FrameworkContentElement" /> handeln.</span><span class="sxs-lookup"><span data-stu-id="84f8d-116">This object must be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <param name="elementName"><span data-ttu-id="84f8d-117">Der Name des zu suchenden -Objekts.</span><span class="sxs-lookup"><span data-stu-id="84f8d-117">The name of the object to find.</span></span></param>
        <summary><span data-ttu-id="84f8d-118">Versucht, ein Objekt mit dem angegebenen Namen zu suchen und zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="84f8d-118">Attempts to find and return an object that has the specified name.</span></span> <span data-ttu-id="84f8d-119">Die Suche startet beim angegebenen Objekt und wird in den untergeordneten Knoten der logischen Struktur fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="84f8d-119">The search starts from the specified object and continues into subnodes of the logical tree.</span></span></summary>
        <returns><span data-ttu-id="84f8d-120">Das Objekt mit dem entsprechenden Namen, falls ein solches Element gefunden wird. Gibt <see langword="null" /> zurück, wenn kein entsprechender Name in der Struktur gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="84f8d-120">The object with the matching name, if one is found; returns <see langword="null" /> if no matching name was found in the logical tree.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f8d-121">Die Methoden <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> und <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> ähneln oberflächlich betrachtet <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, jedoch eine unterschiedliche Logik:</span><span class="sxs-lookup"><span data-stu-id="84f8d-121">The methods <xref:System.Windows.FrameworkContentElement.FindName%2A?displayProperty=nameWithType> and <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> are superficially similar to <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A>, but operate by different logic:</span></span>  
  
-   <span data-ttu-id="84f8d-122">Die suchrichtung für <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> auf untergeordnete Objekte (unten in der Struktur), wird die suchrichtung für die `FindName` Methoden ist die übergeordneten Objekte (der Struktur nach oben).</span><span class="sxs-lookup"><span data-stu-id="84f8d-122">The search direction for <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> is toward child objects (down the tree); the search direction for the `FindName` methods is towards parent objects (up the tree).</span></span>  
  
-   <span data-ttu-id="84f8d-123">Die `FindName` Methoden werden durch das Konzept eines XAML-Namescopes gesteuert.</span><span class="sxs-lookup"><span data-stu-id="84f8d-123">The `FindName` methods are governed by the concept of a XAML namescope.</span></span> <span data-ttu-id="84f8d-124">Mithilfe von `FindName` garantiert, dass nur ein Objekt mit diesem Namen vorhanden ist, da XAML-Namescopes Eindeutigkeit erzwingen.</span><span class="sxs-lookup"><span data-stu-id="84f8d-124">Using `FindName` you are guaranteed that only one object of that name exists, because XAML namescopes enforce uniqueness.</span></span> <span data-ttu-id="84f8d-125">Im Gegensatz dazu <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> XAML-Namescope und kann über die XAML-Namescope Grenzen bei der Suche ignoriert.</span><span class="sxs-lookup"><span data-stu-id="84f8d-125">In contrast, <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> ignores XAML namescope and might cross XAML namescope boundaries during the search.</span></span> <span data-ttu-id="84f8d-126">Daher besteht keine Garantie der Eindeutigkeit der `elementName` Namen nach Grenzen überschritten werden.</span><span class="sxs-lookup"><span data-stu-id="84f8d-126">As such, there is no guarantee of uniqueness of the `elementName` name once boundaries are crossed.</span></span> <span data-ttu-id="84f8d-127">Weitere Informationen zu XAML-Namescopes finden Sie unter [WPF-XAML-Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="84f8d-127">For more information about XAML namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetChildren">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="84f8d-128">Gibt die Auflistung der unmittelbar untergeordneten Objekte des angegebenen Objekts durch Verarbeiten der logischen Struktur zurück.</span><span class="sxs-lookup"><span data-stu-id="84f8d-128">Returns the collection of immediate child objects of the specified object by processing the logical tree.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As DependencyObject) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.DependencyObject -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="84f8d-129">Das Objekt, ab dem die Verarbeitung der logischen Struktur beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-129">The object from which to start processing the logical tree.</span></span> <span data-ttu-id="84f8d-130">Hierbei wird ein <see cref="T:System.Windows.FrameworkElement" /> oder ein <see cref="T:System.Windows.FrameworkContentElement" /> erwartet.</span><span class="sxs-lookup"><span data-stu-id="84f8d-130">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="84f8d-131">Gibt die Auflistung der unmittelbaren untergeordneten Objekte des angegebenen Objekts zurück, indem die logische Struktur verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="84f8d-131">Returns the collection of immediate child objects of the specified object, by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="84f8d-132">Die aufzählbare Auflistung der unmittelbaren untergeordneten Objekte aus der logischen Struktur des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="84f8d-132">The enumerable collection of immediate child objects from the logical tree of the specified object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f8d-133">Verwenden Sie diese Signatur als auch Helper-Methode, vor allem, wenn Sie nicht sicher sind, ob `current` ist eine <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement> und auch nicht sicher sind, ob die Klasse des Objekts eine eigene Sammlung Inhaltsmodell unterstützt.</span><span class="sxs-lookup"><span data-stu-id="84f8d-133">Use this signature and helper method primarily when you are unsure whether `current` is a <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement> and are also unsure whether that object's class supports its own content model collection.</span></span> <span data-ttu-id="84f8d-134">Wenn Sie den Typ des Objekts bestimmen können, die Sie abfragen möchten, überprüfen Sie, dass die bestimmte Content-Eigenschaft, die Sie kennen dieses Typs vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="84f8d-134">If you can determine the type of the object you are querying, check the specific content property that you know exists on that type.</span></span> <span data-ttu-id="84f8d-135">Beispielsweise, wenn Sie wissen, dass das Objekt Abfragen ist eine <xref:System.Windows.Controls.ItemsControl>, überprüfen Sie die <xref:System.Windows.Controls.ItemsControl.Items%2A> Eigenschaft, um eine stark typisierte Auflistung, die Unterstützung für Sammlung und eignet sich wahrscheinlich eher als ein Enumerator, abzurufen.</span><span class="sxs-lookup"><span data-stu-id="84f8d-135">For example, if you know that the object you are querying is an <xref:System.Windows.Controls.ItemsControl>, check the <xref:System.Windows.Controls.ItemsControl.Items%2A> property to get a strongly typed collection, which has collection interface support and is probably more useful than an enumerator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkContentElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkContentElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkContentElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkContentElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkContentElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="84f8d-136">Das Objekt, ab dem die Verarbeitung der logischen Struktur beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-136">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="84f8d-137">Gibt die Auflistung der unmittelbar untergeordneten Objekte des angegebenen <see cref="T:System.Windows.FrameworkContentElement" /> durch Verarbeiten der logischen Struktur zurück.</span><span class="sxs-lookup"><span data-stu-id="84f8d-137">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkContentElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="84f8d-138">Die zählbare Auflistung der unmittelbar untergeordneten Objekte, beginnend mit <paramref name="current" /> in der logischen Struktur.</span><span class="sxs-lookup"><span data-stu-id="84f8d-138">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable GetChildren (System.Windows.FrameworkElement current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.IEnumerable GetChildren(class System.Windows.FrameworkElement current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetChildren(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetChildren (current As FrameworkElement) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::IEnumerable ^ GetChildren(System::Windows::FrameworkElement ^ current);" />
      <MemberSignature Language="F#" Value="static member GetChildren : System.Windows.FrameworkElement -&gt; System.Collections.IEnumerable" Usage="System.Windows.LogicalTreeHelper.GetChildren current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="84f8d-139">Das Objekt, ab dem die Verarbeitung der logischen Struktur beginnen soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-139">The object from which to start processing the logical tree.</span></span></param>
        <summary><span data-ttu-id="84f8d-140">Gibt die Auflistung der unmittelbar untergeordneten Objekte des angegebenen <see cref="T:System.Windows.FrameworkElement" /> durch Verarbeiten der logischen Struktur zurück.</span><span class="sxs-lookup"><span data-stu-id="84f8d-140">Returns the collection of immediate child objects of the specified <see cref="T:System.Windows.FrameworkElement" /> by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="84f8d-141">Die zählbare Auflistung der unmittelbar untergeordneten Objekte, beginnend mit <paramref name="current" /> in der logischen Struktur.</span><span class="sxs-lookup"><span data-stu-id="84f8d-141">The enumerable collection of immediate child objects starting from <paramref name="current" /> in the logical tree.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetParent (System.Windows.DependencyObject current);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetParent(class System.Windows.DependencyObject current) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.LogicalTreeHelper.GetParent(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetParent (current As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetParent(System::Windows::DependencyObject ^ current);" />
      <MemberSignature Language="F#" Value="static member GetParent : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.LogicalTreeHelper.GetParent current" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="current"><span data-ttu-id="84f8d-142">Das Objekt, für das das übergeordnete Objekt gesucht werden soll.</span><span class="sxs-lookup"><span data-stu-id="84f8d-142">The object to find the parent object for.</span></span> <span data-ttu-id="84f8d-143">Hierbei wird ein <see cref="T:System.Windows.FrameworkElement" /> oder ein <see cref="T:System.Windows.FrameworkContentElement" /> erwartet.</span><span class="sxs-lookup"><span data-stu-id="84f8d-143">This is expected to be either a <see cref="T:System.Windows.FrameworkElement" /> or a <see cref="T:System.Windows.FrameworkContentElement" />.</span></span></param>
        <summary><span data-ttu-id="84f8d-144">Gibt das übergeordnete Objekt des angegebenen Objekts durch Verarbeiten der logischen Struktur zurück.</span><span class="sxs-lookup"><span data-stu-id="84f8d-144">Returns the parent object of the specified object by processing the logical tree.</span></span></summary>
        <returns><span data-ttu-id="84f8d-145">Das angeforderte übergeordnete Objekt.</span><span class="sxs-lookup"><span data-stu-id="84f8d-145">The requested parent object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="84f8d-146">Diese Methode ist lediglich ein Wrapper, die die Version des entsprechenden Typs abruft (<xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>) von der <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> oder <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> -Eigenschaft, also es sei denn, Sie kann nicht bestimmt werden die `current` geben, Sie möchten überprüfen Sie die entsprechenden Stattdessen Instanzeigenschaften.</span><span class="sxs-lookup"><span data-stu-id="84f8d-146">This method is merely a wrapper that gets the appropriate type version (<xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>) of the <xref:System.Windows.FrameworkElement.Parent%2A?displayProperty=nameWithType> or <xref:System.Windows.FrameworkContentElement.Parent%2A?displayProperty=nameWithType> property; so unless you are unable to determine the `current` type, you might want to check the respective instance properties instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>