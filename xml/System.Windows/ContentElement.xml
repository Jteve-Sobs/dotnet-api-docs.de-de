<Type Name="ContentElement" FullName="System.Windows.ContentElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8036a2eb2c4e97b52acc1ce9ac3087cd15c6eeae" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55424082" /></Metadata><TypeSignature Language="C#" Value="public class ContentElement : System.Windows.DependencyObject, System.Windows.IInputElement, System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ContentElement extends System.Windows.DependencyObject implements class System.Windows.IInputElement, class System.Windows.Media.Animation.IAnimatable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ContentElement" />
  <TypeSignature Language="VB.NET" Value="Public Class ContentElement&#xA;Inherits DependencyObject&#xA;Implements IAnimatable, IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContentElement : System::Windows::DependencyObject, System::Windows::IInputElement, System::Windows::Media::Animation::IAnimatable" />
  <TypeSignature Language="F#" Value="type ContentElement = class&#xA;    inherit DependencyObject&#xA;    interface IInputElement&#xA;    interface IAnimatable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Media.Animation.IAnimatable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="76dc5-101">Stellt eine WPF-Hauptebenen-Basisklasse für Inhaltselemente bereit.</span><span class="sxs-lookup"><span data-stu-id="76dc5-101">Provides a WPF core-level base class for content elements.</span></span> <span data-ttu-id="76dc5-102">Inhaltselemente sind auf die flüssige Präsentation ausgelegt, wobei ein intuitives, markuporientiertes Layoutmodell sowie ein vorsätzlich einfaches Objektmodell verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-102">Content elements are designed for flow-style presentation, using an intuitive markup-oriented layout model and a deliberately simple object model.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-103"><xref:System.Windows.ContentElement> definiert die folgenden allgemeinen Inhaltseigenschaften:</span><span class="sxs-lookup"><span data-stu-id="76dc5-103"><xref:System.Windows.ContentElement> defines the following common content characteristics:</span></span>  
  
-   <span data-ttu-id="76dc5-104">Eingabe: Alle <xref:System.Windows.ContentElement> abgeleitete Klassen bieten Unterstützung für einfache Erfassung von Tastatur, Maus, Drag & Drop-Vorgänge, Steuerelemente und Zugriffstasten, die Eingaben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-104">Input: All <xref:System.Windows.ContentElement> derived classes provide support for basic input capture from keyboard, mouse, drag-and-drop operations, stylus controls, and accelerators.</span></span>  
  
-   <span data-ttu-id="76dc5-105">Fokus: Alle <xref:System.Windows.ContentElement> abgeleiteten Klassen sind potenziell den Fokus erhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-105">Focus: All <xref:System.Windows.ContentElement> derived classes are potentially focusable.</span></span> <span data-ttu-id="76dc5-106">(Allerdings den Fokus Standardstatus für das <xref:System.Windows.ContentElement> Basisklasse `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-106">(However, the default focusable state for the <xref:System.Windows.ContentElement> base class is `false`.</span></span> <span data-ttu-id="76dc5-107">Weitere Informationen zu einem <xref:System.Windows.ContentElement> den Fokus erhalten kann, finden Sie unter <xref:System.Windows.ContentElement.Focusable%2A>.) Darüber hinaus diese Klasse enthält [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] , dass Sie zum Verschieben des Fokus auf den verwandten Elementen verwenden können.</span><span class="sxs-lookup"><span data-stu-id="76dc5-107">For details on how to make a <xref:System.Windows.ContentElement> focusable, see <xref:System.Windows.ContentElement.Focusable%2A>.) In addition, this class contains [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] that you can use for traversing the focus across related elements.</span></span>  
  
-   <span data-ttu-id="76dc5-108">Ereignisse: <xref:System.Windows.ContentElement> enthält Ereignisse, beziehen sich auf die Eingabe und Fokus; es enthält auch Ereignisse für Änderungen im Zustand.</span><span class="sxs-lookup"><span data-stu-id="76dc5-108">Events: <xref:System.Windows.ContentElement> includes events that are related to input and focus; it also includes events for changes in state.</span></span> <span data-ttu-id="76dc5-109">In vielen Fällen die <xref:System.Windows.ContentElement> Ereignisse weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-109">In many cases, the <xref:System.Windows.ContentElement> events are routed events.</span></span> <span data-ttu-id="76dc5-110">In einigen Fällen weisen die Routingereignisse Tunneling- und bubblingversionen Routingstrategien: wird ausgelöst, als separate Ereignisse als Reaktion auf den gleichen Status oder Zustand.</span><span class="sxs-lookup"><span data-stu-id="76dc5-110">In some cases, routed events have both tunneling and bubbling routing strategies, raised as separate events in response to the same state or condition.</span></span> <span data-ttu-id="76dc5-111">Darüber hinaus <xref:System.Windows.ContentElement> definiert [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] auslösen können weitergeleitet werden, Ereignisse und die hinzufügen oder Entfernen von Handlern an Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-111">Also, <xref:System.Windows.ContentElement> defines [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] that can raise routed events and that can add or remove handlers to events.</span></span>  
  
 <span data-ttu-id="76dc5-112"><xref:System.Windows.ContentElement> weist viele derselben [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] mit <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-112"><xref:System.Windows.ContentElement> shares many common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] with <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="76dc5-113">Diese häufigen [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] nicht von einem freigegebenen klassenvererbung stammen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-113">These common [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] do not come from a shared class inheritance.</span></span> <span data-ttu-id="76dc5-114">Aber diese weisen häufig benennen, ein ähnliches Verhalten und ähnliche interne Implementierung der [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in jeder Klasse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-114">But they do share common naming, similar behavior, and similar internal implementation of [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)] in each class.</span></span> <span data-ttu-id="76dc5-115">Die Ähnlichkeit ist, da <xref:System.Windows.ContentElement> und <xref:System.Windows.UIElement> Klassen sind, die ein Element, die Basis, sind auch jede andere Absichten für das Verhalten der Markup-Objektmodells hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-115">The similarity is because <xref:System.Windows.ContentElement> and <xref:System.Windows.UIElement> are each classes that are an element base, although each has different intentions for its markup object model behavior.</span></span>  
  
 <span data-ttu-id="76dc5-116">Insbesondere <xref:System.Windows.UIElement> absteigend von <xref:System.Windows.Media.Visual>, die bieten Unterstützung für die Low-Level-Grafiken für das Rendern einer <xref:System.Windows.ContentElement> um einen rechteckigen Bereich in einem Fenster zusammengesetzte während <xref:System.Windows.ContentElement> Rendering verzögert, damit weitere Konzepte für Dokument-Szenarien, z. B. Textfluss und-Umbruch, gelten werden einfacher unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-116">In particular, <xref:System.Windows.UIElement> descends from <xref:System.Windows.Media.Visual>, which provides the lower-level graphics support for rendering a <xref:System.Windows.ContentElement> to a rectangular region within a composited window, whereas <xref:System.Windows.ContentElement> defers rendering so that concepts more common to document scenarios, such as flow and wrapping, are more easily supported.</span></span> <span data-ttu-id="76dc5-117">Diese beiden bezogene Klassen implementieren außerdem die gemeinsamen Schnittstellen <xref:System.Windows.IInputElement> und <xref:System.Windows.Media.Animation.IAnimatable>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-117">These two related classes also implement the common interfaces <xref:System.Windows.IInputElement> and <xref:System.Windows.Media.Animation.IAnimatable>.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-118">Die <see cref="T:System.Windows.ContentElement" /> Klasse definiert noch nicht alle Aspekte der ein Element der vollständige Inhalt für die Präsentation.</span><span class="sxs-lookup"><span data-stu-id="76dc5-118">The <see cref="T:System.Windows.ContentElement" /> class does not yet define all aspects of a complete content element for flow-style presentation.</span></span> <span data-ttu-id="76dc5-119"><see cref="T:System.Windows.FrameworkContentElement" /> ist eine sofort abgeleitete Klasse von <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-119"><see cref="T:System.Windows.FrameworkContentElement" /> is an immediately derived class of <see cref="T:System.Windows.ContentElement" />.</span></span> <span data-ttu-id="76dc5-120"><see cref="T:System.Windows.FrameworkContentElement" /> enthält eine vollständige Reihe weiterer Member, der Rendering unterstützen eine <see cref="T:System.Windows.FrameworkContentElement" /> in einem Inhaltshost und verwenden das Layoutsystem von WPF-Frameworkebene.</span><span class="sxs-lookup"><span data-stu-id="76dc5-120"><see cref="T:System.Windows.FrameworkContentElement" /> includes a more complete set of additional members that support rendering a <see cref="T:System.Windows.FrameworkContentElement" /> within a content host and using the WPF framework-level layout system.</span></span></para></block>
    <altmember cref="T:System.Windows.UIElement" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContentElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContentElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-121">Initialisiert eine neue Instanz der <see cref="T:System.Windows.ContentElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-121">Initializes a new instance of the <see cref="T:System.Windows.ContentElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dc5-122">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-122">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="76dc5-123">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-123">An identifier for the routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="76dc5-124">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-124">A reference to the handler implementation.</span></span></param>
        <summary><span data-ttu-id="76dc5-125">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-125">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-126">Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-126">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="76dc5-127">Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-127">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="76dc5-128">Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-128">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="76dc5-129">In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.</span><span class="sxs-lookup"><span data-stu-id="76dc5-129">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="contentElement.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="76dc5-130">Ein Bezeichner für das zu behandelnde Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-130">An identifier for the.routed event to be handled.</span></span></param>
        <param name="handler"><span data-ttu-id="76dc5-131">Ein Verweis auf die Handlerimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-131">A reference to the handler implementation.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="76dc5-132"><see langword="true" />, wenn der Handler registriert werden soll, sodass er selbst dann aufgerufen wird, wenn das Routingereignis in den zugehörigen Ereignisdaten als behandelt markiert ist; <see langword="false" />, wenn der Handler mit der Standardbedingung registriert werden soll, dass er nicht aufgerufen wird, wenn das Routingereignis bereits als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-132"><see langword="true" /> to register the handler such that it is invoked even when the routed event is marked handled in its event data; <see langword="false" /> to register the handler with the default condition that it will not be invoked if the routed event is already marked handled.</span></span>  
  
<span data-ttu-id="76dc5-133">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-133">The default is <see langword="false" />.</span></span>  
  
<span data-ttu-id="76dc5-134">Legen Sie die Anforderung zum erneuten Behandeln eines Routingereignisses nicht gewohnheitsmäßig fest.</span><span class="sxs-lookup"><span data-stu-id="76dc5-134">Do not routinely ask to rehandle a routed event.</span></span></param>
        <summary><span data-ttu-id="76dc5-135">Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-135">Adds a routed event handler for a specified routed event, adding the handler to the handler collection on the current element.</span></span> <span data-ttu-id="76dc5-136">Legen Sie <paramref name="handledEventsToo" /> auf <see langword="true" /> fest, damit der bereitgestellte Handler für ein Routingereignis aufgerufen wird, das bereits von einem anderen Element auf der Ereignisroute als behandelt markiert wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-136">Specify <paramref name="handledEventsToo" /> as <see langword="true" /> to have the provided handler be invoked for routed event that had already been marked as handled by another element along the event route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-137">Die Verarbeitung von Low-Level-Eingabeereignisse in eine praktische Möglichkeit ist eine komplexe Aufgabe.</span><span class="sxs-lookup"><span data-stu-id="76dc5-137">Processing low-level input events in a practical way is a complex task.</span></span> <span data-ttu-id="76dc5-138">Viele Steuerelemente implementieren Verhalten, in denen ein bestimmtes Ereignis als behandelt markiert ist, und durch ein anderes intuitiver Ereignis ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-138">Many controls implement behavior where a certain event is marked as handled, and is replaced by another more intuitive event.</span></span> <span data-ttu-id="76dc5-139">Im Allgemeinen wird ein Steuerelement nur ein Eingabeereignis Plattform als behandelt markieren Wenn einige Zweck dafür vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-139">Generally, a control will only mark a platform input event as handled if there is some design intention for doing so.</span></span> <span data-ttu-id="76dc5-140">In bestimmten Szenarien ist möglicherweise die Absichten Entwurf nicht was erfordert, dass Ihre bestimmten Behandlung des Eingabeereignisses.</span><span class="sxs-lookup"><span data-stu-id="76dc5-140">In certain scenarios, those design intentions might not be what your particular handling of the input event requires.</span></span> <span data-ttu-id="76dc5-141">Es ist für diese Szenarien, dass die Registrierung Handler mit `handledEventsToo` als `true` eignet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-141">It is for these scenarios that registering handlers with `handledEventsToo` as `true` is appropriate.</span></span> <span data-ttu-id="76dc5-142">Aber Sie sollten dies nicht regelmäßig.</span><span class="sxs-lookup"><span data-stu-id="76dc5-142">But you should not do this routinely.</span></span> <span data-ttu-id="76dc5-143">Handler als Reaktion auf alle Ereignisse aufrufen, auch wenn verarbeitet, wird Ihre eigene Verarbeitungslogik Anwendungsereignis erschweren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-143">Invoking handlers in response to all events even if handled will complicate your own application event processing logic.</span></span> <span data-ttu-id="76dc5-144">Eine Abnahme der Leistung möglicherweise angezeigt werden, wenn die Handlerlogik sehr umfangreich ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-144">You may see a decrease in performance if the handler logic is substantial.</span></span> <span data-ttu-id="76dc5-145">Reservieren Sie die Verwendung von Anhängen von Handlern für bereits behandelten Ereignisse für Situationen, in denen Sie bereits während des Entwicklungsprozesses ermittelt haben, die bestimmte Steuerelemente Ereignisse verarbeiten, die Sie weiterhin mit der Anwendungslogik behandeln möchten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-145">You should reserve the use of attaching handlers for already-handled events for situations where you have already discovered during the development process that certain controls are handling events that you still want to handle with application logic.</span></span>  
  
 <span data-ttu-id="76dc5-146">Ein weiteres Verfahren zum Vermeiden von Klassenbehandlungsverhalten von bestimmten Ebenenkombinationen Event-Steuerelement ist die Verwendung des Ereignisses die Vorschau Alternative.</span><span class="sxs-lookup"><span data-stu-id="76dc5-146">Another technique for avoiding the class handling behavior of certain event-control combinations is to use that event's preview alternative.</span></span> <span data-ttu-id="76dc5-147">Z. B. wenn <xref:System.Windows.ContentElement.MouseLeftButtonDown> als behandelt markiert wird von der Klassenbehandlung, Sie möglicherweise zum Hinzufügen von Handlern für <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-147">For example, if <xref:System.Windows.ContentElement.MouseLeftButtonDown> is marked handled by class handling, you might be able to add handlers for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> instead.</span></span>  
  
 <span data-ttu-id="76dc5-148">Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-148">You can add the same handler for the same event multiple times without raising an exception.</span></span> <span data-ttu-id="76dc5-149">Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-149">However, the handler is actually invoked multiple times when the event is handled.</span></span> <span data-ttu-id="76dc5-150">Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-150">Therefore, consider how this behavior might have side effects that should be accounted for in your handler implementation.</span></span>  
  
 <span data-ttu-id="76dc5-151">In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.</span><span class="sxs-lookup"><span data-stu-id="76dc5-151">You typically use this method to provide the implementation of the "add" accessor for the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] event access pattern of a custom routed event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-152">Das folgende Beispiel implementiert einen Handler aufgerufen wird, auf die <xref:System.Windows.FrameworkElement.Initialized> Ereignis auf einer Seite, die einen definierten Handler an eine der benannten Elemente auf der Seite mit anfügt `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-152">The following example implements a handler invoked on the <xref:System.Windows.FrameworkElement.Initialized> event on a page that attaches a defined handler to one of the named elements on the page using `handledEventsToo` `true`.</span></span> <span data-ttu-id="76dc5-153">Dieser Handler wird aufgerufen werden, auch wenn ein anderes Element entlang der Route, die gemeinsam genutzte Ereignisdaten als behandelt, bevor das behandelnde Element in der Route erreicht gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-153">This handler would be invoked even if another element along the route marked the shared event data as handled before reaching the handling element in the route.</span></span>  
  
 [!code-csharp[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#addhandlerhandledtoo)]
 [!code-vb[EventOvwSupport#AddHandlerHandledToo](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#addhandlerhandledtoo)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route"><span data-ttu-id="76dc5-154">Die Ereignisroute, der Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-154">The event route that handlers are added to.</span></span></param>
        <param name="e"><span data-ttu-id="76dc5-155">Die Ereignisdaten, mit denen die Handler hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-155">The event data that is used to add the handlers.</span></span> <span data-ttu-id="76dc5-156">Diese Methode verwendet die <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft der Argumente, um die Handler zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-156">This method uses the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of the arguments to create the handlers.</span></span></param>
        <summary><span data-ttu-id="76dc5-157">Fügt der angegebenen <see cref="T:System.Windows.EventRoute" /> Handler für die aktuelle Auflistung von <see cref="T:System.Windows.ContentElement" />-Ereignishandlern hinzu.</span><span class="sxs-lookup"><span data-stu-id="76dc5-157">Adds handlers to the specified <see cref="T:System.Windows.EventRoute" /> for the current <see cref="T:System.Windows.ContentElement" /> event handler collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-158">Verwenden Sie diese Methode für Inhaltshost-Elemente (unabhängig davon, ob sie implementieren <xref:System.Windows.IContentHost>) zum Hinzufügen von Handlern für die untergeordneten Elemente von Inhaltshost an den Host <xref:System.Windows.EventRoute>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-158">Use this method for content host elements (regardless whether they implement <xref:System.Windows.IContentHost>) in order to add handlers for the content host child elements to the host <xref:System.Windows.EventRoute>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.ContentElement.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-159">Ruft einen Wert ab oder legt diesen fest, der anzeigt, ob dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-159">Gets or sets a value that indicates whether this element can be used as the target of a drag-and-drop operation.</span></span></summary>
        <value><span data-ttu-id="76dc5-160"><see langword="true" />, wenn dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-160"><see langword="true" /> if this element can be used as the target of a drag-and-drop operation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-161">Der Standardwert ist <see langword="false" />sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-161">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-162">Drag & Drop-Vorgänge sind nicht standardmäßig aktiviert und muss durch Festlegen von absichtlich aktiviert sein <xref:System.Windows.ContentElement.AllowDrop%2A> zu `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-162">Drag-and-drop operations are not enabled by default, and must be enabled deliberately by setting <xref:System.Windows.ContentElement.AllowDrop%2A> to  `true`.</span></span> <span data-ttu-id="76dc5-163">Über diese Einstellung "Grundlegend" Drag & Drop-Verhalten ist vollständig implementierungsspezifisch und ist nicht definiert, indem <xref:System.Windows.ContentElement> oder eine beliebige andere Basiselement-Klasse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-163">Beyond this basic setting, drag-and-drop behavior is entirely implementation specific and is not defined by <xref:System.Windows.ContentElement> or any other base element class.</span></span> <span data-ttu-id="76dc5-164">Einige Steuerelemente, z. B. <xref:System.Windows.Controls.RichTextBox>, verfügen über ein Standardverhalten, aber nicht <xref:System.Windows.ContentElement> abgeleitete Klassen haben, ein Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-164">Certain controls, for example, <xref:System.Windows.Controls.RichTextBox>, do have a default behavior, but no <xref:System.Windows.ContentElement> derived classes have such a behavior.</span></span> <span data-ttu-id="76dc5-165">Weitere Informationen zu Drag & Drop, finden Sie unter [Drag- and -Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-165">For more information on drag and drop, see [Drag and Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).</span></span>  
  
 <span data-ttu-id="76dc5-166"><xref:System.Windows.FrameworkContentElement> überschreibt die Metadaten für diese Abhängigkeitseigenschaft in seiner Implementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-166"><xref:System.Windows.FrameworkContentElement> overrides the metadata for this dependency property in its implementation.</span></span> <span data-ttu-id="76dc5-167">Insbesondere <xref:System.Windows.FrameworkContentElement> gibt an, dass diese Eigenschaft ermöglicht die Vererbung von Eigenschaftswerten (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> ist `true` in den Metadaten).</span><span class="sxs-lookup"><span data-stu-id="76dc5-167">Specifically, <xref:System.Windows.FrameworkContentElement> designates that this property allows property value inheritance (<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A> is `true` in metadata).</span></span> <span data-ttu-id="76dc5-168">Die Vererbung von Eigenschaftswerten in diesem Kontext bedeutet, dass, wenn es untergeordnete Elemente kein anderer Wert für <xref:System.Windows.ContentElement.AllowDrop%2A> über lokale Werte oder Stile, den Wert des nächsten übergeordneten Element mit diesem Wert zugewiesen (in diesem Fall entweder in Stilen, in der Standardeinstellung zugewiesen Werte, oder ein lokaler Wert), und klicken Sie dann der Wert aus der dieses übergeordnete Element für alle nicht zugewiesenen untergeordneten Elemente vom Eigenschaftensystem zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-168">Property value inheritance in this context means that if there are child elements with no other value for <xref:System.Windows.ContentElement.AllowDrop%2A> assigned through local values or styles, the value of the nearest parent element with this value assigned (again, either in styles, by default values, or a local value), then the value from that parent element is assigned to all unassigned child elements by the property system.</span></span> <span data-ttu-id="76dc5-169">Dies bedeutet, dass Sie angeben können, ob am das Stammelement zulässig, und dann den Wert, der alle weitergeben <xref:System.Windows.FrameworkContentElement> untergeordnete Elemente, die nicht ausdrücklich einen Wert zugewiesen haben `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-169">This means that you can specify whether to allow drop operations at the root element and then propagate the value to all <xref:System.Windows.FrameworkContentElement> child elements that have not specifically assigned it a value of `false`.</span></span>  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-170">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-170">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-171">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-171">Identifier field</span></span>|<xref:System.Windows.ContentElement.AllowDropProperty>|  
|<span data-ttu-id="76dc5-172">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-172">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-173">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-173">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-174">Im folgenden Beispiel wird <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="76dc5-174">The following example sets <xref:System.Windows.ContentElement.AllowDrop%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#AllowDrop](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#allowdrop)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-175">Identifiziert die <see cref="P:System.Windows.ContentElement.AllowDrop" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-175">Identifies the <see cref="P:System.Windows.ContentElement.AllowDrop" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ApplyAnimationClock">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dc5-176">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="76dc5-176">Applies an animation to a specified dependency property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAnimationClock (dp As DependencyProperty, clock As AnimationClock)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="76dc5-177">Der Bezeichner für die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-177">The identifier for the property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="76dc5-178">Die Animationsuhr, die die Animation steuert und deklariert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-178">The animation clock that controls and declares the animation.</span></span></param>
        <summary><span data-ttu-id="76dc5-179">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an.</span><span class="sxs-lookup"><span data-stu-id="76dc5-179">Applies an animation to a specified dependency property on this element.</span></span> <span data-ttu-id="76dc5-180">Alle vorhandenen Animationen werden beendet und durch die neue Animation ersetzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-180">Any existing animations are stopped and replaced with the new animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-181">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als `dp` , und geben Sie `clock` als `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-181">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="76dc5-182">Dadurch wird die Animation entfernt und auf den Basiswert die animierte Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-182">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="76dc5-183">Die ursprünglich zugeordneten Animationsuhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-183">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="76dc5-184">Alle anderen Animationen, die dieser Uhr zugewiesenen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-184">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyAnimationClock">
      <MemberSignature Language="C#" Value="public void ApplyAnimationClock (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationClock clock, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyAnimationClock(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationClock clock, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyAnimationClock(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationClock ^ clock, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.ApplyAnimationClock : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationClock * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.ApplyAnimationClock (dp, clock, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="clock" Type="System.Windows.Media.Animation.AnimationClock" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="76dc5-185">Die zu animierende Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-185">The property to animate.</span></span></param>
        <param name="clock"><span data-ttu-id="76dc5-186">Die Animationsuhr, die die Animation steuert und deklariert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-186">The animation clock that controls and declares the animation.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="76dc5-187">Ein Wert aus der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="76dc5-187">A value of the enumeration.</span></span> <span data-ttu-id="76dc5-188">Die Standardeinstellung ist <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, durch die eine vorhandene Animation beendet und durch die neue ersetzt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-188">The default is <see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" />, which will stop any existing animation and replace with the new one.</span></span></param>
        <summary><span data-ttu-id="76dc5-189">Wendet eine Animation auf eine angegebene Abhängigkeitseigenschaft für dieses Element an, wobei angegeben werden kann, was geschieht, wenn die Eigenschaft bereits eine laufende Animation aufweist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-189">Applies an animation to a specified dependency property on this element, with the ability to specify what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-190">Um eine Animation aus einer Eigenschaft zu entfernen, geben Sie den Bezeichner für diese Eigenschaft als `dp` , und geben Sie `clock` als `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-190">To remove an animation from a property, specify the identifier for that property as `dp` and specify `clock` as `null`.</span></span> <span data-ttu-id="76dc5-191">Dadurch wird die Animation entfernt und auf den Basiswert die animierte Eigenschaft festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-191">This removes the animation and the animated property is set to its base value.</span></span> <span data-ttu-id="76dc5-192">Die ursprünglich zugeordneten Animationsuhr wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-192">However, the originally associated animation clock is not stopped.</span></span> <span data-ttu-id="76dc5-193">Alle anderen Animationen, die dieser Uhr zugewiesenen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-193">Any other animations assigned to that clock will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-194">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-194">Gets a value that indicates whether at least one touch is captured to this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-195"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-195"><see langword="true" /> if at least one touch is captured to this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-196">Identifiziert die <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-196">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-197">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-197">Gets a value that indicates whether at least one touch is captured to this element or to any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="76dc5-198"><see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-198"><see langword="true" /> if at least one touch is captured to this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-199">Identifiziert die <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-199">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesCapturedWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-200">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät über diesem Element gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-200">Gets a value that indicates whether at least one touch is pressed over this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-201"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element registriert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-201"><see langword="true" /> if at least one touch is pressed over this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-202">Identifiziert die <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-202">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.ContentElement.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-203">Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät auf diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-203">Gets a value that indicates whether at least one touch is pressed over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="76dc5-204"><see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element oder den untergeordneten Elementen in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-204"><see langword="true" /> if at least one touch is pressed over this element or any child elements in its visual tree; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-205">Identifiziert die <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-205">Identifies the <see cref="P:System.Windows.ContentElement.AreAnyTouchesOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginAnimation">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dc5-206">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="76dc5-206">Starts an animation for a specified animated property on this element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginAnimation (dp As DependencyProperty, animation As AnimationTimeline)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="76dc5-207">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-207">The property to animate, which is specified as a dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="76dc5-208">Die Zeitachse der zu startenden Animation.</span><span class="sxs-lookup"><span data-stu-id="76dc5-208">The timeline of the animation to start.</span></span></param>
        <summary><span data-ttu-id="76dc5-209">Startet eine Animation für eine angegebene animierte Eigenschaft dieses Elements.</span><span class="sxs-lookup"><span data-stu-id="76dc5-209">Starts an animation for a specified animated property on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-210">Wenn Sie überprüfen, ob eine Eigenschaft animiert wird, beachten Sie, dass die Animation beginnt, und betrachtet animiert, wenn der erste Frame hinter den nicht animierten Ausgangspunkt gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-210">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="76dc5-211">Wenn die <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für `animation` ist `null`werden aktuellen Animationen entfernt und anschließend der aktuelle Wert der Eigenschaft gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-211">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="76dc5-212">Wenn die gesamte `animation` Wert `null`, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-212">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="76dc5-213">Die ursprünglich zugeordnete Animationszeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-213">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="76dc5-214">Alle anderen Animationen, die diese Zeitachse zugewiesen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-214">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginAnimation">
      <MemberSignature Language="C#" Value="public void BeginAnimation (System.Windows.DependencyProperty dp, System.Windows.Media.Animation.AnimationTimeline animation, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginAnimation(class System.Windows.DependencyProperty dp, class System.Windows.Media.Animation.AnimationTimeline animation, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginAnimation(System::Windows::DependencyProperty ^ dp, System::Windows::Media::Animation::AnimationTimeline ^ animation, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="abstract member BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit&#xA;override this.BeginAnimation : System.Windows.DependencyProperty * System.Windows.Media.Animation.AnimationTimeline * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="contentElement.BeginAnimation (dp, animation, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="animation" Type="System.Windows.Media.Animation.AnimationTimeline" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="76dc5-215">Die zu animierende Eigenschaft, die als Bezeichner einer Abhängigkeitseigenschaft angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-215">The property to animate, which is specified as the dependency property identifier.</span></span></param>
        <param name="animation"><span data-ttu-id="76dc5-216">Die Zeitachse der anzuwendenden Animation.</span><span class="sxs-lookup"><span data-stu-id="76dc5-216">The timeline of the animation to be applied.</span></span></param>
        <param name="handoffBehavior"><span data-ttu-id="76dc5-217">Ein Wert der Enumeration, der angibt, wie die neue Animation mit aktuellen (ausgeführten) Animationen interagieren soll, die sich bereits auf den Eigenschaftswert auswirken.</span><span class="sxs-lookup"><span data-stu-id="76dc5-217">A value of the enumeration that specifies how the new animation interacts with any current (running) animations that are already affecting the property value.</span></span></param>
        <summary><span data-ttu-id="76dc5-218">Startet eine spezifische Animation für eine bestimmte animierte Eigenschaft dieses Elements, wobei angegeben werden kann, welches Verhalten gelten soll, wenn die Eigenschaft bereits über eine ausgeführte Animation verfügt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-218">Starts a specific animation for a specified animated property on this element, with the option of specifying what happens if the property already has a running animation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-219">Wenn Sie überprüfen, ob eine Eigenschaft animiert wird, beachten Sie, dass die Animation beginnt, und betrachtet animiert, wenn der erste Frame hinter den nicht animierten Ausgangspunkt gerendert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-219">When you check whether a property is animated, note that the animation will begin and be considered animated when the first frame beyond the non-animated starting point is rendered.</span></span>  
  
 <span data-ttu-id="76dc5-220">Wenn die <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> für `animation` ist `null`werden aktuellen Animationen entfernt und anschließend der aktuelle Wert der Eigenschaft gespeichert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-220">If the <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> for `animation` is `null`, then any current animations are removed and the current value of the property is held.</span></span>  
  
 <span data-ttu-id="76dc5-221">Wenn die gesamte `animation` Wert `null`, werden alle Animationen aus der Eigenschaft entfernt, und der Eigenschaftswert wird auf den Basiswert zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-221">If the entire `animation` value is `null`, all animations are removed from the property and the property value reverts to its base value.</span></span> <span data-ttu-id="76dc5-222">Die ursprünglich zugeordnete Animationszeitachse wird jedoch nicht beendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-222">However, the originally associated animation timeline is not stopped.</span></span> <span data-ttu-id="76dc5-223">Alle anderen Animationen, die diese Zeitachse zugewiesen werden weiterhin ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-223">Any other animations assigned to that timeline will continue to run.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="contentElement.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-224">Versucht, die Mausaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-224">Attempts to force capture of the mouse to this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-225"><see langword="true" />, wenn die Maus erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-225"><see langword="true" /> if the mouse is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-226">Um die erfasst werden, muss ein Element aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-226">To be captured, an element must be enabled.</span></span> <span data-ttu-id="76dc5-227">Überprüfen Sie, ob <xref:System.Windows.ContentElement.IsEnabled%2A> ist `true` vor dem Aufruf <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-227">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` before you call <xref:System.Windows.ContentElement.CaptureMouse%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-228">Wenn der Aufruf <xref:System.Windows.ContentElement.CaptureMouse%2A> gibt `true`, klicken Sie dann <xref:System.Windows.ContentElement.IsMouseCaptured%2A> auch `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-228">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then <xref:System.Windows.ContentElement.IsMouseCaptured%2A> is also `true`.</span></span>  
  
 <span data-ttu-id="76dc5-229">Wenn der Aufruf <xref:System.Windows.ContentElement.CaptureMouse%2A> gibt `true`, die <xref:System.Windows.ContentElement.GotMouseCapture> und <xref:System.Windows.ContentElement.IsMouseCapturedChanged> Ereignisse ausgelöst werden, mit <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> Daten in den Ereignisdaten gemeldet, als das Element, in denen die <xref:System.Windows.ContentElement.CaptureMouse%2A> Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-229">If calling <xref:System.Windows.ContentElement.CaptureMouse%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotMouseCapture> and <xref:System.Windows.ContentElement.IsMouseCapturedChanged> events are raised, with <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> in the event data reported as the element where the <xref:System.Windows.ContentElement.CaptureMouse%2A> method is called.</span></span> <span data-ttu-id="76dc5-230">Wenn Sie erzwingen, können Sie vorhandenen erfasst – vor allem bei erfasst beeinträchtigen, die im Zusammenhang mit Drag & Drop mit der Maus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-230">If you force capture, you might interfere with existing captures - especially with captures that relate to drag-and-drop with the mouse.</span></span>  
  
 <span data-ttu-id="76dc5-231">Rufen Sie zum Löschen von allen Elementen die Erfassung von Mauseingaben <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit der `element` -Parameter als `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-231">To clear mouse capture from all elements, call <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> with the `element` parameter provided as `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-232">Im folgenden Beispiel zeichnet die Maus oder eingabeaufzeichnung, basierend auf der gibt an, ob die Maus vom Element bereits erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-232">The following example captures the mouse or releases capture, based on whether the mouse is already captured by the element.</span></span> <span data-ttu-id="76dc5-233">Beachten Sie, dass in diesem Beispiel wird das Zielelement potenzielle Capture wandelt die <xref:System.Windows.IInputElement> -Schnittstelle und ist daher zunächst das Aufrufen der <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="76dc5-233">Note that this example casts the prospective capture target element to the <xref:System.Windows.IInputElement> interface, and is thus initially calling the <xref:System.Windows.IInputElement.CaptureMouse%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="76dc5-234">Das Umwandeln in <xref:System.Windows.IInputElement> ist ein Verfahren, das ist nützlich, wenn Sie nicht sicher sind, ob das Element erfassen soll die Maus ist eine <xref:System.Windows.UIElement> oder <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-234">Casting to <xref:System.Windows.IInputElement> is a technique that is useful if you are unsure whether the element you want to have capture the mouse is a <xref:System.Windows.UIElement> or a <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="76dc5-235">Die Schnittstellenumwandlung und die Schnittstellenmethode Aufruf wird dann der entsprechenden Implementierung der typspezifische CaptureMouse intern ohne eine Umwandlung in eine Testversion <xref:System.Windows.UIElement> oder <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-235">The interface cast and the interface method call then calls the appropriate type-specific CaptureMouse implementation internally without requiring a trial cast to either <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement>.</span></span> <span data-ttu-id="76dc5-236">Umwandlung auf die gleiche Weise funktioniert für andere Mitglieder, die <xref:System.Windows.IInputElement> definiert, z. B. häufig die Eingabe-bezogenen Ereignisse und die andere Eingabe bezogene Methoden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-236">This same casting technique works for other members that <xref:System.Windows.IInputElement> defines, for instance many of the input-related events, and other input-related methods.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="contentElement.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-237">Versucht, die Tablettstiftaufzeichnung für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-237">Attempts to force capture of the stylus to this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-238"><see langword="true" />, wenn der Tablettstift erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-238"><see langword="true" /> if the stylus is successfully captured; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-239">Gibt die standardmäßige Implementierung, die basierend auf dem zugrunde liegenden Stift-Standardgerät immer `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-239">The default implementation based on the underlying default stylus device always returns `true`.</span></span> <span data-ttu-id="76dc5-240">Wenn Sie die Eingabegeräte, die für das Eingabesystem aber die geräteimplementierung bereitstellen erweitern, ist es jedoch möglich, ein System mit einer Implementierung des alternativen Tablettstiftgeräts zu erstellen, die möglicherweise andere Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-240">However, if you are extending the input devices that provide the device implementation for the input system, it is possible to create a system with an alternative stylus device implementation that might return different results.</span></span>  
  
 <span data-ttu-id="76dc5-241">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Tablettstift außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-241">When an element captures the stylus, it receives stylus input even if the stylus is outside its bounds.</span></span> <span data-ttu-id="76dc5-242">Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-242">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="76dc5-243">Durch das Aufrufen dieser Methode wird eine zugrunde liegende statische <xref:System.Windows.Input.Stylus> Methode <xref:System.Windows.Input.Stylus.Capture%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-243">Calling this method calls an underlying static <xref:System.Windows.Input.Stylus> method <xref:System.Windows.Input.Stylus.Capture%2A>.</span></span> <span data-ttu-id="76dc5-244">Die tatsächlich verwendeten-Verhalten wird durch die Implementierung der aktiven Tablettstift Gerät implementiert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-244">The actual capture behavior is implemented by the active stylus device implementation.</span></span>  
  
 <span data-ttu-id="76dc5-245">Um die erfasst werden, muss ein Element aktiviert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-245">To be captured, an element must be enabled.</span></span> <span data-ttu-id="76dc5-246">Überprüfen Sie, ob <xref:System.Windows.ContentElement.IsEnabled%2A> ist `true` zurückgegeben wird, vor dem Aufruf <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-246">Check whether <xref:System.Windows.ContentElement.IsEnabled%2A> is `true` return before you call <xref:System.Windows.ContentElement.CaptureStylus%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-247">Wenn der Aufruf <xref:System.Windows.ContentElement.CaptureStylus%2A> gibt `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> auch `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-247">If calling <xref:System.Windows.ContentElement.CaptureStylus%2A> returns `true`, <xref:System.Windows.ContentElement.IsStylusCaptured%2A> is also `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="76dc5-248">Das zu erfassende Gerät.</span><span class="sxs-lookup"><span data-stu-id="76dc5-248">The device to capture.</span></span></param>
        <summary><span data-ttu-id="76dc5-249">Versucht, die Fingereingabe für dieses Element zu erzwingen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-249">Attempts to force capture of a touch to this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-250"><see langword="true" />, wenn die angegebene Fingereingabe für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-250"><see langword="true" /> if the specified touch is captured to this element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> Gibt `false` Wenn die <xref:System.Windows.Input.TouchDevice> aktuell auf ein anderes Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-251"><xref:System.Windows.ContentElement.CaptureTouch%2A> will return `false` if the <xref:System.Windows.Input.TouchDevice> is currently captured to another element.</span></span>  
  
 <span data-ttu-id="76dc5-252">Wenn <xref:System.Windows.ContentElement.CaptureTouch%2A> gibt `true`, und klicken Sie dann die <xref:System.Windows.ContentElement.GotTouchCapture> Ereignis wird ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-252">If <xref:System.Windows.ContentElement.CaptureTouch%2A> returns `true`, then the <xref:System.Windows.ContentElement.GotTouchCapture> event is raised.</span></span>  
  
 <span data-ttu-id="76dc5-253">Um einzelne Fingereingabe aus diesem Element freizugeben, verwenden Sie die <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> Methode, und geben Sie das Fingereingabegerät freigegeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-253">To release capture of a single touch from this element, use the <xref:System.Windows.ContentElement.ReleaseTouchCapture%2A> method and specify the touch device to release.</span></span> <span data-ttu-id="76dc5-254">Um alle Workflows aus diesem Element freizugeben, verwenden die <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="76dc5-254">To release all touches from this element, use the <xref:System.Windows.ContentElement.ReleaseAllTouchCaptures%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76dc5-255"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-255"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.ContentElement.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-256">Ruft eine Auflistung von <see cref="T:System.Windows.Input.CommandBinding" />-Objekten ab, die mit diesem Element verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-256">Gets a collection of <see cref="T:System.Windows.Input.CommandBinding" /> objects that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-257">Die Auflistung aller <see cref="T:System.Windows.Input.CommandBinding" />-Objekte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-257">The collection of all <see cref="T:System.Windows.Input.CommandBinding" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-258">Ein <xref:System.Windows.Input.CommandBinding> ermöglicht die Verarbeitung eines bestimmten Befehls für dieses Element und deklariert die Verknüpfung zwischen einem Befehl, seinen Ereignissen und die Handler, die von diesem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-258">A <xref:System.Windows.Input.CommandBinding> enables command handling of a specific command for this element and declares the linkage between a command, its events, and the handlers that are attached by this element.</span></span>  
  
 <span data-ttu-id="76dc5-259">Eine weitere Möglichkeit zum Füllen der <xref:System.Windows.ContentElement.CommandBindings%2A> Auflistung ist die Verwendung <xref:System.Windows.Input.CommandManager> Methoden programmgesteuert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-259">Another typical way to populate the <xref:System.Windows.ContentElement.CommandBindings%2A> collection is to use <xref:System.Windows.Input.CommandManager> methods programmatically.</span></span>  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="76dc5-260">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="76dc5-260">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="76dc5-261">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="76dc5-261">XAML Values</span></span>  
 <span data-ttu-id="76dc5-262">*oneOrMoreCommandBindings*</span><span class="sxs-lookup"><span data-stu-id="76dc5-262">*oneOrMoreCommandBindings*</span></span>  
 <span data-ttu-id="76dc5-263">Eine oder mehrere <xref:System.Windows.Input.CommandBinding> Elemente.</span><span class="sxs-lookup"><span data-stu-id="76dc5-263">One or more <xref:System.Windows.Input.CommandBinding> elements.</span></span> <span data-ttu-id="76dc5-264">Jedem dieser Computer sollte eine <xref:System.Windows.Input.CommandBinding.Command%2A> -Attributsatz auf einen bekannten Befehl, und legen Sie Attribute für die <xref:System.Windows.Input.CommandBinding.CanExecute> und <xref:System.Windows.Input.CommandBinding.Executed> Handlerimplementierungen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-264">Each of these should have a <xref:System.Windows.Input.CommandBinding.Command%2A> attribute set to a known command, and attributes set for the <xref:System.Windows.Input.CommandBinding.CanExecute> and <xref:System.Windows.Input.CommandBinding.Executed> handler implementations.</span></span> <span data-ttu-id="76dc5-265">Weitere Informationen finden Sie unter <xref:System.Windows.Input.CommandBinding>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-265">For more information see <xref:System.Windows.Input.CommandBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-266">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-266">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-267">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-267">This event creates an alias for the <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.DragEnter?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-268">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.DragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-268">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-269">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-269">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-270">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-270">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragEnterEvent>|  
|<span data-ttu-id="76dc5-271">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-271">Routing strategy</span></span>|<span data-ttu-id="76dc5-272">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-272">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-273">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-273">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-274">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewDragEnter>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-274">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDragEnter>.</span></span>  
  
-   <span data-ttu-id="76dc5-275">Außer Kraft setzen <xref:System.Windows.ContentElement.OnDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-275">Override <xref:System.Windows.ContentElement.OnDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-276">Identifiziert das <see cref="E:System.Windows.ContentElement.DragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-276">Identifies the <see cref="E:System.Windows.ContentElement.DragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-277">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-278">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-279">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-280">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-281">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-282">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-282">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-283">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-283">This event creates an alias for the <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragLeave?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-284">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.DragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-284">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-285">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-285">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-286">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-286">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragLeaveEvent>|  
|<span data-ttu-id="76dc5-287">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-287">Routing strategy</span></span>|<span data-ttu-id="76dc5-288">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-288">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-289">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-289">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-290">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragLeave>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-290">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragLeave>.</span></span>  
  
-   <span data-ttu-id="76dc5-291">Außer Kraft setzen <xref:System.Windows.ContentElement.OnDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-291">Override <xref:System.Windows.ContentElement.OnDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-292">Identifiziert das <see cref="E:System.Windows.ContentElement.DragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-292">Identifies the <see cref="E:System.Windows.ContentElement.DragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-293">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-293">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-294">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-294">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-295">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-295">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-296">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-296">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-297">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-297">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-298">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-298">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-299">Dieses Ereignis tritt auf, auch wenn das Ziehen der Elementgrenzen stammen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-299">This event occurs even if the drag originates in the element bounds.</span></span> <span data-ttu-id="76dc5-300">Wenn für der Ziehvorgang außerhalb des gültigen Bereichs beginnt und bewegt sich dann, dieses Ereignis wird auch ausgelöst, als auch <xref:System.Windows.ContentElement.DragEnter> und Vorschauereignisse im Zusammenhang.</span><span class="sxs-lookup"><span data-stu-id="76dc5-300">If the drag starts outside the bounds and then moves inside, this event is also raised, as well as <xref:System.Windows.ContentElement.DragEnter> and related preview events.</span></span>  
  
 <span data-ttu-id="76dc5-301">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-301">This event creates an alias for the <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.DragOver?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-302">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.DragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-302">Event handlers that are attached to the <xref:System.Windows.ContentElement.DragOver> event are attached to the underlying <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-303">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-303">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-304">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-304">Identifier field</span></span>|<xref:System.Windows.ContentElement.DragOverEvent>|  
|<span data-ttu-id="76dc5-305">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-305">Routing strategy</span></span>|<span data-ttu-id="76dc5-306">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-306">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-307">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-307">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-308">Das entsprechende tunnelingereignis ist <xref:System.Windows.DragDrop.PreviewDragOver>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-308">The corresponding tunneling event is <xref:System.Windows.DragDrop.PreviewDragOver>.</span></span>  
  
-   <span data-ttu-id="76dc5-309">Außer Kraft setzen <xref:System.Windows.ContentElement.OnDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-309">Override <xref:System.Windows.ContentElement.OnDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-310">Identifiziert das <see cref="E:System.Windows.ContentElement.DragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-310">Identifies the <see cref="E:System.Windows.ContentElement.DragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-311">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-311">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-312">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-312">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-313">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-313">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-314">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-314">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-315">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-315">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-316">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-316">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-317">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-317">This event creates an alias for the <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.Drop?displayProperty=nameWithType> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-318">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.Drop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-318">Event handlers that are attached to the <xref:System.Windows.ContentElement.Drop> event are attached to the underlying <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-319">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-319">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-320">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-320">Identifier field</span></span>|<xref:System.Windows.ContentElement.DropEvent>|  
|<span data-ttu-id="76dc5-321">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-321">Routing strategy</span></span>|<span data-ttu-id="76dc5-322">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-322">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-323">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-323">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-324">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewDrop>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-324">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewDrop>.</span></span>  
  
-   <span data-ttu-id="76dc5-325">Außer Kraft setzen <xref:System.Windows.ContentElement.OnDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-325">Override <xref:System.Windows.ContentElement.OnDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-326">Identifiziert das <see cref="E:System.Windows.ContentElement.Drop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-326">Identifies the <see cref="E:System.Windows.ContentElement.Drop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-327">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-327">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-328">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-328">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-329">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-329">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-330">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-330">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-331">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-331">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="contentElement.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-332">Versucht, den Fokus auf dieses Element festzulegen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-332">Attempts to set focus to this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-333"><see langword="true" />, wenn der Tastaturfokus auf dieses Element festgelegt werden konnte, <see langword="false" />, wenn dieser Methodenaufruf keinen Fokus erzwungen hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-333"><see langword="true" /> if keyboard focus could be set to this element; <see langword="false" /> if this method call did not force focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-334">Um den Fokus erhalten kann, werden <xref:System.Windows.ContentElement.Focusable%2A> und <xref:System.Windows.ContentElement.IsEnabled%2A> müssen `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-334">To be focusable, <xref:System.Windows.ContentElement.Focusable%2A> and <xref:System.Windows.ContentElement.IsEnabled%2A> must both be `true`.</span></span> <span data-ttu-id="76dc5-335">Beachten Sie, dass fast alle <xref:System.Windows.ContentElement> abgeleitete Klassen sind nicht <xref:System.Windows.ContentElement.Focusable%2A> standardmäßig.</span><span class="sxs-lookup"><span data-stu-id="76dc5-335">Note that nearly all <xref:System.Windows.ContentElement> derived classes are not <xref:System.Windows.ContentElement.Focusable%2A> by default.</span></span>  
  
 <span data-ttu-id="76dc5-336">Auch wenn ein Element den Fokus erhalten kann und aktiviert ist, Ereignisbehandlung in einer bestimmten Struktur ist, (z.B. für ein zusammengesetztes Steuerelement) mit nicht zugelassen, Fokus auf die Vorschau Fokusereignisse Antworten daher diese Methode würde zurückgeben `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-336">Even if an element is focusable and enabled, event handling within a specific tree, (such as for a composite control) might respond to the preview focus events by not allowing focus there, thus this method would return `false`.</span></span>  
  
 <span data-ttu-id="76dc5-337">Fokus wird im Allgemeinen durch zwei getrennte Konzepte gesteuert: Tastaturfokus und logischer Fokus, die nicht immer identisch sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-337">Focus in general is governed by two separate concepts: keyboard focus and logical focus, which are not always identical.</span></span> <span data-ttu-id="76dc5-338">Diese Methode legt den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-338">This method sets the logical focus.</span></span> <span data-ttu-id="76dc5-339">Es gibt keine programmgesteuerte Möglichkeit zum Festlegen des Tastaturfokus. über den Tastaturfokus richtet sich nach Eingabe des Benutzers.</span><span class="sxs-lookup"><span data-stu-id="76dc5-339">There is no programmatic means to set keyboard focus specifically; keyboard focus is determined by user input.</span></span> <span data-ttu-id="76dc5-340">Weitere Informationen finden Sie unter [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-340">For more information, see [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md) and [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="76dc5-341">Wenn der Aufruf <xref:System.Windows.ContentElement.Focus%2A> gibt `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> und <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> sind auch `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-341">If calling <xref:System.Windows.ContentElement.Focus%2A> returns `true`, <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> and <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> are also `true`.</span></span>  
  
 <span data-ttu-id="76dc5-342">Wenn die zugehörigen Eigenschaften nicht bereits sind `true`, beim Aufrufen <xref:System.Windows.ContentElement.Focus%2A>, eine oder mehrere der folgenden Ereignisse werden in der folgenden Reihenfolge ausgelöst: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (Quelle ist die neue Ziel mit Fokus), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (Quelle ist das neue Fokusziel).</span><span class="sxs-lookup"><span data-stu-id="76dc5-342">If the related properties are not already `true`, when you call <xref:System.Windows.ContentElement.Focus%2A>, one or more of the following events are raised in the following order: <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>, <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> (source is the new focus target), <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged>, <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged>, <xref:System.Windows.ContentElement.LostKeyboardFocus>, <xref:System.Windows.ContentElement.GotKeyboardFocus> (source is the new focus target).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-343">Im folgenden Beispiel ist ein Ereignishandler Laden der Seite, der einem angegebenen mit dem Namen Absatz des Dokuments sucht und legt den Fokus zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-343">The following example is a page-loaded event handler that finds a specified named paragraph in the document and sets focus to it.</span></span> <span data-ttu-id="76dc5-344">Absätze sind nicht standardmäßig den Fokus erhalten. diesem spezifischen Absatz wurde ein Format angewendet wird (nicht gezeigt), verwendet einen Stil <xref:System.Windows.Setter> zu vereinfachen den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-344">Paragraphs are not focusable by default; this particular paragraph had a style applied (not shown) that used a style <xref:System.Windows.Setter> to make it focusable.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#Focus](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#focus)]
 [!code-vb[ContentElementsSmorgasbord#Focus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#focus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.ContentElement.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-345">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Element den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-345">Gets or sets a value that indicates whether the element can receive focus.</span></span></summary>
        <value><span data-ttu-id="76dc5-346"><see langword="true" />, wenn das Element den Fokus erhalten kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-346"><see langword="true" /> if the element is focusable; otherwise <see langword="false" />.</span></span> <span data-ttu-id="76dc5-347">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-347">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-348">Nur das fokussierte Element empfängt Tastatureingaben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-348">Only the focused element receives keyboard input.</span></span>  
  
 <span data-ttu-id="76dc5-349">Bestimmte abgeleiteten Klassen können Metadaten für diese Abhängigkeitseigenschaft außer Kraft gesetzt, so, dass die abgeleitete Klasse den Fokus erhalten kann, in der Standardeinstellung ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-349">Certain derived classes might override metadata for this dependency property such that the derived class is focusable by default.</span></span>  
  
 <span data-ttu-id="76dc5-350">Wenn von geerbt <xref:System.Windows.Documents.Hyperlink> oder die abgeleiteten Klassen <xref:System.Windows.Documents.Hyperlink> überschreibt die Metadaten für diese Abhängigkeitseigenschaft und ändert den Standardwert dieser Eigenschaft sein `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-350">When inherited by <xref:System.Windows.Documents.Hyperlink> or its derived classes, <xref:System.Windows.Documents.Hyperlink> overrides the metadata for this dependency property and redefines the default value of this property to be `true`.</span></span>  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-351">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-351">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-352">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-352">Identifier field</span></span>|<xref:System.Windows.ContentElement.FocusableProperty>|  
|<span data-ttu-id="76dc5-353">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-353">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-354">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-354">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-355">Im folgenden Beispiel wird einen Stil erstellt, eine <xref:System.Windows.Documents.Paragraph> standardmäßig den Fokus erhalten und weist ihm das visuelle Verhalten, wenn es den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-355">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-356">Beim Ableiten von <see cref="T:System.Windows.ContentElement" />, sollten Sie das Element den Fokus erhalten kann, sein, da standardmäßig er nicht den Fokus erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-356">When you derive from <see cref="T:System.Windows.ContentElement" />, consider whether you want your element to be focusable, because by default it will not be focusable.</span></span> <span data-ttu-id="76dc5-357">Wenn Sie das Element den Fokus erhalten kann sein möchten, überschreiben Sie die Metadaten für diese Eigenschaft in Ihrem statischen Konstruktor der abgeleiteten Klasse wie folgt:</span><span class="sxs-lookup"><span data-stu-id="76dc5-357">If you want your element to be focusable, override the metadata for this property in your derived class static constructor as follows:</span></span> 
<span data-ttu-id="76dc5-358">[! Code-Csharp[CorePseudocode #UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [! Code – Vb[CorePseudocode #UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span><span class="sxs-lookup"><span data-stu-id="76dc5-358">[!code-csharp[CorePseudocode#UIElementShortOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#uielementshortoverride)] [!code-vb[CorePseudocode#UIElementShortOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#uielementshortoverride)]</span></span> 
<span data-ttu-id="76dc5-359">wo <paramref name="myElement" /> ist der Klassenname des Typs, die Sie auf den Metadatenwert überschreiben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-359">where <paramref name="myElement" /> is the class name of the type that you are overriding the metadata value on.</span></span></para></block>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-360">Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.ContentElement.Focusable" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-360">Occurs when the value of the <see cref="P:System.Windows.ContentElement.Focusable" /> property changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-361">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-361">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-362">Identifiziert die <see cref="P:System.Windows.ContentElement.Focusable" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-362">Identifies the <see cref="P:System.Windows.ContentElement.Focusable" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAnimationBaseValue">
      <MemberSignature Language="C#" Value="public object GetAnimationBaseValue (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetAnimationBaseValue(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetAnimationBaseValue(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAnimationBaseValue (dp As DependencyProperty) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetAnimationBaseValue(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="abstract member GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj&#xA;override this.GetAnimationBaseValue : System.Windows.DependencyProperty -&gt; obj" Usage="contentElement.GetAnimationBaseValue dp" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Media.Animation.IAnimatable.GetAnimationBaseValue(System.Windows.DependencyProperty)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp"><span data-ttu-id="76dc5-363">Die zu überprüfende Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-363">The.dependency property to check.</span></span></param>
        <summary><span data-ttu-id="76dc5-364">Gibt den Wert der Basiseigenschaft für die angegebene Eigenschaft dieses Elements zurück, wobei alle möglichen animierten Werte aus einer ausgeführten oder beendeten Animation nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-364">Returns the base property value for the specified property on this element, disregarding any possible animated value from a running or stopped animation.</span></span></summary>
        <returns><span data-ttu-id="76dc5-365">Der Eigenschaftswert, bei dem keine Animationen an die angegebene Abhängigkeitseigenschaft angefügt sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-365">The property value as if no animations are attached to the specified dependency property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-366">Wenn keine Animationen an die Eigenschaft angefügt werden und dann die <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> Rückgabewert ist immer identisch mit der <xref:System.Windows.DependencyObject.GetValue%2A> Wert zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-366">If no animations are attached to the property, then the <xref:System.Windows.ContentElement.GetAnimationBaseValue%2A> return value is always identical to the <xref:System.Windows.DependencyObject.GetValue%2A> return value.</span></span> <span data-ttu-id="76dc5-367">Wenn Animationen angefügt sind, dann alle möglichen Animationen einschließlich Anfangs-abgeleitet und Stop-Werte werden ignoriert, und den Wert der Eigenschaft wird basierend auf alle anderen möglichen Eingaben bestimmt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-367">If there are animations attached, then all possible animation derived values including the start and stop values are ignored, and the property value is determined based on all other possible inputs.</span></span> <span data-ttu-id="76dc5-368">Weitere Informationen finden Sie unter [Priorität von Abhängigkeitseigenschaftswerten](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-368">For more information, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal virtual System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="abstract member GetUIParentCore : unit -&gt; System.Windows.DependencyObject&#xA;override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="contentElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-369">Gibt beim Überschreiben in einer abgeleiteten Klasse ein alternatives übergeordnetes [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-369">When overridden in a derived class, returns an alternative [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] parent for this element if no visual parent exists.</span></span></summary>
        <returns><span data-ttu-id="76dc5-370">Ein Objekt, wenn die Implementierung einer abgeleiteten Klasse eine alternative übergeordnete Verbindung melden kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-370">An object, if implementation of a derived class has an alternate parent connection to report.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-371">Gibt die standardmäßige virtuelle Implementierung dieser Methode `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-371">The default virtual implementation of this method returns `null`.</span></span> <span data-ttu-id="76dc5-372"><xref:System.Windows.FrameworkContentElement> bietet eine praktische Implementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-372"><xref:System.Windows.FrameworkContentElement> provides a practical implementation.</span></span>  
  
 <span data-ttu-id="76dc5-373">Alternative Übergeordnet sind, verwendet wird, für das Ereignisrouting in Fällen, in dem ein Element eine alternative übergeordnete Struktur erstellt, damit die Ereignisse weitergeleitet werden in einer Weise, die über das Standardmuster, von denen die visuelle Struktur des übergeordneten standard routing abweicht, oder nach unten in der routing-Strategie eine Vorschau anzeigen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-373">Alternative parents are used for event routing, in cases where an element creates an alternative parent structure so that its events are routed in a way that diverges from the standard pattern of routing up the visual tree to the standard parent, or downward in the preview routing strategy.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-374">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag &amp; Drop-Ereignis meldet, das dieses Element betrifft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-374">Occurs when the input system reports an underlying drag-and-drop event that involves this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-375">Die <xref:System.Windows.ContentElement.GiveFeedback> -Ereignisses kann die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback.</span><span class="sxs-lookup"><span data-stu-id="76dc5-375">The <xref:System.Windows.ContentElement.GiveFeedback> event allows the source of a drag event to modify the appearance of the mouse pointer in order to give the user visual feedback during a drag-and-drop operation.</span></span> <span data-ttu-id="76dc5-376">Das visuelle Feedback bestärkt, dass es sich bei ein Drag & Drop-Vorgang aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-376">The visual feedback reinforces that a drag-and-drop operation is in process.</span></span>  
  
 <span data-ttu-id="76dc5-377">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.GiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-377">This event creates an alias for the <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-378">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.GiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-378">Event handlers that are attached to the <xref:System.Windows.ContentElement.GiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-379">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-379">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-380">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-380">Identifier field</span></span>|<xref:System.Windows.ContentElement.GiveFeedbackEvent>|  
|<span data-ttu-id="76dc5-381">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-381">Routing strategy</span></span>|<span data-ttu-id="76dc5-382">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-382">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-383">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-383">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="76dc5-384">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-384">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGiveFeedback>.</span></span>  
  
-   <span data-ttu-id="76dc5-385">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-385">Override <xref:System.Windows.ContentElement.OnGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-386">Identifiziert das <see cref="E:System.Windows.ContentElement.GiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-386">Identifies the <see cref="E:System.Windows.ContentElement.GiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-387">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-387">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-388">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-388">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-389">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-389">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-390">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-390">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-391">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-391">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-392">Tritt auf, wenn dieses Element den logischen Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-392">Occurs when this element gets logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-393">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn Fokus absichtlich durch einen Methodenaufruf erzwungen, aber der vorherige Tastaturfokus, die in einem anderen Bereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-393">Logical focus differs from keyboard focus if focus is deliberately forced by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="76dc5-394">In diesem Fall bleibt über den Tastaturfokus ist und das Element, in denen eine <xref:System.Windows.ContentElement.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-394">In this scenario, keyboard focus remains where it is and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="76dc5-395">Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.ContentElement.IsFocused%2A> Eigenschaft eines Elements in der Route geändert wird `false` zu `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-395">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route is changed from `false` to `true`.</span></span>  
  
 <span data-ttu-id="76dc5-396">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus erhält möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-396">Because this event uses bubbling routing, the element that receives focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-397">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-397">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-398">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-398">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-399">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-399">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotFocusEvent>|  
|<span data-ttu-id="76dc5-400">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-400">Routing strategy</span></span>|<span data-ttu-id="76dc5-401">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-401">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-402">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-402">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="76dc5-403">Es gibt kein entsprechendes Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-403">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-404">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-404">Override <xref:System.Windows.ContentElement.OnGotFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-405">Identifiziert das <see cref="E:System.Windows.ContentElement.GotFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-405">Identifies the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-406">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-406">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-407">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-407">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-408">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-408">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-409">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-409">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-410">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-410">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-411">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-411">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> ist ein ähnliches Ereignis, das statusänderungen in einer Eigenschaft nachverfolgt, die den Fokuszustand für ein Element verwaltet. die <xref:System.Windows.ContentElement.GotKeyboardFocus> Ereignis wird ausgelöst, in vielen unter denselben Umständen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-412"><xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> is a similar event that tracks status changes in a property that maintains the focus state for an element; the <xref:System.Windows.ContentElement.GotKeyboardFocus> event is raised in many of the same circumstances.</span></span>  
  
 <span data-ttu-id="76dc5-413">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-413">Because this event uses bubbling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-414">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-414">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="76dc5-415">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.GotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-415">This event creates an alias for the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.GotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-416">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.GotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-416">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-417">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-417">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-418">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-418">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotKeyboardFocusEvent>|  
|<span data-ttu-id="76dc5-419">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-419">Routing strategy</span></span>|<span data-ttu-id="76dc5-420">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-420">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-421">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-421">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="76dc5-422">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-422">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="76dc5-423">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-423">Override <xref:System.Windows.ContentElement.OnGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-424">Identifiziert das <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-424">Identifies the <see cref="E:System.Windows.ContentElement.GotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-425">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-425">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-426">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-426">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-427">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-427">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-428">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-428">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-429">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-429">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-430">Tritt auf, wenn dieses Element die Mausauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-430">Occurs when this element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-431">Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-431">When an element captures the mouse, it receives mouse input even if the mouse pointer is outside its bounds.</span></span> <span data-ttu-id="76dc5-432">Die Maus ist in der Regel nur bei Drag & Drop-Vorgängen erfasst und erfassten bleibt, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-432">The mouse is typically captured only during drag-and-drop operations and remains captured until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="76dc5-433">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-433">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-434">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten Erfassen von Daten in das tatsächliche Element zu bestimmen, das die Mauseingaben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-434">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has mouse capture.</span></span>  
  
 <span data-ttu-id="76dc5-435">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.GotMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-435">This event creates an alias for the <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event for  this class so that <xref:System.Windows.ContentElement.GotMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-436">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.GotMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-436">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-437">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-437">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-438">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-438">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotMouseCaptureEvent>|  
|<span data-ttu-id="76dc5-439">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-439">Routing strategy</span></span>|<span data-ttu-id="76dc5-440">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-440">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-441">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-441">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-442">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-442">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-443">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-443">Override <xref:System.Windows.ContentElement.OnGotMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-444">Identifiziert das <see cref="E:System.Windows.ContentElement.GotMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-444">Identifies the <see cref="E:System.Windows.ContentElement.GotMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-445">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-445">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-446">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-446">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-447">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-447">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-448">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-448">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-449">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-449">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-450">Tritt auf, wenn dieses Element die Stiftauswahl erhält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-450">Occurs when this element captures the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-451">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-451">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="76dc5-452">Der Tablettstift in der Regel nur während der Drag & Drop-Vorgänge aufgezeichnet wird und behält die Aufzeichnung, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-452">The stylus is typically captured only during drag-and-drop operations and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
 <span data-ttu-id="76dc5-453">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-453">Because this event uses bubbling routing, the element that has capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-454">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, das erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-454">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has capture.</span></span>  
  
 <span data-ttu-id="76dc5-455">Dieses Ereignis wird ein Alias für das angefügte Ereignis für diese Klasse erstellt, damit <xref:System.Windows.ContentElement.GotStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-455">This event creates an alias for the  attached event for this class so that <xref:System.Windows.ContentElement.GotStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-456">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.GotStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-456">Event handlers that are attached to the <xref:System.Windows.ContentElement.GotStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-457">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-457">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-458">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-458">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotStylusCaptureEvent>|  
|<span data-ttu-id="76dc5-459">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-459">Routing strategy</span></span>|<span data-ttu-id="76dc5-460">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-460">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-461">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-461">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-462">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-462">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-463">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-463">Override <xref:System.Windows.ContentElement.OnGotStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-464">Identifiziert das <see cref="E:System.Windows.ContentElement.GotStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-464">Identifies the <see cref="E:System.Windows.ContentElement.GotStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-465">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-465">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-466">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-466">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-467">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-467">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-468">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-468">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-469">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-469">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-470">Tritt ein, wenn eine Fingereingabe für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-470">Occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-471">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-471">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-472">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-472">Identifier field</span></span>|<xref:System.Windows.ContentElement.GotTouchCaptureEvent>|  
|<span data-ttu-id="76dc5-473">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-473">Routing strategy</span></span>|<span data-ttu-id="76dc5-474">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-474">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-475">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-475">Delegate</span></span>|<span data-ttu-id="76dc5-476">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-476"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-477">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-477">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-478">Identifiziert das <see cref="E:System.Windows.ContentElement.GotTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-478">Identifies the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasAnimatedProperties">
      <MemberSignature Language="C#" Value="public bool HasAnimatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAnimatedProperties" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAnimatedProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAnimatedProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAnimatedProperties : bool" Usage="System.Windows.ContentElement.HasAnimatedProperties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Media.Animation.IAnimatable.HasAnimatedProperties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-479">Ruft einen Wert ab, der angibt, ob dieses Element über animierte Eigenschaften verfügt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-479">Gets a value that indicates whether this element has any animated properties.</span></span></summary>
        <value><span data-ttu-id="76dc5-480"><see langword="true" />, wenn Animationen an eine der Eigenschaften dieses Elements angefügt sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-480"><see langword="true" /> if this element has animations attached to any of its properties; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-481">Diese Eigenschaft gibt `true` für permanente (nicht getaktete, ständig ausgeführten) Animationen oder Animationen, die ein genauer Zeitplan steht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-481">This property returns `true` either for persistent (unclocked, always-running) animations or for animations that have a specific timeline.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.ContentElement.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-482">Ruft die Auflistung der Eingabebindungen ab, die diesem Element zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-482">Gets the collection of input bindings that are associated with this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-483">Die Auflistung der Eingabebindungen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-483">The collection of input bindings.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-484">Eingabebindungen unterstützen die Bindung der Befehle aus, um Eingabegeräte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-484">Input bindings support the binding of commands to input devices.</span></span> <span data-ttu-id="76dc5-485">Z. B. <xref:System.Windows.Input.MouseBinding> implementiert eingabebindungen mit Eigenschaften, die für Mausgeräte spezifisch sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-485">For example, <xref:System.Windows.Input.MouseBinding> implements input bindings that include properties that are specific to mouse devices.</span></span>  
  
 <span data-ttu-id="76dc5-486">Die Auflistung der eingabebindungen enthält sowohl eingabebindungen, die in den Typ zu beziehen, als auch eingabebindungen, die für die Instanz deklariert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-486">The collection of input bindings includes both input bindings that pertain to the type and also input bindings that are declared on the instance.</span></span>  
  
 <span data-ttu-id="76dc5-487">Eine verwandte Eigenschaft <xref:System.Windows.ContentElement.CommandBindings%2A>, verwaltet eine Auflistung von befehlsbindungen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-487">A related property, <xref:System.Windows.ContentElement.CommandBindings%2A>, maintains a collection of command bindings.</span></span> <span data-ttu-id="76dc5-488">Diese Bindungen verwendet wird, unterscheiden eingabebindungen in an, dass sie die nächste Ebene nach unten der befehlsverarbeitung - Aktionen darstellen, die auf bekannten Befehle und klassenspezifische-Handler für diese gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-488">These bindings differ from input bindings in that they represent the next level down of command processing - actions that are tied to known commands and class-specific handlers for them.</span></span>  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="76dc5-489">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="76dc5-489">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a><span data-ttu-id="76dc5-490">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="76dc5-490">XAML Values</span></span>  
 <span data-ttu-id="76dc5-491">*oneOrMoreInputBindings*</span><span class="sxs-lookup"><span data-stu-id="76dc5-491">*oneOrMoreInputBindings*</span></span>  
 <span data-ttu-id="76dc5-492">Eine oder mehrere <xref:System.Windows.Input.InputBinding> Elemente (in der Regel die <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding> abgeleiteten Klassen).</span><span class="sxs-lookup"><span data-stu-id="76dc5-492">One or more <xref:System.Windows.Input.InputBinding> elements (typically the <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding> derived classes).</span></span> <span data-ttu-id="76dc5-493">Jedes davon wird erwartet, damit eine <xref:System.Windows.Input.InputBinding.Command%2A> und <xref:System.Windows.Input.InputBinding.Gesture%2A> -Attribut festgelegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-493">Each of these is expected to have a <xref:System.Windows.Input.InputBinding.Command%2A> and <xref:System.Windows.Input.InputBinding.Gesture%2A> attribute set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.ContentElement.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-494">Ruft einen Wert ab, der angibt, ob dieses Element in der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="76dc5-494">Gets or sets a value that indicates whether this element is enabled in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span></summary>
        <value><span data-ttu-id="76dc5-495"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-495"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-496">Der Standardwert ist <see langword="true" />sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-496">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-497">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-497">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-498">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-498">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsEnabledProperty>|  
|<span data-ttu-id="76dc5-499">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-499">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-500">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-500">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-501">Das folgende Beispiel erstellt ein Format, das einen Eigenschaften-Setter enthält, die ein alternatives visuelles Verhalten bietet bei der ein <xref:System.Windows.Documents.Hyperlink> nastaven NA hodnotu <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-501">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> is set to <xref:System.Windows.ContentElement.IsEnabled%2A> `false`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-502">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsEnabled" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-502">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property on this element changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-503">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-503">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.ContentElement.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-504">Ruft einen Wert ab, der in abgeleiteten Klassen zum Rückgabewert von <see cref="P:System.Windows.ContentElement.IsEnabled" /> wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-504">Gets a value that becomes the return value of <see cref="P:System.Windows.ContentElement.IsEnabled" /> in derived classes.</span></span></summary>
        <value><span data-ttu-id="76dc5-505"><see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-505"><see langword="true" /> if the element is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-506">Die Standardimplementierung dieser Eigenschaft den Wert speichert und auch berechnet, ob das übergeordnete Element dieses Elements aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-506">The default implementation of this property caches the value and also calculates whether the parent element of this element is enabled.</span></span> <span data-ttu-id="76dc5-507">(Wenn das übergeordnete Element nicht aktiviert ist, das untergeordnete Element kann nicht aktiviert werden in einer praktischen [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Wenn Sie diese Implementierung überschreiben möchten, stellen Sie sicher, dass Sie die grundlegende Implementierung, um dieses Verhalten beizubehalten aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-507">(If the parent is not enabled, the child element cannot be effectively enabled in practical [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) If you choose to override this implementation, make certain that you call the base implementation to preserve this behavior.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-508">Identifiziert die <see cref="P:System.Windows.ContentElement.IsEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-508">Identifies the <see cref="P:System.Windows.ContentElement.IsEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.ContentElement.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-509">Ruft einen Wert ab, der bestimmt, ob dieses Element den logischen Fokus hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-509">Gets a value that determines whether this element has logical focus.</span></span></summary>
        <value><span data-ttu-id="76dc5-510"><see langword="true" />, wenn dieses Element den logischen Fokus hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-510"><see langword="true" /> if this element has logical focus; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-511">Der logische Fokus kann von den Tastaturfokus abweichen, wenn eine Anwendung mehrere Bereiche konzentrieren, wie z. B. zwischen dem Inhalt des Menüs und den Rest der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-511">Logical focus might differ from keyboard focus if an application has multiple focus divisions, such as between menu contents and the remainder of the application.</span></span> <span data-ttu-id="76dc5-512">In diesem Szenario wird kann über den Tastaturfokus nur auf ein Element der Benutzeroberfläche der Anwendung, bestimmte Elemente in anderen Abteilungen Fokus können jedoch behalten logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-512">In this scenario, keyboard focus can only be on one element of the application  UI, however, certain elements in other focus divisions might still retain logical focus.</span></span> <span data-ttu-id="76dc5-513">Weitere Informationen über den logischen Fokus finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-513">For more information on logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-514">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-514">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-515">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-515">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsFocusedProperty>|  
|<span data-ttu-id="76dc5-516">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-516">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-517">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-517">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-518">Im folgenden Beispiel wird einen Stil erstellt, eine <xref:System.Windows.Documents.Paragraph> standardmäßig den Fokus erhalten und weist ihm das visuelle Verhalten, wenn es den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-518">The following example creates a style that makes a <xref:System.Windows.Documents.Paragraph> focusable by default and gives it a visual behavior when it receives focus.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#Focusable](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#focusable)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-519">Identifiziert die <see cref="P:System.Windows.ContentElement.IsFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-519">Identifies the <see cref="P:System.Windows.ContentElement.IsFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.ContentElement.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-520">Ruft einen Wert ab, der angibt, ob ein  Eingabemethodensystem wie z. B. ein [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] für die Verarbeitung von Eingaben für dieses Element aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-520">Gets a value that indicates whether an input method system, such as an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)], is enabled for processing the input to this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-521"><see langword="true" />, wenn eine Eingabemethode aktiv ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-521"><see langword="true" /> if an input method is active; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-522">Der Standardwert der zugrunde liegenden angefügten Eigenschaft ist <see langword="true" />, jedoch wird dieser Wert durch den Zustand der Eingabemethoden zur Laufzeit beeinflusst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-522">The default value of the underlying attached property is <see langword="true" />; however, this value is influenced by the state of input methods at runtime.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-523">Diese Eigenschaft gibt den Wert, der durch die angefügte Eigenschaft zurückgegeben wird <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> für den derzeit aktivierten Eingabemethoden (Tastatur, Sprache und andere Eingabegeräte).</span><span class="sxs-lookup"><span data-stu-id="76dc5-523">This property returns the value that is returned by the attached property <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> for the currently enabled input methods (keyboard, speech, and other input devices).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.ContentElement.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-524">Ruft einen Wert ab, der angibt, ob dieses Element über den Tastaturfokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-524">Gets a value that indicates whether this element has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="76dc5-525"><see langword="true" />, wenn dieses Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-525"><see langword="true" /> if this element has keyboard focus; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-526">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-526">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-527">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-527">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-528">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-528">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusedProperty>|  
|<span data-ttu-id="76dc5-529">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-529">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-530">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-530">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
        <altmember cref="E:System.Windows.ContentElement.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-531">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-531">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-532">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-532">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-533">Identifiziert die <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-533">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocused" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.ContentElement.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-534">Ruft einen Wert ab, der angibt, ob sich der Tastaturfokus innerhalb des Elements oder seiner untergeordneten Elemente befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-534">Gets a value that indicates whether keyboard focus is anywhere within the element or child elements.</span></span></summary>
        <value><span data-ttu-id="76dc5-535"><see langword="true" />, wenn sich der Tastaturfokus auf dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-535"><see langword="true" /> if keyboard focus is on the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-536">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-536">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-537">Änderungen des Werts dieser Eigenschaft in der Regel Auslösen der <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> -Ereignis, es sei denn, eine abgeleitete Klasse außer Kraft gesetzt hat <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> unterdrückt werden, das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-537">Changes to the value of this property typically raise the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event, unless a derived class has overridden <xref:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged%2A> to suppress the event.</span></span>  
  
 <span data-ttu-id="76dc5-538">Diese Eigenschaft wird nicht direkt festgelegt, aber Sie können den Fokus auf das Element festlegen, durch den Aufruf <xref:System.Windows.ContentElement.Focus%2A>, oder durch die Erstellung einer <xref:System.Windows.ContentElement.MoveFocus%2A> Anforderung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-538">You do not set this property directly, but you can set the focus to the element by calling <xref:System.Windows.ContentElement.Focus%2A>, or by making a <xref:System.Windows.ContentElement.MoveFocus%2A> request.</span></span> <span data-ttu-id="76dc5-539">Beide Methoden rufen möglicherweise Wert dieser Eigenschaft geändert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-539">Either of these method calls might change this property value.</span></span>  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-540">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-540">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-541">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-541">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsKeyboardFocusWithinProperty>|  
|<span data-ttu-id="76dc5-542">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-542">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-543">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-543">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-544">Tritt ein, wenn der Wert der <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-544">Occurs when the value of the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-545">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-545">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-546">Identifiziert die <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-546">Identifies the <see cref="P:System.Windows.ContentElement.IsKeyboardFocusWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.ContentElement.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-547">Ruft einen Wert ab, der angibt, ob die Maus von diesem Element aufgezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-547">Gets a value that indicates whether the mouse is captured by this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-548"><see langword="true" />, wenn die Maus für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-548"><see langword="true" /> if the element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-549">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-549">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-550">Status der Mausaufzeichnung bezieht sich auf prozessinternen Drag & Drop-Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="76dc5-550">Mouse capture state is related to in-process drag-and-drop operations.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-551">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-551">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-552">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-552">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCapturedProperty>|  
|<span data-ttu-id="76dc5-553">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-553">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-554">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-554">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-555">Im folgende Beispiel wird die den Status der mausaufzeichnung ein- oder ausschalten, je nachdem, ob die Maus vom Element bereits erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-555">The following example turns the mouse capture state on or off based on whether the mouse is already captured by the element.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#ismousecaptured)]
 [!code-vb[ContentElementsSmorgasbord#IsMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#ismousecaptured)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-556">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsMouseCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-556">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-557">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-557">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-558">Identifiziert die <see cref="P:System.Windows.ContentElement.IsMouseCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-558">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.ContentElement.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-559">Ruft einen Wert ab, der bestimmt, ob die Mausaufzeichnung in diesem Element oder in untergeordneten Elementen in seiner Elementstruktur enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-559">Gets a value that determines whether mouse capture is held by this element or by child elements in its element tree.</span></span></summary>
        <value><span data-ttu-id="76dc5-560"><see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Mausaufzeichnung enthält, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-560"><see langword="true" /> if this element or a contained element has mouse capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-561">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-561">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-562">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-562">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-563">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-563">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseCaptureWithinProperty>|  
|<span data-ttu-id="76dc5-564">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-564">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-565">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-565">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
        <altmember cref="M:System.Windows.ContentElement.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-566">Tritt ein, wenn der Wert der <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-566">Occurs when the value of the <see cref="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" /> changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-567">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-567">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-568">Identifiziert die <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-568">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.ContentElement.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-569">Ruft einen Wert ab, der angibt, ob die Position des Mauszeigers den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-569">Gets a value that indicates whether the position of the mouse pointer corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="76dc5-570"><see langword="true" />, wenn sich der Mauszeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-570"><see langword="true" /> if the mouse pointer is over the same element result as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-571">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-571">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-572">Im Gegensatz zu <xref:System.Windows.ContentElement.IsMouseOver%2A>, diese Eigenschaft ist nur `true` , wenn der Mauszeiger über dem literal-Element - befindet, als auch für einen Treffertest.</span><span class="sxs-lookup"><span data-stu-id="76dc5-572">Unlike <xref:System.Windows.ContentElement.IsMouseOver%2A>, this property is only `true` if the mouse pointer is over the literal element - as it is for a hit test.</span></span> <span data-ttu-id="76dc5-573">Wenn der Mauszeiger stattdessen über ein untergeordnetes Element enthalten ist, insbesondere über Elemente, die Teil eines Elements umfangreichere Vorlage und Zusammensetzung zu dieser Eigenschaft werden `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-573">If the mouse pointer is instead over a child element, in particular over elements that are part of an element's deeper template and compositing, this property will be `false`.</span></span> <span data-ttu-id="76dc5-574">Es sei denn, Sie wissen, wie ein Steuerelement so zusammengesetzt ist (z. B. Sie verwenden diese Eigenschaft in einer benutzerdefinierten Steuerelementvorlage für ein Steuerelement, das Sie definieren), diese Eigenschaft möglicherweise unerwartete Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-574">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="76dc5-575">Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.ContentElement.IsMouseOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-575">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsMouseOver%2A> instead.</span></span>  
  
 <span data-ttu-id="76dc5-576">Wenn die Maus von diesem Element erfasst wird, und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft wird weiterhin zurück `true` bis Mausauswahl verloren, und der Zeiger nicht über die Grenzen ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-576">If the mouse is captured by this element, and this property is `true` at time of capture, this property will continue to return `true` until mouse capture is lost and the pointer is not over its bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-577">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-577">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-578">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-578">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseDirectlyOverProperty>|  
|<span data-ttu-id="76dc5-579">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-579">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-580">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-580">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-581">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-581">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-582">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-582">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-583">Identifiziert die <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-583">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.ContentElement.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-584">Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über diesem Element befindet (einschließlich visueller untergeordneter Elemente und der Elemente, aus denen sich ein Steuerelement zusammensetzt).</span><span class="sxs-lookup"><span data-stu-id="76dc5-584">Gets a value that indicates whether the mouse pointer is located over this element (including visual child elements, or its control compositing).</span></span></summary>
        <value><span data-ttu-id="76dc5-585"><see langword="true" />, wenn sich der Mauszeiger über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-585"><see langword="true" /> if mouse pointer is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-586">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-586">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-587">Obwohl ein Analog "IsMouseOverChanged"-Ereignis nicht vorhanden ist, sind mehrere ähnliche Ereignisse auf.</span><span class="sxs-lookup"><span data-stu-id="76dc5-587">Although an analogous "IsMouseOverChanged" event does not exist, several similar events do.</span></span> <span data-ttu-id="76dc5-588">Beispielsweise können Sie <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, und <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-588">For example, you can use <xref:System.Windows.ContentElement.MouseEnter>, <xref:System.Windows.ContentElement.MouseMove>, and <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged>.</span></span>  
  
 <span data-ttu-id="76dc5-589">Wenn dieses Element die Mausauswahl erhält, wird diese Eigenschaft bleibt `true` bis Mausauswahl verloren, und der Mauszeiger der Grenzen des Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-589">If this element captures the mouse, this property remains `true` until mouse capture is lost and the mouse pointer leaves the element bounds.</span></span>  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-590">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-590">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-591">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-591">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsMouseOverProperty>|  
|<span data-ttu-id="76dc5-592">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-592">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-593">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-593">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-594">Das folgende Beispiel erstellt ein Format, das einen Eigenschaften-Setter enthält, die ein alternatives visuelles Verhalten bietet bei der ein <xref:System.Windows.Documents.Hyperlink> Berichte <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-594">The following example creates a style that includes a property setter that gives an alternate visual behavior when a <xref:System.Windows.Documents.Hyperlink> reports <xref:System.Windows.ContentElement.IsMouseOver%2A> `true`.</span></span>  
  
 [!code-xaml[ContentElementsSmorgasbord#IsEnabledIsMouseOver](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml#isenabledismouseover)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-595">Identifiziert die <see cref="P:System.Windows.ContentElement.IsMouseOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-595">Identifies the <see cref="P:System.Windows.ContentElement.IsMouseOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.ContentElement.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-596">Ruft einen Wert ab, der angibt, ob der Tablettstift für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-596">Gets a value that indicates whether the stylus is captured to this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-597"><see langword="true" />, wenn der Tablettstift für dieses Element erfasst wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-597"><see langword="true" /> if the element has stylus capture; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-598">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-598">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-599">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-599">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-600">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-600">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-601">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-601">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-602">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-602">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCapturedProperty>|  
|<span data-ttu-id="76dc5-603">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-603">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-604">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-604">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.CaptureStylus" />
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-605">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsStylusCaptured" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-605">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-606">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-606">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-607">Identifiziert die <see cref="P:System.Windows.ContentElement.IsStylusCaptured" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-607">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptured" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.ContentElement.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-608">Ruft einen Wert ab, der angibt, ob das Element einschließlich der untergeordneten Elemente und der Elemente, aus denen sich ein Steuerelement zusammensetzt, Tablettstifteingaben erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-608">Gets a value that determines whether stylus capture is held by this element, including child elements and control compositing.</span></span></summary>
        <value><span data-ttu-id="76dc5-609"><see langword="true" />, wenn das Element Tablettstifteingaben erfasst, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-609"><see langword="true" /> if stylus capture is held within this element; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-610">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-610">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-611">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-611">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-612">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-612">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-613">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-613">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusCaptureWithinProperty>|  
|<span data-ttu-id="76dc5-614">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-614">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-615">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-615">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-616">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-616">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-617">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-617">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-618">Identifiziert die <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-618">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusCaptureWithin" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.ContentElement.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-619">Ruft einen Wert ab, der angibt, ob die Position des Tablettstifts den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-619">Gets a value that indicates whether the stylus position corresponds to hit test results, which take element compositing into account.</span></span></summary>
        <value><span data-ttu-id="76dc5-620"><see langword="true" />, wenn sich der Tablettstift über demselben Element wie ein Treffertest befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-620"><see langword="true" /> if the stylus is over the same element as a hit test; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-621">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-621">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-622">Im Gegensatz zu <xref:System.Windows.ContentElement.IsStylusOver%2A>, diese Eigenschaft ist nur `true` , wenn der Tablettstift über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-622">Unlike <xref:System.Windows.ContentElement.IsStylusOver%2A>, this property is only `true` if the stylus is over the element.</span></span> <span data-ttu-id="76dc5-623">Wenn der Tablettstift stattdessen über ein untergeordnetes Element oder Elemente, die Teil einer tiefer elementzusammensetzung sind, gibt diese Eigenschaft werden `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-623">If the stylus is instead over a child element or over elements that are part of an element's deeper compositing, this property will be `false`.</span></span>  
  
 <span data-ttu-id="76dc5-624">Es sei denn, Sie wissen, wie ein Steuerelement so zusammengesetzt ist (z. B. Sie verwenden diese Eigenschaft in einer benutzerdefinierten Steuerelementvorlage für ein Steuerelement, das Sie definieren), diese Eigenschaft möglicherweise unerwartete Ergebnisse zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-624">Unless you know how a control is composited (for example, you use this property in a custom control template for a control that you define), this property might return unexpected results.</span></span> <span data-ttu-id="76dc5-625">Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.ContentElement.IsStylusOver%2A> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-625">For most scenarios where you are not authoring controls, use <xref:System.Windows.ContentElement.IsStylusOver%2A> instead.</span></span>  
  
 <span data-ttu-id="76dc5-626">Wenn dieses Element Tablettstifteingaben erfasst und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft bleibt `true` bis Stiftauswahl verloren, und er sich befindet sich nicht über die Grenzen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-626">If this element has stylus capture and this property is `true` at the time of capture, this property remains `true` until stylus capture is lost and the stylus is not over its bounds.</span></span>  
  
 <span data-ttu-id="76dc5-627">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-627">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-628">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-628">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-629">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-629">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-630">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-630">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusDirectlyOverProperty>|  
|<span data-ttu-id="76dc5-631">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-631">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-632">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-632">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-633">Tritt ein, wenn der Wert der <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-633">Occurs when the value of the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> property changes on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-634">Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-634">This member is a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] event, not a routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-635">Identifiziert die <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-635">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusDirectlyOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.ContentElement.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-636">Ruft einen Wert ab, der angibt, ob sich der Tablettstift über diesem Element (einschließlich untergeordneter visueller Elemente) befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-636">Gets a value that indicates whether the stylus is located over this element (including visual child elements).</span></span></summary>
        <value><span data-ttu-id="76dc5-637"><see langword="true" />, wenn sich der Tablettstift über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-637"><see langword="true" /> if the stylus is over the element or its child elements; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dc5-638">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-638">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-639">Wenn dieses Element die Stiftauswahl verfügt, wird diese Eigenschaft bleibt `true` bis Stiftauswahl verloren, und der Zeiger, aus der Begrenzungen ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-639">If this element has stylus capture, this property remains `true` until stylus capture is lost and the pointer is out of its bounds.</span></span>  
  
 <span data-ttu-id="76dc5-640">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-640">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-641">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-641">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="76dc5-642">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="76dc5-642">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-643">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-643">Identifier field</span></span>|<xref:System.Windows.ContentElement.IsStylusOverProperty>|  
|<span data-ttu-id="76dc5-644">Legen Sie auf der Metadaten-Eigenschaften `true`</span><span class="sxs-lookup"><span data-stu-id="76dc5-644">Metadata properties set to `true`</span></span>|<span data-ttu-id="76dc5-645">None</span><span class="sxs-lookup"><span data-stu-id="76dc5-645">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.ContentElement.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-646">Identifiziert die <see cref="P:System.Windows.ContentElement.IsStylusOver" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-646">Identifies the <see cref="P:System.Windows.ContentElement.IsStylusOver" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-647">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-647">Occurs when a key is pressed while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-648">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="76dc5-648">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="76dc5-649">Die <xref:System.Windows.ContentElement.KeyDown> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-649">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="76dc5-650">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-650">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="76dc5-651">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.KeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-651">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event for this class so that <xref:System.Windows.ContentElement.KeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-652">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.KeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-652">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-653">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-653">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-654">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-654">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyDownEvent>|  
|<span data-ttu-id="76dc5-655">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-655">Routing strategy</span></span>|<span data-ttu-id="76dc5-656">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-656">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-657">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-657">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="76dc5-658">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-658">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-659">Außer Kraft setzen <xref:System.Windows.ContentElement.OnKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-659">Override <xref:System.Windows.ContentElement.OnKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-660">Identifiziert das <see cref="E:System.Windows.ContentElement.KeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-660">Identifies the <see cref="E:System.Windows.ContentElement.KeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-661">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-661">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-662">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-662">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-663">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-663">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-664">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-664">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-665">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-665">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-666">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-666">Occurs when a key is released while focus is on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-667">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.ContentElement.KeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-667">This event creates an alias for the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event for this class so that  <xref:System.Windows.ContentElement.KeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-668">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.KeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-668">Event handlers that are attached to the <xref:System.Windows.ContentElement.KeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-669">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-669">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-670">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-670">Identifier field</span></span>|<xref:System.Windows.ContentElement.KeyUpEvent>|  
|<span data-ttu-id="76dc5-671">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-671">Routing strategy</span></span>|<span data-ttu-id="76dc5-672">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-672">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-673">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-673">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="76dc5-674">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-674">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewKeyUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-675">Außer Kraft setzen <xref:System.Windows.ContentElement.OnKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-675">Override <xref:System.Windows.ContentElement.OnKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-676">Identifiziert das <see cref="E:System.Windows.ContentElement.KeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-676">Identifies the <see cref="E:System.Windows.ContentElement.KeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-677">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-677">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-678">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-678">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-679">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-679">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-680">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-680">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-681">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-681">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-682">Tritt auf, wenn dieses Element den logischen Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-682">Occurs when this element loses logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-683">Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich durch einen Methodenaufruf verloren wird, der vorherige Tastaturfokus jedoch in einem anderen Gültigkeitsbereich vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-683">Logical focus differs from keyboard focus if focus is deliberately forced away by using a method call but the previous keyboard focus exists in a different scope.</span></span> <span data-ttu-id="76dc5-684">In diesem Szenario und Tastatur Fokus bleibt also das Element, in denen eine <xref:System.Windows.ContentElement.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-684">In this scenario, keyboard focus remains where it is, and the element where a <xref:System.Windows.ContentElement.Focus%2A> method is called still gets logical focus.</span></span>  
  
 <span data-ttu-id="76dc5-685">Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.ContentElement.IsFocused%2A> Eigenschaft eines Elements in der Route ändert sich von `true` zu `false`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-685">A more precise interpretation of this event is that it is raised when the value of the <xref:System.Windows.ContentElement.IsFocused%2A> property of an element in the route changes from `true` to `false`.</span></span>  
  
 <span data-ttu-id="76dc5-686">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-686">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-687">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-687">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that gained focus.</span></span>  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-688">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-688">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-689">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-689">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostFocusEvent>|  
|<span data-ttu-id="76dc5-690">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-690">Routing strategy</span></span>|<span data-ttu-id="76dc5-691">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-691">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-692">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-692">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
-   <span data-ttu-id="76dc5-693">Es gibt kein entsprechendes Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-693">There is no corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-694">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-694">Override <xref:System.Windows.ContentElement.OnLostFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-695">Identifiziert das <see cref="E:System.Windows.ContentElement.LostFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-695">Identifies the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-696">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-696">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-697">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-697">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-698">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-698">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-699">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-699">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-700">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-700">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-701">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-701">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-702">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-702">Because this event uses bubbling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-703">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-703">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="76dc5-704">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.LostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-704">This event creates an alias for the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-705">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.LostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-705">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-706">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-706">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-707">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-707">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostKeyboardFocusEvent>|  
|<span data-ttu-id="76dc5-708">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-708">Routing strategy</span></span>|<span data-ttu-id="76dc5-709">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-709">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-710">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-710">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="76dc5-711">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-711">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="76dc5-712">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-712">Override <xref:System.Windows.ContentElement.OnLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-713">Identifiziert das <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-713">Identifies the <see cref="E:System.Windows.ContentElement.LostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-714">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-714">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-715">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-715">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-716">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-716">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-717">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-717">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-718">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-718">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-719">Tritt auf, wenn dieses Element die Mausauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-719">Occurs when this element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-720">Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-720">When an element captures the mouse, it receives mouse input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="76dc5-721">Der Mauszeiger wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-721">The mouse is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="76dc5-722">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das mehr erfasst möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-722">Because this event uses bubbling routing, the element that loses capture might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-723">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, die Mausereignisse mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-723">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost capture.</span></span>  
  
 <span data-ttu-id="76dc5-724">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.LostMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-724">This event creates an alias for the <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostMouseCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-725">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.LostMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-725">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostMouseCapture> event are attached to the underlying <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-726">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-726">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-727">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-727">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostMouseCaptureEvent>|  
|<span data-ttu-id="76dc5-728">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-728">Routing strategy</span></span>|<span data-ttu-id="76dc5-729">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-729">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-730">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-730">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-731">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-731">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-732">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-732">Override <xref:System.Windows.ContentElement.OnLostMouseCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-733">Identifiziert das <see cref="E:System.Windows.ContentElement.LostMouseCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-733">Identifies the <see cref="E:System.Windows.ContentElement.LostMouseCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-734">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-734">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-735">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-735">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-736">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-736">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-737">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-737">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-738">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-738">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-739">Tritt auf, wenn dieses Element die Stiftauswahl verliert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-739">Occurs when this element loses stylus capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-740">Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-740">When an element captures the stylus, it receives stylus input even if the pointer is outside its bounds.</span></span> <span data-ttu-id="76dc5-741">Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-741">The stylus is typically captured only during drag-and-drop operations.</span></span>  
  
 <span data-ttu-id="76dc5-742">Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-742">Because this event uses bubbling routing, the element that loses focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-743">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-743">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="76dc5-744">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.LostStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-744">This event creates an alias for the <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.LostStylusCapture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-745">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.LostStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-745">Event handlers that are attached to the <xref:System.Windows.ContentElement.LostStylusCapture> event are attached to the underlying <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-746">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-746">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-747">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-747">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostStylusCaptureEvent>|  
|<span data-ttu-id="76dc5-748">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-748">Routing strategy</span></span>|<span data-ttu-id="76dc5-749">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-749">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-750">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-750">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-751">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-751">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-752">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-752">Override <xref:System.Windows.ContentElement.OnLostStylusCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-753">Identifiziert das <see cref="E:System.Windows.ContentElement.LostStylusCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-753">Identifies the <see cref="E:System.Windows.ContentElement.LostStylusCapture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-754">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-754">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-755">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-755">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-756">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-756">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-757">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-757">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-758">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-758">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-759">Tritt ein, wenn dieses Element keine Fingereingaben mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-759">Occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-760">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-760">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-761">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-761">Identifier field</span></span>|<xref:System.Windows.ContentElement.LostTouchCaptureEvent>|  
|<span data-ttu-id="76dc5-762">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-762">Routing strategy</span></span>|<span data-ttu-id="76dc5-763">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-763">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-764">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-764">Delegate</span></span>|<span data-ttu-id="76dc5-765">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-765"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-766">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-766">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-767">Identifiziert das <see cref="E:System.Windows.ContentElement.LostTouchCapture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-767">Identifies the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-768">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-768">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-769">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-769">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-770">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-770">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-771">Die <xref:System.Windows.ContentElement.MouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.ContentElement.MouseLeftButtonDown> oder <xref:System.Windows.ContentElement.MouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-771">The <xref:System.Windows.ContentElement.MouseDown> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="76dc5-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> und <xref:System.Windows.ContentElement.MouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-772"><xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="76dc5-773">Finden Sie unter "Hinweise" für <xref:System.Windows.ContentElement.MouseLeftButtonDown> oder <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-773">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonDown> or <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="76dc5-774">Einige <xref:System.Windows.ContentElement> abgeleitete Klassen, die Control-ähnliches Verhalten, z. B. <xref:System.Windows.Documents.Hyperlink>, möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="76dc5-774">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="76dc5-775">Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-775">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="76dc5-776">Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-776">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="76dc5-777">Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-777">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="76dc5-778">Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-778">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="76dc5-779">Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.ContentElement.MouseDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:</span><span class="sxs-lookup"><span data-stu-id="76dc5-779">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="76dc5-780">Fügen Sie Handler für die <xref:System.Windows.ContentElement.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-780">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="76dc5-781">Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.</span><span class="sxs-lookup"><span data-stu-id="76dc5-781">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="76dc5-782">Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.ContentElement.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-782">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-783">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-783">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-784">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-784">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseDownEvent>|  
|<span data-ttu-id="76dc5-785">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-785">Routing strategy</span></span>|<span data-ttu-id="76dc5-786">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-786">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-787">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-787">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-788">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-788">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-789">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-789">Override <xref:System.Windows.ContentElement.OnMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-790">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-790">Identifies the <see cref="E:System.Windows.ContentElement.MouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-791">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-791">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-792">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-792">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-793">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-793">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-794">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-794">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-795">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-795">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-796">Tritt auf, wenn der Mauszeiger in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-796">Occurs when the mouse pointer enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-797"><xref:System.Windows.ContentElement.MouseEnter> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-797"><xref:System.Windows.ContentElement.MouseEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="76dc5-798">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-798">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="76dc5-799">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-799">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="76dc5-800">Obwohl <xref:System.Windows.ContentElement.MouseEnter> verfolgt nach, wenn der Mauszeiger die Grenzen eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.ContentElement.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-800">Although <xref:System.Windows.ContentElement.MouseEnter> tracks when the mouse pointer enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="76dc5-801">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-801">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-802">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-802">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseEnter> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-803">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-803">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-804">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-804">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseEnterEvent>|  
|<span data-ttu-id="76dc5-805">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-805">Routing strategy</span></span>|<span data-ttu-id="76dc5-806">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-806">Direct</span></span>|  
|<span data-ttu-id="76dc5-807">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-807">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-808">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-808">Override <xref:System.Windows.ContentElement.OnMouseEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-809">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-809">Identifies the <see cref="E:System.Windows.ContentElement.MouseEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-810">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-810">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-811">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-811">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-812">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-812">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-813">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-813">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-814">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-814">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-815">Tritt auf, wenn der Mauszeiger den Bereich dieses Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-815">Occurs when the mouse pointer leaves the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-816"><xref:System.Windows.ContentElement.MouseLeave> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-816"><xref:System.Windows.ContentElement.MouseLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="76dc5-817">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-817">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="76dc5-818">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-818">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="76dc5-819">Obwohl <xref:System.Windows.ContentElement.MouseLeave> verfolgt nach, wenn die Maus ein Element, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.ContentElement.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-819">Although <xref:System.Windows.ContentElement.MouseLeave> tracks when the mouse leaves an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="76dc5-820">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-820">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-821">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-821">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseLeave> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-822">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-822">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-823">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-823">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeaveEvent>|  
|<span data-ttu-id="76dc5-824">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-824">Routing strategy</span></span>|<span data-ttu-id="76dc5-825">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-825">Direct</span></span>|  
|<span data-ttu-id="76dc5-826">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-826">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-827">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-827">Override <xref:System.Windows.ContentElement.OnMouseLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-828">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-828">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-829">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-829">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-830">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-830">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-831">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-831">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-832">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-832">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-833">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-833">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-834">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-834">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-835">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-835">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-836">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-836">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-837">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-837">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-838">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-838">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-839">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-839">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-840">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-840">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-841">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-841">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="76dc5-842">Einige <xref:System.Windows.ContentElement> abgeleitete Klassen, die Control-ähnliches Verhalten, z. B. <xref:System.Windows.Documents.Hyperlink>, möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="76dc5-842">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="76dc5-843">Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-843">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="76dc5-844">Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-844">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="76dc5-845">Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-845">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="76dc5-846">Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-846">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="76dc5-847">Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.ContentElement.MouseLeftButtonDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:</span><span class="sxs-lookup"><span data-stu-id="76dc5-847">You can resolve the issue that is outlined in the preceding Important and still receive <xref:System.Windows.ContentElement.MouseLeftButtonDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="76dc5-848">Fügen Sie Handler für die <xref:System.Windows.ContentElement.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-848">Attach handlers for the <xref:System.Windows.ContentElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="76dc5-849">Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.</span><span class="sxs-lookup"><span data-stu-id="76dc5-849">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="76dc5-850">Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.ContentElement.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-850">Register a handler on the control procedurally by calling <xref:System.Windows.ContentElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-851">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-851">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-852">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-852">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonDownEvent>|  
|<span data-ttu-id="76dc5-853">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-853">Routing strategy</span></span>|<span data-ttu-id="76dc5-854">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-854">Direct</span></span>|  
|<span data-ttu-id="76dc5-855">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-855">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-856">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-856">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-857">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-857">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-858">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-858">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-859">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-859">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-860">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-860">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-861">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-861">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-862">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-862">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-863">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-863">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-864">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-864">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-865">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-865">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-866">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-866">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-867">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-867">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-868">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-868">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-869">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-869">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-870">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-870">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-871">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-871">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-872">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-872">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseLeftButtonUpEvent>|  
|<span data-ttu-id="76dc5-873">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-873">Routing strategy</span></span>|<span data-ttu-id="76dc5-874">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-874">Direct</span></span>|  
|<span data-ttu-id="76dc5-875">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-875">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-876">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-876">Override <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-877">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-877">Identifies the <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-878">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-878">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-879">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-879">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-880">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-880">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-881">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-881">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-882">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-882">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-883">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-883">Occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-884">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-884">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-885">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-885">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-886">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-886">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-887">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-887">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseMoveEvent>|  
|<span data-ttu-id="76dc5-888">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-888">Routing strategy</span></span>|<span data-ttu-id="76dc5-889">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-889">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-890">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-890">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-891">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-891">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-892">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-892">Override <xref:System.Windows.ContentElement.OnMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-893">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-893">Identifies the <see cref="E:System.Windows.ContentElement.MouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-894">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-894">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-895">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-895">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-896">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-896">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-897">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-897">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-898">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-898">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-899">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-899">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-900">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-900">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-901">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-901">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-902">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-902">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-903">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-903">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-904">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-904">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-905">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-905">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-906">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-906">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-907">Rechte Schaltfläche Mausereignisse haben systemeigene Behandlung häufig in Anwendungsszenarien.</span><span class="sxs-lookup"><span data-stu-id="76dc5-907">Right button mouse events frequently have native handling in application scenarios.</span></span> <span data-ttu-id="76dc5-908">Beispielsweise kann eine rechten Maustaste unten ein Kontextmenü anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-908">For instance, a right mouse button down might display a context menu.</span></span> <span data-ttu-id="76dc5-909">Finden Sie unter [Übersicht über ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-909">See [ContextMenu Overview](~/docs/framework/wpf/controls/contextmenu-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-910">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-910">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-911">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-911">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonDownEvent>|  
|<span data-ttu-id="76dc5-912">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-912">Routing strategy</span></span>|<span data-ttu-id="76dc5-913">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-913">Direct</span></span>|  
|<span data-ttu-id="76dc5-914">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-914">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-915">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-915">Override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-916">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-916">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-917">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-917">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-918">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-918">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-919">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-919">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-920">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-920">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-921">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-921">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-922">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-922">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-923">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-923">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a bubbling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-924">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-924">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-925">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-925">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-926">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-926">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-927">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-927">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-928">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-928">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-929">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-929">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-930">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-930">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-931">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-931">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseRightButtonUpEvent>|  
|<span data-ttu-id="76dc5-932">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-932">Routing strategy</span></span>|<span data-ttu-id="76dc5-933">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-933">Direct</span></span>|  
|<span data-ttu-id="76dc5-934">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-934">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-935">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-935">Override <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-936">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-936">Identifies the <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-937">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-937">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-938">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-938">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-939">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-939">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-940">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-940">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-941">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-941">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-942">Tritt auf, wenn eine Maustaste über diesem Element losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-942">Occurs when any mouse button is released over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-943">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-943">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-944">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-944">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-945">Die <xref:System.Windows.ContentElement.MouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.ContentElement.MouseLeftButtonUp> oder <xref:System.Windows.ContentElement.MouseRightButtonUp>, eine Version eines der zwei standard Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-945">The <xref:System.Windows.ContentElement.MouseUp> event is often raised together with either <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>, which correspond to a release of one of the two standard mouse buttons.</span></span> <span data-ttu-id="76dc5-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> und <xref:System.Windows.ContentElement.MouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-946"><xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="76dc5-947">Finden Sie unter "Hinweise" für <xref:System.Windows.ContentElement.MouseLeftButtonUp> oder <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-947">See Remarks for <xref:System.Windows.ContentElement.MouseLeftButtonUp> or <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-948">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-948">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-949">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-949">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseUpEvent>|  
|<span data-ttu-id="76dc5-950">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-950">Routing strategy</span></span>|<span data-ttu-id="76dc5-951">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-951">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-952">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-952">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-953">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-953">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-954">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-954">Override <xref:System.Windows.ContentElement.OnMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-955">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-955">Identifies the <see cref="E:System.Windows.ContentElement.MouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-956">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-956">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-957">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-957">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-958">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-958">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-959">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-959">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-960">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-960">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-961">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-961">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-962">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; aus diesem Grund, wenn Sie erhalten die <xref:System.Windows.ContentElement.MouseWheel> Ereignis von einem Element mit Fokus oder aufgezeichnet, der Mauszeiger möglicherweise nicht über ein anderes Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-962">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive the <xref:System.Windows.ContentElement.MouseWheel> event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="76dc5-963">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.MouseWheel> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-963">This event creates an alias for the <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.MouseWheel> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-964">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.MouseWheel> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-964">Event handlers that are attached to the <xref:System.Windows.ContentElement.MouseWheel> event are attached to the underlying <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-965">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-965">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-966">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-966">Identifier field</span></span>|<xref:System.Windows.ContentElement.MouseWheelEvent>|  
|<span data-ttu-id="76dc5-967">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-967">Routing strategy</span></span>|<span data-ttu-id="76dc5-968">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-968">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-969">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-969">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="76dc5-970">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-970">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewMouseWheel>.</span></span>  
  
-   <span data-ttu-id="76dc5-971">Außer Kraft setzen <xref:System.Windows.ContentElement.OnMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-971">Override <xref:System.Windows.ContentElement.OnMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-972">Identifiziert das <see cref="E:System.Windows.ContentElement.MouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-972">Identifies the <see cref="E:System.Windows.ContentElement.MouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-973">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-973">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-974">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-974">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-975">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-975">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-976">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-976">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-977">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-977">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="contentElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request"><span data-ttu-id="76dc5-978">Eine Durchlaufanforderung, die eine Eigenschaft enthält, die entweder einen Modus zum Durchlaufen in der vorliegenden Aktivierreihenfolge oder eine Richtung zum visuellen Verschieben angibt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-978">A traversal request, which contains a property that indicates either a mode to traverse in existing tab order, or a direction to move visually.</span></span></param>
        <summary><span data-ttu-id="76dc5-979">Versucht, den Fokus von diesem Element auf ein anderes Element zu verschieben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-979">Attempts to move focus from this element to another element.</span></span> <span data-ttu-id="76dc5-980">Die Richtung, in der der Fokus verschoben wird, wird durch eine Führungsrichtung angegeben, die innerhalb der Organisation des visuellen übergeordneten Elements für dieses Element interpretiert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-980">The direction to move focus is specified by a guidance direction, which is interpreted within the organization of the visual parent for this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-981"><see langword="true" />, wenn der angeforderte Durchlauf ausgeführt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-981"><see langword="true" /> if the requested traversal was performed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-982">Stellen Sie sicher, dass Sie überprüfen, dass den Rückgabewert dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="76dc5-982">Make sure you check the return value of this method.</span></span> <span data-ttu-id="76dc5-983">Der Rückgabewert `false` zurückgegeben werden, wenn der Durchlauf ausgeführt wird, in einen Tabstopp, die durch eines Steuerelements Komposition definiert ist, und die durchlaufanforderung hat keine umschließen angefordert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-983">A return value of `false` might be returned if the traversal runs into a tab stop that is defined by a control's composition, and the traversal request did not request to wrap.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="contentElement.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-984">Gibt klassenspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur zurück.</span><span class="sxs-lookup"><span data-stu-id="76dc5-984">Returns class-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations for the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span></summary>
        <returns><span data-ttu-id="76dc5-985">Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-985">The type-specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation.</span></span></returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-986">Die Implementierung dieser Methode ist in der Regel um den Konstruktor eines bestimmten aufzurufen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierung, und geben sie als Rückgabewert zurück.</span><span class="sxs-lookup"><span data-stu-id="76dc5-986">The implementation of this method is typically to call the constructor of a specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementation, and return it as the return value.</span></span>  
  
<span data-ttu-id="76dc5-987">Alle <see cref="T:System.Windows.ContentElement" /> abgeleitete Klassen sollten diese Methode implementieren, um ihre eigenen spezifischen bieten <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierungen der [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Infrastruktur.</span><span class="sxs-lookup"><span data-stu-id="76dc5-987">All <see cref="T:System.Windows.ContentElement" /> derived classes should implement this method in order to provide their own specific <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> implementations to the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure.</span></span> <span data-ttu-id="76dc5-988">Weitere Informationen zum Implementieren dieses Musters finden Sie unter <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-988">For details on implementing this pattern, see <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-989">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-989">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-990">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-990">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-991">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-991">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-992">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-992">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-993">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-993">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-994">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-994">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-995">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-995">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-996">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-996">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-997">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-997">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-998">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-998">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-999">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-999">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1000">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1000">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1001">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1001">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1002">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1002">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1003">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1003">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1004">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1004">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1005">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1005">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1006">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1006">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1007">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1007">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1008">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1008">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1009">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1009">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1010">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1010">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1011">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1011">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1012">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1012">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1013">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1013">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1014">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1014">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1015">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1015">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1016">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1016">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1017">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1017">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1018">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1018">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1019">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1019">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1020">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1020">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1021">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1021">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1022">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1022">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1023">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1023">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1024">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1024">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1025">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1025">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1026">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1026">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1027">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1027">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1028">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1028">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1029">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1029">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1030">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1030">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1031">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1031">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1032">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1032">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1033">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1033">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1034">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1034">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1035">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1035">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1036">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1036">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1037">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1037">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1038">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1038">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1039">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1039">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1040">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1040">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1041">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1041">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1042">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1042">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1043">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1043">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1044">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1044">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1045">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1045">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1046">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1046">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1047">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1047">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1048">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1048">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1049">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1049">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="76dc5-1050">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.ContentElement.GotFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1050">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.GotFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="76dc5-1051">Löst das <see cref="E:System.Windows.ContentElement.GotFocus" />-Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1051">Raises the <see cref="E:System.Windows.ContentElement.GotFocus" /> routed event by using the event data provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1052">Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1052">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="76dc5-1053">Dies auch mit \* methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.ContentElement.IsFocused%2A> Eigenschaftswert ändert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1053">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="76dc5-1054">Die <xref:System.Windows.ContentElement.OnGotFocus%2A> Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf \* Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1054">The <xref:System.Windows.ContentElement.OnGotFocus%2A> implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-1055">Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1055">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="76dc5-1056">Andernfalls die <see cref="E:System.Windows.ContentElement.GotFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1056">Otherwise, the <see cref="E:System.Windows.ContentElement.GotFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="76dc5-1057">Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.ContentElement.Focusable" /> zu <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1057">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span> <span data-ttu-id="76dc5-1058">Beachten Sie, dass standardmäßig eine <see cref="P:System.Windows.ContentElement.Focusable" /> kann keinen Fokus erhalten, die aus diesem Grund festlegen <see cref="P:System.Windows.ContentElement.Focusable" /> absichtlich möglicherweise nicht erforderlich.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1058">Note that by default a <see cref="P:System.Windows.ContentElement.Focusable" /> is not focusable, therefore setting <see cref="P:System.Windows.ContentElement.Focusable" /> deliberately might not be necessary.</span></span></para></block>
        <altmember cref="P:System.Windows.ContentElement.Focusable" />
        <altmember cref="E:System.Windows.ContentElement.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1059">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1059">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1060">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1060">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1061">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1061">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1062">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1062">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1063">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1063">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1064">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1064">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1065">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1065">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1066">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1066">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1067">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1067">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1068">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1068">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1069">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1069">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1070">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1070">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1071">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1071">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1072">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1072">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1073">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1073">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1074">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1074">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1075">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1075">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1076">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1076">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1077">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1077">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1078">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1078">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1079">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1079">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1080">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1080">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1081">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1081">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1082">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1082">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1083">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1083">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1084">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1084">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1085">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1085">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1086">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1086">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1087">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1087">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1088">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1088">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1089">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1089">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1090">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1090">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1091">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1091">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1092">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1092">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1093">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1093">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1094">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1094">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1095">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1095">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1096">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.GotTouchCapture" />-Routingereignis bereit, das eintritt, wenn eine Berührung für dieses Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1096">Provides class handling for the <see cref="E:System.Windows.ContentElement.GotTouchCapture" /> routed event that occurs when a touch is captured to this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1097">Die <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1097">The <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1098">Außer Kraft setzen <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.GotTouchCapture> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1098">Override <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.GotTouchCapture> event.</span></span> <span data-ttu-id="76dc5-1099">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1099">Be sure to call the base class' <xref:System.Windows.ContentElement.OnGotTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1100">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1100">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1101">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1101">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsKeyboardFocusedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1102">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1102">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1103">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> -Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1103">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocused%2A> dependency property changes.</span></span> <span data-ttu-id="76dc5-1104">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1104">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1105">Die <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1105">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1106">Beachten Sie, dass die <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1106">Notice that the  <xref:System.Windows.ContentElement.IsKeyboardFocusedChanged> event is not a routed event.</span></span> <span data-ttu-id="76dc5-1107">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1107">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1108">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1108">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1109">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1109">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1110">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1110">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1111">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1111">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1112">Wird aufgerufen, kurz bevor das <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1112">Invoked just before the <see cref="E:System.Windows.ContentElement.IsKeyboardFocusWithinChanged" /> event is raised by this element.</span></span> <span data-ttu-id="76dc5-1113">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1113">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1114">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1114">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsKeyboardFocusWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1115">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1115">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1116">Die <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1116">Then the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1117">Beachten Sie, dass die <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1117">Notice that the <xref:System.Windows.ContentElement.IsKeyboardFocusWithinChanged> event is not a routed event.</span></span> <span data-ttu-id="76dc5-1118">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1118">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1119">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1119">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1120">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1120">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1121">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1121">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1122">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1122">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1123">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1123">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1124">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1124">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1125">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsMouseCaptured%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1125">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1126">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1126">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1127">Die <xref:System.Windows.ContentElement.IsMouseCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1127">Then the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1128">Beachten Sie, dass die <xref:System.Windows.ContentElement.IsMouseCapturedChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1128">Notice that the <xref:System.Windows.ContentElement.IsMouseCapturedChanged> event is not a routed event.</span></span> <span data-ttu-id="76dc5-1129">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1129">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1130">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1130">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1131">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1131">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1132">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1132">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1133">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1133">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1134">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1134">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1135">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1135">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-1136">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1136">This virtual method is raised when the value of the <see cref="P:System.Windows.ContentElement.IsMouseCaptureWithin" /> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1137">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1137">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1138">Die <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1138">Then the <see cref="E:System.Windows.ContentElement.IsMouseCaptureWithinChanged" /> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1139">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1139">Notice that the event is not a routed event; Therefore,  you cannot mark it as handled in the class handler.</span></span>  
  
<span data-ttu-id="76dc5-1140">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1140">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1141">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1141">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1142">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1142">You may call base either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1143">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1143">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1144">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1144">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsMouseDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1145">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1145">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1146">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1146">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsMouseDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1147">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1147">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1148">Die <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1148">Then the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1149">Beachten Sie, dass die <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> Ereignis nicht um ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1149">Notice that the <xref:System.Windows.ContentElement.IsMouseDirectlyOverChanged> event is not a routed event.</span></span> <span data-ttu-id="76dc5-1150">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1150">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1151">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1151">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1152">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1152">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1153">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1153">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1154">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1154">A <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1155">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1155">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCapturedChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1156">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1156">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1157">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsStylusCaptured%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1157">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptured%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1158">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1158">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1159">Die <xref:System.Windows.ContentElement.IsStylusCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1159">Then the <xref:System.Windows.ContentElement.IsStylusCapturedChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1160">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1160">Notice that the event is not a routed event.</span></span> <span data-ttu-id="76dc5-1161">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1161">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1162">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1162">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1163">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1163">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1164">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1164">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1165">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1165">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1166">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1166">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusCaptureWithinChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1167">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1167">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1168">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1168">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusCaptureWithin%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1169">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1169">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1170">Die <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1170">Then the <xref:System.Windows.ContentElement.IsStylusCaptureWithinChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1171">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1171">Notice that the event is not a routed event.</span></span> <span data-ttu-id="76dc5-1172">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1172">Therefore, you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1173">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1173">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1174">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1174">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1175">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1175">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="contentElement.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1176">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1176">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1177">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1177">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.IsStylusDirectlyOverChanged" /> event is raised on this element.</span></span> <span data-ttu-id="76dc5-1178">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1178">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1179">Diese virtuelle Methode wird ausgelöst, wenn den Wert des der <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird, dessen Wert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1179">This virtual method is raised when the value of the <xref:System.Windows.ContentElement.IsStylusDirectlyOver%2A> dependency property changes its value.</span></span> <span data-ttu-id="76dc5-1180">Die virtuelle Methode wird zuerst ausgelöst und kann die Daten nach Bedarf ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1180">The virtual method is raised first and can manipulate the event data as necessary.</span></span> <span data-ttu-id="76dc5-1181">Die <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1181">Then the <xref:System.Windows.ContentElement.IsStylusDirectlyOverChanged> event is raised with that same event data instance.</span></span> <span data-ttu-id="76dc5-1182">Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1182">Notice that the event is not a routed event.</span></span> <span data-ttu-id="76dc5-1183">Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1183">Therefore you cannot mark it as handled in the class handler.</span></span>  
  
 <span data-ttu-id="76dc5-1184">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1184">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1185">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1185">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1186">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1186">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1187">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1187">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1188">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1188">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1189">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1189">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1190">Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1190">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1191">Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1191">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="76dc5-1192">Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.ContentElement.OnKeyDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1192">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1193">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1193">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1194">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1194">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1195">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1195">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1196">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1196">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1197">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1197">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1198">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1198">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1199">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1199">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1200">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1200">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1201">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1201">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1202">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1202">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1203">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1203">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1204">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1204">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1205">Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1205">Keystrokes are handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1206">Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1206">Other programming features that rely on keystrokes, for example, input and command bindings, might handle the keystroke before it is exposed as a general keystroke.</span></span> <span data-ttu-id="76dc5-1207">Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.ContentElement.OnKeyUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1207">If these input system features mark the event as handled, then <xref:System.Windows.ContentElement.OnKeyUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1208">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1208">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1209">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1209">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1210">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1210">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1211">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1211">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1212">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1212">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1213">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1213">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1214">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1214">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1215">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1215">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1216">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1216">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1217">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1217">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains event data.</span></span> <span data-ttu-id="76dc5-1218">Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.ContentElement.LostFocus" />-Ereignis enthalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1218">This event data must contain the identifier for the <see cref="E:System.Windows.ContentElement.LostFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="76dc5-1219">Löst das <see cref="E:System.Windows.ContentElement.LostFocus" />- Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1219">Raises the <see cref="E:System.Windows.ContentElement.LostFocus" /> routed event by using the event data that is provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1220">Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1220">This method, although virtual, does have a default implementation that raises the event.</span></span>  
  
 <span data-ttu-id="76dc5-1221">Dies auch mit \* methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.ContentElement.IsFocused%2A> Eigenschaftswert ändert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1221">This On\* method implementation is intended to raise the event, and this same method implementation is invoked internally to raise the event when the <xref:System.Windows.ContentElement.IsFocused%2A> property value changes.</span></span> <span data-ttu-id="76dc5-1222">Diese Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf \* Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1222">This implementation differs from some other [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] On\* implementations, which only provide a convenient way to add class handling for that event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="76dc5-1223">Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1223">Unless you have a deliberate and unusual need to not raise the focus events, make sure that your implementation calls the base implementation.</span></span> <span data-ttu-id="76dc5-1224">Andernfalls die <see cref="E:System.Windows.ContentElement.LostFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1224">Otherwise, the <see cref="E:System.Windows.ContentElement.LostFocus" /> event is not raised during typical user operations that ordinarily set focus to this element.</span></span> <span data-ttu-id="76dc5-1225">Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.ContentElement.Focusable" /> zu <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1225">If you do not intend your element to be focusable, you can prevent the element from being focusable by setting <see cref="P:System.Windows.ContentElement.Focusable" /> to <see langword="false" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1226">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1226">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1227">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1227">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1228">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1228">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1229">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1229">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1230">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1230">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1231">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1231">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1232">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1232">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1233">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1233">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1234">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1234">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1235">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1235">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1236">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1236">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1237">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1237">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1238">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1238">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1239">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1239">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1240">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1240">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1241">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1241">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1242">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1242">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1243">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1243">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1244">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1244">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1245">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1245">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1246">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1246">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1247">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1247">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1248">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1248">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1249">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1249">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1250">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Objekt, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1250">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1251">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1251">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1252">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1252">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1253">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1253">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1254">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1254">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1255">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1255">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1256">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1256">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1257">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1257">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1258">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1258">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1259">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1259">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1260">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1260">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1261">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1261">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1262">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1262">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1263">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.LostTouchCapture" />-Routingereignis bereit, das auftritt, wenn in diesem Element die Fingereingabenerfassung verloren geht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1263">Provides class handling for the <see cref="E:System.Windows.ContentElement.LostTouchCapture" /> routed event that occurs when this element loses a touch capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1264">Die <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1264">The <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1265">Außer Kraft setzen <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.LostTouchCapture> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1265">Override <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> in a derived class to handle the <xref:System.Windows.ContentElement.LostTouchCapture> event.</span></span> <span data-ttu-id="76dc5-1266">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1266">Be sure to call the base class' <xref:System.Windows.ContentElement.OnLostTouchCapture%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1267">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1267">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1268">Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1268">This event data reports details about the mouse button that was pressed and the handled state.</span></span></param>
        <summary><span data-ttu-id="76dc5-1269">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1269">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1270">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1270">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1271">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1271">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1272">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1272">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="76dc5-1273">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.ContentElement.OnMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1273">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1274">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.ContentElement.MouseLeftButtonDown> und <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1274">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonDown> and <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="76dc5-1275">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1275">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="76dc5-1276">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1276">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="76dc5-1277">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1277">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="76dc5-1278">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1278">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="76dc5-1279">Durch Behandlung <xref:System.Windows.ContentElement.OnMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1279">By handling <xref:System.Windows.ContentElement.OnMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="76dc5-1280">Dieses Verhalten kann unerwünscht sein. daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1280">This behavior might be unwanted; therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="76dc5-1281">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1281">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="76dc5-1282">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1282">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1283">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1283">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1284">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1284">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1285">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1285">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1286">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1286">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1287">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1287">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1288">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1288">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1289">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1289">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1290">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1290">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1291">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1291">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1292">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1292">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event is raised on this element.</span></span> <span data-ttu-id="76dc5-1293">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1293">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1294">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1294">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1295">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1295">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1296">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1296">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="76dc5-1297">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1297">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1298">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1298">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="76dc5-1299">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1299">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1300">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1300">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1301">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1301">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event is raised on this element.</span></span> <span data-ttu-id="76dc5-1302">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1302">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1303">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1303">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1304">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1304">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1305">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1305">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="76dc5-1306">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1306">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1307">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1307">In this case the matching event is a routed event, with a direct routing strategy.</span></span> <span data-ttu-id="76dc5-1308">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1308">Marking the event as handled is still useful for preventing the typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1309">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1309">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1310">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1310">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="76dc5-1311">Wird aufgerufen, wenn ein nicht behandeltes geroutetes <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />-Ereignis für dieses Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1311">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonDown" /> routed event is raised on this element.</span></span> <span data-ttu-id="76dc5-1312">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1312">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1313">Die <xref:System.Windows.ContentElement.MouseLeftButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1313">The <xref:System.Windows.ContentElement.MouseLeftButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1314"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonDown>.</span></span> <span data-ttu-id="76dc5-1315">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.MouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1315">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1316">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1316">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1317">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1317">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1318">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1318">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1319">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1319">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1320">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1320">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-1321">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1321">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="76dc5-1322">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1322">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="76dc5-1323">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1323">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="76dc5-1324">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1324">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1325">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1325">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1326">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1326">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1327">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1327">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1328">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1328">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1329">Die <xref:System.Windows.ContentElement.MouseLeftButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1329">The <xref:System.Windows.ContentElement.MouseLeftButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1330"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseLeftButtonUp>.</span></span> <span data-ttu-id="76dc5-1331">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.MouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1331">Although you can mark the <xref:System.Windows.ContentElement.MouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1332">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1332">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1333">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1333">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1334">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1334">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1335">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1335">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1336">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1336">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1337">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1337">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1338">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1338">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1339">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1339">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1340">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1340">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1341">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1341">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1342">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1342">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1343">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1343">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1344">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1344">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1345">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1345">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1346">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1346">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1347">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1347">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1348">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1348">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1349">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1349">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1350">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1350">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="76dc5-1351">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1351">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1352">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1352">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1353">Die <xref:System.Windows.ContentElement.MouseRightButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1353">The <xref:System.Windows.ContentElement.MouseRightButtonDown> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1354"><xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="76dc5-1355">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.MouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1355">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1356">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1356">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1357">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1357">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1358">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1358">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1359">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1359">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1360">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1360">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-1361">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1361">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="76dc5-1362">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1362">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="76dc5-1363">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1363">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="76dc5-1364">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1364">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1365">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1365">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1366">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1366">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1367">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1367">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.MouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1368">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1368">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1369">Die <xref:System.Windows.ContentElement.MouseRightButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1369">The <xref:System.Windows.ContentElement.MouseRightButtonUp> event appears to travel a bubbling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1370"><xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is the underlying event that is bubble routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="76dc5-1371">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.MouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1371">Although you can mark the <xref:System.Windows.ContentElement.MouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1372">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1372">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1373">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1373">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1374">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1374">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1375">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1375">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1376">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1376">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1377">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1377">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1378">Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1378">The event data reports that the mouse button was released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1379">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1379">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1380">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1380">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1381">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1381">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1382">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1382">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="76dc5-1383">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.ContentElement.OnMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1383">If these input system features mark the <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1384">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.ContentElement.MouseLeftButtonUp> und <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1384">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.MouseLeftButtonUp> and <xref:System.Windows.ContentElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="76dc5-1385">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1385">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="76dc5-1386">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1386">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="76dc5-1387">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1387">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="76dc5-1388">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1388">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="76dc5-1389">Durch Behandlung <xref:System.Windows.ContentElement.OnMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1389">By handling <xref:System.Windows.ContentElement.OnMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="76dc5-1390">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1390">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="76dc5-1391">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1391">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="76dc5-1392">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1392">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1393">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1393">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1394">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1394">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1395">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1395">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1396">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1396">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1397">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1397">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1398">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1398">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1399">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1399">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1400">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1400">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1401">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1401">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1402">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1402">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1403">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1403">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1404">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1404">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1405">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1405">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1406">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1406">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1407">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1407">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1408">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1408">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1409">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1409">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1410">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1410">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1411">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1411">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1412">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1412">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1413">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1413">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1414">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1414">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragEnter" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1415">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1415">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1416">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1416">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1417">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1417">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1418">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1418">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1419">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1419">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1420">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1420">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1421">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1421">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1422">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1422">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1423">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1423">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1424">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1424">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1425">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1425">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1426">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1426">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1427">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1427">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragLeave" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1428">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1428">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1429">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1429">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1430">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1430">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1431">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1431">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1432">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1432">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1433">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1433">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1434">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1434">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1435">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1435">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1436">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1436">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1437">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1437">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1438">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1438">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1439">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1439">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1440">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1440">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDragOver" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1441">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1441">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1442">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1442">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1443">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1443">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1444">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1444">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1445">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1445">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1446">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1446">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1447">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1447">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1448">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1448">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1449">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1449">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1450">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1450">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1451">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1451">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="contentElement.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1452">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1452">The <see cref="T:System.Windows.DragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1453">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDrop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1453">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewDrop" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1454">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1454">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1455">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1455">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1456">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1456">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1457">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1457">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1458">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1458">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1459">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1459">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1460">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1460">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1461">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1461">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1462">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1462">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1463">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1463">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1464">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1464">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="contentElement.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1465">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1465">The <see cref="T:System.Windows.GiveFeedbackEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1466">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1466">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1467">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1467">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1468">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1468">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1469">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1469">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1470">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1470">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1471">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1471">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1472">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1472">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1473">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1473">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1474">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1474">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1475">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1475">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1476">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1476">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1477">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1477">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1478">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1478">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1479">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1479">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1480">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1480">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1481">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1481">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1482">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1482">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1483">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1483">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1484">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1484">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1485">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1485">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1486">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1486">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1487">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1487">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1488">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1488">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1489">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1489">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1490">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1490">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1491">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1491">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1492">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1492">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1493">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1493">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1494">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1494">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1495">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1495">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1496">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1496">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1497">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1497">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1498">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1498">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1499">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1499">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1500">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1500">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1501">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1501">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1502">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1502">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1503">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1503">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="contentElement.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1504">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1504">The <see cref="T:System.Windows.Input.KeyEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1505">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1505">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1506">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1506">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1507">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1507">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1508">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1508">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1509">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1509">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1510">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1510">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1511">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1511">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1512">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1512">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1513">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1513">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1514">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1514">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1515">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1515">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1516">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1516">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="contentElement.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1517">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1517">The <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1518">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1518">Invoked when an unhandled <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1519">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1519">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1520">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1520">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1521">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1521">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1522">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1522">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1523">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1523">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1524">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1524">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1525">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1525">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1526">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1526">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1527">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1527">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1528">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1528">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1529">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1529">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1530">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1530">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1531">Die Ereignisdaten melden, dass eine oder mehrere Maustasten gedrückt wurden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1531">The event data reports that one or more mouse buttons were pressed.</span></span></param>
        <summary><span data-ttu-id="76dc5-1532">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1532">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1533">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1533">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1534">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1534">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1535">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1535">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="76dc5-1536">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1536">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1537">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1537">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="76dc5-1538">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1538">Either of these events may be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="76dc5-1539">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1539">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="76dc5-1540">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1540">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="76dc5-1541">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1541">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="76dc5-1542">Durch Behandlung <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1542">By handling <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A>, you are implying that your class handling accounted for all possible mouse button down actions.</span></span> <span data-ttu-id="76dc5-1543">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1543">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="76dc5-1544">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1544">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="76dc5-1545">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1545">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1546">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1546">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1547">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1547">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1548">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1548">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1549">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1549">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1550">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1550">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1551">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1551">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1552">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1552">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1553">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1553">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1554">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1554">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1555">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1555">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1556">Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1556">The event data reports that the left mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="76dc5-1557">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1557">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1558">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1558">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1559">Die <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1559">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1560"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>.</span></span> <span data-ttu-id="76dc5-1561">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1561">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1562">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1562">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1563">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1563">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1564">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1564">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1565">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1565">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1566">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1566">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-1567">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1567">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="76dc5-1568">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1568">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="76dc5-1569">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1569">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A>.</span></span> <span data-ttu-id="76dc5-1570">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1570">For example, you can derive from <xref:System.Windows.Controls.Button> and override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> in your derived class without calling the base implementation; however, this override disables the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1571">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1571">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1572">Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1572">The event data reports that the left mouse button was released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1573">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1573">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1574">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1574">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1575">Die <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1575">The <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1576"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>.</span></span> <span data-ttu-id="76dc5-1577">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1577">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1578">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1578">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1579">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1579">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1580">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1580">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1581">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1581">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1582">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1582">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1583">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1583">The <see cref="T:System.Windows.Input.MouseEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1584">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1584">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1585">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1585">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1586">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1586">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1587">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1587">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1588">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1588">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1589">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1589">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1590">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1590">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1591">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1591">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1592">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1592">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1593">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1593">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1594">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1594">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1595">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1595">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1596">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1596">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1597">Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1597">The event data reports that the right mouse button was pressed.</span></span></param>
        <summary><span data-ttu-id="76dc5-1598">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1598">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1599">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1599">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1600">Die <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1600">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1601"><xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="76dc5-1602">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1602">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1603">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1603">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1604">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1604">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1605">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1605">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1606">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1606">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1607">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1607">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span>  
  
 <span data-ttu-id="76dc5-1608">Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1608">Alternatively, you can override this method in order to change event handling for a specific mouse state.</span></span> <span data-ttu-id="76dc5-1609">An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1609">Whether you choose to call the base implementation depends on your scenario.</span></span> <span data-ttu-id="76dc5-1610">Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1610">Failing to call base disables default input handling for that mouse event on ancestor classes that also expect to invoke <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A>.</span></span> <span data-ttu-id="76dc5-1611">Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1611">For example, you can derive from <xref:System.Windows.Controls.Control> and override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> in your derived class without calling base; however, this override disables the context menu services on your control, which are part of the <xref:System.Windows.Controls.Control> default behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1612">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1612">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1613">Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1613">The event data reports that the right mouse button was released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1614">Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1614">Invoked when an unhandled <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1615">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1615">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1616">Die <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1616">The <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event appears to travel a tunneling route but actually travels in an indirect way.</span></span> <span data-ttu-id="76dc5-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.ContentElement> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1617"><xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is the underlying event that is tunnel routed, and each <xref:System.Windows.ContentElement> along the event route uses identical handling to raise the direct routed event <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="76dc5-1618">Obwohl Sie markieren können die <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1618">Although you can mark the <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> event as handled for purposes of this element, the handled state does not perpetuate to other elements along the event route.</span></span> <span data-ttu-id="76dc5-1619">Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1619">However, you might want to mark the event as handled in order to prevent general instance handlers (those that did not specify `handledEventsToo`) from being invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1620">Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.ContentElement> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1620">The default implementation for general mouse event handling in <xref:System.Windows.ContentElement> listens for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> and converts it to an appropriate local event.</span></span> <span data-ttu-id="76dc5-1621">Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1621">If you want to override this logic, you must create a derived class.</span></span> <span data-ttu-id="76dc5-1622">Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1622">In the static constructor of your derived class, register an alternative class handler for <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>.</span></span> <span data-ttu-id="76dc5-1623">Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.ContentElement> durch Überschreiben <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1623">You cannot change the mouse handling behavior of <xref:System.Windows.ContentElement> by overriding <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1624">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1624">The <see cref="T:System.Windows.Input.MouseButtonEventArgs" /> that contains the event data.</span></span> <span data-ttu-id="76dc5-1625">Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1625">The event data reports that one or more mouse buttons were released.</span></span></param>
        <summary><span data-ttu-id="76dc5-1626">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1626">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1627">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1627">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1628">Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1628">Mouse button actions are also handled by a dedicated input manager.</span></span> <span data-ttu-id="76dc5-1629">Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1629">Other programming features that rely on mouse button actions, such as input and command bindings, might invoke handlers for the action before it is exposed as a general mouse button action.</span></span> <span data-ttu-id="76dc5-1630">Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> wird nicht aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1630">If these input system features mark the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event as handled, <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> is not invoked.</span></span>  
  
 <span data-ttu-id="76dc5-1631">Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1631">If you use this class handler to mark the event as handled, you potentially impact the following events: <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="76dc5-1632">Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1632">Either of these events might be raised on the receiving element when <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> is received.</span></span>  
  
 <span data-ttu-id="76dc5-1633">Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1633">If you mark this event as handled in class handling, subevents are still raised; however, they pass the handled state in the event data.</span></span> <span data-ttu-id="76dc5-1634">Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1634">If the event is handled in class handling, instance handlers for the subevents are not invoked unless you explicitly use <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` `true` in order to attach handlers.</span></span> <span data-ttu-id="76dc5-1635">Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1635">Class handlers also are not invoked unless those class handlers were registered with the <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature with `handledEventsToo` `true`.</span></span> <span data-ttu-id="76dc5-1636">Durch Behandlung <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1636">By handling <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A>, you are implying that your class handling accounted for all possible mouse button up actions.</span></span> <span data-ttu-id="76dc5-1637">Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1637">This behavior might be unwanted; Therefore, use caution when you use this virtual method to mark events as handled.</span></span>  
  
 <span data-ttu-id="76dc5-1638">Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf \* Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1638">Each of the button-specific direct events also has a virtual On\* method; consider whether overriding these button-specific class handlers might be more appropriate.</span></span>  
  
 <span data-ttu-id="76dc5-1639">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1639">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1640">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1640">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1641">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1641">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1642">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1642">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1643">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1643">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1644">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1644">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1645">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1645">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1646">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1646">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1647">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1647">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="contentElement.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1648">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1648">The <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1649">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1649">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1650">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1650">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1651">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1651">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1652">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1652">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1653">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1653">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1654">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1654">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1655">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1655">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1656">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1656">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1657">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1657">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1658">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1658">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1659">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1659">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1660">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1660">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1661">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1661">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1662">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1662">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1663">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1663">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1664">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1664">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1665">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1665">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1666">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1666">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1667">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1667">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1668">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1668">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1669">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1669">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1670">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1670">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1671">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1671">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1672">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1672">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1673">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1673">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1674">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1674">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1675">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1675">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1676">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1676">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1677">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1677">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1678">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1678">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1679">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1679">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1680">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1680">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1681">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1681">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1682">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1682">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1683">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1683">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1684">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1684">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1685">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1685">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1686">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1686">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1687">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1687">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1688">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1688">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1689">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1689">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1690">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1690">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1691">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1691">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1692">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1692">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1693">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1693">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1694">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1694">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1695">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1695">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1696">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1696">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1697">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1697">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1698">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1698">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1699">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1699">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1700">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1700">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1701">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1701">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1702">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1702">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1703">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1703">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1704">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1704">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1705">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1705">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1706">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1706">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1707">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1707">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1708">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1708">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1709">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1709">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1710">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1710">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1711">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1711">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1712">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1712">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1713">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1713">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1714">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1714">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1715">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1715">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1716">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1716">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1717">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1717">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1718">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1718">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1719">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1719">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1720">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1720">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1721">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1721">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1722">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1722">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1723">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1723">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1724">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1724">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1725">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1725">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1726">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1726">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1727">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1727">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1728">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1728">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1729">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1729">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1730">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1730">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1731">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1731">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1732">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1732">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1733">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1733">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1734">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1734">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1735">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1735">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1736">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1736">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1737">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1737">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1738">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1738">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1739">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1739">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1740">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1740">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1741">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1741">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1742">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1742">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1743">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1743">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1744">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1744">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1745">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1745">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1746">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1746">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1747">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1747">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1748">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1748">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1749">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1749">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1750">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1750">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1751">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1751">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1752">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1752">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1753">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1753">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1754">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1754">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1755">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1755">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1756">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1756">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1757">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1757">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1758">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1758">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1759">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1759">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1760">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1760">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1761">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1761">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1762">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1762">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1763">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1763">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1764">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1764">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1765">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1765">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1766">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1766">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1767">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1767">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1768">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1768">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1769">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1769">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1770">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1770">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1771">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1771">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1772">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1772">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1773">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1773">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1774">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1774">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1775">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1775">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1776">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1776">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1777">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1777">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1778">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1778">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1779">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1779">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1780">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1780">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1781">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1781">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1782">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1782">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1783">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1783">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1784">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1784">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1785">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1785">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1786">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1786">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1787">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1787">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1788">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1788">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1789">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1789">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1790">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1790">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1791">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1791">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1792">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1792">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1793">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1793">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1794">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1794">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1795">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1795">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1796">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1796">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1797">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1797">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1798">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1798">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1799">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1799">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1800">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1800">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1801">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1801">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1802">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1802">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span> <span data-ttu-id="76dc5-1803">Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1803">Another scenario that is specifically for Preview events is to mark them handled so that the matching bubbling class handlers are not invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.ContentElement.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1804">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1804">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1805">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in diesem Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1805">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event that occurs when a touch presses this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1806">Die <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1806">The <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1807">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.PreviewTouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1807">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchDown> event.</span></span> <span data-ttu-id="76dc5-1808">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1808">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1809">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1809">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1810">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1810">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1811">Die <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1811">The <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1812">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.PreviewTouchMove> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1812">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchMove> event.</span></span> <span data-ttu-id="76dc5-1813">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1813">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1814">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1814">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1815">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1815">Provides class handling for the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1816">Die <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1816">The <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1817">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.PreviewTouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1817">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.PreviewTouchUp> event.</span></span> <span data-ttu-id="76dc5-1818">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1818">Be sure to call the base class' <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="contentElement.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1819">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1819">The <see cref="T:System.Windows.QueryContinueDragEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1820">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1820">Invoked when an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1821">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1821">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1822">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1822">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1823">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1823">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1824">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1824">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1825">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1825">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1826">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1826">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1827">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1827">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1828">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1828">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1829">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1829">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1830">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1830">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="contentElement.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1831">Das <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1831">The <see cref="T:System.Windows.Input.QueryCursorEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1832">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1832">Invoked when an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1833">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1833">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1834">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1834">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1835">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1835">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1836">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1836">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1837">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1837">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1838">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1838">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1839">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1839">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1840">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1840">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1841">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1841">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1842">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1842">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1843">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1843">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1844">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1844">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1845">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1845">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1846">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1846">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1847">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1847">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1848">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1848">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1849">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1849">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1850">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1850">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1851">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1851">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1852">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1852">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1853">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1853">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1854">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1854">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="contentElement.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1855">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1855">The <see cref="T:System.Windows.Input.StylusButtonEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1856">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1856">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1857">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1857">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1858">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1858">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1859">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1859">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1860">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1860">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1861">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1861">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1862">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1862">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1863">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1863">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1864">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1864">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1865">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1865">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1866">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1866">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="contentElement.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1867">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1867">The <see cref="T:System.Windows.Input.StylusDownEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1868">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1868">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1869">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1869">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1870">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1870">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1871">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1871">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1872">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1872">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1873">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1873">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1874">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1874">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1875">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1875">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1876">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1876">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1877">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1877">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1878">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1878">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1879">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1879">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1880">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1880">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event is raised by this element.</span></span> <span data-ttu-id="76dc5-1881">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1881">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1882">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1882">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1883">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1883">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1884">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1884">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="76dc5-1885">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1885">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1886">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1886">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1887">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1887">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1888">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1888">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1889">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1889">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1890">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1890">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1891">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1891">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1892">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1892">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1893">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1893">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1894">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1894">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1895">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1895">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1896">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1896">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1897">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1897">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1898">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1898">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1899">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1899">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1900">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1900">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1901">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1901">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1902">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1902">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1903">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1903">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1904">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1904">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1905">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1905">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1906">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1906">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1907">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1907">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1908">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1908">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1909">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1909">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1910">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1910">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1911">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1911">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1912">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1912">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1913">Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis von diesem Element ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1913">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event is raised by this element.</span></span> <span data-ttu-id="76dc5-1914">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1914">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1915">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1915">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1916">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1916">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span> <span data-ttu-id="76dc5-1917">Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1917">You may call base either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="76dc5-1918">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1918">The purpose of this method is similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1919">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1919">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1920">Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1920">Marking the event as handled is still useful for preventing typical instance handlers (those that do not specify `handledEventsToo`) from being invoked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1921">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1921">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1922">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1922">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1923">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1923">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1924">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1924">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1925">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1925">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1926">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1926">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1927">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1927">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1928">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1928">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1929">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1929">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1930">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1930">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1931">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1931">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1932">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1932">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1933">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1933">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1934">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1934">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1935">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1935">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1936">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1936">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1937">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1937">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1938">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1938">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1939">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1939">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1940">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1940">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1941">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1941">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1942">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1942">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1943">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1943">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1944">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1944">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="contentElement.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1945">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1945">The <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1946">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1946">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1947">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1947">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1948">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1948">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1949">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1949">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1950">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1950">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1951">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1951">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1952">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1952">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1953">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1953">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1954">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1954">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1955">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1955">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1956">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1956">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="contentElement.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1957">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1957">The <see cref="T:System.Windows.Input.StylusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1958">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1958">Invoked when an unhandled <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1959">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1959">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1960">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1960">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1961">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1961">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1962">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1962">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1963">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1963">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1964">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1964">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1965">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1965">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1966">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1966">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1967">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1967">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1968">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1968">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="contentElement.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1969">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1969">The <see cref="T:System.Windows.Input.TextCompositionEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1970">Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1970">Invoked when an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached event reaches an element in its route that is derived from this class.</span></span> <span data-ttu-id="76dc5-1971">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1971">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1972">Diese Methode besitzt keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1972">This method has no default implementation.</span></span> <span data-ttu-id="76dc5-1973">Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1973">Because an intermediate class in the inheritance might implement this method, we recommend that you call the base implementation in your implementation.</span></span>  
  
 <span data-ttu-id="76dc5-1974">Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf \* Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1974">The purpose of this method is similar to the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: this method provides the means to handle the matching event from derived classes by establishing a class handler instead of an instance handler.</span></span> <span data-ttu-id="76dc5-1975">In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1975">In this case the matching event is a routed event.</span></span> <span data-ttu-id="76dc5-1976">Das Implementierungsmuster On \* Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1976">The implementation pattern of the On\* methods is different for routed events because a routed event can be raised by a child element, which is not necessarily the element that will invoke handlers.</span></span> <span data-ttu-id="76dc5-1977">Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1977">Therefore, your implementation needs to examine the source properties of the event data.</span></span> <span data-ttu-id="76dc5-1978">Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1978">It should not try to reraise the event in most cases.</span></span>  
  
 <span data-ttu-id="76dc5-1979">Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.ContentElement> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1979">Either by overriding this method or by registering class handlers with <xref:System.Windows.EventManager.RegisterClassHandler%2A>, derived classes of <xref:System.Windows.ContentElement> can call private class handler methods when the event is received along the event route.</span></span> <span data-ttu-id="76dc5-1980">Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1980">One scenario where class handling is appropriate is to manipulate the event data and mark the routed event as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1981">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1981">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1982">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.TouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1982">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event that occurs when a touch presses inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1983">Die <xref:System.Windows.ContentElement.OnTouchDown%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1983">The <xref:System.Windows.ContentElement.OnTouchDown%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1984">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.TouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1984">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchDown> event.</span></span> <span data-ttu-id="76dc5-1985">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1985">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchDown%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1986">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1986">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1987">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.TouchEnter" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von außerhalb der Grenzen dieses Elements nach innen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1987">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event that occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1988">Die <xref:System.Windows.ContentElement.OnTouchEnter%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1988">The <xref:System.Windows.ContentElement.OnTouchEnter%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1989">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchEnter%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.TouchEnter> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1989">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchEnter> event.</span></span> <span data-ttu-id="76dc5-1990">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnTouchEnter%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1990">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchEnter%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1991">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1991">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1992">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.TouchLeave" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von innerhalb der Grenzen dieses Elements nach außen verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1992">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event that occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1993">Die <xref:System.Windows.ContentElement.OnTouchLeave%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1993">The <xref:System.Windows.ContentElement.OnTouchLeave%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1994">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchLeave%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.TouchLeave> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1994">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchLeave> event.</span></span> <span data-ttu-id="76dc5-1995">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnTouchLeave%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1995">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchLeave%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-1996">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1996">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-1997">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.TouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1997">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event that occurs when a touch moves while inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-1998">Die <xref:System.Windows.ContentElement.OnTouchMove%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1998">The <xref:System.Windows.ContentElement.OnTouchMove%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-1999">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.TouchMove> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-1999">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchMove> event.</span></span> <span data-ttu-id="76dc5-2000">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2000">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchMove%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="contentElement.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-2001">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2001">A <see cref="T:System.Windows.Input.TouchEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="76dc5-2002">Stellt Klassenbehandlung für das <see cref="E:System.Windows.ContentElement.TouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2002">Provides class handling for the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event that occurs when a touch is released inside this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2003">Die <xref:System.Windows.ContentElement.OnTouchUp%2A> Methode keine Standardimplementierung besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2003">The <xref:System.Windows.ContentElement.OnTouchUp%2A> method has no default implementation.</span></span> <span data-ttu-id="76dc5-2004">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.ContentElement.TouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2004">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> in a derived class to handle the <xref:System.Windows.ContentElement.TouchUp> event.</span></span> <span data-ttu-id="76dc5-2005">Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.ContentElement.OnTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2005">Be sure to call the base class' <xref:System.Windows.ContentElement.OnTouchUp%2A> method so that base classes receive the event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="contentElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="76dc5-2006">Die Richtung des angeforderten Fokusdurchlaufs.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2006">The direction of the requested focus traversal.</span></span></param>
        <summary><span data-ttu-id="76dc5-2007">Gibt beim Überschreiben in einer abgeleiteten Klasse das Element zurück, das den Fokus für eine bestimmte Richtung des Fokusdurchlaufs empfängt, ohne dass der Fokus tatsächlich auf das betreffende Element verschoben wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2007">When overridden in a derived class, returns the element that would receive focus for a specified focus traversal direction, without actually moving focus to that element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-2008">Das Element, das den Fokus erhält, wenn <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> tatsächlich aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2008">The element that would have received focus if <see cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" /> were actually invoked.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2009">Die Standardimplementierung dieser Methode in dieser Klasse ist unvollständig und gibt immer `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2009">The default implementation of this method in this class is incomplete and always returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2010">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2010">Occurs when the input system reports an underlying drag event with this element as the drag target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2011">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewDragEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2011">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2012">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewDragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2012">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragEnter> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2013">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2013">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2014">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2014">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragEnterEvent>|  
|<span data-ttu-id="76dc5-2015">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2015">Routing strategy</span></span>|<span data-ttu-id="76dc5-2016">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2016">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2017">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2017">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2018">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.DragEnter>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2018">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragEnter>.</span></span>  
  
-   <span data-ttu-id="76dc5-2019">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2019">Override <xref:System.Windows.ContentElement.OnPreviewDragEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2020">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewDragEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2020">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2021">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2021">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2022">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2022">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2023">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2023">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2024">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2024">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2025">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2025">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2026">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2026">Occurs when the input system reports an underlying drag event with this element as the drag origin.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2027">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewDragLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2027">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2028">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewDragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2028">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragLeave> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2029">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2029">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2030">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2030">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragLeaveEvent>|  
|<span data-ttu-id="76dc5-2031">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2031">Routing strategy</span></span>|<span data-ttu-id="76dc5-2032">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2032">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2033">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2033">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2034">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.DragLeave>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2034">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragLeave>.</span></span>  
  
-   <span data-ttu-id="76dc5-2035">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2035">Override <xref:System.Windows.ContentElement.OnPreviewDragLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2036">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewDragLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2036">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2037">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2037">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2038">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2038">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2039">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2039">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2040">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2040">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2041">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2041">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2042">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2042">Occurs when the input system reports an underlying drag event with this element as the potential drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2043">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewDragOver> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2043">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDragOver> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2044">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewDragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2044">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDragOver> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2045">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2045">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2046">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2046">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDragOverEvent>|  
|<span data-ttu-id="76dc5-2047">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2047">Routing strategy</span></span>|<span data-ttu-id="76dc5-2048">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2048">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2049">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2049">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2050">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.DragOver>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2050">The corresponding bubbling event is <xref:System.Windows.ContentElement.DragOver>.</span></span>  
  
-   <span data-ttu-id="76dc5-2051">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2051">Override <xref:System.Windows.ContentElement.OnPreviewDragOver%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2052">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewDragOver" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2052">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDragOver" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2053">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2053">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2054">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2054">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2055">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2055">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2056">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2056">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2057">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2057">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2058">Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2058">Occurs when the input system reports an underlying drop event with this element as the drop target.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2059">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewDrop> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2059">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewDrop> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2060">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewDrop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2060">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewDrop> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2061">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2061">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2062">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2062">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewDropEvent>|  
|<span data-ttu-id="76dc5-2063">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2063">Routing strategy</span></span>|<span data-ttu-id="76dc5-2064">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2064">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2065">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2065">Delegate</span></span>|<xref:System.Windows.DragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2066">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.Drop>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2066">The corresponding bubbling event is <xref:System.Windows.ContentElement.Drop>.</span></span>  
  
-   <span data-ttu-id="76dc5-2067">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2067">Override <xref:System.Windows.ContentElement.OnPreviewDrop%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2068">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewDrop" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2068">Identifies the <see cref="E:System.Windows.ContentElement.PreviewDrop" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2069">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2069">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2070">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2070">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2071">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2071">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2072">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2072">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2073">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2073">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2074">Tritt auf, wenn ein Drag &amp; Drop-Vorgang gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2074">Occurs when a drag-and-drop operation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2075">Die <xref:System.Windows.ContentElement.PreviewGiveFeedback> Ereignis können Sie die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2075">The <xref:System.Windows.ContentElement.PreviewGiveFeedback> event enables the source of a drag event to modify the appearance of the mouse pointer, in order to give the user visual feedback during a drag-and-drop operation.</span></span>  
  
 <span data-ttu-id="76dc5-2076">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewGiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2076">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGiveFeedback> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2077">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewGiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2077">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGiveFeedback> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2078">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2078">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2079">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2079">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGiveFeedbackEvent>|  
|<span data-ttu-id="76dc5-2080">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2080">Routing strategy</span></span>|<span data-ttu-id="76dc5-2081">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2081">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2082">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2082">Delegate</span></span>|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   <span data-ttu-id="76dc5-2083">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.GiveFeedback>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2083">The corresponding bubbling event is <xref:System.Windows.ContentElement.GiveFeedback>.</span></span>  
  
-   <span data-ttu-id="76dc5-2084">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2084">Override <xref:System.Windows.ContentElement.OnPreviewGiveFeedback%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2085">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2085">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGiveFeedback" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2086">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2086">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2087">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2087">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2088">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2088">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2089">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2089">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2090">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2090">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2091">Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2091">Occurs when the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2092">Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2092">Because this event uses tunneling routing, the element that has focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-2093">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2093">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that has focus.</span></span>  
  
 <span data-ttu-id="76dc5-2094">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2094">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2095">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2095">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewGotKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2096">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2096">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2097">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2097">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="76dc5-2098">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2098">Routing strategy</span></span>|<span data-ttu-id="76dc5-2099">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2099">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2100">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2100">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="76dc5-2101">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2101">The corresponding bubbling event is <xref:System.Windows.ContentElement.GotKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="76dc5-2102">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2102">Override <xref:System.Windows.ContentElement.OnPreviewGotKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2103">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2103">Identifies the <see cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2104">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2104">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2105">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2105">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2106">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2106">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2107">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2107">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2108">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2108">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2109">Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2109">Occurs when a key is pressed while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2110">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2110">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="76dc5-2111">Die <xref:System.Windows.ContentElement.KeyDown> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2111">The <xref:System.Windows.ContentElement.KeyDown> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="76dc5-2112">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2112">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span>  
  
 <span data-ttu-id="76dc5-2113">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewKeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2113">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2114">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewKeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2114">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyDown> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2115">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2115">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2116">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2116">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyDownEvent>|  
|<span data-ttu-id="76dc5-2117">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2117">Routing strategy</span></span>|<span data-ttu-id="76dc5-2118">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2118">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2119">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2119">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="76dc5-2120">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2120">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2121">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2121">Override <xref:System.Windows.ContentElement.OnPreviewKeyDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2122">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewKeyDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2122">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2123">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2123">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2124">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2124">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2125">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2125">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2126">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2126">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2127">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2127">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2128">Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus der Tastatur auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2128">Occurs when a key is released while the keyboard is focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2129">Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2129">Key handling interacts with other platform features such as commanding and text composition.</span></span> <span data-ttu-id="76dc5-2130">Die <xref:System.Windows.ContentElement.KeyUp> Ereignis ist eine Low-Level-Text für ein Eingabeereignis, das nicht auf bestimmte Steuerelemente wie erwartet Verhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2130">The <xref:System.Windows.ContentElement.KeyUp> event is a lower-level text input event that might not behave as expected on certain controls.</span></span> <span data-ttu-id="76dc5-2131">Dies ist, da einige Steuerelemente verfügen über Steuerelement zusammensetzt oder Klassenbehandlung, die eine höhere Version von Text bietet Eingabeverarbeitung und verknüpfte Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2131">This is because some controls have control compositing or class handling that provides a higher-level version of text input handling and related events.</span></span> <span data-ttu-id="76dc5-2132">Informationen finden Sie in der Dokumentation für einzelne Steuerelemente.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2132">For details, check the documentation for individual controls.</span></span>  
  
 <span data-ttu-id="76dc5-2133">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewKeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2133">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewKeyUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2134">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewKeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2134">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewKeyUp> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2135">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2135">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2136">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2136">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewKeyUpEvent>|  
|<span data-ttu-id="76dc5-2137">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2137">Routing strategy</span></span>|<span data-ttu-id="76dc5-2138">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2138">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2139">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2139">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="76dc5-2140">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2140">The corresponding bubbling event is <xref:System.Windows.ContentElement.KeyUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2141">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2141">Override <xref:System.Windows.ContentElement.OnPreviewKeyUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2142">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewKeyUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2142">Identifies the <see cref="E:System.Windows.ContentElement.PreviewKeyUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2143">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2143">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2144">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2144">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2145">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2145">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2146">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2146">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2147">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2147">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2148">Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2148">Occurs when the keyboard is no longer focused on this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2149">Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2149">Because this event uses tunneling routing, the element that lost focus might be a child element instead of the element where the event handler is actually attached.</span></span> <span data-ttu-id="76dc5-2150">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2150">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event data to determine the actual element that lost focus.</span></span>  
  
 <span data-ttu-id="76dc5-2151">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2151">This event creates an alias for the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2152">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2152">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewLostKeyboardFocus> event are attached to the underlying <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2153">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2153">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2154">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2154">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="76dc5-2155">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2155">Routing strategy</span></span>|<span data-ttu-id="76dc5-2156">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2156">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2157">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2157">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="76dc5-2158">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2158">The corresponding bubbling event is <xref:System.Windows.ContentElement.LostKeyboardFocus>.</span></span>  
  
-   <span data-ttu-id="76dc5-2159">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2159">Override <xref:System.Windows.ContentElement.OnPreviewLostKeyboardFocus%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2160">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2160">Identifies the <see cref="E:System.Windows.ContentElement.PreviewLostKeyboardFocus" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2161">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2161">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2162">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2162">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2163">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2163">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2164">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2164">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2165">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2165">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2166">Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2166">Occurs when any mouse button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2167">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewMouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2167">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2168">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewMouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2168">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseDown> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2169">Die <xref:System.Windows.ContentElement.PreviewMouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> oder <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2169">The <xref:System.Windows.ContentElement.PreviewMouseDown> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="76dc5-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2170"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="76dc5-2171">Finden Sie unter "Hinweise" für <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> oder <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2171">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonDown>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2172">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2172">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2173">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2173">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseDownEvent>|  
|<span data-ttu-id="76dc5-2174">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2174">Routing strategy</span></span>|<span data-ttu-id="76dc5-2175">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2175">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2176">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2176">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2177">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2177">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2178">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2178">Override <xref:System.Windows.ContentElement.OnPreviewMouseDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2179">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2179">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2180">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2180">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2181">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2181">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2182">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2182">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2183">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2183">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2184">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2184">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2185">Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2185">Occurs when the left mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2186">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2186">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2187">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2187">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-2188">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2188">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-2189">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2189">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-2190">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2190">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-2191">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2191">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-2192">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2192">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2193">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2193">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2194">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2194">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent>|  
|<span data-ttu-id="76dc5-2195">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2195">Routing strategy</span></span>|<span data-ttu-id="76dc5-2196">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2196">Direct</span></span>|  
|<span data-ttu-id="76dc5-2197">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2197">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2198">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2198">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2199">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2199">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2200">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2200">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2201">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2201">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2202">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2202">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2203">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2203">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2204">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2204">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2205">Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2205">Occurs when the left mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2206">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2206">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2207">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2207">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-2208">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2208">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-2209">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2209">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-2210">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2210">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-2211">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2211">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-2212">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2212">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2213">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2214">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2214">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent>|  
|<span data-ttu-id="76dc5-2215">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2215">Routing strategy</span></span>|<span data-ttu-id="76dc5-2216">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2216">Direct</span></span>|  
|<span data-ttu-id="76dc5-2217">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2217">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2218">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2218">Override <xref:System.Windows.ContentElement.OnPreviewMouseLeftButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2219">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2219">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseLeftButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2220">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2220">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2221">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2222">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2222">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2223">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2223">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2224">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2224">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2225">Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2225">Occurs when the mouse pointer moves while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2226">Dieses Ereignis tritt auf, wenn der Mauszeiger zunächst in der Grenzen des Elements eintritt und auch wenn der Mauszeiger bewegt wird und trotzdem innerhalb der Grenzen des Elements.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2226">This event occurs both when the mouse pointer first enters into the element bounds, and also when the mouse pointer moves while still remaining within the element bounds.</span></span>  
  
 <span data-ttu-id="76dc5-2227">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2227">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2228">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2228">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2229">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2229">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2230">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2230">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseMoveEvent>|  
|<span data-ttu-id="76dc5-2231">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2231">Routing strategy</span></span>|<span data-ttu-id="76dc5-2232">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2232">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2233">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2233">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="76dc5-2234">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2234">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2235">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2235">Override <xref:System.Windows.ContentElement.OnPreviewMouseMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2236">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2236">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2237">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2237">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2238">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2238">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2239">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2239">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2240">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2240">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2241">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2241">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2242">Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2242">Occurs when the right mouse button is pressed while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2243">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2243">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2244">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2244">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-2245">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2245">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-2246">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2246">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-2247">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2247">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-2248">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2248">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-2249">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2249">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2250">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2250">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2251">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2251">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent>|  
|<span data-ttu-id="76dc5-2252">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2252">Routing strategy</span></span>|<span data-ttu-id="76dc5-2253">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2253">Direct</span></span>|  
|<span data-ttu-id="76dc5-2254">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2254">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2255">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2255">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2256">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2256">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2257">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2257">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2258">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2258">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2259">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2259">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2260">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2260">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2261">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2261">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2262">Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2262">Occurs when the right mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2263">Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2263">Although this [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) seems to follow a tunneling route through an element tree, it actually is a direct routed event that is raised and reraised along the element tree by each <xref:System.Windows.ContentElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2264">Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2264">This event is one of several related events that report the mouse-button specifics of an underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event, which is an attached event that is processed by each element along an event route.</span></span>  
  
 <span data-ttu-id="76dc5-2265">Die Argumente des Ereignisses verfügbar machen, die Argumente des zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2265">The arguments of this event expose the arguments of the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event.</span></span> <span data-ttu-id="76dc5-2266">Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.ContentElement.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2266">If that event is marked as handled along the event route, the mouse-button specific events are still raised; however, handlers of the mouse-button specific events must be added by explicitly calling <xref:System.Windows.ContentElement.AddHandler%2A>, with the option to handle events that are already marked as handled, in order to be listeners to the event.</span></span>  
  
 <span data-ttu-id="76dc5-2267">Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.ContentElement>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2267">Conceptually, think of this event (and other mouse-button events on <xref:System.Windows.ContentElement>) to be a mouse "service" (with the service definition provided by the <xref:System.Windows.Input.Mouse> class).</span></span> <span data-ttu-id="76dc5-2268">Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2268">The event adds the convenience of not needing to check the mouse button states (left-right, up-down) of the original mouse events in the event data.</span></span> <span data-ttu-id="76dc5-2269">Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.ContentElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2269">For more advanced scenarios, such as checking for states of non-standard buttons, you might need to use the [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] on the <xref:System.Windows.Input.Mouse> class rather than those on <xref:System.Windows.ContentElement>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2270">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2270">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2271">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2271">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent>|  
|<span data-ttu-id="76dc5-2272">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2272">Routing strategy</span></span>|<span data-ttu-id="76dc5-2273">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2273">Direct</span></span>|  
|<span data-ttu-id="76dc5-2274">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2274">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2275">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2275">Override <xref:System.Windows.ContentElement.OnPreviewMouseRightButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2276">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2276">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseRightButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2277">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2277">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2278">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2278">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2279">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2279">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2280">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2280">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2281">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2281">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2282">Tritt auf, wenn eine Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2282">Occurs when any mouse button is released while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2283">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewMouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2283">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2284">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewMouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2284">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseUp> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2285">Die <xref:System.Windows.ContentElement.PreviewMouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> oder <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, Drücken einer der beiden standardmäßigen Maustasten entsprechen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2285">The <xref:System.Windows.ContentElement.PreviewMouseUp> event is often raised together with either <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>, which correspond to a press of one of the two standard mouse buttons.</span></span> <span data-ttu-id="76dc5-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2286"><xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp> are also routed events, but they are direct routed events, and the appropriate button-specific event is raised when the <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> event reaches this element along the event route.</span></span> <span data-ttu-id="76dc5-2287">Finden Sie unter "Hinweise" für <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> oder <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2287">See Remarks for <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> or <xref:System.Windows.ContentElement.PreviewMouseRightButtonUp>.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2288">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2288">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2289">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2289">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseUpEvent>|  
|<span data-ttu-id="76dc5-2290">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2290">Routing strategy</span></span>|<span data-ttu-id="76dc5-2291">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2291">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2292">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2292">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2293">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2293">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2294">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2294">Override <xref:System.Windows.ContentElement.OnPreviewMouseUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2295">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2295">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2296">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2296">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2297">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2298">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2298">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2299">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2299">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2300">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2300">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2301">Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2301">Occurs when the user rotates the mouse wheel while the mouse pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2302">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; Wenn Sie dieses Ereignis von einem Element mit Fokus oder erfasste erhalten haben, kann der Mauszeiger aus diesem Grund tatsächlich über ein anderes Element befinden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2302">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might actually be over another element.</span></span>  
  
 <span data-ttu-id="76dc5-2303">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2303">This event creates an alias for the <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewMouseMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2304">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2304">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewMouseMove> event are attached to the underlying <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2305">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2305">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2306">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2306">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewMouseWheelEvent>|  
|<span data-ttu-id="76dc5-2307">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2307">Routing strategy</span></span>|<span data-ttu-id="76dc5-2308">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2308">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2309">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2309">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="76dc5-2310">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2310">The corresponding bubbling event is <xref:System.Windows.ContentElement.MouseWheel>.</span></span>  
  
-   <span data-ttu-id="76dc5-2311">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2311">Override <xref:System.Windows.ContentElement.OnPreviewMouseWheel%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2312">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2312">Identifies the <see cref="E:System.Windows.ContentElement.PreviewMouseWheel" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2313">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2313">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2314">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2314">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2315">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2315">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2316">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2316">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2317">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2317">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2318">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2318">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2319">Die <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Ereignis ermöglicht der Ziehquelle, um zu deklarieren, die Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2319">The <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event enables the drag source to declare whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="76dc5-2320">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2320">This event creates an alias for the <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2321">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2321">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewQueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2322">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2322">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2323">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2323">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewQueryContinueDragEvent>|  
|<span data-ttu-id="76dc5-2324">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2324">Routing strategy</span></span>|<span data-ttu-id="76dc5-2325">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2325">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2326">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2326">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2327">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.QueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2327">The corresponding bubbling event is <xref:System.Windows.ContentElement.QueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="76dc5-2328">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2328">Override <xref:System.Windows.ContentElement.OnPreviewQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2329">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2329">Identifies the <see cref="E:System.Windows.ContentElement.PreviewQueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2330">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2330">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2331">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2331">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2332">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2332">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2333">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2333">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2334">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2334">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2335">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2335">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2336">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2336">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2337">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2337">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2338">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2338">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2339">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2339">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2340">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2340">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2341">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2341">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="76dc5-2342">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2342">Routing strategy</span></span>|<span data-ttu-id="76dc5-2343">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2343">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2344">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2344">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2345">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2345">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2346">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2346">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2347">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2347">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2348">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2348">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2349">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2350">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2350">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2351">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2351">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2352">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2352">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2353">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2353">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2354">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2354">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2355">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2355">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2356">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2356">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2357">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2357">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2358">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2358">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2359">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2359">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="76dc5-2360">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2360">Routing strategy</span></span>|<span data-ttu-id="76dc5-2361">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2361">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2362">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2362">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2363">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2363">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2364">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2364">Override <xref:System.Windows.ContentElement.OnPreviewStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2365">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2365">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2366">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2366">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2367">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2367">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2368">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2368">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2369">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2369">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2370">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2370">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2371">Tritt auf, wenn der Stift den Digitizer berührt, während dieser sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2371">Occurs when the stylus touches the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2372">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2372">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2373">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2373">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2374">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2374">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2375">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2375">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2376">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2376">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2377">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2377">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusDownEvent>|  
|<span data-ttu-id="76dc5-2378">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2378">Routing strategy</span></span>|<span data-ttu-id="76dc5-2379">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2379">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2380">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2380">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="76dc5-2381">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2381">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2382">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2382">Override <xref:System.Windows.ContentElement.OnPreviewStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2383">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2383">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2384">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2384">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2385">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2386">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2386">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2387">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2387">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2388">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2388">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2389">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2389">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2390">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2390">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2391">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2391">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2392">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2392">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2393">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2393">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2394">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2394">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2395">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2395">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="76dc5-2396">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2396">Routing strategy</span></span>|<span data-ttu-id="76dc5-2397">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2397">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2398">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2398">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2399">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2399">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2400">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2400">Override <xref:System.Windows.ContentElement.OnPreviewStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2401">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2401">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2402">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2402">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2403">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2403">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2404">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2404">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2405">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2405">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2406">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2406">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2407">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2407">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2408">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2408">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2409">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2409">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2410">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2410">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2411">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2411">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2412">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2412">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2413">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2413">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="76dc5-2414">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2414">Routing strategy</span></span>|<span data-ttu-id="76dc5-2415">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2415">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2416">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2416">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2417">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2417">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusInRange>.</span></span>  
  
-   <span data-ttu-id="76dc5-2418">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2418">Override <xref:System.Windows.ContentElement.OnPreviewStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2419">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2419">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2420">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2420">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2421">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2421">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2422">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2422">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2423">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2423">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2424">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2424">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2425">Tritt auf, wenn der Tablettstift bewegt wird, während er sich über dem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2425">Occurs when the stylus moves while over the element.</span></span> <span data-ttu-id="76dc5-2426">Der Tablettstift muss während der Erkennung durch den Digitizer bewegt werden, damit dieses Ereignis ausgelöst wird, andernfalls wird stattdessen <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2426">The stylus must move while being detected by the  digitizer  to raise this event, otherwise, <see cref="E:System.Windows.ContentElement.PreviewStylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2427">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2427">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2428">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2428">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2429">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2429">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2430">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2430">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2431">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2431">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2432">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2432">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusMoveEvent>|  
|<span data-ttu-id="76dc5-2433">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2433">Routing strategy</span></span>|<span data-ttu-id="76dc5-2434">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2434">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2435">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2435">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2436">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2436">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2437">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2437">Override <xref:System.Windows.ContentElement.OnPreviewStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2438">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2438">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2439">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2439">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2440">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2440">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2441">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2441">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2442">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2442">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2443">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2443">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2444">Tritt auf, wenn sich der Stift zu weit vom Digitizer entfernt befindet, um erkannt zu werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2444">Occurs when the stylus is too far from the digitizer to be detected.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2445">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2445">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2446">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2446">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2447">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2447">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2448">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2448">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2449">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2449">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2450">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2450">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="76dc5-2451">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2451">Routing strategy</span></span>|<span data-ttu-id="76dc5-2452">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2452">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2453">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2453">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2454">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2454">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="76dc5-2455">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2455">Override <xref:System.Windows.ContentElement.OnPreviewStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2456">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2456">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2457">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2457">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2458">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2458">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2459">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2459">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2460">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2460">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2461">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2461">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2462">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2462">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2463">Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2463">For information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="76dc5-2464">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2464">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2465">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2465">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2466">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2466">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2467">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2467">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2468">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2468">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2469">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2469">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="76dc5-2470">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2470">Routing strategy</span></span>|<span data-ttu-id="76dc5-2471">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2471">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2472">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2472">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="76dc5-2473">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2473">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="76dc5-2474">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2474">Override <xref:System.Windows.ContentElement.OnPreviewStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2475">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2475">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2476">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2476">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2477">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2477">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2478">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2478">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2479">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2479">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2480">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2480">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2481">Tritt auf, wenn der Benutzer den Tablettstift vom Digitizer hebt, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2481">Occurs when the user raises the stylus off the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2482">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2482">This event creates an alias for the <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewStylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2483">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2483">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewStylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2484">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2484">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2485">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2485">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2486">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2486">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2487">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2487">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewStylusUpEvent>|  
|<span data-ttu-id="76dc5-2488">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2488">Routing strategy</span></span>|<span data-ttu-id="76dc5-2489">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2489">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2490">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2490">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2491">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.StylusUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2491">The corresponding bubbling event is <xref:System.Windows.ContentElement.StylusUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2492">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2492">Override <xref:System.Windows.ContentElement.OnPreviewStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2493">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewStylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2493">Identifies the <see cref="E:System.Windows.ContentElement.PreviewStylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2494">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2494">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2495">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2495">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2496">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2496">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2497">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2497">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2498">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2498">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2499">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2499">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2500">Die <xref:System.Windows.ContentElement.PreviewTextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2500">The <xref:System.Windows.ContentElement.PreviewTextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="76dc5-2501">Die Tastatur dient primär der <xref:System.Windows.ContentElement.PreviewTextInput>; Spracherkennung, handschrifterkennung und andere Eingabegeräte können jedoch auch generieren <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2501">The keyboard is the primary means of <xref:System.Windows.ContentElement.PreviewTextInput>; but speech, handwriting, and other input devices can also generate <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
 <span data-ttu-id="76dc5-2502">Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren - können mehrere wichtige Ereignisse nur ein Text Ereignisse auslösen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2502">Because of key combinations - either in default keyboards or through input method editors - multiple key events may raise just one text input event.</span></span>  
  
 <span data-ttu-id="76dc5-2503">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.PreviewTextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2503">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.PreviewTextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2504">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.PreviewTextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2504">Event handlers that are attached to the <xref:System.Windows.ContentElement.PreviewTextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2505">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2505">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2506">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2506">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTextInputEvent>|  
|<span data-ttu-id="76dc5-2507">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2507">Routing strategy</span></span>|<span data-ttu-id="76dc5-2508">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2508">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2509">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2509">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="76dc5-2510">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2510">The corresponding bubbling event is <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
-   <span data-ttu-id="76dc5-2511">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2511">Override <xref:System.Windows.ContentElement.OnPreviewTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2512">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewTextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2512">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2513">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2513">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2514">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2514">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2515">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2515">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2516">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2516">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2517">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2517">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2518">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2518">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2519">In der Standardeinstellung die <xref:System.Windows.ContentElement.PreviewTouchDown> und <xref:System.Windows.ContentElement.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2519">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="76dc5-2520">Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2520">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="76dc5-2521">Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2521">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="76dc5-2522">Die dazu führen, dass die <xref:System.Windows.ContentElement.PreviewTouchDown> und <xref:System.Windows.ContentElement.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2522">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2523">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2523">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2524">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2524">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchDownEvent>|  
|<span data-ttu-id="76dc5-2525">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2525">Routing strategy</span></span>|<span data-ttu-id="76dc5-2526">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2526">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2527">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2527">Delegate</span></span>|<span data-ttu-id="76dc5-2528">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2528"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2529">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.TouchDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2529">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2530">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2530">Override <xref:System.Windows.ContentElement.OnPreviewTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2531">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewTouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2531">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2532">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2532">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2533">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2533">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2534">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2534">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchMoveEvent>|  
|<span data-ttu-id="76dc5-2535">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2535">Routing strategy</span></span>|<span data-ttu-id="76dc5-2536">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2536">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2537">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2537">Delegate</span></span>|<span data-ttu-id="76dc5-2538">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2538"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2539">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.TouchMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2539">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2540">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2540">Override <xref:System.Windows.ContentElement.OnPreviewTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2541">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewTouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2541">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2542">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2542">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2543">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2543">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2544">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2544">Identifier field</span></span>|<xref:System.Windows.ContentElement.PreviewTouchUpEvent>|  
|<span data-ttu-id="76dc5-2545">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2545">Routing strategy</span></span>|<span data-ttu-id="76dc5-2546">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="76dc5-2546">Tunneling</span></span>|  
|<span data-ttu-id="76dc5-2547">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2547">Delegate</span></span>|<span data-ttu-id="76dc5-2548">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2548"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2549">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.ContentElement.TouchUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2549">The corresponding bubbling event is <xref:System.Windows.ContentElement.TouchUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2550">Außer Kraft setzen <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2550">Override <xref:System.Windows.ContentElement.OnPreviewTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2551">Identifiziert das <see cref="E:System.Windows.ContentElement.PreviewTouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2551">Identifies the <see cref="E:System.Windows.ContentElement.PreviewTouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2552">Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2552">Occurs when there is a change in the keyboard or mouse button state during a drag-and-drop operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2553">Die <xref:System.Windows.ContentElement.QueryContinueDrag> Ereignis können Sie die Quelle des Ziehvorgangs bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2553">The <xref:System.Windows.ContentElement.QueryContinueDrag> event enables the drag source to determine whether the drag-and-drop operation should be canceled.</span></span>  
  
 <span data-ttu-id="76dc5-2554">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.QueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2554">This event creates an alias for the <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryContinueDrag> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2555">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.QueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2555">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryContinueDrag> event are attached to the underlying <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2556">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2556">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2557">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2557">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryContinueDragEvent>|  
|<span data-ttu-id="76dc5-2558">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2558">Routing strategy</span></span>|<span data-ttu-id="76dc5-2559">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2559">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2560">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2560">Delegate</span></span>|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   <span data-ttu-id="76dc5-2561">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2561">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewQueryContinueDrag>.</span></span>  
  
-   <span data-ttu-id="76dc5-2562">Außer Kraft setzen <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2562">Override <xref:System.Windows.ContentElement.OnQueryContinueDrag%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2563">Identifiziert das <see cref="E:System.Windows.ContentElement.QueryContinueDrag" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2563">Identifies the <see cref="E:System.Windows.ContentElement.QueryContinueDrag" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2564">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2564">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2565">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2565">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2566">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2566">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2567">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2567">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2568">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2568">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2569">Tritt auf, wenn die Anzeige des Cursors angefordert wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2569">Occurs when the cursor is requested to display.</span></span> <span data-ttu-id="76dc5-2570">Dieses Ereignis wird immer dann für ein Element ausgelöst, wenn der Mauszeiger an eine neue Position bewegt wird, d  h., das Cursorobjekt muss möglicherweise in Abhängigkeit von seiner neuen Position geändert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2570">This event is raised on an element each time that the mouse pointer moves to a new location, which means the cursor object might need to be changed based on its new position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2571">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.QueryCursor> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2571">This event creates an alias for the <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.QueryCursor> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2572">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.QueryCursor> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2572">Event handlers that are attached to the <xref:System.Windows.ContentElement.QueryCursor> event are attached to the underlying <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2573">Der Cursor, die mit diesem Ereignisnamen verwiesen wird, ist nicht unbedingt der Cursor (manchmal als Einfügemarke bezeichnet).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2573">The cursor being referred to by this event name is not necessarily the text cursor (sometimes known as the insertion point).</span></span> <span data-ttu-id="76dc5-2574">Stattdessen wird der Cursor in diesem Kontext das Objekt, das die auf dem Bildschirm grafische Anzeige, die im Zusammenhang mit mehreren möglichen Eingaben relevanten Geräten oder Konzepte in der Windows-Programmierung deklariert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2574">Instead, the cursor in this context is the object that declares the onscreen graphical display related to several possible input-related devices or concepts in Windows programming.</span></span> <span data-ttu-id="76dc5-2575">Dieses Objekt wird dargestellt, durch die <xref:System.Windows.Input.Cursor> -Klasse in WPF.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2575">That object is represented by the <xref:System.Windows.Input.Cursor> class in WPF.</span></span> <span data-ttu-id="76dc5-2576">Das WPF-Eingabesystem können Sie diesen Cursor zu ändern, wenn sie die Bildschirmposition des Mauszeigers darstellt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2576">The WPF input system enables you to change this cursor when it represents the onscreen position of the mouse pointer.</span></span> <span data-ttu-id="76dc5-2577">Können Sie vordefinierte Werte aus der <xref:System.Windows.Input.Cursors> -Enumeration, oder Sie können einen benutzerdefinierten Cursor als Bilddatei zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2577">You can use predefined values from the <xref:System.Windows.Input.Cursors> enumeration, or you can declare a custom cursor as an image file.</span></span>  
  
 <span data-ttu-id="76dc5-2578">Überwacht die <xref:System.Windows.ContentElement.QueryCursor> Ereignis nicht um eine effiziente Methode für die Verwaltung der Cursor ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2578">Listening for the <xref:System.Windows.ContentElement.QueryCursor> event is not an efficient technique for cursor management.</span></span> <span data-ttu-id="76dc5-2579">Jedes Element definieren Sie stattdessen eine eigene Cursorverhalten mit <xref:System.Windows.FrameworkContentElement.Cursor%2A> und <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2579">Instead, each element should define its own cursor behavior with <xref:System.Windows.FrameworkContentElement.Cursor%2A> and <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>.</span></span> <span data-ttu-id="76dc5-2580">Sie sollten nur auf verlassen <xref:System.Windows.ContentElement.QueryCursor> , wenn Sie nicht die Basiselementen für WPF-Frameworkebene, oder in außergewöhnlichen Fällen, in dem Definieren des Cursorverhaltens individuell pro Element nicht Ihren Anforderungen entspricht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2580">You should only rely on <xref:System.Windows.ContentElement.QueryCursor> if you are not using the WPF framework-level base elements, or in extraordinary circumstances where defining cursor behavior on a per-element basis does not meet your needs.</span></span> <span data-ttu-id="76dc5-2581">Weitere Informationen zum Implementieren von Cursorverhalten als Reaktion auf <xref:System.Windows.ContentElement.QueryCursor>, finden Sie unter <xref:System.Windows.Input.QueryCursorEventHandler>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2581">For more information on implementing cursor behavior in response to <xref:System.Windows.ContentElement.QueryCursor>, see <xref:System.Windows.Input.QueryCursorEventHandler>.</span></span>  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2582">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2582">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2583">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2583">Identifier field</span></span>|<xref:System.Windows.ContentElement.QueryCursorEvent>|  
|<span data-ttu-id="76dc5-2584">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2584">Routing strategy</span></span>|<span data-ttu-id="76dc5-2585">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2585">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2586">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2586">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   <span data-ttu-id="76dc5-2587">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2587">There is no defined corresponding tunneling event.</span></span>  
  
-   <span data-ttu-id="76dc5-2588">Außer Kraft setzen <xref:System.Windows.ContentElement.OnQueryCursor%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2588">Override <xref:System.Windows.ContentElement.OnQueryCursor%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2589">Identifiziert das <see cref="E:System.Windows.ContentElement.QueryCursor" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2589">Identifies the <see cref="E:System.Windows.ContentElement.QueryCursor" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2590">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2590">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2591">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2591">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2592">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2592">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2593">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2593">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2594">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2594">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="contentElement.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="76dc5-2595">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das die Ereignisdaten enthält und zudem das auszulösende Ereignis angibt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2595">A <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data and also identifies the event to raise.</span></span></param>
        <summary><span data-ttu-id="76dc5-2596">Löst ein bestimmtes Routingereignis aus.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2596">Raises a specific routed event.</span></span> <span data-ttu-id="76dc5-2597">Das auszulösende <see cref="T:System.Windows.RoutedEvent" /> wird innerhalb der <see cref="T:System.Windows.RoutedEventArgs" />-Instanz identifiziert, die bereitgestellt wird (als <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft für diese Ereignisdaten).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2597">The <see cref="T:System.Windows.RoutedEvent" /> to be raised is identified within the <see cref="T:System.Windows.RoutedEventArgs" /> instance that is provided (as the <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" /> property of that event data).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2598">Die `e` Parameter wird als gemeinsamer Basistyp für alle Routingereignisdaten eingegeben; allerdings sollten Daten für das Ereignis zugewiesen werden, als spezifischste Event-Datentyp, der für das Ereignis ausgelöst wird, verfügbar ist, da <xref:System.Windows.RoutedEventArgs> abgeleitete Klassen enthalten die tatsächliche Daten-Eigenschaften, die vorgesehen sind, für das spezifische Ereignis, wenn es ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2598">The `e` parameter is typed as the common base type for all routed event data; however, the event data should be given as the most specific event data type that is available for the event being raised, because <xref:System.Windows.RoutedEventArgs> derived classes contain the actual specific data properties that are intended for the specific event when it is raised.</span></span>  
  
 <span data-ttu-id="76dc5-2599"><xref:System.Windows.RoutedEventArgs> ist nicht nur die Status-Eigenschaften für das Ereignis. Er gibt außerdem die Routingereignis ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2599"><xref:System.Windows.RoutedEventArgs> is not just the state properties for the event; it also identifies which routed event to raise.</span></span> <span data-ttu-id="76dc5-2600">Dieses Ereignis auslösen Muster und die Routingereignisdaten, unterscheiden sich von [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse und Klassen, die in der Regel nur die Eigenschaften enthalten, die dem Ereignis verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2600">This event-raising pattern and the routed event data both differ from [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events and data classes, which typically just contain properties that are related to the event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-2601">Das folgende Beispiel erstellt Ereignisdaten, fügt die Ereignis-ID an die Daten und verwendet dann die Ereignis eine Instanz ein benutzerdefiniertes Routingereignisses ausgelöst werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2601">The following example creates event data, appends the event identifier to the data, and then uses the event data instance to raise a custom routed event.</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/page1.xaml.cs#raiseevent)]
 [!code-vb[ContentElementsSmorgasbord#RaiseEvent](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/page1.xaml.vb#raiseevent)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="contentElement.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-2602">Gibt alle erfassten Fingereingabegeräte für das Element frei.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2602">Releases all captured touch devices from this element.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="contentElement.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-2603">Gibt die Erfassung von Mauseingaben frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2603">Releases the mouse capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2604">Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2604">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="76dc5-2605">Prüfen Sie ggf. auf den Wert der <xref:System.Windows.ContentElement.IsMouseCaptured%2A> , bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2605">Consider checking the value of <xref:System.Windows.ContentElement.IsMouseCaptured%2A> before you call this method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="76dc5-2606">Der folgende Handler erfasst oder gemäß Schaltflächenstatus Maus die Erfassung von Mauseingaben frei.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2606">The following handler captures or releases mouse capture according to mouse button states.</span></span> <span data-ttu-id="76dc5-2607">Das Beispiel zeigt, wie erfassten mausbewegung für Alternative außer zum Bewegen des Mauszeigers Testzwecken verwenden, wenn die [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="76dc5-2607">The example shows how to use captured mouse movement for alternative purposes other than moving the mouse pointer in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  
  
 [!code-csharp[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/csharp/VS_Snippets_Wpf/ContentElementsSmorgasbord/CSharp/Trackball.cs#uielementmousecapture)]
 [!code-vb[ContentElementsSmorgasbord#UIElementMouseCapture](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ContentElementsSmorgasbord/visualbasic/trackball.vb#uielementmousecapture)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.ContentElement.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="contentElement.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-2608">Gibt das Erfassen der Eingaben von Tablettstiftgeräten frei, wenn für dieses Element die Erfassung festgelegt war.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2608">Releases the stylus device capture, if this element held the capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2609">Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2609">If this element did not hold the capture, calling this method has no effect.</span></span> <span data-ttu-id="76dc5-2610">Prüfen Sie ggf. auf den Wert der <xref:System.Windows.ContentElement.IsStylusCaptured%2A> , bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2610">Consider checking the value of <xref:System.Windows.ContentElement.IsStylusCaptured%2A> before you call this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="contentElement.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice"><span data-ttu-id="76dc5-2611">Das freizugebende Gerät.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2611">The device to release.</span></span></param>
        <summary><span data-ttu-id="76dc5-2612">Versucht, das angegebene Fingereingabegerät von diesem Element freizugeben.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2612">Attempts to release the specified touch device from this element.</span></span></summary>
        <returns><span data-ttu-id="76dc5-2613"><see langword="true" />, wenn das Fingereingabegerät freigegeben wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2613"><see langword="true" /> if the touch device is released; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="76dc5-2614"><paramref name="touchDevice" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2614"><paramref name="touchDevice" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="contentElement.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="76dc5-2615">Der Bezeichner des Routingereignisses, dem der Handler angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2615">The identifier of the.routed event for which the handler is attached.</span></span></param>
        <param name="handler"><span data-ttu-id="76dc5-2616">Die spezifische Handlerimplementierung, die aus der Ereignishandlerauflistung dieses Elements entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2616">The specific handler implementation to remove from the event handler collection on this element.</span></span></param>
        <summary><span data-ttu-id="76dc5-2617">Entfernt den angegebenen Routingereignishandler aus diesem Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2617">Removes the specified routed event handler from this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2618">Das häufigste Szenario für die Verwendung dieser [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] stellt beim Implementieren der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "Wrapper"-Ereignis, das eines benutzerdefinierten Routingereignisses, insbesondere beim Implementieren der "entfernen"-Logik für Handler auf zugeordnet ist die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ebene.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2618">The most common scenario for using this [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] is when you implement the [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "wrapper" event that is associated with a custom routed event, specifically when you implement the "remove" logic for handlers at the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] level.</span></span> <span data-ttu-id="76dc5-2619">Das Beispiel, in dem dies entspricht Abschnitt veranschaulicht dieses Szenario "Hinweise".</span><span class="sxs-lookup"><span data-stu-id="76dc5-2619">The example that follows this remarks section illustrates this scenario.</span></span>  
  
 <span data-ttu-id="76dc5-2620">Das Aufrufen dieser Methode hat keine Auswirkungen, gäbe es keine Handler registriert mit Kriterien, die die Eingabeparameter für den Aufruf der Methode entsprechen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2620">Calling this method has no effect if there were no handlers registered with criteria that match the input parameters for the method call.</span></span>  
  
 <span data-ttu-id="76dc5-2621">Wenn mehr als einen Handler, die die Kriterien, die nur der erste Handler übereinstimmen angefügt ist, den Fall, dass Speicher des ereignishandlers entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2621">If more than one handler is attached that matched the criteria, only the first handler in the event handler store is removed.</span></span> <span data-ttu-id="76dc5-2622">Dieses Verhalten ist konsistent mit [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Verhalten der `-=` Operator.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2622">This behavior is consistent with [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] behavior of the `-=` operator.</span></span>  
  
 <span data-ttu-id="76dc5-2623">Weder `routedEvent` noch `handler` möglicherweise `null`.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2623">Neither `routedEvent` nor `handler` may be `null`.</span></span> <span data-ttu-id="76dc5-2624">Es wird versucht, einen der Werte `null` wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2624">Attempting to provide either value as `null` will raise an exception.</span></span>  
  
 <span data-ttu-id="76dc5-2625">Diese Methode ignoriert die `handledEventsToo` Informationen zu den Parametern, die bereitgestellt wird, wenn der Handler wurde hinzugefügt, mit der <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur, die Verarbeitung der bereits behandelten Ereignisse ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2625">This method ignores the `handledEventsToo` parameter information, which is provided if the handler was first added with the <xref:System.Windows.ContentElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> signature that enables handling of already-handled events.</span></span> <span data-ttu-id="76dc5-2626">Beide Arten von Handler entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2626">Either type of handler is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.ContentElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-2627">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.ContentElement.CommandBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2627">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="76dc5-2628"><see langword="true" />, wenn der <see cref="P:System.Windows.ContentElement.CommandBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2628"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.CommandBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2629">Als Ergebnis erhalten `true` Wenn <xref:System.Windows.ContentElement.CommandBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2629">This will return `true` if <xref:System.Windows.ContentElement.CommandBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="76dc5-2630">Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement.CommandBindings%2A> Eigenschaft hat keine einfachen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2630">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.CommandBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="76dc5-2631">Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2631">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="76dc5-2632">Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2632">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2633">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2633">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ContentElement.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="contentElement.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dc5-2634">Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.ContentElement.InputBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2634">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.ContentElement.InputBindings" /> property on instances of this class.</span></span></summary>
        <returns><span data-ttu-id="76dc5-2635"><see langword="true" />, wenn der <see cref="P:System.Windows.ContentElement.InputBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2635"><see langword="true" /> if the <see cref="P:System.Windows.ContentElement.InputBindings" /> property value should be serialized; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2636">Als Ergebnis erhalten `true` Wenn <xref:System.Windows.ContentElement.InputBindings%2A> lokal festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2636">This will return `true` if <xref:System.Windows.ContentElement.InputBindings%2A> is locally set.</span></span>  
  
 <span data-ttu-id="76dc5-2637">Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement.InputBindings%2A> Eigenschaft hat keine einfachen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2637">This `ShouldSerialize` method is provided because the <xref:System.Windows.UIElement.InputBindings%2A> property does not have a simple default value.</span></span> <span data-ttu-id="76dc5-2638">Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2638">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="76dc5-2639">Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2639">You typically invoke this method if you are either developing a designer or developing your own control incorporating a <xref:System.Windows.UIElement>.</span></span>  
  
 <span data-ttu-id="76dc5-2640">Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2640">For more information, see [Defining Default Values with the ShouldSerialize and Reset Methods](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2641">Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2641">Occurs when the stylus button is pressed while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2642">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2642">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2643">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2643">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2644">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2644">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2645">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2645">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2646">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2647">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2647">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonDownEvent>|  
|<span data-ttu-id="76dc5-2648">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2648">Routing strategy</span></span>|<span data-ttu-id="76dc5-2649">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2649">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2650">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2650">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2651">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2651">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2652">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2652">Override <xref:System.Windows.ContentElement.OnStylusButtonDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2653">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusButtonDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2653">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2654">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2654">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2655">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2655">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2656">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2656">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2657">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2657">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2658">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2658">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2659">Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2659">Occurs when the stylus button is released while the pointer is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2660">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2660">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusButtonUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2661">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2661">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusButtonUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2662">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2662">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2663">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2663">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2664">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2664">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2665">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2665">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusButtonUpEvent>|  
|<span data-ttu-id="76dc5-2666">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2666">Routing strategy</span></span>|<span data-ttu-id="76dc5-2667">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2667">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2668">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2668">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   <span data-ttu-id="76dc5-2669">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2669">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusButtonUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2670">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2670">Override <xref:System.Windows.ContentElement.OnStylusButtonUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2671">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusButtonUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2671">Identifies the <see cref="E:System.Windows.ContentElement.StylusButtonUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2672">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2672">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2673">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2673">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2674">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2674">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2675">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2675">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2676">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2676">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2677">Tritt auf, wenn der Stift den Digitizer berührt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2677">Occurs when the stylus touches the digitizer while the stylus is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2678">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2678">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusDown> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2679">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2679">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusDown> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2680">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2680">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2681">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2681">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2682">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2682">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2683">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2683">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusDownEvent>|  
|<span data-ttu-id="76dc5-2684">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2684">Routing strategy</span></span>|<span data-ttu-id="76dc5-2685">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2685">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2686">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2686">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   <span data-ttu-id="76dc5-2687">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2687">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2688">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2688">Override <xref:System.Windows.ContentElement.OnStylusDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2689">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2689">Identifies the <see cref="E:System.Windows.ContentElement.StylusDown" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2690">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2690">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2691">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2691">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2692">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2692">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2693">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2693">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2694">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2694">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2695">Tritt auf, wenn der Stift in den Bereich dieses Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2695">Occurs when the stylus enters the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2696"><xref:System.Windows.ContentElement.StylusEnter> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2696"><xref:System.Windows.ContentElement.StylusEnter> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="76dc5-2697">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2697">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="76dc5-2698">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2698">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="76dc5-2699">Obwohl <xref:System.Windows.ContentElement.StylusEnter> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.ContentElement.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2699">Although <xref:System.Windows.ContentElement.StylusEnter> tracks when the stylus enters the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `false` to `true` on this element.</span></span>  
  
 <span data-ttu-id="76dc5-2700">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2700">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusEnter> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2701">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2701">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusEnter> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2702">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2702">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2703">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2703">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2704">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2704">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2705">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2705">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusEnterEvent>|  
|<span data-ttu-id="76dc5-2706">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2706">Routing strategy</span></span>|<span data-ttu-id="76dc5-2707">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2707">Direct</span></span>|  
|<span data-ttu-id="76dc5-2708">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2708">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2709">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2709">Override <xref:System.Windows.ContentElement.OnStylusEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2710">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2710">Identifies the <see cref="E:System.Windows.ContentElement.StylusEnter" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2711">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2711">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2712">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2712">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2713">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2713">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2714">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2714">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2715">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2715">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2716">Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2716">Occurs when the stylus moves over an element without actually touching the digitizer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2717">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2717">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInAirMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2718">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2718">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInAirMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2719">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2719">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2720">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2720">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2721">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2721">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2722">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2722">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInAirMoveEvent>|  
|<span data-ttu-id="76dc5-2723">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2723">Routing strategy</span></span>|<span data-ttu-id="76dc5-2724">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2724">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2725">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2725">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2726">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2726">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInAirMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2727">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2727">Override <xref:System.Windows.ContentElement.OnStylusInAirMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2728">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusInAirMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2728">Identifies the <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2729">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2729">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2730">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2730">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2731">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2731">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2732">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2732">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2733">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2733">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2734">Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2734">Occurs when the stylus is close enough to the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2735">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2735">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusInRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2736">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2736">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusInRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2737">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2737">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2738">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2738">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2739">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2739">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2740">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2740">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusInRangeEvent>|  
|<span data-ttu-id="76dc5-2741">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2741">Routing strategy</span></span>|<span data-ttu-id="76dc5-2742">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2742">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2743">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2743">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2744">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2744">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusInRange>.</span></span>  
  
-   <span data-ttu-id="76dc5-2745">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2745">Override <xref:System.Windows.ContentElement.OnStylusInRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2746">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusInRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2746">Identifies the <see cref="E:System.Windows.ContentElement.StylusInRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2747">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2747">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2748">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2748">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2749">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2749">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2750">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2750">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2751">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2751">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2752">Tritt auf, wenn der Stift den Bereich des Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2752">Occurs when the stylus leaves the bounds of the element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2753"><xref:System.Windows.ContentElement.StylusLeave> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2753"><xref:System.Windows.ContentElement.StylusLeave> is a [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md) that uses the direct event handling routing strategy.</span></span> <span data-ttu-id="76dc5-2754">Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2754">Direct routed events are not raised along a route; instead, they are handled in the same element where they are raised.</span></span> <span data-ttu-id="76dc5-2755">Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2755">However, they do enable other aspects of routed event behavior, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="76dc5-2756">Obwohl <xref:System.Windows.ContentElement.StylusLeave> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.ContentElement.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2756">Although <xref:System.Windows.ContentElement.StylusLeave> tracks when the stylus leaves the bounds of an element, this event more literally reports that the <xref:System.Windows.ContentElement.IsStylusOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
 <span data-ttu-id="76dc5-2757">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2757">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusLeave> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2758">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2758">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusLeave> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2759">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2759">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2760">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2760">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2761">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2761">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2762">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2762">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusLeaveEvent>|  
|<span data-ttu-id="76dc5-2763">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2763">Routing strategy</span></span>|<span data-ttu-id="76dc5-2764">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2764">Direct</span></span>|  
|<span data-ttu-id="76dc5-2765">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2765">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2766">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2766">Override <xref:System.Windows.ContentElement.OnStylusLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2767">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2767">Identifies the <see cref="E:System.Windows.ContentElement.StylusLeave" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2768">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2768">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2769">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2769">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2770">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2770">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2771">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2771">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2772">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2772">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2773">Tritt auf, wenn der Stift über das Element bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2773">Occurs when the stylus moves over this element.</span></span> <span data-ttu-id="76dc5-2774">Zum Auslösen dieses Ereignisses muss der Stift auf dem Digitizer bewegt werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2774">The stylus must move while on the digitizer to raise this event.</span></span> <span data-ttu-id="76dc5-2775">Andernfalls wird <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2775">Otherwise, <see cref="E:System.Windows.ContentElement.StylusInAirMove" /> is raised instead.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2776">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2776">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusMove> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2777">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2777">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusMove> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2778">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2778">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2779">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2779">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2780">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2780">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2781">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2781">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusMoveEvent>|  
|<span data-ttu-id="76dc5-2782">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2782">Routing strategy</span></span>|<span data-ttu-id="76dc5-2783">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2783">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2784">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2784">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2785">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2785">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2786">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2786">Override <xref:System.Windows.ContentElement.OnStylusMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2787">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2787">Identifies the <see cref="E:System.Windows.ContentElement.StylusMove" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2788">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2788">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2789">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2789">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2790">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2790">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2791">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2791">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2792">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2792">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2793">Tritt auf, wenn der Stift zu weit vom Digitizer entfernt ist, um erkannt zu werden, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2793">Occurs when the stylus is too far from the digitizer to be detected, while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2794">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2794">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusOutOfRange> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2795">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2795">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusOutOfRange> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2796">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2796">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2797">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2797">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2798">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2798">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2799">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2799">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusOutOfRangeEvent>|  
|<span data-ttu-id="76dc5-2800">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2800">Routing strategy</span></span>|<span data-ttu-id="76dc5-2801">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2801">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2802">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2802">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2803">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2803">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusOutOfRange>.</span></span>  
  
-   <span data-ttu-id="76dc5-2804">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2804">Override <xref:System.Windows.ContentElement.OnStylusOutOfRange%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2805">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusOutOfRange" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2805">Identifies the <see cref="E:System.Windows.ContentElement.StylusOutOfRange" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2806">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2806">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2807">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2807">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2808">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2808">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2809">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2809">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2810">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2810">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2811">Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2811">Occurs when a user performs one of several stylus gestures.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2812">Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2812">For more information about stylus gestures, see <xref:System.Windows.Input.SystemGesture>.</span></span>  
  
 <span data-ttu-id="76dc5-2813">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2813">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusSystemGesture> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2814">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2814">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusSystemGesture> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2815">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2815">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2816">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2816">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2817">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2817">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2818">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2818">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusSystemGestureEvent>|  
|<span data-ttu-id="76dc5-2819">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2819">Routing strategy</span></span>|<span data-ttu-id="76dc5-2820">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2820">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2821">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2821">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   <span data-ttu-id="76dc5-2822">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2822">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusSystemGesture>.</span></span>  
  
-   <span data-ttu-id="76dc5-2823">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2823">Override <xref:System.Windows.ContentElement.OnStylusSystemGesture%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2824">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusSystemGesture" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2824">Identifies the <see cref="E:System.Windows.ContentElement.StylusSystemGesture" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2825">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2825">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2826">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2826">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2827">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2827">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2828">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2828">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2829">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2829">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2830">Tritt auf, wenn ein Benutzer den Stift vom Digitizer hebt, während sich der Stift über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2830">Occurs when the user raises the stylus off the digitizer while it is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2831">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.StylusUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2831">This event creates an alias for the <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.StylusUp> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2832">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.StylusUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2832">Event handlers that are attached to the <xref:System.Windows.ContentElement.StylusUp> event are attached to the underlying <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
 <span data-ttu-id="76dc5-2833">Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2833">Touch, mouse, and stylus input exist in a particular relationship.</span></span> <span data-ttu-id="76dc5-2834">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="76dc5-2834">For more information, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2835">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2835">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2836">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2836">Identifier field</span></span>|<xref:System.Windows.ContentElement.StylusUpEvent>|  
|<span data-ttu-id="76dc5-2837">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2837">Routing strategy</span></span>|<span data-ttu-id="76dc5-2838">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2838">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2839">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2839">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   <span data-ttu-id="76dc5-2840">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewStylusUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2840">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewStylusUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2841">Außer Kraft setzen <xref:System.Windows.ContentElement.OnStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2841">Override <xref:System.Windows.ContentElement.OnStylusUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2842">Identifiziert das <see cref="E:System.Windows.ContentElement.StylusUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2842">Identifies the <see cref="E:System.Windows.ContentElement.StylusUp" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2843">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2843">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2844">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2844">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2845">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2845">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2846">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2846">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2847">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2847">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2848">Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2848">Occurs when this element gets text in a device-independent manner.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="76dc5-2849">Dieses Ereignis möglicherweise bereits als behandelt, indem die internen Implementierungen zusammengesetzte Steuerelemente gekennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2849">This event might already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="76dc5-2850">Siehe Anmerkung unten an.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2850">See Remark below.</span></span>  
  
 <span data-ttu-id="76dc5-2851">Die <xref:System.Windows.ContentElement.TextInput> Ereignis bereits von der internen Implementierungen der zusammengesetzte Steuerelemente als behandelt markiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2851">The <xref:System.Windows.ContentElement.TextInput> event may already be marked as handled by the internal implementations of composited controls.</span></span> <span data-ttu-id="76dc5-2852">Z. B. eine <xref:System.Windows.Controls.TextBox> ist ein zusammengesetztes Steuerelement, in denen die <xref:System.Windows.ContentElement.TextInput> Ereignis ist bereits als behandelt, in der Zusammensetzung markiert.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2852">For example, a <xref:System.Windows.Controls.TextBox> is a composited control where the <xref:System.Windows.ContentElement.TextInput> event is already marked as handled; within its compositing.</span></span> <span data-ttu-id="76dc5-2853">Grund hierfür das Steuerelement bestimmte Arten von Eingaben, wie z. B. die Pfeiltasten, dass für das Steuerelement eine besondere Bedeutung interpretieren muss.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2853">Controls do this because the control needs to interpret some types of input, such as arrow keys, as having special meaning to that control.</span></span> <span data-ttu-id="76dc5-2854">Bei Verwendung von <xref:System.Windows.ContentElement.PreviewTextInput> des Ereignisses, in dem Sie Handler für die Texteingabe anfügen, können Sie bessere Ergebnisse erhalten.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2854">If you use <xref:System.Windows.ContentElement.PreviewTextInput> as the event where you attach handlers for text input, you may receive better results.</span></span> <span data-ttu-id="76dc5-2855">Diese Technik umgeht den meisten Fällen, in denen steuerelementzusammensetzung hat bereits das Ereignis als behandelt markiert, und verhindert, dass den Handler empfängt das Ereignis auf der Ereignisroute.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2855">This technique circumvents most cases where control composition has already marked this event as handled and prevents your handler from receiving the event along the event route.</span></span>  
  
 <span data-ttu-id="76dc5-2856">Die <xref:System.Windows.ContentElement.TextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2856">The <xref:System.Windows.ContentElement.TextInput> event allows a component or application to listen for text input in a device-independent manner.</span></span> <span data-ttu-id="76dc5-2857">Die Tastatur dient primär der <xref:System.Windows.ContentElement.TextInput>, Spracherkennung, handschrifterkennung und andere Eingabegeräte können auch auslösen, aber <xref:System.Windows.ContentElement.TextInput>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2857">The keyboard is the primary means of <xref:System.Windows.ContentElement.TextInput>, but speech, handwriting, and other input devices can also raise <xref:System.Windows.ContentElement.TextInput>.</span></span>  
  
 <span data-ttu-id="76dc5-2858">Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren - können mehrere wichtige Ereignisse nur ein Text Ereignisse auslösen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2858">Because of key combinations - either in default keyboards or through input method editors - multiple key events might raise just one text input event.</span></span>  
  
 <span data-ttu-id="76dc5-2859">Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.ContentElement.TextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.ContentElement> als Basiselement geerbt wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2859">This event creates an alias for the <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event for this class, so that <xref:System.Windows.ContentElement.TextInput> is part of the class members list when <xref:System.Windows.ContentElement> is inherited as a base element.</span></span> <span data-ttu-id="76dc5-2860">Ereignishandler, die angefügt sind, die <xref:System.Windows.ContentElement.TextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2860">Event handlers that are attached to the <xref:System.Windows.ContentElement.TextInput> event are attached to the underlying <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> attached event and receive the same event data instance.</span></span>  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2861">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2861">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2862">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2862">Identifier field</span></span>|<xref:System.Windows.ContentElement.TextInputEvent>|  
|<span data-ttu-id="76dc5-2863">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2863">Routing strategy</span></span>|<span data-ttu-id="76dc5-2864">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2864">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2865">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2865">Delegate</span></span>|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   <span data-ttu-id="76dc5-2866">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewTextInput>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2866">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTextInput>.</span></span>  
  
-   <span data-ttu-id="76dc5-2867">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2867">Override <xref:System.Windows.ContentElement.OnTextInput%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2868">Identifiziert das <see cref="E:System.Windows.ContentElement.TextInput" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2868">Identifies the <see cref="E:System.Windows.ContentElement.TextInput" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2869">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2869">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="76dc5-2870">Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2870">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="76dc5-2871">Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2871">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="76dc5-2872">Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2872">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="76dc5-2873">Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2873">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2874">Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2874">Occurs when a finger touches the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2875">In der Standardeinstellung die <xref:System.Windows.ContentElement.PreviewTouchDown> und <xref:System.Windows.ContentElement.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2875">By default, the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events do not occur until a finger touches the screen and moves.</span></span> <span data-ttu-id="76dc5-2876">Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2876">Pressing a finger on the screen and holding it without moving it causes the press and hold behavior of a <xref:System.Windows.Input.Stylus>.</span></span> <span data-ttu-id="76dc5-2877">Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2877">The press and hold behavior is equivalent to a mouse right-click.</span></span>  
  
 <span data-ttu-id="76dc5-2878">Die dazu führen, dass die <xref:System.Windows.ContentElement.PreviewTouchDown> und <xref:System.Windows.ContentElement.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2878">To cause the <xref:System.Windows.ContentElement.PreviewTouchDown> and <xref:System.Windows.ContentElement.TouchDown> events to occur as soon as a finger touches the screen, set the <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> attached property to `false` for this element.</span></span>  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2879">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2879">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2880">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2880">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchDownEvent>|  
|<span data-ttu-id="76dc5-2881">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2881">Routing strategy</span></span>|<span data-ttu-id="76dc5-2882">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2882">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2883">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2883">Delegate</span></span>|<span data-ttu-id="76dc5-2884">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2884"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2885">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewTouchDown>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2885">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchDown>.</span></span>  
  
-   <span data-ttu-id="76dc5-2886">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2886">Override <xref:System.Windows.ContentElement.OnTouchDown%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2887">Identifiziert das <see cref="E:System.Windows.ContentElement.TouchDown" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2887">Identifies the <see cref="E:System.Windows.ContentElement.TouchDown" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2888">Tritt ein, wenn sich eine Fingereingabe in die Grenzen dieses Elements hineinbewegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2888">Occurs when a touch moves from outside to inside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dc5-2889">Dieses Ereignis wird immer dann ausgelöst, und zwar unabhängig davon, ob das Fingereingabegerät für dieses Benutzeroberflächenelement erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2889">This event is always raised, whether or not the touch device is captured to this UI element.</span></span>  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2890">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2890">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2891">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2891">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchEnterEvent>|  
|<span data-ttu-id="76dc5-2892">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2892">Routing strategy</span></span>|<span data-ttu-id="76dc5-2893">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2893">Direct</span></span>|  
|<span data-ttu-id="76dc5-2894">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2894">Delegate</span></span>|<span data-ttu-id="76dc5-2895">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2895"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2896">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2896">Override <xref:System.Windows.ContentElement.OnTouchEnter%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2897">Identifiziert das <see cref="E:System.Windows.ContentElement.TouchEnter" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2897">Identifies the <see cref="E:System.Windows.ContentElement.TouchEnter" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2898">Ruft alle Fingereingabegeräte ab, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2898">Gets all touch devices that are captured to this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-2899">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2899">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2900">Ruft alle Fingereingabegeräte ab, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2900">Gets all touch devices that are captured to this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="76dc5-2901">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2901">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are captured to this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2902">Ruft alle Fingereingabegeräte ab, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2902">Gets all touch devices that are over this element.</span></span></summary>
        <value><span data-ttu-id="76dc5-2903">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element befinden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2903">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ContentElement.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.ContentElement.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2904">Ruft alle Fingereingabegeräte ab, die sich über diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2904">Gets all touch devices that are over this element or any child elements in its visual tree.</span></span></summary>
        <value><span data-ttu-id="76dc5-2905">Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element oder seinen untergeordneten Elemente in der visuellen Struktur befinden.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2905">An enumeration of <see cref="T:System.Windows.Input.TouchDevice" /> objects that are over this element or any child elements in its visual tree.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2906">Tritt ein, wenn sich eine Fingereingabe aus den Grenzen dieses Elements herausbewegt.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2906">Occurs when a touch moves from inside to outside the bounds of this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2907">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2907">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2908">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2908">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchLeaveEvent>|  
|<span data-ttu-id="76dc5-2909">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2909">Routing strategy</span></span>|<span data-ttu-id="76dc5-2910">Direkt</span><span class="sxs-lookup"><span data-stu-id="76dc5-2910">Direct</span></span>|  
|<span data-ttu-id="76dc5-2911">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2911">Delegate</span></span>|<span data-ttu-id="76dc5-2912">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2912"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2913">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2913">Override <xref:System.Windows.ContentElement.OnTouchLeave%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2914">Identifiziert das <see cref="E:System.Windows.ContentElement.TouchLeave" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2914">Identifies the <see cref="E:System.Windows.ContentElement.TouchLeave" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2915">Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2915">Occurs when a finger moves on the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2916">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2916">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2917">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2917">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchMoveEvent>|  
|<span data-ttu-id="76dc5-2918">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2918">Routing strategy</span></span>|<span data-ttu-id="76dc5-2919">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2919">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2920">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2920">Delegate</span></span>|<span data-ttu-id="76dc5-2921">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2921"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2922">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewTouchMove>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2922">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchMove>.</span></span>  
  
-   <span data-ttu-id="76dc5-2923">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2923">Override <xref:System.Windows.ContentElement.OnTouchMove%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2924">Identifiziert das <see cref="E:System.Windows.ContentElement.TouchMove" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2924">Identifies the <see cref="E:System.Windows.ContentElement.TouchMove" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.ContentElement.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2925">Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2925">Occurs when a finger is raised off of the screen while the finger is over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="76dc5-2926">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="76dc5-2926">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="76dc5-2927">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="76dc5-2927">Identifier field</span></span>|<xref:System.Windows.ContentElement.TouchUpEvent>|  
|<span data-ttu-id="76dc5-2928">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="76dc5-2928">Routing strategy</span></span>|<span data-ttu-id="76dc5-2929">Bubbling</span><span class="sxs-lookup"><span data-stu-id="76dc5-2929">Bubbling</span></span>|  
|<span data-ttu-id="76dc5-2930">delegate</span><span class="sxs-lookup"><span data-stu-id="76dc5-2930">Delegate</span></span>|<span data-ttu-id="76dc5-2931">Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2931"><xref:System.EventHandler%601> of type <xref:System.Windows.Input.TouchEventArgs>.</span></span>|  
  
-   <span data-ttu-id="76dc5-2932">Das entsprechende tunnelingereignis ist <xref:System.Windows.ContentElement.PreviewTouchUp>.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2932">The corresponding tunneling event is <xref:System.Windows.ContentElement.PreviewTouchUp>.</span></span>  
  
-   <span data-ttu-id="76dc5-2933">Außer Kraft setzen <xref:System.Windows.ContentElement.OnTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2933">Override <xref:System.Windows.ContentElement.OnTouchUp%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.ContentElement.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.ContentElement.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dc5-2934">Identifiziert das <see cref="E:System.Windows.ContentElement.TouchUp" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="76dc5-2934">Identifies the <see cref="E:System.Windows.ContentElement.TouchUp" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>