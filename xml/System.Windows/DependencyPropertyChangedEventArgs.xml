<Type Name="DependencyPropertyChangedEventArgs" FullName="System.Windows.DependencyPropertyChangedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="44dae90db53c61a42de2b5d8e5d4008eda981196" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39964407" /></Metadata><TypeSignature Language="C#" Value="public struct DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DependencyPropertyChangedEventArgs extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Structure DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public value class DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="F#" Value="type DependencyPropertyChangedEventArgs = struct" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ab575-101">Stellt Daten für verschiedene durch geänderte Eigenschaften ausgelöste Ereignisse bereit.</span><span class="sxs-lookup"><span data-stu-id="ab575-101">Provides data for various property changed events.</span></span> <span data-ttu-id="ab575-102">Diese Ereignisse melden normalerweise effektive Änderungen beim Wert einer schreibgeschützten Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ab575-102">Typically these events report effective value changes in the value of a read-only dependency property.</span></span> <span data-ttu-id="ab575-103">Eine weitere Verwendungsmöglichkeit ist als Teil einer <see cref="T:System.Windows.PropertyChangedCallback" />-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="ab575-103">Another usage is as part of a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-104">Die Ereignisse, mit denen die <xref:System.Windows.DependencyPropertyChangedEventArgs> Klasse für die Ereignisdaten und <xref:System.Windows.DependencyPropertyChangedEventHandler> methodenimplementierungen für Handler, im Allgemeinen folgen dem Benennungsmuster `Is*Changed`, und werden in der Regel als implementiert [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse ohne <xref:System.Windows.RoutedEvent> (sie sind nicht Routingereignisse) sichern.</span><span class="sxs-lookup"><span data-stu-id="ab575-104">The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events).</span></span> <span data-ttu-id="ab575-105">Einige Methoden, die "andernfalls verarbeiten" für die Klassenbehandlung nicht verfügbar gemachte Ereignisse, die eine statusänderung durch Änderung einer Eigenschaft, z. B. melden <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, auch die <xref:System.Windows.DependencyPropertyChangedEventArgs> -Klasse für die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="ab575-105">Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.</span></span>  
  
 <span data-ttu-id="ab575-106">Das Szenario für <xref:System.Windows.PropertyChangedCallback> besteht darin, die Argumente für den Bericht alten und neuen Werte zu verwenden, die die Auswertung der Eigenschaft System stammen.</span><span class="sxs-lookup"><span data-stu-id="ab575-106">The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property.</span></span> <span data-ttu-id="ab575-107">Ein Rückruf, der alten und neuen Werte verarbeitet können spezielle Behandlung je nach diesen Werten, z. B. auswählen, die nicht auf Änderungen reagiert, die unbedeutend erachtet werden.</span><span class="sxs-lookup"><span data-stu-id="ab575-107">A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab575-108">Im folgenden Beispiel wird die <xref:System.Windows.DependencyPropertyChangedEventArgs> Klasse im Kontext einer <xref:System.Windows.PropertyChangedCallback> für eine bestimmte Eigenschaft einer benutzerdefinierten Klasse, die auch Ereignisse definiert.</span><span class="sxs-lookup"><span data-stu-id="ab575-108">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="ab575-109">Der Rückruf die Ergebnisse der alten und neuen Werten aus dem Eigenschaftensystem erfasst, wie durch kommuniziert <xref:System.Windows.DependencyPropertyChangedEventArgs>, und packt diese neu in eine andere Klasse Ereignisargumenten <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="ab575-109">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="ab575-110">Die neue Argumente werden dann wie die Daten für eine ValueChanged-Ereignis definiert und ausgelöst werden, indem Sie die benutzerdefinierte Klasse verwendet.</span><span class="sxs-lookup"><span data-stu-id="ab575-110">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyChangedEventArgs(System::Windows::DependencyProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberSignature Language="F#" Value="new System.Windows.DependencyPropertyChangedEventArgs : System.Windows.DependencyProperty * obj * obj -&gt; System.Windows.DependencyPropertyChangedEventArgs" Usage="new System.Windows.DependencyPropertyChangedEventArgs (property, oldValue, newValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="ab575-111">Der Bezeichner für die Abhängigkeitseigenschaft, die geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="ab575-111">The identifier for the dependency property that changed.</span></span></param>
        <param name="oldValue"><span data-ttu-id="ab575-112">Der Wert der Eigenschaft vor der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</span><span class="sxs-lookup"><span data-stu-id="ab575-112">The value of the property before the change reported by the relevant event or state change.</span></span></param>
        <param name="newValue"><span data-ttu-id="ab575-113">Der Wert der Eigenschaft nach der Änderung, die vom betreffenden Ereignis bzw. der Zustandsänderung gemeldet wurde.</span><span class="sxs-lookup"><span data-stu-id="ab575-113">The value of the property after the change reported by the relevant event or state change.</span></span></param>
        <summary><span data-ttu-id="ab575-114">Initialisiert eine neue Instanz der <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="ab575-114">Initializes a new instance of the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-115">Implementierungen von benutzerdefinierten Ereignissen, die Abhängigkeit von eigenschaftenänderungen zu melden, sollten diesen Konstruktor verwenden, für das die Ereignisdaten mit den Einzelheiten der Änderung auffüllen, wenn das Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="ab575-115">Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ab575-116">Gibt einen Wert zurück, der angibt, ob das angegebene Objekt dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="ab575-116">Returns whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ab575-117">Das mit der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> zu vergleichende Objekt</span><span class="sxs-lookup"><span data-stu-id="ab575-117">The object to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="ab575-118">Bestimmt, ob das angegebene Objekt dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="ab575-118">Determines whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="ab575-119"><see langword="true" />, wenn das angegebene Objekt gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-119"><see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-120">Diese Implementierung basiert auf Äquivalenz Wert, der alle Eigenschaften, einschließlich der interne Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ab575-120">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (args As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="dependencyPropertyChangedEventArgs.Equals args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="ab575-121">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das mit dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="ab575-121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span></span></param>
        <summary><span data-ttu-id="ab575-122">Bestimmt, ob das angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> dem aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> entspricht.</span><span class="sxs-lookup"><span data-stu-id="ab575-122">Determines whether the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="ab575-123"><see langword="true" />, wenn die angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> gleich der aktuellen <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-123"><see langword="true" /> if the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-124">Diese Implementierung basiert auf Äquivalenz Wert, der alle Eigenschaften, einschließlich der interne Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="ab575-124">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dependencyPropertyChangedEventArgs.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ab575-125">Ruft einen Hashcode für diese <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> ab.</span><span class="sxs-lookup"><span data-stu-id="ab575-125">Gets a hash code  for this <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></summary>
        <returns><span data-ttu-id="ab575-126">Ein 32-Bit-Ganzzahl-Hashcode mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="ab575-126">A signed 32-bit integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public object NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab575-127">Ruft den Wert der Eigenschaft nach der Änderung ab.</span><span class="sxs-lookup"><span data-stu-id="ab575-127">Gets the value of the property after the change.</span></span></summary>
        <value><span data-ttu-id="ab575-128">Der Eigenschaftswert nach der Änderung.</span><span class="sxs-lookup"><span data-stu-id="ab575-128">The property value after the change.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-129">Der Typ des angegebenen Werts sollte immer umwandelbare in den Typ für die Abhängigkeitseigenschaft, der gemeldet wird.</span><span class="sxs-lookup"><span data-stu-id="ab575-129">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab575-130">Im folgenden Beispiel wird die <xref:System.Windows.DependencyPropertyChangedEventArgs> Klasse im Kontext einer <xref:System.Windows.PropertyChangedCallback> für eine bestimmte Eigenschaft einer benutzerdefinierten Klasse, die auch Ereignisse definiert.</span><span class="sxs-lookup"><span data-stu-id="ab575-130">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="ab575-131">Der Rückruf die Ergebnisse der alten und neuen Werten aus dem Eigenschaftensystem erfasst, wie durch kommuniziert <xref:System.Windows.DependencyPropertyChangedEventArgs>, und packt diese neu in eine andere Klasse Ereignisargumenten <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="ab575-131">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="ab575-132">Die neue Argumente werden dann wie die Daten für eine ValueChanged-Ereignis definiert und ausgelöst werden, indem Sie die benutzerdefinierte Klasse verwendet.</span><span class="sxs-lookup"><span data-stu-id="ab575-132">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public object OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OldValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValue : obj" Usage="System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab575-133">Ruft den Wert der Eigenschaft vor der Änderung ab.</span><span class="sxs-lookup"><span data-stu-id="ab575-133">Gets the value of the property before the change.</span></span></summary>
        <value><span data-ttu-id="ab575-134">Der Eigenschaftswert vor der Änderung.</span><span class="sxs-lookup"><span data-stu-id="ab575-134">The property value before the change.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-135">Der Typ des angegebenen Werts sollte immer umwandelbare in den Typ für die Abhängigkeitseigenschaft, der gemeldet wird.</span><span class="sxs-lookup"><span data-stu-id="ab575-135">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ab575-136">Im folgenden Beispiel wird die <xref:System.Windows.DependencyPropertyChangedEventArgs> Klasse im Kontext einer <xref:System.Windows.PropertyChangedCallback> für eine bestimmte Eigenschaft einer benutzerdefinierten Klasse, die auch Ereignisse definiert.</span><span class="sxs-lookup"><span data-stu-id="ab575-136">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="ab575-137">Der Rückruf die Ergebnisse der alten und neuen Werten aus dem Eigenschaftensystem erfasst, wie durch kommuniziert <xref:System.Windows.DependencyPropertyChangedEventArgs>, und packt diese neu in eine andere Klasse Ereignisargumenten <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="ab575-137">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="ab575-138">Die neue Argumente werden dann wie die Daten für eine ValueChanged-Ereignis definiert und ausgelöst werden, indem Sie die benutzerdefinierte Klasse verwendet.</span><span class="sxs-lookup"><span data-stu-id="ab575-138">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="left = right" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ab575-139">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-139">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ab575-140">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-140">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <summary><span data-ttu-id="ab575-141">Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="ab575-141">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</span></span></summary>
        <returns><span data-ttu-id="ab575-142"><see langword="true" />, wenn die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen äquivalent sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-142"><see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-143">Die Implementierung verwendet die gleiche Logik wie <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab575-143">The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Windows.DependencyPropertyChangedEventArgs * System.Windows.DependencyPropertyChangedEventArgs -&gt; bool" Usage="System.Windows.DependencyPropertyChangedEventArgs.op_Inequality (left, right)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="ab575-144">Der erste zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-144">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <param name="right"><span data-ttu-id="ab575-145">Der zweite zu vergleichende <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-145">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span></span></param>
        <summary><span data-ttu-id="ab575-146">Bestimmt, ob zwei angegebene <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Objekte ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="ab575-146">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects are different.</span></span></summary>
        <returns><span data-ttu-id="ab575-147"><see langword="true" />, wenn sich die beiden <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />-Instanzen unterscheiden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="ab575-147"><see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are different; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-148">Die Implementierung gibt zurück, das die Negation des dieselbe Logik wie <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="ab575-148">The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Property : System.Windows.DependencyProperty" Usage="System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ab575-149">Ruft den Bezeichner für die Abhängigkeitseigenschaft ab, für die die Änderung des Werts aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="ab575-149">Gets the identifier for the dependency property where the value change occurred.</span></span></summary>
        <value><span data-ttu-id="ab575-150">Das Bezeichnerfeld der Abhängigkeitseigenschaft, für die die Änderung des Werts aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="ab575-150">The identifier field of the dependency property where the value change occurred.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ab575-151">Diese Eigenschaft ist relevant, in einem allgemeinen <xref:System.Windows.PropertyChangedCallback> , die für mehrere Eigenschaften registriert ist, und es ist erforderlich, um zu unterscheiden, welche Änderung der Eigenschaft der Rückruf aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ab575-151">This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</span></span> <span data-ttu-id="ab575-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> gilt nicht in der Regel zum Auslösen von Ereignissen, weil in der Regel eine 1:1-Entsprechung zwischen Eigenschaften und Ereignisse dieser Bericht die Änderung der Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="ab575-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</span></span> <span data-ttu-id="ab575-153">Das Ereignis, das ausgelöst wurde, ist selbst die Angabe der Eigenschaft geändert.</span><span class="sxs-lookup"><span data-stu-id="ab575-153">The event that was raised is itself the indication of which property changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>