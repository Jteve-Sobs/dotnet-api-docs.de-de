<Type Name="SplashScreen" FullName="System.Windows.SplashScreen">
  <Metadata><Meta Name="ms.openlocfilehash" Value="092948df891920b1d7a12859b033ab592bb5c5c0" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75051344" /></Metadata><TypeSignature Language="C#" Value="public class SplashScreen" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SplashScreen extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.SplashScreen" />
  <TypeSignature Language="VB.NET" Value="Public Class SplashScreen" />
  <TypeSignature Language="C++ CLI" Value="public ref class SplashScreen" />
  <TypeSignature Language="F#" Value="type SplashScreen = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Startbildschirm für eine WPF (Windows Presentation Foundation)-Anwendung bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die <xref:System.Windows.SplashScreen>-Klasse zum Anzeigen eines Bilds in einem Startfenster oder Begrüßungs *Bildschirm*, wenn eine WPF-Anwendung gestartet wird. Aufrufen der <xref:System.Windows.SplashScreen.Show%2A>-Methode, um den Begrüßungsbildschirm anzuzeigen. Ruft die <xref:System.Windows.SplashScreen.Close%2A>-Methode auf, um den Begrüßungsbildschirm zu schließen. Geben Sie das im <xref:System.Windows.SplashScreen> Konstruktor zu verwendende Bild an.  
  
 Die <xref:System.Windows.SplashScreen>-Klasse kann jedes Bildformat anzeigen, das von der Windows Imaging Component (WIC) unterstützt wird. Beispielsweise können Sie das Format BMP, GIF, JPEG, PNG oder TIFF verwenden. Wenn das Image eine PNG-Datei ist und einen Alphakanal enthält, wird das Bild mithilfe der im Alphakanal definierten Transparenz gerendert.  
  
 Sie können Platzhalter Text nicht in den Begrüßungsbildschirm einschließen, der später durch Ihren Code hinzugefügt wird. Wenn Sie Text auf dem Begrüßungsbildschirm einschließen möchten, müssen Sie ihn der Bilddatei hinzufügen.  
  
> [!NOTE]
>  Es ist nicht erforderlich, Code zu schreiben, um einen Begrüßungsbildschirm anzuzeigen. Ab [!INCLUDE[vs_orcas_long](~/includes/vs-orcas-long-md.md)] SP1 können Sie schnell einen Begrüßungsbildschirm mit Standardeinstellungen konfigurieren. Weitere Informationen finden Sie unter Gewusst [wie: Hinzufügen eines Begrüßungs Bildschirms zu einer WPF-Anwendung](~/docs/framework/wpf/app-development/how-to-add-a-splash-screen-to-a-wpf-application.md).  
  
 Die <xref:System.Windows.SplashScreen>-Klasse zeigt den Begrüßungsbildschirm so schnell wie möglich an, nachdem die Anwendung gestartet wurde. Der Begrüßungsbildschirm wird mithilfe von System eigenem Code angezeigt, bevor die WPF-Anwendungs Instanz erstellt wird. Der Begrüßungsbildschirm wird in der Mitte des Bildschirms angezeigt. Wenn die Anwendung geladen wird, wird der Begrüßungsbildschirm ausgeblendet.  
  
 Wenn Ihre Anwendung kompiliert ist, wird das Bild als verwaltete Ressource in die Assembly eingebettet. Wenn die Anwendung lokalisiert ist, wird das Bild in die lokalisierte Satelliten-DLL eingebettet.  
  
> [!NOTE]
>  Die <xref:System.Windows.SplashScreen>-Klasse ist in teilweiser Vertrauenswürdigkeit nicht verfügbar.  
  
> [!NOTE]
>  Die <xref:System.Windows.SplashScreen>-Klasse kann in XAML-Browser Anwendungen (XBAPs) nicht verwendet werden, da Sie eine andere Start Architektur verwenden.  
  
   
  
## Examples  
 Im folgenden Codebeispiel wird gezeigt, wie ein Startfenster mithilfe der <xref:System.Windows.SplashScreen>-Klasse erstellt und angezeigt wird.  
  
 [!code-csharp[System.Windows.SplashScreen#2](~/samples/snippets/csharp/VS_Snippets_Wpf/System.Windows.SplashScreen/CS/App.xaml.cs#2)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">für den Zugriff auf nicht verwaltete Ressourcen. Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
    <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
    <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen resourceName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">Der Name der eingebetteten Ressource.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressource.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der `resourceName`-Parameter befolgt die üblichen Regeln für eingebettete Ressourcen. Weitere Informationen finden Sie im Thema zur Klasse <xref:System.Resources.ResourceManager>. Der `resourceName`-Parameter gibt den Namen der Ressourcen Datei und keinen URI an.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">für den Zugriff auf nicht verwaltete Ressourcen. Sicherheitsmaßnahme: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></permission>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SplashScreen (System.Reflection.Assembly resourceAssembly, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.Assembly resourceAssembly, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.#ctor(System.Reflection.Assembly,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (resourceAssembly As Assembly, resourceName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SplashScreen(System::Reflection::Assembly ^ resourceAssembly, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="new System.Windows.SplashScreen : System.Reflection.Assembly * string -&gt; System.Windows.SplashScreen" Usage="new System.Windows.SplashScreen (resourceAssembly, resourceName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="resourceAssembly" Type="System.Reflection.Assembly" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceAssembly">Die Assembly, die die eingebettete Ressource enthält.</param>
        <param name="resourceName">Der Name der eingebetteten Ressource.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.SplashScreen" />-Klasse mit der angegebenen Ressourcenassembly.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Parameter `resourceAssembly` und `resourceName` befolgen die üblichen Regeln für eingebettete Ressourcen. Weitere Informationen finden Sie im Thema zur Klasse <xref:System.Resources.ResourceManager>. Der `resourceName`-Parameter gibt den Namen der Ressourcen Datei und keinen URI an.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.#ctor(System.String)" />
        <altmember cref="T:System.Resources.ResourceManager" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close (TimeSpan fadeoutDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close(valuetype System.TimeSpan fadeoutDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close (fadeoutDuration As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close(TimeSpan fadeoutDuration);" />
      <MemberSignature Language="F#" Value="member this.Close : TimeSpan -&gt; unit" Usage="splashScreen.Close fadeoutDuration" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fadeoutDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="fadeoutDuration">Eine <see cref="T:System.TimeSpan" />, die angibt, nach welcher Zeitspanne der Begrüßungsbildschirm nach dem Initiieren des Schließvorgangs ausgeblendet wird.</param>
        <summary>Schließt den Begrüßungsbildschirm.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.SplashScreen.Show%2A>-Methode mit dem auf `true`festgelegten `autoClose`-Parameter aufgerufen haben, müssen Sie die <xref:System.Windows.SplashScreen.Close%2A>-Methode nicht aufrufen. Der Begrüßungsbildschirm wird automatisch geschlossen, nachdem die Anwendung geladen wurde. Wenn der Begrüßungsbildschirm geschlossen wird, wird die Zeitspanne, die für das Ausblenden benötigt wird, durch den Standardwert für den `fadeoutDuration`-Parameter bestimmt (300 Millisekunden).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.SplashScreen.Show(System.Boolean)" />
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Zeigt den Begrüßungsbildschirm an.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose);" />
      <MemberSignature Language="F#" Value="member this.Show : bool -&gt; unit" Usage="splashScreen.Show autoClose" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoClose"><see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
        <summary>Zeigt den Begrüßungsbildschirm an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die <xref:System.Windows.SplashScreen.Show%2A>-Methode mit `autoClose` auf `true`festgelegt haben, müssen Sie die <xref:System.Windows.SplashScreen.Close%2A>-Methode nicht aufzurufen. Der Begrüßungsbildschirm wird automatisch geschlossen, nachdem die Anwendung geladen wurde. Wenn der Begrüßungsbildschirm geschlossen wird, wird die Zeitspanne, die für das Ausblenden benötigt wird, durch den Standardwert für den `fadeoutDuration`-Parameter bestimmt (300 Millisekunden).  
  
 Ruft die <xref:System.Windows.SplashScreen.Show%2A>-Methode auf, bei der `autoClose` auf `false` festgelegt ist, wenn Sie einen nicht standardmäßigen Wert für die Ausblend Dauer bereitstellen möchten. Sie müssen die <xref:System.Windows.SplashScreen.Close%2A>-Methode aufzurufen, um den Begrüßungsbildschirm zu schließen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">Die im Konstruktor angegebene Ressource konnte nicht gefunden werden.</exception>
        <altmember cref="M:System.Windows.SplashScreen.Close(System.TimeSpan)" />
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (bool autoClose, bool topMost);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(bool autoClose, bool topMost) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.SplashScreen.Show(System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Show (autoClose As Boolean, topMost As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(bool autoClose, bool topMost);" />
      <MemberSignature Language="F#" Value="member this.Show : bool * bool -&gt; unit" Usage="splashScreen.Show (autoClose, topMost)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoClose" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="topMost" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="autoClose"><see langword="true" />, damit der Begrüßungsbildschirm automatisch geschlossen wird, <see langword="false" />, wenn der Begrüßungsbildschirm manuell geschlossen werden soll.</param>
        <param name="topMost"><see langword="true" />, wenn das Fenster für den Begrüßungsbildschirm den WS_EX_TOPMOST-Stil verwenden soll, andernfalls <see langword="false" />.</param>
        <summary>Zeigt den Begrüßungsbildschirm an.</summary>
        <remarks>To be added.</remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=145016">CreateWindowEx</related>
      </Docs>
    </Member>
  </Members>
</Type>
