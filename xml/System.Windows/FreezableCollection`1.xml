<Type Name="FreezableCollection&lt;T&gt;" FullName="System.Windows.FreezableCollection&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="944ab1d59878e16a4657cae65772dadb1a7947e5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36460129" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FreezableCollection&lt;T&gt; : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IList&lt;T&gt;, System.Collections.IList, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged where T : DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FreezableCollection`1&lt;(class System.Windows.DependencyObject) T&gt; extends System.Windows.Media.Animation.Animatable implements class System.Collections.Generic.ICollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IList`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FreezableCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public Class FreezableCollection(Of T)&#xA;Inherits Animatable&#xA;Implements ICollection(Of T), IEnumerable(Of T), IList, IList(Of T), INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA; where T : DependencyObjectpublic ref class FreezableCollection : System::Windows::Media::Animation::Animatable, System::Collections::Generic::ICollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IList&lt;T&gt;, System::Collections::IList, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type FreezableCollection&lt;'T (requires 'T :&gt; DependencyObject)&gt; = class&#xA;    inherit Animatable&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable&#xA;    interface IList&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface ICollection&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface seq&lt;'T (requires 'T :&gt; DependencyObject)&gt;&#xA;    interface INotifyCollectionChanged&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.Animatable</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IList&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="9b0a5-101">Der Typ der Auflistung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b0a5-101">The type of collection.</span>
      </span>
      <span data-ttu-id="9b0a5-102">Dieser Typ muss eine <see cref="T:System.Windows.DependencyObject" /> oder eine abgeleitete Klasse.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b0a5-102">This type must be a <see cref="T:System.Windows.DependencyObject" /> or a derived class.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="9b0a5-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b0a5-103">Represents a collection of <see cref="T:System.Windows.DependencyObject" />, <see cref="T:System.Windows.Freezable" />, or <see cref="T:System.Windows.Media.Animation.Animatable" /> objects.</span>
      </span>
      <span data-ttu-id="9b0a5-104">
        <see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9b0a5-104">
          <see cref="T:System.Windows.FreezableCollection`1" /> is itself an <see cref="T:System.Windows.Media.Animation.Animatable" /> type.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-105">Diese Klasse wird bereitgestellt, um die erstellen benutzerdefinierte Sammlungstypen, die vollständig unterstützen Datenbindung, Ändern der Benachrichtigung, Eigenschaft invalidierung und Animation ihrer Inhalte zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-105">This class is provided to enable the creation of custom collection types that fully support data binding, change notification, property invalidation, and animation of its contents.</span></span>  
  
### <a name="xaml-usage-for-freezablecollection"></a><span data-ttu-id="9b0a5-106">Verwendung von XAML-Verwendung für FreezableCollection</span><span class="sxs-lookup"><span data-stu-id="9b0a5-106">XAML Usage for FreezableCollection</span></span>  
 <span data-ttu-id="9b0a5-107"><xref:System.Windows.FreezableCollection%601> unterstützt eine beschränkte [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-107"><xref:System.Windows.FreezableCollection%601> supports a limited [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span>  
  
-   <span data-ttu-id="9b0a5-108">Ein Object-Element auf der Stammebene, Sie können theoretisch angeben einer nicht eingeschränkten <xref:System.Windows.FreezableCollection%601> Object-Element auch angeben, muss die [X: TypeArguments-Direktive](~/docs/framework/xaml-services/x-typearguments-directive.md) um die Einschränkung zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-108">As an object element at the root, you can theoretically specify an unconstrained <xref:System.Windows.FreezableCollection%601> object element, which must also specify the [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) to declare the constraint.</span></span> <span data-ttu-id="9b0a5-109">Dies ist jedoch kein häufiges Szenario, da Sie dazu die <xref:System.Windows.FreezableCollection%601> muss das Stammelement.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-109">However, this is not a common scenario, because to do this, the <xref:System.Windows.FreezableCollection%601> must be the root element.</span></span> <span data-ttu-id="9b0a5-110">Diese Einschränkung ist vorhanden, da die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] -prozessorimplementierung in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] können nur Unterstützung [X: TypeArguments-Direktive](~/docs/framework/xaml-services/x-typearguments-directive.md) Wenn das Element, es wird auf festgelegt, ist das Stammelement und alle geöffneten verwenden müssen generische Einschränkung, wenn Sie in einen generischen Typ instanziieren möchten [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="9b0a5-110">This limitation exists because the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor implementation in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] can only support [x:TypeArguments Directive](~/docs/framework/xaml-services/x-typearguments-directive.md) when the element it is being set on is the root element, and you must use  on any open constraint generic if you want to instantiate a generic type in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="9b0a5-111">Es ist unwahrscheinlich, dass Sie möchten eine <xref:System.Windows.FreezableCollection%601> als Stammelement, auch als lose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="9b0a5-111">It is unlikely that you want a <xref:System.Windows.FreezableCollection%601> as the root element, even as loose [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
-   <span data-ttu-id="9b0a5-112">Ableiten von <xref:System.Windows.FreezableCollection%601> und Anwenden einer typeinschränkung in der abgeleiteten Auflistung, die abgeleitete Auflistung kann eine Vielzahl von Verwendungen unterstützen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-112">If you derive from <xref:System.Windows.FreezableCollection%601> and apply a type constraint in the derived collection, the derived collection can support a variety of usages.</span></span> <span data-ttu-id="9b0a5-113">Dies ist möglich, da die Einschränkung in der Ableitung Übergabe überflüssig macht.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-113">This is possible because the constraint in your derivation eliminates the need to pass .</span></span>  
  
    -   <span data-ttu-id="9b0a5-114">Die typische [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Nutzung für eine solche abgeleiteten Auflistung wird durch implizite Auflistungssyntax.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-114">The typical [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage for such a derived collection is through implicit collection syntax.</span></span> <span data-ttu-id="9b0a5-115">Auflistungen, die bestimmte Schnittstellen unterstützen müssen nicht an die Auflistung selbst als Objektelement.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-115">Collections that support certain interfaces do not need to specify the collection itself as an object element.</span></span> <span data-ttu-id="9b0a5-116">Weitere Informationen zur Auflistungssyntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], finden Sie unter [XAML-Syntax im Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="9b0a5-116">For details on collection syntax in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="9b0a5-117">Z. B. ein *Objekt* mit einer *Eigenschaft* , in dem die *Eigenschaft* war vom Typ <xref:System.Windows.FreezableCollection%601> durch eingeschränkt <xref:System.Windows.DependencyObject> konnte unterstützen die folgende Syntax:</span><span class="sxs-lookup"><span data-stu-id="9b0a5-117">For instance, an *object* with a *property* where the *property* was of type <xref:System.Windows.FreezableCollection%601> constrained by <xref:System.Windows.DependencyObject> could support the following syntax:</span></span>  
  
        ```  
        <object>  
          <object.property>  
            oneOrMoreDependencyObjectElements  
          </object.property>  
        </object>  
        ```  
  
    -   <span data-ttu-id="9b0a5-118">Solange Sie nicht den Standardkonstruktor ausblenden, kann die abgeleitete Auflistung auch eine Element-Objektsyntax unterstützen (wobei das Object-Element explizit, im Gegensatz zu den oben beschriebenen impliziten Verwendung ist).</span><span class="sxs-lookup"><span data-stu-id="9b0a5-118">As long as you do not hide the default constructor, the derived collection can also support an object element syntax (where the object element is explicit, as opposed to the implicit usage shown above).</span></span> <span data-ttu-id="9b0a5-119">Es muss nicht das Stammelement sein.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-119">It does not need to be the root element.</span></span> <span data-ttu-id="9b0a5-120">Oder Sie können auch die abgeleitete Auflistung als Stammelement, verwenden, ohne angeben, obwohl unter Verwendung einer Auflistung als Stammelement ungewöhnlich ist.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-120">Or, you can also use the derived collection as a root element, without needing to specify , although using a collection as a root element is uncommon.</span></span>  
  
-   <span data-ttu-id="9b0a5-121">Alle untergeordneten Elemente der Auflistung in einem der oben genannten Szenarien müssen vom Typ des implementierten Einschränkung oder entsprechend den Angaben von sein.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-121">Any child elements of the collection in either of the above scenarios must be of the type of either the implemented constraint, or as specified by .</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-122">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-123">Initializes a new instance of <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the default initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : seq&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="9b0a5-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-124">The collection whose items should be added to the new <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-125">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> class that contains the same elements as the specified collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-126">Dieser Vorgang führt eine flache Kopie auf der angegebenen Auflistung. nur Verweise auf Elemente in der Auflistung kopiert werden, die Elemente selbst werden nicht geklont.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-126">This operation performs a shallow copy on the specified collection; only references to the collection's elements are copied, the elements themselves are not cloned.</span></span> <span data-ttu-id="9b0a5-127">Ändern ein Element des neuen <xref:System.Windows.FreezableCollection%601> auch ändert dieses Elements für `collection`.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-127">Modifying an element of the new <xref:System.Windows.FreezableCollection%601> also modifies that element for `collection`.</span></span>  
  
 <span data-ttu-id="9b0a5-128">Die Elemente befinden sich in der neuen <xref:System.Windows.FreezableCollection%601> in der gleichen Reihenfolge, die sie vom Enumerator der angegebenen Auflistung gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-128">The elements are placed in the new <xref:System.Windows.FreezableCollection%601> in the same order they are read by the enumerator of the specified collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9b0a5-129">
            <paramref name="collection" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-129">
              <paramref name="collection" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FreezableCollection (int capacity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 capacity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (capacity As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FreezableCollection(int capacity);" />
      <MemberSignature Language="F#" Value="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; : int -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="new System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt; capacity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="capacity" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="capacity">
          <span data-ttu-id="9b0a5-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-130">A value that is greater than or equal to 0 that specifies the number of elements the new collection can initially store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-131">Initializes a new instance of the <see cref="T:System.Windows.FreezableCollection`1" /> that is empty and has the specified initial capacity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9b0a5-132">
            <paramref name="capacity" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-132">
              <paramref name="capacity" /> is less than 0.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(T value);" />
      <MemberSignature Language="F#" Value="abstract member Add : 'T -&gt; unit&#xA;override this.Add : 'T -&gt; unit" Usage="freezableCollection.Add value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-133">The object to be added to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
          <span data-ttu-id="9b0a5-134">This value cannot be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-134">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-135">Adds the specified object to the end of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9b0a5-136">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-136">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9b0a5-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-137">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="freezableCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-138">Removes all elements from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-138">Removes all elements from the collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-139">Creates a modifiable clone of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies.</span>
          </span>
          <span data-ttu-id="9b0a5-140">If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-140">If this collection (or its contents) has animated dependency properties, the property’s base value is copied, not its current animated value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-141">A modifiable copy of this collection and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-141">A modifiable copy of this collection and its contents.</span>
          </span>
          <span data-ttu-id="9b0a5-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-142">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> value is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-143">Diese Methode führt Shadowing für die geerbte <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> Methode durch eine stark typisierte Implementierung der Einfachheit halber.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-143">This method shadows the inherited <xref:System.Windows.Media.Animation.Animatable.Clone%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="9b0a5-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-144">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-145">Makes this instance a clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-146">Diese Methode wird aufgerufen, indem Sie die <xref:System.Windows.FreezableCollection%601.Clone%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-146">This method is called by the <xref:System.Windows.FreezableCollection%601.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="9b0a5-147">Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.FreezableCollection%601.Clone%2A> statt dieser Methode direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-147">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-148">
            <para>Finden Sie unter der <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> Seite Informationen, wenn Sie diese Methode überschreiben soll.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-148">
              <para>See the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> page for information about when you should override this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt; CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.FreezableCollection`1&lt;!T&gt; CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As FreezableCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt; ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;" Usage="freezableCollection.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-149">Creates a modifiable copy of this <see cref="T:System.Windows.FreezableCollection`1" /> and its contents, making deep copies of this object's current values.</span>
          </span>
          <span data-ttu-id="9b0a5-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-150">If this object (or the objects it contains) contains animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-151">A modifiable clone of the collection and its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-151">A modifiable clone of the collection and its contents.</span>
          </span>
          <span data-ttu-id="9b0a5-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-152">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property will be <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property was <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-153">Diese Methode führt Shadowing für die geerbte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> Methode durch eine stark typisierte Implementierung der Einfachheit halber.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-153">This method shadows the inherited <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=nameWithType> method with a strongly typed implementation for convenience.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Animatable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.CloneCurrentValueCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="9b0a5-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-154">The <see cref="T:System.Windows.FreezableCollection`1" /> to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-155">Makes this instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-156">Diese Methode wird aufgerufen, indem Sie die <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> Methode und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-156">This method is called by the <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="9b0a5-157">Rufen Sie zum Erstellen einer änderbaren Kopie des aktuellen Objekts <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> statt dieser Methode direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-157">To create a modifiable copy of the current object, call <xref:System.Windows.FreezableCollection%601.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-158">
            <para>Finden Sie unter der <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> Seite Informationen, wenn Sie diese Methode überschreiben soll.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-158">
              <para>See the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> page for information about when you should override this method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(T value);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'T -&gt; bool&#xA;override this.Contains : 'T -&gt; bool" Usage="freezableCollection.Contains value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-159">The object to locate in this collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-159">The object to locate in this collection.</span>
          </span>
          <span data-ttu-id="9b0a5-160">This object may be <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-160">This object may be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-161">Determines whether this <see cref="T:System.Windows.FreezableCollection`1" /> contains the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-162">
            <see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-162">
              <see langword="true" /> if value is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="freezableCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9b0a5-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-163">The one-dimensional array that is the destination of the elements copied from <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9b0a5-164">The zero-based index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-164">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-165">Copies the entire <see cref="T:System.Windows.FreezableCollection`1" /> to a compatible one-dimensional array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-166">Beachten Sie, dass dieser Vorgang eine flache Kopie durchführt.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-166">Note that this operation performs a shallow copy.</span></span> <span data-ttu-id="9b0a5-167">Die Elemente werden in das Zielarray, in der gleichen Reihenfolge, in denen wird der Enumerator, dies durchläuft, kopiert <xref:System.Windows.FreezableCollection%601>.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-167">The elements are copied to the target array in the same order in which the enumerator iterates through this <xref:System.Windows.FreezableCollection%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9b0a5-168">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-168">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9b0a5-169">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-169">
              <paramref name="index" /> is less than 0.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9b0a5-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-170">The number of elements in the source <see cref="T:System.Windows.FreezableCollection`1" /> is greater than the available space from index to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-171">Gets the number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-172">Die Anzahl der Elemente, die von diesem <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-172">The number of elements contained by this <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable&#xA;override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezableCollection.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-173">Creates a new instance of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-174">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-174">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-175">Rufen Sie diese Methode direkt (außer beim Aufrufen der Basis in einer Implementierung) nicht.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-175">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="9b0a5-176">Diese Methode wird intern von aufgerufen <xref:System.Windows.Freezable.CreateInstance%2A>jedes Mal eine neue Instanz der, die <xref:System.Windows.Freezable> wird erstellt.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-176">This method is called internally by <xref:System.Windows.Freezable.CreateInstance%2A>, whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9b0a5-177">Das folgende Beispiel zeigt eine typische Implementierung der <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-177">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-178">
            <para>Jede <see cref="T:System.Windows.Freezable" /> Unterklasse muss diese Methode implementieren. Typische Implementierung ist einfach den Standardkonstruktor der Klasse aufrufen und das Ergebnis zurückgeben.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-178">
              <para>Every <see cref="T:System.Windows.Freezable" /> subclass must implement this method. Typical implementation is to simply call the class default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected override bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="override this.FreezeCore : bool -&gt; bool" Usage="freezableCollection.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="9b0a5-179">
            <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-179">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> should simply return whether it can be frozen.</span>
          </span>
          <span data-ttu-id="9b0a5-180">
            <see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-180">
              <see langword="false" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> instance should actually freeze itself when this method is called.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-181">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-181">Makes this <see cref="T:System.Windows.FreezableCollection`1" /> object unmodifiable or determines whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-182">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-182">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if this <see cref="T:System.Windows.FreezableCollection`1" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="9b0a5-183">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-183">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.FreezableCollection`1" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-184">Rufen Sie diese Methode direkt (außer beim Aufrufen der Basis in einer Implementierung) nicht.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-184">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="9b0a5-185">Diese Methode wird intern von aufgerufen <xref:System.Windows.Freezable.CanFreeze%2A> (mit `isChecking` gleich `true`) und <xref:System.Windows.Freezable.Freeze%2A> (mit `isChecking` gleich `false`).</span><span class="sxs-lookup"><span data-stu-id="9b0a5-185">This method is called internally by <xref:System.Windows.Freezable.CanFreeze%2A> (with `isChecking` equal to `true`) and  <xref:System.Windows.Freezable.Freeze%2A> (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-186">
            <para>Informationen dazu, wann diese Methode überschreiben, finden Sie unter <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-186">
              <para>For information about when to override this method, see <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="9b0a5-187">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-187">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-188">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-188">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.FreezableCollection`1" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-189">Diese Methode wird aufgerufen, indem Sie <xref:System.Windows.Freezable.GetAsFrozen%2A> und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-189">This method is called by <xref:System.Windows.Freezable.GetAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="9b0a5-190">Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetAsFrozen%2A> statt dieser Methode direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-190">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-191">
            <para>Informationen dazu, wann diese Methode überschreiben, finden Sie unter <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-191">
              <para>For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (source As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ source);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezableCollection.GetCurrentValueAsFrozenCore source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="9b0a5-192">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-192">The <see cref="T:System.Windows.FreezableCollection`1" /> to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-193">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-193">Makes this instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="9b0a5-194">If this object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-194">If this object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-195">Diese Methode wird aufgerufen, indem Sie <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> und sollte nicht aufgerufen werden direkt aus Ihrem Code, außer wenn beim Überschreiben dieser Methode die basisimplementierung aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-195">This method is called by <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="9b0a5-196">Rufen Sie zum Erstellen einer fixierten Kopie des aktuellen Objekts <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> statt dieser Methode direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-196">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="9b0a5-197">
            <para>Informationen dazu, wann diese Methode überschreiben, finden Sie unter <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-197">
              <para>For information about when to override this method, see <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Windows.FreezableCollection&lt;T&gt;.Enumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.FreezableCollection`1/Enumerator&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As FreezableCollection(Of T).Enumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::FreezableCollection&lt;T&gt;::Enumerator GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Enumerator" Usage="freezableCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FreezableCollection&lt;T&gt;+Enumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-198">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-198">Returns an enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-199">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-199">An enumerator for the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(T value);" />
      <MemberSignature Language="F#" Value="abstract member IndexOf : 'T -&gt; int&#xA;override this.IndexOf : 'T -&gt; int" Usage="freezableCollection.IndexOf value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.IndexOf(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-200">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-200">The object to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-201">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-201">Searches for the specified object and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-202">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-202">The zero-based index of the first occurrence of <paramref name="value" /> within the entire <see cref="T:System.Windows.FreezableCollection`1" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, !T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, T value);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * 'T -&gt; unit&#xA;override this.Insert : int * 'T -&gt; unit" Usage="freezableCollection.Insert (index, value)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IList`1.Insert(System.Int32,`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9b0a5-203">The zero-based index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-203">The zero-based index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9b0a5-204">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-204">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-205">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-205">Inserts the specified object into the <see cref="T:System.Windows.FreezableCollection`1" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9b0a5-206">
            <paramref name="value" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-206">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9b0a5-207">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-207">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="9b0a5-208">\- or -  <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-208">\- or -  <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9b0a5-209">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-209">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public T this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T default[int] { T get(int index); void set(int index, T value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : 'T with get, set" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IList`1.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9b0a5-210">The zero-based index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-210">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-211">Gets or sets the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-211">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-212">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-212">The element at the specified index.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9b0a5-213">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-213">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="9b0a5-214">\- or -  <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-214">\- or -  <paramref name="index" /> is equal to or greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9b0a5-215">The specified element is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-215">The specified element is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9b0a5-216">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-216">Attempting to set an item in the collection when the collection is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (T value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (value As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(T value);" />
      <MemberSignature Language="F#" Value="abstract member Remove : 'T -&gt; bool&#xA;override this.Remove : 'T -&gt; bool" Usage="freezableCollection.Remove value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-217">The object to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-217">The object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-218">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-218">Removes the first occurrence of the specified object from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-219">
            <see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-219">
              <see langword="true" /> if an occurrence of <paramref name="value" /> was found in the collection and removed; <see langword="false" /> if <paramref name="value" /> could not be found in the collection.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9b0a5-220">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-220">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="freezableCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
        <InterfaceMember>M:System.Collections.Generic.IList`1.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9b0a5-221">The zero-based index of the object to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-221">The zero-based index of the object to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-222">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-222">Removes the object at the specified zero-based index of the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9b0a5-223">
            <paramref name="index" /> is less than 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-223">
              <paramref name="index" /> is less than 0.</span>
          </span>
          <span data-ttu-id="9b0a5-224">\- or -  <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-224">\- or -  <paramref name="index" /> is greater than <see cref="P:System.Windows.FreezableCollection`1.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="9b0a5-225">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-225">The <see cref="T:System.Windows.FreezableCollection`1" /> is frozen (its <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#Generic#ICollection&lt;T&gt;#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements ICollection(Of T).IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.Generic.ICollection&lt;T&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-226">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-226">For a description of this member, see <see cref="P:System.Collections.Generic.ICollection`1.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-227">
            <see langword="true" />, wenn das <see cref="T:System.Windows.FreezableCollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-227">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-228">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-228">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-229">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.Generic.ICollection%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-229">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.ICollection%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-230">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-230">For a description of this member, see <see cref="M:System.Collections.Generic.IEnumerable`1.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-231">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-231">An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-232">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-232">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-233">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.Generic.IEnumerable%601>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-233">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="9b0a5-234">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-234">A zero-based <see cref="T:System.Array" /> that receives the copied items from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="9b0a5-235">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-235">The first position in the specified <see cref="T:System.Array" /> to receive the copied contents.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-236">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-236">For a description of this member, see <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-237">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-237">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-238">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-238">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.CopyTo(`0[],System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-239">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-239">For a description of this member, see <see cref="P:System.Collections.ICollection.IsSynchronized" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-240">
            <see langword="true" />, wenn der Zugriff auf das <see cref="T:System.Windows.FreezableCollection`1" /> synchronisiert (threadsicher) ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-240">
              <see langword="true" /> if access to the <see cref="T:System.Windows.FreezableCollection`1" /> is synchronized (thread safe); otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-241">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-241">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-242">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-242">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-243">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-243">For a description of this member, see <see cref="P:System.Collections.ICollection.SyncRoot" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-244">Ein Objekt, mit dem der Zugriff auf die <see cref="T:System.Windows.FreezableCollection`1" /> synchronisiert werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-244">An object that can be used to synchronize access to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-245">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-245">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-246">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.ICollection>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-246">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-247">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-247">For a description of this member, see <see cref="M:System.Collections.IEnumerable.GetEnumerator" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-248">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-248">An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-249">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-249">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-250">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-250">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-251">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-251">The <see cref="T:System.Object" /> to add to the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-252">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-252">For a description of this member, see <see cref="M:System.Collections.IList.Add(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-253">The position into which the new element was inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-253">The position into which the new element was inserted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-254">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-254">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-255">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-255">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Add(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-256">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-256">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-257">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-257">For a description of this member, see <see cref="M:System.Collections.IList.Contains(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-258">
            <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-258">
              <see langword="true" /> if the <see cref="T:System.Object" /> is found in the <see cref="T:System.Windows.FreezableCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-259">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-259">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-260">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-260">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Contains(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-261">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-261">The <see cref="T:System.Object" /> to locate in the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-262">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-262">For a description of this member, see <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9b0a5-263">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-263">The index of <paramref name="value" /> if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-264">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-265">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-265">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.IndexOf(`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9b0a5-266">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-266">The zero-based index at which to insert the <see cref="T:System.Object" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9b0a5-267">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-267">The <see cref="T:System.Object" /> to insert into the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-268">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-268">For a description of this member, see <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-269">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-270">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-270">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Insert(System.Int32,`0)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-271">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-271">For a description of this member, see <see cref="P:System.Collections.IList.IsFixedSize" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-272">
            <see langword="true" />, wenn das <see cref="T:System.Windows.FreezableCollection`1" /> eine feste Größe aufweist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-272">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> has a fixed size; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-273">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-273">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-274">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-274">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9b0a5-275">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-275">For a description of this member, see <see cref="P:System.Collections.IList.IsReadOnly" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-276">
            <see langword="true" />, wenn das <see cref="T:System.Windows.FreezableCollection`1" /> schreibgeschützt ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-276">
              <see langword="true" /> if the <see cref="T:System.Windows.FreezableCollection`1" /> is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-277">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-277">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-278">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-278">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FreezableCollection`1.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Windows.FreezableCollection&lt;'T (requires 'T :&gt; System.Windows.DependencyObject)&gt;.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9b0a5-279">The zero-based index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-279">The zero-based index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-280">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-280">For a description of this member, see <see cref="P:System.Collections.IList.Item(System.Int32)" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9b0a5-281">Das Element am angegebenen Index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-281">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-282">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-282">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-283">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-283">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FreezableCollection`1.Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FreezableCollection`1.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9b0a5-284">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-284">The <see cref="T:System.Object" /> to remove from the <see cref="T:System.Windows.FreezableCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9b0a5-285">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9b0a5-285">For a description of this member, see <see cref="M:System.Collections.IList.Remove(System.Object)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9b0a5-286">Bei diesem Member handelt es sich um eine explizite Schnittstellenmember-Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-286">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9b0a5-287">Er kann nur verwendet werden, wenn die <xref:System.Windows.FreezableCollection%601>-Instanz in eine <xref:System.Collections.IList>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9b0a5-287">It can be used only when the <xref:System.Windows.FreezableCollection%601> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FreezableCollection`1.Remove(`0)" />
      </Docs>
    </Member>
  </Members>
</Type>