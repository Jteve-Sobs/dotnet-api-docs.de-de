<Type Name="DependencyPropertyKey" FullName="System.Windows.DependencyPropertyKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a6e2c2bf33d13e1feb3e0866a2765f0b9625d4dc" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82487231" /></Metadata><TypeSignature Language="C#" Value="public sealed class DependencyPropertyKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DependencyPropertyKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyKey" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DependencyPropertyKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyKey sealed" />
  <TypeSignature Language="F#" Value="type DependencyPropertyKey = class" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="07416-101">Stellt einen Bezeichner für eine Abhängigkeitseigenschaft für den beschränkten Schreibzugriff auf eine schreibgeschützte Abhängigkeitseigenschaft bereit.</span><span class="sxs-lookup"><span data-stu-id="07416-101">Provides a dependency property identifier for limited write access to a read-only dependency property.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07416-102"><xref:System.Windows.DependencyPropertyKey> Instanzen werden als Rückgabewert eines Registrierungs Aufrufs für die Abhängigkeits Eigenschaft mithilfe der Methoden <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> oder <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>abgerufen.</span><span class="sxs-lookup"><span data-stu-id="07416-102"><xref:System.Windows.DependencyPropertyKey> instances are obtained as the return value of a dependency property registration call using the methods <xref:System.Windows.DependencyProperty.RegisterReadOnly%2A> or <xref:System.Windows.DependencyProperty.RegisterAttachedReadOnly%2A>.</span></span>  
  
 <span data-ttu-id="07416-103">Die Typen, die eine Abhängigkeits Eigenschaft registrieren, können den <xref:System.Windows.DependencyPropertyKey> in Aufrufen von <xref:System.Windows.DependencyObject.SetValue%2A> und <xref:System.Windows.DependencyObject.ClearValue%2A> verwenden, die den Wert der Eigenschaft als Teil der Klassen Logik anpassen.</span><span class="sxs-lookup"><span data-stu-id="07416-103">The types that register a dependency property can use the <xref:System.Windows.DependencyPropertyKey> in calls to <xref:System.Windows.DependencyObject.SetValue%2A> and <xref:System.Windows.DependencyObject.ClearValue%2A> that adjust the property's value as part of class logic.</span></span> <span data-ttu-id="07416-104">Wenn Sie von der Zugriffsebene des Schlüssels zugelassen werden, können verwandte Klassen auch den Schlüssel und die Abhängigkeits Eigenschaft verwenden.</span><span class="sxs-lookup"><span data-stu-id="07416-104">If permitted by the access level of the key, related classes can use the key and the dependency property also.</span></span> <span data-ttu-id="07416-105">Beispielsweise können Sie den Schlüssel als intern deklarieren, und andere Typen in derselben Assembly können auch diese Abhängigkeits Eigenschaft festlegen.</span><span class="sxs-lookup"><span data-stu-id="07416-105">For instance, you can declare the key as internal, and other types within the same assembly can also set that dependency property.</span></span>  
  
 <span data-ttu-id="07416-106">Der von der schreibgeschützten Abhängigkeits Eigenschaften Registrierung zurückgegebene <xref:System.Windows.DependencyPropertyKey> sollte nicht öffentlich gemacht werden, da die-Eigenschaft durch das verfügbar machen des Schlüssels festgelegt werden kann. Dadurch wird der Zeitpunkt der Registrierung als schreibgeschützte Abhängigkeits Eigenschaft besiegt.</span><span class="sxs-lookup"><span data-stu-id="07416-106">The <xref:System.Windows.DependencyPropertyKey> returned by read-only dependency property registration should not be made public, because exposing the key makes the property settable, thus defeating the point of registering it as a read-only dependency property.</span></span> <span data-ttu-id="07416-107">Außerdem verursacht das verfügbar machen des Schlüssels eine nicht Übereinstimmung zwischen dem verfügbaren Verhalten der Abhängigkeits Eigenschaft und den zugehörigen [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Wrapper Implementierungen der Eigenschaft, die ein ungültiges Klassen Design ist.</span><span class="sxs-lookup"><span data-stu-id="07416-107">Also, exposing the key causes a mismatch between the available dependency property behaviors and its [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property wrapper implementations, which is bad class design.</span></span>  
  
 <span data-ttu-id="07416-108">Anstatt den Schlüssel selbst verfügbar zu machen, sollten Sie stattdessen den <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> Wert des <xref:System.Windows.DependencyPropertyKey> als `public static readonly`<xref:System.Windows.DependencyProperty> der Klasse verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="07416-108">Instead of exposing the key itself, you should instead expose the <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value of the <xref:System.Windows.DependencyPropertyKey> as a `public static readonly`<xref:System.Windows.DependencyProperty> on your class.</span></span> <span data-ttu-id="07416-109">Dadurch kann die-Eigenschaft einen gültigen Bezeichner für die Abhängigkeits Eigenschaft für bestimmte Eigenschafts System Vorgänge zurückgeben, z. b. das Auflisten von lokal festgelegten Werten</span><span class="sxs-lookup"><span data-stu-id="07416-109">This enables the property to return a valid dependency property identifier for certain property system operations such as enumerating locally set values.</span></span> <span data-ttu-id="07416-110">Der Bezeichner, der somit abgerufen wurde, verfügt jedoch nicht über die vollständigen Funktionen eines <xref:System.Windows.DependencyProperty> für viele Eigenschaften System Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="07416-110">However, the identifier thus obtained does not have the full capabilities of a <xref:System.Windows.DependencyProperty> for many property system operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07416-111">Im folgenden Beispiel wird eine schreibgeschützte Abhängigkeits Eigenschaft registriert, und der Schlüssel wird in anderen Klassenmembern für zwei Zwecke verwendet: Implementieren von Get "Wrapper" und als Bezeichner für eine geschützte Bestimmung, die den Wert auf der Grundlage von Berechnungen anderer Eigenschaftswerte festlegt.</span><span class="sxs-lookup"><span data-stu-id="07416-111">The following example registers a read-only dependency property, and also uses the key for two purposes in other class members: implementing the get "wrapper", and as the identifier for a protected determination operation that sets the value based on calculations of other property values.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
  <Members>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyKey.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DependencyProperty : System.Windows.DependencyProperty" Usage="System.Windows.DependencyPropertyKey.DependencyProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="07416-112">Ruft den Bezeichner einer Abhängigkeitseigenschaft ab, der diesem Bezeichner einer spezialisierten schreibgeschützten Abhängigkeitseigenschaft zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="07416-112">Gets the dependency property identifier associated with this specialized read-only dependency property identifier.</span></span></summary>
        <value><span data-ttu-id="07416-113">Der relevante Bezeichner einer Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="07416-113">The relevant dependency property identifier.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07416-114">Der <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A>-Wert ermöglicht, dass der Bezeichner einer schreibgeschützten Eigenschaft an allgemeinen Eigenschafts System Vorgängen teilnimmt, indem einige der gleichen Schnittstellen verwendet werden, die für Abhängigkeits Eigenschaften mit Lese-/Schreibzugriff</span><span class="sxs-lookup"><span data-stu-id="07416-114">The <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> value enables a read-only property's identifier to participate in common property system operations using some of the same interfaces as used for read-write dependency properties.</span></span>  
  
 <span data-ttu-id="07416-115">Um den Get-Eigenschafts Accessor für eine schreibgeschützte Abhängigkeits Eigenschaft zu implementieren, sollten Sie einen <xref:System.Windows.DependencyProperty> Bezeichner für die Klasse erstellen und verfügbar machen.</span><span class="sxs-lookup"><span data-stu-id="07416-115">In order to implement the get property accessor for a read-only dependency property, you should create and expose a <xref:System.Windows.DependencyProperty> identifier on your class.</span></span> <span data-ttu-id="07416-116">Dies erfüllt zweierlei Zwecke:</span><span class="sxs-lookup"><span data-stu-id="07416-116">This serves two purposes:</span></span>  
  
-   <span data-ttu-id="07416-117">Ihre eigene Klasse benötigt den <xref:System.Windows.DependencyProperty> Bezeichner, um den Get-Accessor für den Eigenschafts Wrapper zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="07416-117">Your own class needs the <xref:System.Windows.DependencyProperty> identifier in order to implement the get accessor for the property wrapper.</span></span> <span data-ttu-id="07416-118">Sie verwenden die <xref:System.Windows.DependencyProperty> als Parameter für den <xref:System.Windows.DependencyObject.GetValue%2A>-Befehl, der den Get-Accessor implementiert.</span><span class="sxs-lookup"><span data-stu-id="07416-118">You use the <xref:System.Windows.DependencyProperty> as a parameter for the <xref:System.Windows.DependencyObject.GetValue%2A> call that implements the get accessor.</span></span>  
  
-   <span data-ttu-id="07416-119"><xref:System.Windows.DependencyProperty> Bezeichner machen Ihre Abhängigkeits Eigenschaft für das Eigenschaften System verfügbar, sodass andere Methoden, die auf Metadaten basieren, in einem Standardformular darauf zugreifen können.</span><span class="sxs-lookup"><span data-stu-id="07416-119"><xref:System.Windows.DependencyProperty> identifiers expose your dependency property to the property system such that other methods that rely on metadata can access it in a standard form.</span></span> <span data-ttu-id="07416-120">Wenn Sie beispielsweise <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> für einige <xref:System.Windows.DependencyObject> aufgerufen und eine Enumeration von lokal festgelegten Eigenschaften (Werte und Bezeichnern) abgerufen haben, ist der für eine schreibgeschützte Abhängigkeits Eigenschaft zurückgegebene Bezeichner der <xref:System.Windows.DependencyProperty> Wert und nicht der Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="07416-120">For instance, if you called <xref:System.Windows.DependencyObject.GetLocalValueEnumerator%2A> on some <xref:System.Windows.DependencyObject> and obtained an enumeration of locally set properties (values and identifiers) the identifier returned for a read-only dependency property would be your <xref:System.Windows.DependencyProperty> value rather than the key.</span></span> <span data-ttu-id="07416-121">Wenn Sie einen <xref:System.Windows.DependencyProperty> Bezeichner nicht verfügbar machen, erhöht sich die Sicherheit der schreibgeschützten Abhängigkeits Eigenschaft in keiner Weise. es werden nur Vorgänge, die ihre Eigenschaft einbeziehen, für nachfolgende abgeleitete Klassen und Klassen Instanzen etwas schwieriger.</span><span class="sxs-lookup"><span data-stu-id="07416-121">Not exposing a <xref:System.Windows.DependencyProperty> identifier does not increase the security of your read-only dependency property in any way, it just makes operations that involve your property more awkward both for subsequent derived classes and class instances.</span></span>  
  
 <span data-ttu-id="07416-122">Um den <xref:System.Windows.DependencyProperty> Bezeichner für die Klasse verfügbar zu machen, müssen Sie <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> direkt für Ihren Schlüssel aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="07416-122">To expose the  <xref:System.Windows.DependencyProperty> identifier on your class, you call <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> directly on your key.</span></span> <span data-ttu-id="07416-123">Verwenden Sie diesen Wert, um eine `public static readonly`<xref:System.Windows.DependencyProperty> Bezeichner für die-Klasse zu erstellen, die dem <xref:System.Windows.DependencyPropertyKey>entspricht.</span><span class="sxs-lookup"><span data-stu-id="07416-123">Use this value to create a `public static readonly`<xref:System.Windows.DependencyProperty> identifier on the class, which parallels the <xref:System.Windows.DependencyPropertyKey>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07416-124">Im folgenden Beispiel wird <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> aufgerufen, um den <xref:System.Windows.DependencyProperty> Bezeichner (`AquariumGraphicProperty`) für die `AquariumGraphic` schreibgeschützte Abhängigkeits Eigenschaft für eine Klasse verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="07416-124">The following example calls <xref:System.Windows.DependencyPropertyKey.DependencyProperty%2A> to expose the <xref:System.Windows.DependencyProperty> identifier (`AquariumGraphicProperty`) for the `AquariumGraphic` read-only dependency property on a class.</span></span> <span data-ttu-id="07416-125">Das Beispiel zeigt auch die <xref:System.Windows.DependencyPropertyKey> Erstellung (als internes Element) und den Get-Accessor für `AquariumGraphic`.</span><span class="sxs-lookup"><span data-stu-id="07416-125">The example also shows the <xref:System.Windows.DependencyPropertyKey> creation (as an internal member) and the get accessor for `AquariumGraphic`.</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODP](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodp)]
 [!code-vb[WPFAquariumSln#RODP](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodp)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyProperty" />
      </Docs>
    </Member>
    <Member MemberName="OverrideMetadata">
      <MemberSignature Language="C#" Value="public void OverrideMetadata (Type forType, System.Windows.PropertyMetadata typeMetadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OverrideMetadata(class System.Type forType, class System.Windows.PropertyMetadata typeMetadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyKey.OverrideMetadata(System.Type,System.Windows.PropertyMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OverrideMetadata (forType As Type, typeMetadata As PropertyMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OverrideMetadata(Type ^ forType, System::Windows::PropertyMetadata ^ typeMetadata);" />
      <MemberSignature Language="F#" Value="member this.OverrideMetadata : Type * System.Windows.PropertyMetadata -&gt; unit" Usage="dependencyPropertyKey.OverrideMetadata (forType, typeMetadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="forType" Type="System.Type" />
        <Parameter Name="typeMetadata" Type="System.Windows.PropertyMetadata" />
      </Parameters>
      <Docs>
        <param name="forType"><span data-ttu-id="07416-126">Der Typ, für den diese Abhängigkeitseigenschaft vorhanden ist, sowie die Metadaten müssen überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="07416-126">The type on which this dependency property exists and metadata should be overridden.</span></span></param>
        <param name="typeMetadata"><span data-ttu-id="07416-127">Für diesen Typ angegebene Metadaten.</span><span class="sxs-lookup"><span data-stu-id="07416-127">Metadata supplied for this type.</span></span></param>
        <summary><span data-ttu-id="07416-128">Überschreibt die Metadaten einer schreibgeschützten Abhängigkeitseigenschaft, die durch diesen Bezeichner einer Abhängigkeitseigenschaft dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="07416-128">Overrides the metadata of a read-only dependency property that is represented by this dependency property identifier.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="07416-129">Das Überschreiben von Metadaten für eine schreibgeschützte Abhängigkeits Eigenschaft erfolgt aus ähnlichen Gründen wie das Überschreiben von Metadaten für eine Abhängigkeits Eigenschaft mit Lese-/Schreibzugriff und ist auf den Zugriff auf der Schlüssel Ebene beschränkt, da in den Metadaten angegebene Verhalten das festgelegte Verhalten ändern kann (z.b. der Standardwert).</span><span class="sxs-lookup"><span data-stu-id="07416-129">Overriding metadata on a read-only dependency property is done for similar reasons as overriding metadata on a read-write dependency property, and is restricted to access at the key level because behaviors specified in the metadata can change the set behavior (the default value, for instance).</span></span>  
  
 <span data-ttu-id="07416-130">Wie bei den Abhängigkeits Eigenschaften mit Lese-/Schreibzugriff sollte das Überschreiben von Metadaten für eine schreibgeschützte Abhängigkeits Eigenschaft nur erfolgen, bevor diese Eigenschaft vom Eigenschaften System verwendet wird (Dies entspricht der Zeit, in der bestimmte Instanzen von Objekten, die die Eigenschaft registrieren, instanziiert werden).</span><span class="sxs-lookup"><span data-stu-id="07416-130">As with read-write dependency properties, overriding metadata on a read-only dependency property should only be done prior to that property being placed in use by the property system (this equates to the time that specific instances of objects that register the property are instantiated).</span></span> <span data-ttu-id="07416-131">Aufrufe von <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> sollten nur innerhalb der statischen Konstruktoren des Typs ausgeführt werden, der sich selbst als `forType` Parameter dieser Methode bereitstellt, oder für die entsprechende Initialisierung dieser Klasse.</span><span class="sxs-lookup"><span data-stu-id="07416-131">Calls to <xref:System.Windows.DependencyPropertyKey.OverrideMetadata%2A> should only be performed within the static constructors of the type that provides itself as the `forType` parameter of this method, or equivalent initialization for that class.</span></span>  
  
 <span data-ttu-id="07416-132">Diese Methode leitet effektiv an die <xref:System.Windows.DependencyProperty.OverrideMetadata%2A>-Methode weiter und übergibt die <xref:System.Windows.DependencyPropertyKey> Instanz als Schlüsselparameter.</span><span class="sxs-lookup"><span data-stu-id="07416-132">This method effectively forwards to the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method, passing the <xref:System.Windows.DependencyPropertyKey> instance as the key parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="07416-133">Im folgenden Beispiel werden die Metadaten für eine vorhandene schreibgeschützte Abhängigkeits Eigenschaft, die von einer Klasse geerbt wird, überschrieben.</span><span class="sxs-lookup"><span data-stu-id="07416-133">The following example overrides metadata for an existing read-only dependency property that a class inherits.</span></span> <span data-ttu-id="07416-134">In diesem Fall bestand das Ziel des Szenarios darin, einen coerce-Wert Rückruf hinzuzufügen, den die Metadaten der Basis Eigenschaft nicht enthielten.</span><span class="sxs-lookup"><span data-stu-id="07416-134">In this case, the scenario goal was to add a coerce value callback that the base property metadata did not have.</span></span> <span data-ttu-id="07416-135">Sie können Metadaten auch aus anderen Gründen überschreiben, in denen das Überschreiben von Metadaten in der Regel angemessen ist (Ändern des Standardwerts, hinzufügen <xref:System.Windows.FrameworkPropertyMetadataOptions> Werte usw.).</span><span class="sxs-lookup"><span data-stu-id="07416-135">You could also override metadata for any of the other reasons that overriding metadata is typically appropriate (changing default value, adding <xref:System.Windows.FrameworkPropertyMetadataOptions> values, etc.)</span></span>  
  
 [!code-csharp[WPFAquariumSln#RODPOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/WPFAquariumSln/CSharp/WPFAquariumObjects/Class1.cs#rodpoverride)]
 [!code-vb[WPFAquariumSln#RODPOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WPFAquariumSln/visualbasic/wpfaquariumobjects/class1.vb#rodpoverride)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="07416-136">Versuchte Überschreibung von Metadaten für eine Abhängigkeitseigenschaft mit Schreib- und Leseberechtigungen (kann nicht mit dieser Signatur ausgeführt werden).</span><span class="sxs-lookup"><span data-stu-id="07416-136">Attempted metadata override on a read-write dependency property (cannot be done using this signature).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="07416-137">Metadaten wurden für die Eigenschaft bereits festgelegt, da sie im bereitgestellten Typ bereits vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="07416-137">Metadata was already established for the property as it exists on the provided type.</span></span></exception>
        <altmember cref="T:System.Windows.DependencyProperty" />
        <altmember cref="M:System.Windows.DependencyProperty.OverrideMetadata(System.Type,System.Windows.PropertyMetadata,System.Windows.DependencyPropertyKey)" />
      </Docs>
    </Member>
  </Members>
</Type>
