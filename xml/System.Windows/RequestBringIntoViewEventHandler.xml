<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1fabd3e8ca79d0ed50a5a9c8a6f00299e7b8f9dd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/24/2018" />
    <Meta Name="ms.locfileid" Value="37491194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="577ae-101">Das Objekt, an das der Ereignishandler angefügt ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="577ae-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="577ae-102">Die Ereignisdaten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="577ae-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="577ae-103">Stellt die Methode für die Behandlung des <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />-Routingereignisses dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="577ae-103">Represents the method that will handle the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577ae-104">Behandlung dieses Ereignisses ist in der Regel nur in den Elementen, die einen bildlauffähigen Bereich unterstützen, oder anderweitig absichtlich festlegen ihrer Renderinggröße kleiner ist als die kombinierten gewünschte Größe des untergeordneten Elements Inhalts und erfolgt nur durch das Behandeln von absichtlich die das Ereignis, sobald es in der Elementstruktur aufwärts weitergeleitet wurde und das erste übergeordnete, das Renderinggröße erreicht hat.</span><span class="sxs-lookup"><span data-stu-id="577ae-104">Handling this event is typically only done within elements that support a scrollable region, or otherwise deliberately set their rendering size smaller than the combined desired size of their child element content, and is only done by deliberately handling the event once it has routed upwards in the element tree and has reached the first parent that offers scrolling region support.</span></span> <span data-ttu-id="577ae-105">Eine vorhandene Implementierung, die Regionen mit Bildlauf in einer Weise behandelt, die in der Regel für Benutzersteuerelemente erwünscht ist, stellt <xref:System.Windows.Controls.ScrollViewer>.</span><span class="sxs-lookup"><span data-stu-id="577ae-105">An existing implementation that handles scrolling regions in a manner that is typically desirable for user controls is <xref:System.Windows.Controls.ScrollViewer>.</span></span> <span data-ttu-id="577ae-106">Bei der Ableitung von <xref:System.Windows.Controls.ScrollViewer>, Sie können einen Klassenhandler für registrieren <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> und die Basisklasse Behandlung des Ereignisses ergänzen.</span><span class="sxs-lookup"><span data-stu-id="577ae-106">If you derive from <xref:System.Windows.Controls.ScrollViewer>, you can register a class handler for <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> and supplement the base class handling of the event.</span></span> <span data-ttu-id="577ae-107">Sie sollten auch berücksichtigen, verwenden oder die Klassenbehandlung der Klasse definierten <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> Ereignis anstelle von <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="577ae-107">You should also consider using or class-handling the class-defined <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> event instead of <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>.</span></span> <span data-ttu-id="577ae-108">Auch wenn Sie eine vollständig benutzerdefinierte Klasse erstellen, die nicht von abgeleitet ist <xref:System.Windows.Controls.ScrollViewer>, können Sie weiterhin Klassenbehandlung durch Aufrufen von hinzufügen <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in Ihre Instanziierung der Klasse.</span><span class="sxs-lookup"><span data-stu-id="577ae-108">Alternatively, if you create an entirely custom class that does not derive from <xref:System.Windows.Controls.ScrollViewer>, you can still add class handling by calling <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType> in your class instantiation.</span></span>  <span data-ttu-id="577ae-109">Weitere Informationen zur Klassenbehandlung finden Sie unter [Markieren von Routingereignissen als behandelt und Klassenbehandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="577ae-109">For details on class handling, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="577ae-110">Content-Elemente können dazu führen, dass das Ereignis von den Inhaltshosts ausgelöst wird (durch den Aufruf <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> und Auslösen von <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> vom Inhaltshost).</span><span class="sxs-lookup"><span data-stu-id="577ae-110">Content elements can cause the event to be raised by their content hosts (through calling <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> and raising <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> from the content host).</span></span> <span data-ttu-id="577ae-111">Auf ähnliche Weise können Sie anfordern, in der Ansicht mit der Hilfsmethode geschaltet werden die Elemente der logischen Struktur <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="577ae-111">Similarly, you can request logical tree elements to be brought into view with the helper method <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="577ae-112">Ein <xref:System.Windows.Controls.ListBox> implementiert eine ähnliche, aber andere Methode <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span><span class="sxs-lookup"><span data-stu-id="577ae-112">A <xref:System.Windows.Controls.ListBox> implements a related but different method <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>