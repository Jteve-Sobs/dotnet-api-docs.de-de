<Type Name="RequestBringIntoViewEventHandler" FullName="System.Windows.RequestBringIntoViewEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3b2bebc4347724651ad241b6ae267701b98787ca" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69433659" /></Metadata><TypeSignature Language="C#" Value="public delegate void RequestBringIntoViewEventHandler(object sender, RequestBringIntoViewEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed RequestBringIntoViewEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub RequestBringIntoViewEventHandler(sender As Object, e As RequestBringIntoViewEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void RequestBringIntoViewEventHandler(System::Object ^ sender, RequestBringIntoViewEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventHandler = delegate of obj * RequestBringIntoViewEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.RequestBringIntoViewEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Das Objekt, an das der Ereignishandler angefügt ist.</param>
    <param name="e">Die Ereignisdaten.</param>
    <summary>Stellt die Methode für die Behandlung des <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />-Routingereignisses dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Behandlung dieses Ereignisses erfolgt in der Regel nur innerhalb von Elementen, die einen Bild lauffähigen Bereich unterstützen, oder auf andere Weise die Renderinggröße, die kleiner als die kombinierte gewünschte Größe Ihres untergeordneten Element Inhalts ist, und wird nur durch die bewusste Behandlung -Ereignis, sobald es in der Elementstruktur nach oben weitergeleitet wurde und das erste übergeordnete Element erreicht hat, das eine Bild Lauf Bereichs Unterstützung bietet Eine vorhandene-Implementierung, die scrollbereiche auf eine Weise verarbeitet, die in der Regel für <xref:System.Windows.Controls.ScrollViewer>Benutzer Steuerelemente wünschenswert ist, ist. Wenn Sie von <xref:System.Windows.Controls.ScrollViewer>ableiten, können Sie einen Klassen Handler für registrieren <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> und die Basisklassen Behandlung für das Ereignis ergänzen. Sie sollten auch die Verwendung der-oder-Klasse in Erwägung gezogen <xref:System.Windows.Controls.ScrollViewer.ScrollChanged> werden, die <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType>das Klassen definierte Ereignis anstelle von behandelt. Wenn Sie eine vollständig benutzerdefinierte Klasse erstellen, die nicht von <xref:System.Windows.Controls.ScrollViewer>abgeleitet ist, können Sie die Klassen Behandlung trotzdem hinzufügen, indem Sie in der Klassen Instanziierung aufrufen. <xref:System.Windows.EventManager.RegisterClassHandler%2A?displayProperty=nameWithType>  Ausführliche Informationen zur Klassen Behandlung finden Sie unter Markieren von Routing [Ereignissen als behandelt und Klassen Behandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Inhaltselemente können bewirken, dass das Ereignis von ihren Inhalts Hosts ausgelöst wird (durch <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> aufrufen <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> und Auslösen vom Inhalts Host). Auf ähnliche Weise können Sie mit der-Hilfsmethode <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>logische Strukturelemente anfordern.  
  
 Ein <xref:System.Windows.Controls.ListBox> implementiert eine Verwandte, aber andere <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>Methode.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.RequestBringIntoViewEventArgs" />
    <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
    <altmember cref="M:System.Windows.LogicalTreeHelper.BringIntoView(System.Windows.DependencyObject)" />
  </Docs>
</Type>
