<Type Name="VisualStateGroup" FullName="System.Windows.VisualStateGroup">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f158c8d81a2f4694ed16551106363c676ea449c3" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39941686" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class VisualStateGroup : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit VisualStateGroup extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.VisualStateGroup" />
  <TypeSignature Language="VB.NET" Value="Public Class VisualStateGroup&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class VisualStateGroup : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type VisualStateGroup = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.ContentProperty("States")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Enthält sich gegenseitig ausschließende <see cref="T:System.Windows.VisualState" />-Objekte und <see cref="T:System.Windows.VisualTransition" />-Objekte, die zum Wechseln zwischen Zuständen verwendet werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede <xref:System.Windows.VisualStateGroup> enthält eine Auflistung von <xref:System.Windows.VisualState> Objekte. Ein <xref:System.Windows.VisualState> enthält eine Auflistung von <xref:System.Windows.Media.Animation.Storyboard> Objekte, die angeben, wie die Darstellung des Steuerelements ändert, wenn das Steuerelement in einem bestimmten Zustand ist. Z. B. eine <xref:System.Windows.Controls.Button> möglicherweise ein geringfügig anderes Aussehen, wenn es als gedrückt wird, wenn es nicht gedrückt wird. Mit zwei Zuständen, die die <xref:System.Windows.Controls.Button> definiert entsprechen, wenn es gedrückt wird (`"Pressed"`) und wann ist nicht (`"Normal"`).  
  
 Sie fügen <xref:System.Windows.VisualState> an ein Steuerelement durch Festlegen der `VisualStateManager.VisualStateGroups` angefügte Eigenschaft für das Steuerelement. Sie ordnen Zustände, die sich gegenseitig ausschließende zueinander in der gleichen <xref:System.Windows.VisualStateGroup>. Z. B. die <xref:System.Windows.Controls.CheckBox> verfügt über zwei <xref:System.Windows.VisualStateGroup> Objekte. Eine enthält die Zustände `Normal`, `MouseOver`, `Pressed`, und `Disabled`. Die andere enthält die Zustände `Checked`, `UnChecked`, und `Indeterminate`. Die <xref:System.Windows.Controls.CheckBox> Zustände sind möglich `MouseOver` und `UnChecked` zur gleichen Zeit, aber es darf sich nicht in der `MouseOver` und `Pressed` Zustände zur gleichen Zeit.  
  
 Obwohl Sie hinzufügen können <xref:System.Windows.VisualState> Objekte zu einem Element, sie sind besonders sinnvolle Weise zu anderen Benutzern, das visuelle Verhalten des neu zu definieren eine <xref:System.Windows.Controls.Control>. Wenn Sie ein benutzerdefiniertes Steuerelement erstellen, verwendet eine <xref:System.Windows.Controls.ControlTemplate>, können Sie angeben, das besagt, dass das Steuerelement aufweisen kann, durch das Hinzufügen einer <xref:System.Windows.TemplateVisualStateAttribute> auf dessen Klassendefinition. Klicken Sie dann jeder, der eine neue erstellt <xref:System.Windows.Controls.ControlTemplate> für das Steuerelement hinzufügen, kann <xref:System.Windows.VisualState> Objekten zur Vorlage. Die <xref:System.Windows.TemplateVisualStateAttribute> ermöglicht Designertools, z.B. Expression Blend, um die Zustände des Steuerelements verfügbar zu machen. Zustände mit dem gleichen <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> gehören zur gleichen <xref:System.Windows.VisualStateGroup>.  
  
 Weitere Informationen zur Verwendung von <xref:System.Windows.VisualStateGroup> Objekte in einem <xref:System.Windows.Controls.ControlTemplate>, finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md). Weitere Informationen über das Erstellen mit Steuerelementen die <xref:System.Windows.VisualStateManager>, finden Sie unter [erstellen ein Steuerelement verfügt, einer anpassbaren Darstellung](~/docs/framework/wpf/controls/creating-a-control-that-has-a-customizable-appearance.md).  
  
 Die <xref:System.Windows.VisualStateGroup.Transitions%2A> Eigenschaft enthält <xref:System.Windows.VisualTransition> sind Objekte, die angewendet werden, wenn das Steuerelement zwischen, die Zuständen in definiert die <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Windows.Controls.ControlTemplate> für eine <xref:System.Windows.Controls.Button> , enthält eine <xref:System.Windows.Controls.Grid>. Es enthält auch eine <xref:System.Windows.VisualStateGroup> mit dem Namen `CommonStates`, die definiert, die `MouseOver` und `Normal` Zustände. Die <xref:System.Windows.VisualStateGroup> verfügt auch über eine <xref:System.Windows.VisualTransition> , der angibt, dass es sich um eine halbe Sekunde, für dauert die <xref:System.Windows.Controls.Grid> , die von Grün zu Rot ändern, wenn der Benutzer den Mauszeiger bewegt wird, über die <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public VisualStateGroup ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.VisualStateGroup.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; VisualStateGroup();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.VisualStateGroup" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.VisualState CurrentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.VisualState CurrentState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.CurrentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentState As VisualState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VisualState ^ CurrentState { System::Windows::VisualState ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentState : System.Windows.VisualState" Usage="System.Windows.VisualStateGroup.CurrentState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.VisualState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den <see cref="T:System.Windows.VisualState" /> ab, der derzeit auf das Steuerelement angewendet ist.</summary>
        <value>Der <see cref="T:System.Windows.VisualState" />, der derzeit auf das Steuerelement angewendet ist.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanged As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanged;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanged : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanged : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt nach dem Übergang eines Steuerelements in einen anderen Zustand ein.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, nachdem der Wechsel zu einem neuen Zustand des Steuerelements und dem <xref:System.Windows.VisualStateGroup.CurrentStateChanging> Ereignis auftritt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStateChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.VisualStateChangedEventArgs&gt; CurrentStateChanging" />
      <MemberSignature Language="DocId" Value="E:System.Windows.VisualStateGroup.CurrentStateChanging" />
      <MemberSignature Language="VB.NET" Value="Public Event CurrentStateChanging As EventHandler(Of VisualStateChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::VisualStateChangedEventArgs ^&gt; ^ CurrentStateChanging;" />
      <MemberSignature Language="F#" Value="member this.CurrentStateChanging : EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " Usage="member this.CurrentStateChanging : System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.VisualStateChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Übergang eines Steuerelements in einen anderen Zustand beginnt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Ereignis tritt auf, wenn das Steuerelement für Übergänge zwischen Zuständen beginnt. Wenn eine <xref:System.Windows.VisualTransition> wird angewendet, um die statusänderung dieses Ereignis tritt auf, wenn es sich bei der Übergang beginnt. Wenn eine <xref:System.Windows.VisualTransition> nicht angewendet wird, dieses Ereignis tritt nach dem Übergang der Steuerelements in den neuen Zustand, aber vor der <xref:System.Windows.VisualStateGroup.CurrentStateChanged> Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.VisualStateGroup.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der <see cref="T:System.Windows.VisualStateGroup" /> ab oder legt diesen fest.</summary>
        <value>Der Name des <see cref="T:System.Windows.VisualStateGroup" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Autoren von Steuerelementen die Zustände angeben, das Steuerelement kann sein, durch das Hinzufügen einer <xref:System.Windows.TemplateVisualStateAttribute> auf dessen Klassendefinition. Zustände mit dem gleichen <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> gehören zur gleichen <xref:System.Windows.VisualStateGroup>. Legen Sie die <xref:System.Windows.VisualStateGroup.Name%2A> von der <xref:System.Windows.VisualStateGroup> auf den Wert des der <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A?displayProperty=nameWithType> Eigenschaft.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Windows.VisualStateGroup> Objekte, die mit dem Namen sind `CommonStates` und `FocusStates`. Das Steuerelement wird in genau einem Zustand aus jeder <xref:System.Windows.VisualStateGroup> zu jeder Zeit. Das vollständige Beispiel finden Sie unter [Anpassen der Darstellung eines vorhandenen Steuerelements durch Erstellen einer ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).  
  
 [!code-xaml[VSMButtonTemplate#5](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/skinnedbutton.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="States">
      <MemberSignature Language="C#" Value="public System.Collections.IList States { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList States" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.States" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property States As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ States { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.States : System.Collections.IList" Usage="System.Windows.VisualStateGroup.States" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung sich gegenseitig ausschließender <see cref="T:System.Windows.VisualState" />-Objekte ab.</summary>
        <value>Die Auflistung sich gegenseitig ausschließender <see cref="T:System.Windows.VisualState" />-Objekte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Windows.Controls.ControlTemplate> für eine <xref:System.Windows.Controls.Button> , enthält eine <xref:System.Windows.Controls.Grid>. Es enthält auch eine <xref:System.Windows.VisualStateGroup> mit dem Namen `CommonStates`, die definiert, die `MouseOver` und `Normal` Zustände. Die <xref:System.Windows.VisualStateGroup> verfügt auch über eine <xref:System.Windows.VisualTransition> , der angibt, dass es sich um eine halbe Sekunde, für dauert die <xref:System.Windows.Controls.Grid> , die von Grün zu Rot ändern, wenn der Benutzer den Mauszeiger bewegt wird, über die <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transitions">
      <MemberSignature Language="C#" Value="public System.Collections.IList Transitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList Transitions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.VisualStateGroup.Transitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Transitions As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IList ^ Transitions { System::Collections::IList ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Transitions : System.Collections.IList" Usage="System.Windows.VisualStateGroup.Transitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Windows.VisualTransition" />-Objekten ab.</summary>
        <value>Die Auflistung von <see cref="T:System.Windows.VisualTransition" />-Objekten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.VisualTransition> Objekte im <xref:System.Windows.VisualStateGroup.Transitions%2A> werden angewendet, wenn das Steuerelement zwischen Zuständen, die in definiert die <xref:System.Windows.VisualStateGroup>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine einfache <xref:System.Windows.Controls.ControlTemplate> für eine <xref:System.Windows.Controls.Button> , enthält eine <xref:System.Windows.Controls.Grid>. Es enthält auch eine <xref:System.Windows.VisualStateGroup> mit dem Namen `CommonStates`, die definiert, die `MouseOver` und `Normal` Zustände. Die <xref:System.Windows.VisualStateGroup> verfügt auch über eine <xref:System.Windows.VisualTransition> , der angibt, dass es sich um eine halbe Sekunde, für dauert die <xref:System.Windows.Controls.Grid> , die von Grün zu Rot ändern, wenn der Benutzer den Mauszeiger bewegt wird, über die <xref:System.Windows.Controls.Button>.  
  
 [!code-xaml[VSMButtonTemplate#11](~/samples/snippets/csharp/VS_Snippets_Wpf/vsmbuttontemplate/csharp/window1.xaml#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>