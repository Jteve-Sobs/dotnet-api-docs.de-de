<Type Name="ValueSource" FullName="System.Windows.ValueSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c64500fcc9768d42490c1ff18e54293bdc46149c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct ValueSource" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ValueSource extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ValueSource" />
  <TypeSignature Language="VB.NET" Value="Public Structure ValueSource" />
  <TypeSignature Language="C++ CLI" Value="public value class ValueSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="99e82-101">Meldet die von <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" /> zurückgegebenen Informationen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="99e82-101">Reports the information returned from <see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-102">Die meisten Informationen, die <xref:System.Windows.ValueSource> überträgt ist Bestandteil der <xref:System.Windows.ValueSource.BaseValueSource%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="99e82-102">Most of the information that <xref:System.Windows.ValueSource> transmits is contained in the <xref:System.Windows.ValueSource.BaseValueSource%2A> property.</span></span> <span data-ttu-id="99e82-103">Diese Eigenschaft enthält einen Enumerationswert, der angibt, genau einen Aspekt des gesamten [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Eigenschaftensystem, die für den effektiven Wert einer Abhängigkeitseigenschaft zuständig ist.</span><span class="sxs-lookup"><span data-stu-id="99e82-103">This property contains an enumeration value that specifies exactly one aspect of the overall [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system that is responsible for the effective value of a dependency property.</span></span>  
  
 <span data-ttu-id="99e82-104">Neben dem Preis ist die weiteren Informationen, die möglicherweise interessant Wert einer Abhängigkeitseigenschaft gibt an, ob der Wert animiert wird, und gibt an, ob der Wert für einen Ausdruck (z. B. eine Bindung, oder einen dynamischen Ressourcenverweis) beinhaltet.</span><span class="sxs-lookup"><span data-stu-id="99e82-104">Besides the base value, the other information that might be interesting about a dependency property value is whether the value is being animated, and whether the value involves an expression (such as a binding, or a dynamic resource reference).</span></span> <span data-ttu-id="99e82-105">Diese Informationen wird von gemeldet <xref:System.Windows.ValueSource.IsAnimated%2A> und <xref:System.Windows.ValueSource.IsExpression%2A> bzw.</span><span class="sxs-lookup"><span data-stu-id="99e82-105">This information is reported by <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsExpression%2A> respectively.</span></span> <span data-ttu-id="99e82-106">Wenn Umwandlung auf einen Eigenschaftswert fungiert, die Eigenschaft behält einen gewünschten Wert, und den Wert der Eigenschaft versucht, den gewünschten Wert zu erreichen, wenn die Einschränkungen für die spezifische Konvertierung geändert oder aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="99e82-106">Also, if coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="99e82-107">Eine umgewandelte Eigenschaft, die nicht den gewünschten Wert ist, meldet, dass <xref:System.Windows.ValueSource.IsCoerced%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="99e82-107">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyHelper" />
    <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
  </Docs>
  <Members>
    <Member MemberName="BaseValueSource">
      <MemberSignature Language="C#" Value="public System.Windows.BaseValueSource BaseValueSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.BaseValueSource BaseValueSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.BaseValueSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseValueSource As BaseValueSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::BaseValueSource BaseValueSource { System::Windows::BaseValueSource get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.BaseValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99e82-108">Ruft einen Wert der <see cref="T:System.Windows.BaseValueSource" />-Enumeration ab, die die Quelle meldet, die einen Wert für das Abhängigkeitseigenschaftensystem bereitgestellt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-108">Gets a value of the <see cref="T:System.Windows.BaseValueSource" /> enumeration, which reports the source that provided the dependency property system with a value.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99e82-109">Ein Wert aus der Enumeration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-109">A value of the enumeration.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-110">Der Basiswert ist nicht der tatsächliche Wert, wenn Typenumwandlung und Animation für die Eigenschaft fungiert.</span><span class="sxs-lookup"><span data-stu-id="99e82-110">The base value is not the effective value if either coercion or animation is acting on the property.</span></span> <span data-ttu-id="99e82-111">Überprüfen Sie <xref:System.Windows.ValueSource.IsAnimated%2A> und <xref:System.Windows.ValueSource.IsCoerced%2A> sollten Sie bestimmen, ob der Basiswert der effektive Wert ist.</span><span class="sxs-lookup"><span data-stu-id="99e82-111">Check <xref:System.Windows.ValueSource.IsAnimated%2A> and <xref:System.Windows.ValueSource.IsCoerced%2A> if you want to determine whether the base value is the effective value.</span></span>  
  
 <span data-ttu-id="99e82-112">Sie sollten außerdem überprüfen <xref:System.Windows.ValueSource.IsExpression%2A> um festzustellen, ob der Basiswert aus einem Ausdruck ausgewertet wurde.</span><span class="sxs-lookup"><span data-stu-id="99e82-112">You might also want to check <xref:System.Windows.ValueSource.IsExpression%2A> to see if the base value was evaluated out of an expression.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">
          <span data-ttu-id="99e82-113">Das Objekt, das mit diesem <see cref="T:System.Windows.ValueSource" /> verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-113">The object to compare with this <see cref="T:System.Windows.ValueSource" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99e82-114">Gibt einen Wert zurück, der angibt, ob diese <see cref="T:System.Windows.ValueSource" /> gleich einem angegebenen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-114">Returns a value indicating whether this <see cref="T:System.Windows.ValueSource" /> is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99e82-115">
            <see langword="true" />, wenn das angegebene Objekt gleich der aktuellen <see cref="T:System.Windows.ValueSource" /> ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-115">
              <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.ValueSource" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-116">Diese Implementierung unterstützt Wertgleichheit, basierend auf jedem der Eigenschaftswerte jedes <xref:System.Windows.ValueSource> Struktur.</span><span class="sxs-lookup"><span data-stu-id="99e82-116">This implementation supports value equality, based on each of the property values of each <xref:System.Windows.ValueSource> structure.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="99e82-117">Gibt den Hashcode für diesen <see cref="T:System.Windows.ValueSource" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-117">Returns the hash code for this <see cref="T:System.Windows.ValueSource" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99e82-118">Ein 32-Bit-Hashcode als ganze Zahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-118">A 32-bit unsigned integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-119">Dieser Hash wird basierend auf den <xref:System.Windows.ValueSource.BaseValueSource%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="99e82-119">This hash code is based on the <xref:System.Windows.ValueSource.BaseValueSource%2A> value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="IsAnimated">
      <MemberSignature Language="C#" Value="public bool IsAnimated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAnimated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsAnimated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAnimated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAnimated { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99e82-120">Ruft einen Wert ab, der deklariert, ob die Eigenschaft animiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-120">Gets a value that declares whether the property is being animated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99e82-121">
            <see langword="true" />, wenn die Eigenschaft animiert wird, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-121">
              <see langword="true" /> if the property is animated; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-122">Für jede Eigenschaft, die derzeit animiert wird, wird die Quelle von gemeldeten <xref:System.Windows.ValueSource.BaseValueSource%2A> ist nicht sofort relevant, da die Animation bei Abhängigkeit-Eigenschaft Vorrang vor der Basiswert betrieben wird.</span><span class="sxs-lookup"><span data-stu-id="99e82-122">For any property that is currently being animated, the source reported by <xref:System.Windows.ValueSource.BaseValueSource%2A> is not immediately relevant, because the animation operates at higher dependency property precedence than the base value.</span></span> <span data-ttu-id="99e82-123">Weitere Informationen über die Rangfolge und Animationen finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="99e82-123">For more information about precedence and animations, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCoerced">
      <MemberSignature Language="C#" Value="public bool IsCoerced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCoerced" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCoerced" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCoerced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCoerced { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99e82-124">Ruft einen Wert ab, der angibt, ob dieser Wert aus einer <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung resultiert, die auf eine Abhängigkeitseigenschaft angewendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-124">Gets a value that declares whether this value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99e82-125">
            <see langword="true" />, wenn der Wert das Ergebnis einer <see cref="T:System.Windows.CoerceValueCallback" />-Implementierung ist, die auf eine Abhängigkeitseigenschaft angewendet wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-125">
              <see langword="true" /> if the value resulted from a <see cref="T:System.Windows.CoerceValueCallback" /> implementation applied to a dependency property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-126">Wenn Umwandlung auf einen Eigenschaftswert fungiert, die Eigenschaft behält einen gewünschten Wert und den Wert der Eigenschaft versucht, den gewünschten Wert zu erreichen, wenn die Einschränkungen für die spezifische Konvertierung geändert oder aufgehoben werden.</span><span class="sxs-lookup"><span data-stu-id="99e82-126">If coercion is acting on a property value, the property retains a desired value, and the property value will attempt to reach that desired value if the constraints of the specific coercion are changed or lifted.</span></span> <span data-ttu-id="99e82-127">Eine umgewandelte Eigenschaft, die nicht den gewünschten Wert ist, meldet, dass <xref:System.Windows.ValueSource.IsCoerced%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="99e82-127">A coerced property that is not at its desired value will report that <xref:System.Windows.ValueSource.IsCoerced%2A> is `true`.</span></span>  
  
 <span data-ttu-id="99e82-128">Umwandlung höheren Priorität als Basiswert dient, und ist nicht streng genommen Teilnehmer wie Preis festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="99e82-128">Coercion acts at higher precedence than the base value, and is not strictly speaking a participant in how the base value is set.</span></span> <span data-ttu-id="99e82-129">Aus diesem Grund wird der Zustand der Umwandlung angezeigt, die von dieser Eigenschaft und nicht durch den Wert der <xref:System.Windows.BaseValueSource> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="99e82-129">Therefore the state of being coerced is reported by this property, rather than by a value of the <xref:System.Windows.BaseValueSource> enumeration.</span></span> <span data-ttu-id="99e82-130">Weitere Informationen zum Umwandlung Basiswerte und Rangfolge finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span><span class="sxs-lookup"><span data-stu-id="99e82-130">For more information about coercion, base values, and precedence, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsCurrent">
      <MemberSignature Language="C#" Value="public bool IsCurrent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCurrent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsCurrent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCurrent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCurrent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99e82-131">Ruft ab, ob der Wert von der <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />-Methode festgelegt wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-131">Gets whether the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99e82-132">
            <see langword="true" />, wenn der Wert von der <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" />-Methode festgelegt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-132">
              <see langword="true" /> if the value was set by the <see cref="M:System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsExpression">
      <MemberSignature Language="C#" Value="public bool IsExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsExpression" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ValueSource.IsExpression" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsExpression As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsExpression { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="99e82-133">Ruft einen Wert ab, der deklariert, ob dieser Wert das Ergebnis eines ausgewerteten Ausdrucks ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-133">Gets a value that declares whether this value resulted from an evaluated expression.</span>
          </span>
          <span data-ttu-id="99e82-134">Dabei kann es sich um einen <see cref="T:System.Windows.Data.BindingExpression" />, der eine Bindung unterstützt, oder um einen internen Ausdruck handeln, beispielsweise einen Ausdruck, der die Markuperweiterung [DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-134">This might be a <see cref="T:System.Windows.Data.BindingExpression" /> supporting a binding, or an internal expression such as those that support the [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="99e82-135">
            <see langword="true" />, wenn der Wert aus einem ausgewerteten Ausdruck stammt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-135">
              <see langword="true" /> if the value came from an evaluated expression; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-136">Melden ein ausgewerteten Ausdrucks außerdem bestimmte Preis Bedingung zum Festlegen, in dem der Ausdruck angewendet wurde, als Wert in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="99e82-136">An evaluated expression will also report the specific base value setting condition where the expression was applied, as a value in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="99e82-137">Die <xref:System.Windows.ValueSource.BaseValueSource%2A> ist immer noch relevant für jede Eigenschaft, auf dem <xref:System.Windows.ValueSource.IsExpression%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="99e82-137">The <xref:System.Windows.ValueSource.BaseValueSource%2A> is still very relevant for any property where <xref:System.Windows.ValueSource.IsExpression%2A> is `true`.</span></span> <span data-ttu-id="99e82-138">Zu wissen, ob ein Wert durch einen Ausdruck stammen kann, besonders nützlich, wenn der Wert z. B. indirekt über eine Vorlage oder eine geerbte Eigenschaft-Wert festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="99e82-138">Knowing whether a value came through an expression can be particularly useful if the value was set indirectly, such as through a template or an inherited property value.</span></span>  
  
 <span data-ttu-id="99e82-139">Wenn ein Ausdruck kann nicht ausgewertet werden (Fehler bei der Bindung, es wurde keine Ressource mit diesem Namen gefunden), und klicken Sie dann der Wert aus einem anderen Teilnehmer in dem Eigenschaftensystem wahrscheinlich den Standardwert stammen.</span><span class="sxs-lookup"><span data-stu-id="99e82-139">If an expression fails to evaluate (the binding failed; no resource of that name was found), then the value will come from some other participant in the property system, most likely the default value.</span></span> <span data-ttu-id="99e82-140">Diese Quelle wird dann gemeldet <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="99e82-140">That source is then reported in <xref:System.Windows.ValueSource.BaseValueSource%2A>.</span></span> <span data-ttu-id="99e82-141">Fehlerausdruck auswertungen zurück `false` für <xref:System.Windows.ValueSource.IsExpression%2A>.</span><span class="sxs-lookup"><span data-stu-id="99e82-141">Failed expression evaluations will return `false` for <xref:System.Windows.ValueSource.IsExpression%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
        <altmember cref="P:System.Windows.ValueSource.BaseValueSource" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Equality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1">
          <span data-ttu-id="99e82-142">Der erste zu vergleichende <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-142">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <param name="vs2">
          <span data-ttu-id="99e82-143">Der zweite zu vergleichende <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-143">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99e82-144">Bestimmt, ob zwei <see cref="T:System.Windows.ValueSource" />-Instanzen denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-144">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99e82-145">
            <see langword="true" />, wenn die beiden <see cref="T:System.Windows.ValueSource" />-Instanzen äquivalent sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-145">
              <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-146">Diese Implementierung ruft <xref:System.Windows.ValueSource.Equals%2A>, und unterstützt Wertgleichheit basierend auf alle Eigenschaften des <xref:System.Windows.ValueSource>.</span><span class="sxs-lookup"><span data-stu-id="99e82-146">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.ValueSource vs1, System.Windows.ValueSource vs2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.ValueSource vs1, valuetype System.Windows.ValueSource vs2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ValueSource.op_Inequality(System.Windows.ValueSource,System.Windows.ValueSource)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (vs1 As ValueSource, vs2 As ValueSource) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::ValueSource vs1, System::Windows::ValueSource vs2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="vs1" Type="System.Windows.ValueSource" />
        <Parameter Name="vs2" Type="System.Windows.ValueSource" />
      </Parameters>
      <Docs>
        <param name="vs1">
          <span data-ttu-id="99e82-147">Der erste zu vergleichende <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-147">The first <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <param name="vs2">
          <span data-ttu-id="99e82-148">Der zweite zu vergleichende <see cref="T:System.Windows.ValueSource" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-148">The second <see cref="T:System.Windows.ValueSource" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="99e82-149">Bestimmt, ob zwei <see cref="T:System.Windows.ValueSource" />-Instanzen verschiedene Werte haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-149">Determines whether two <see cref="T:System.Windows.ValueSource" /> instances do not have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="99e82-150">
            <see langword="true" />, wenn die beiden <see cref="T:System.Windows.ValueSource" />-Instanzen nicht äquivalent sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="99e82-150">
              <see langword="true" /> if the two <see cref="T:System.Windows.ValueSource" /> instances are not equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="99e82-151">Diese Implementierung ruft <xref:System.Windows.ValueSource.Equals%2A>, ihre Negation, und unterstützt Wertgleichheit basierend auf alle Eigenschaften zurückgeben <xref:System.Windows.ValueSource>.</span><span class="sxs-lookup"><span data-stu-id="99e82-151">This implementation calls <xref:System.Windows.ValueSource.Equals%2A>, returning its negation, and supports value equality based on all properties of <xref:System.Windows.ValueSource>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DependencyPropertyHelper" />
        <altmember cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      </Docs>
    </Member>
  </Members>
</Type>