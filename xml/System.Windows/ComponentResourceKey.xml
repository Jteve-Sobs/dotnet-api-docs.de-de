<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComponentResourceKey.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54ab025443f3717a6f64e96df27f296ecc9101058.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4ab025443f3717a6f64e96df27f296ecc9101058</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ComponentResourceKey">
          <source>Defines or references resource keys based on class names in external assemblies, as well as an additional identifier.</source>
          <target state="translated">Definiert oder verweist auf Ressourcenschlüssel basierend auf Klassennamen in externen Assemblys und einem zusätzlichen Bezeichner.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</source>
          <target state="translated">Für <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Informationen finden Sie unter <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>This class implements an object type that is useful for creating keys that are based on types in assemblies plus an identifier.</source>
          <target state="translated">Diese Klasse implementiert einen Objekttyp, der eignet sich zum Erstellen von Schlüsseln, die Typen in Assemblys sowie einem Bezeichner basieren.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>Because you define or reference the type, you do not need to request a specific <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, and more than one set of resources can exist in the assembly, each differentiated by the type of their <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</source>
          <target state="translated">Sie definieren, oder verweisen auf den Typ, müssen Sie keine bestimmte Anforderung <ph id="ph1">&lt;xref:System.Windows.ResourceDictionary&gt;</ph>, mehr als eine Reihe von Ressourcen kann sich in der Assembly, die durch den Typ des jeweiligen differenzierte befinden ihre <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>There are two ways to define a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</source>
          <target state="translated">Es gibt zwei Möglichkeiten zum Definieren einer <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>If you want an easily accessible key, you can define a static property on your control class code that returns a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>, constructed with a <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> that exists in the external resource assembly, and a <ph id="ph3">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph>.</source>
          <target state="translated">Wenn Sie einen leicht zugänglichen Schlüssel möchten, können Sie eine statische Eigenschaft definieren, auf den Code der Steuerelementklasse, die zurückgegeben eine <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>, konstruierten mit einer <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> , in der Assembly externe Ressource vorhanden ist und ein <ph id="ph3">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>The key can be used for defining alternate default styles for controls in an assembly, by swapping the original external resource assembly for a custom one.</source>
          <target state="translated">Der Schlüssel kann zum Definieren von alternativen Standardstile für Steuerelemente in einer Assembly durch Austausch der ursprünglichen Assembly der externen Ressource für eine benutzerdefinierte verwendet werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>You can also define a named resource part within a larger control style or template to expose a customization entry point.</source>
          <target state="translated">Außerdem können eine benannte Ressourcenteil innerhalb einer größeren Steuerelementformats oder eine Vorlage, um einen Einstiegspunkt für die Anpassung verfügbar zu machen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>This is particularly useful if you are defining a theme resource dictionary for your control.</source>
          <target state="translated">Dies ist besonders nützlich, wenn Sie ein Design Ressourcenverzeichnis für das Steuerelement definieren.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>You can also use the <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> in verbose syntax directly to create a loose instance of the key.</source>
          <target state="translated">Sie können auch die <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> in ausführlicher Syntax direkt an eine lose Instanz des Schlüssels zu erstellen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ComponentResourceKey">
          <source>This is useful if you want to declare private resources from other assemblies that are less discoverable to customize.</source>
          <target state="translated">Dies ist hilfreich, wenn private Ressourcen von anderen Assemblys zu deklarieren, die weniger anpassen erkannt werden sollen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Windows.ComponentResourceKey">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor">
          <source>The default constructor is not generally used, because a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> value and <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> value are required for proper initialization.</source>
          <target state="translated">Der Standardkonstruktor wird im Allgemeinen nicht verwendet, da eine <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> Wert und <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> Wert für eine ordnungsgemäße Initialisierung erforderlich sind.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor">
          <source>The default constructor exists primarily to support <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> XAML usage in named parameter form.</source>
          <target state="translated">Der Standardkonstruktor vorhanden ist, in erster Linie zur Unterstützung von <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> XAML-Verwendung im Formular benannte Parameter.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>The type that defines the resource key.</source>
          <target state="translated">Der Typ, der den Ressourcenschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>A unique identifier to differentiate this <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> from others associated with the <bpt id="p1">&lt;c&gt;</bpt>typeInTargetAssembly<ept id="p1">&lt;/c&gt;</ept> type.</source>
          <target state="translated">Ein eindeutiger Bezeichner, mit dem dieser <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> von anderen dem <bpt id="p1">&lt;c&gt;</bpt>typeInTargetAssembly<ept id="p1">&lt;/c&gt;</ept>-Typ zugeordneten Schlüsseln unterschieden wird.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>Initializes a new instance of a <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> , specifying the <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> that defines the key, and an object to use as an additional resource identifier.</source>
          <target state="translated">Initialisiert eine neue Instanz eines <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> und gibt den <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> an, durch den der Schlüssel definiert wird, sowie ein Objekt, das als zusätzlicher Ressourcenbezeichner verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>This constructor exist for two scenarios, with the first scenario being the most important:</source>
          <target state="translated">Dieser Konstruktor vorhanden für zwei Szenarien, zu dem ersten Szenario wird am wichtigsten:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>Supports creating a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> that is then exposed as a public static field on a custom control class.</source>
          <target state="translated">Unterstützt die Erstellung einer <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> , klicken Sie dann als eine öffentliche statische Feld für ein benutzerdefiniertes Steuerelement-Klasse verfügbar gemacht.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>This simplifies a control's access to its own defined resources in the template through <ph id="ph1">`{x:Static}`</ph> usages for template property values.</source>
          <target state="translated">Dies vereinfacht eine Steuern des Zugriffs auf eigene definierten Ressourcen in der Vorlage durch <ph id="ph1">`{x:Static}`</ph> Verwendungsweisen für die Vorlageneigenschaftswerte.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>Supports <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> XAML usage in positional parameter form, which is one technique available for third parties that reference a component resource.</source>
          <target state="translated">Unterstützt <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept> XAML-Verwendung in Positionsparameter-Formular, das eine Technik für Drittanbieter verfügbar ist, die auf eine Komponentenressource zu verweisen.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> that is then exposed as a static key of a control class to provide a style customization entry point.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> , die als statische Schlüssel eine Steuerelementklasse, geben Sie einen Stil Anpassung Einstiegspunkt dann verfügbar gemacht.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.ComponentResourceKey.Assembly">
          <source>Gets the assembly object that indicates which assembly's dictionary to look in for the value associated with this key.</source>
          <target state="translated">Ruft das Assemblyobjekt ab, das angibt, im Wörterbuch welcher Assembly nach dem Wert gesucht werden soll, der diesem Schlüssel zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.Assembly">
          <source>The retrieved assembly, as a reflection class.</source>
          <target state="translated">Die abgerufene Assembly als Reflektionsklasse.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
          <source>Object to compare with the current <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>.</source>
          <target state="translated">Das Objekt, das mit dem aktuellen <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> verglichen werden soll.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
          <source>Determines whether the provided object is equal to the current <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>.</source>
          <target state="translated">Bestimmt, ob das angegebene Objekt dem aktuellen <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> entspricht.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Objekte gleich sind, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.ComponentResourceKey.Equals(System.Object)">
          <source>Two keys are equal if they both have the same values for all their immediate settable properties (<ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph>).</source>
          <target state="translated">Zwei Schlüssel sind gleich, wenn beide die gleichen Werte für alle ihre unmittelbaren festlegbaren Eigenschaften haben (<ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.GetHashCode">
          <source>Returns a hash code for this <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>.</source>
          <target state="translated">Gibt einen Hashcode für diesen <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> zurück.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.GetHashCode">
          <source>A signed 32-bit integer value.</source>
          <target state="translated">Ein 32-Bit-Ganzzahlwert mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>Gets or sets a unique identifier to differentiate this key from others associated with this type.</source>
          <target state="translated">Ruft einen eindeutigen Bezeichner ab, um diesen Schlüssel von anderen diesem Typ zugeordneten Schlüsseln zu unterscheiden, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>A unique identifier.</source>
          <target state="translated">Ein eindeutiger Bezeichner.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>Typically this is a string.</source>
          <target state="translated">Dies ist i. d. R. eine Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</source>
          <target state="translated">Für <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Informationen finden Sie unter <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>Typically, the string used for a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> value conforms to the <bpt id="p1">[</bpt>XamlName Grammar<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</source>
          <target state="translated">In der Regel die Zeichenfolge für eine <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> Wert entspricht der <bpt id="p1">[</bpt>XamlName-Grammatik<ept id="p1">](~/docs/framework/xaml-services/xamlname-grammar.md)</ept>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.ResourceId">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> to differentiate this key from others associated with this type.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie die <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> zur Unterscheidung von diesen Schlüssel von anderen diesem Typ zugeordnet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.ToString">
          <source>Gets the string representation of a <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph>.</source>
          <target state="translated">Ruft eine Zeichenfolgendarstellung eines <ph id="ph1">&lt;see cref="T:System.Windows.ComponentResourceKey" /&gt;</ph> ab.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.ComponentResourceKey.ToString">
          <source>The string representation.</source>
          <target state="translated">Die Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> that defines the resource key.</source>
          <target state="translated">Ruft den <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> ab, der den Ressourcenschlüssel definiert, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>The type that defines the resource key.</source>
          <target state="translated">Der Typ, der den Ressourcenschlüssel definiert.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>For <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> information, see <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</source>
          <target state="translated">Für <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Informationen finden Sie unter <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>The <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> element is used by custom components to define keys for resources that are accessed from external assemblies, based on targeting an assembly that contains the type.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> Element wird von benutzerdefinierten Komponenten verwendet, um Schlüssel für Ressourcen zu definieren, die von externen Assemblys als Zielplattform vorgesehen haben eine Assembly mit dem Typ zugegriffen wird.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>Custom components often define new types which must be in the assembly where the resource is located.</source>
          <target state="translated">Benutzerdefinierte Komponenten definieren häufig neue Typen, die in der Assembly sein müssen, wo sich die Ressource befindet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>Generally these types have no other implementation, the types only exist in order to satisfy the lookup requirements of a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</source>
          <target state="translated">Im Allgemeinen diese Typen weisen keine anderen Implementierung, die Typen nur vorhanden sein, um die Suche Anforderungen erfüllen einer <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>The following example shows how to define a <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> including <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> using the <bpt id="p1">[</bpt>ComponentResourceKey Markup Extension<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie definieren eine <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> einschließlich <ph id="ph2">&lt;xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A&gt;</ph> und <ph id="ph3">&lt;xref:System.Windows.ComponentResourceKey.ResourceId%2A&gt;</ph> mithilfe der <bpt id="p1">[</bpt>ComponentResourceKey Markuperweiterung<ept id="p1">](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md)</ept>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly">
          <source>This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> in the request.</source>
          <target state="translated">Diese Ressource kann dann in einer externen Assembly platziert und eine Schlüsselverwendung aus, die die Ressource, die über eine analoge anfordert zugreift <ph id="ph1">&lt;xref:System.Windows.ComponentResourceKey&gt;</ph> in der Anforderung.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>