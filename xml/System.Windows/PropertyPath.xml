<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="039a19f8a73cefb387b6c744d8c6d4de7b01b1d5" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86715236" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))]</AttributeName>
      <AttributeName Language="F#">[&lt;System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementiert eine Datenstruktur zum Beschreiben einer Eigenschaft als Pfad unterhalb einer anderen Eigenschaft oder unterhalb eines besitzenden Typs. Eigenschaftspfade werden bei der Datenbindung an Objekte verwendet und in Storyboards und Zeitachsen für Animationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse enthält eine Zeichenfolge <xref:System.Windows.PropertyPath.Path%2A> und eine Liste mit Abhängigkeits Eigenschaften, die <xref:System.Windows.PropertyPath.PathParameters%2A> in der Zeichenfolge enthalten sind <xref:System.Windows.PropertyPath.Path%2A> .  
  
 <xref:System.Windows.PropertyPath> unterstützt zwei Verhaltensweisen:  
  
 Der **Quell Modus** beschreibt einen Pfad zu einer Eigenschaft, die als Quelle für einen anderen Vorgang verwendet wird. Dieser Modus wird von der- <xref:System.Windows.Data.Binding> Klasse verwendet, um die Datenbindung zu unterstützen.  
  
 Der **Zielmodus** beschreibt einen Pfad zu einer Eigenschaft, die als Ziel Eigenschaft festgelegt wird. Dieser Modus wird von der Animation zur Unterstützung von Storyboard-und Zeitachsen Setter verwendet.  
  
 Beispielsweise `Background.Opacity` ist ein Pfad mit zwei Schritten. Dieser Pfad impliziert Folgendes: Suchen Sie zuerst die- `Background` Eigenschaft eines Objekts, und holen Sie das Wertobjekt, auf das die `Background` -Eigenschaft festgelegt ist, und dann den Wert der- `Opacity` Eigenschaft für dieses Objekt.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *PropertyPath*  
 Eine Zeichenfolge, die entweder als einfacher oder komplexer Eigenschafts Pfad ausgewertet wird. Die Syntax für das Festlegen eines <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ist vielseitig, aber komplex und wird in der separaten Themen [PropertyPath-XAML-Syntax](/dotnet/framework/wpf/advanced/propertypath-xaml-syntax)beschrieben.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343">x:Statische Markuperweiterung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Ein Eigenschaftenpfad, der entweder einen Pfad zu einer [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Eigenschaft beschreibt, oder eine einzelne Abhängigkeitseigenschaft.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor verfügt über zwei vollkommen unterschiedliche Verwendungen, abhängig davon, ob er für einen Eigenschafts Pfad im Quellmodus für eine Bindung verwendet wird, oder für einen Einzelschritt-Eigenschafts Pfad im Zielmodus eines Storyboard-Ziels.  
  
 Wenn diese <xref:System.Windows.PropertyPath> im Quell Modus für eine Bindung verwendet wird, `parameter` ist eine Zeichenfolge, die einen Eigenschaftsnamen darstellt, oder eine Zeichenfolge, die einen Schritt-für-Schritt-Pfad zur-Eigenschaft im [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Objektmodell des Objekts beschreibt, das als Quelle für eine Bindung verwendet wird. Bei einem Bindungs Eigenschafts Pfad ist das Zeichen, das einen "Schritt" bezeichnet, ein Punkt (.). Indexerverweise (einschließlich mehrerer Indexer und Typdifferenzierung) werden ebenfalls unterstützt. Weitere Informationen zur Syntax der Zeichenfolge, die speziell vom-Objekt verwendet <xref:System.Windows.Data.Binding> wird, finden Sie unter <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType> . Eine Eigenschaft, die als Bindungs Quelle verwendet wird, muss keine Abhängigkeits Eigenschaft sein. Wenn die Bindung bidirektional aktualisiert wird, muss die Eigenschaft, auf die verwiesen wird, Lese-/Schreibzugriff Beachten Sie außerdem, dass das Bindungs Ziel eine Abhängigkeits Eigenschaft sein muss. Weitere Informationen finden Sie unter [Übersicht über die Datenbindung](/dotnet/framework/wpf/data/data-binding-overview).  
  
 Wenn diese <xref:System.Windows.PropertyPath> im Zielmodus für einen Einzelschritt Pfad für ein Storyboard-Ziel verwendet wird, `parameter` wird im Allgemeinen als-Typ bereitgestellt <xref:System.Windows.DependencyProperty> . Sie können auch eine Zeichenfolge angeben, die ist <xref:System.Windows.DependencyProperty.Name%2A> . Beide werden mit dem gleichen Ergebnis ausgewertet, da Sie intern als Zeichenfolge gespeichert werden. Ein bereitgestellter <xref:System.Windows.DependencyProperty> wird über in eine Zeichenfolge konvertiert <xref:System.Windows.Markup.DependencyPropertyConverter> . <xref:System.Windows.Markup.DependencyPropertyConverter>Unterstützt ein qualifiziertes Benennungs Format für Abhängigkeits Eigenschaften, sodass Sie einen *Typnamen*angeben können.* PropertyName* qualifizierte Zeichenfolge für die Abhängigkeits Eigenschaftsnamen <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> in den Konstruktor im Code. Der qualifizierte Pfad zum Bezeichner der Abhängigkeits Eigenschaft ist ein anderes Konzept als ein komplexer Pfad. Stattdessen sollte ein komplexer Pfad <xref:System.Windows.PropertyPath> mit dem- <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> Konstruktor erstellt werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="net-5.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Eine Zeichenfolge, die den <see cref="P:System.Windows.PropertyPath.Path" /> in einem Format mit Token angibt.</param>
        <param name="pathParameters">Ein Array von Objekten, das die <see cref="P:System.Windows.PropertyPath.PathParameters" /> festlegt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse mit der Tokenzeichenfolge und den Parametern für den angegebenen Pfad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Signatur wird in der Regel nur für Verwendungen im Zielmodus <xref:System.Windows.PropertyPath> mit komplexen Pfaden verwendet.  
  
 Dieser Konstruktor unterstützt `params` für das `pathParameters` Konstruktorargument. Daher können Sie den Inhalt von `pathParameters` als eine Reihe von durch Trennzeichen getrennten Konstruktorargumenten angeben, die das Array auffüllen, anstatt ein Array zu dimensionieren und es dann mit den Elementen aufzufüllen `pathParameters` . Jedes Element, das Sie angeben, muss einem der folgenden Typen sein: <xref:System.Windows.DependencyProperty> , <xref:System.Reflection.PropertyInfo> , <xref:System.ComponentModel.PropertyDescriptor> .  
  
 Weitere Informationen zu den Anforderungen der Parameter finden Sie unter <xref:System.Windows.PropertyPath.Path%2A> und <xref:System.Windows.PropertyPath.PathParameters%2A> .  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die den Pfad beschreibt, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die den Pfad beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die in dieser Eigenschaft enthaltene Zeichenfolge hat drei völlig unterschiedliche Bedeutungen, abhängig davon, ob eine <xref:System.Windows.PropertyPath> für einen Eigenschafts Pfad im Quellmodus für eine Bindung verwendet wird, für einen Einzelschritt-Eigenschafts Pfad für einen Ziel Modus eines Storyboard-Ziels oder für einen komplexen Pfad für ein Storyboard-Ziel.  
  
 Wenn diese <xref:System.Windows.PropertyPath> im Quell Modus für eine Bindung verwendet wird, <xref:System.Windows.PropertyPath.Path%2A> ist eine Zeichenfolge, die einen Eigenschaftsnamen darstellt, oder eine Zeichenfolge, die einen Schritt-für-Schritt-Pfad zur-Eigenschaft im [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Objektmodell des Objekts beschreibt, das als Quelle für eine Bindung verwendet wird. Bei einem Bindungs Eigenschafts Pfad ist das Zeichen, das einen "Schritt" bezeichnet, ein Punkt (.). Indexerverweise (einschließlich mehrerer Indexer und Typdifferenzierung) werden ebenfalls unterstützt. Weitere Informationen zur Syntax der Zeichenfolge, die speziell vom-Objekt verwendet <xref:System.Windows.Data.Binding> wird, finden Sie unter <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType> . Eine Eigenschaft, die als Bindungs Quelle verwendet wird, muss keine Abhängigkeits Eigenschaft sein. Wenn die Bindung bidirektional aktualisiert wird, muss die Eigenschaften Quelle mit Lese-/Schreibzugriff erfolgen. Beachten Sie außerdem, dass das Bindungs Ziel eine Abhängigkeits Eigenschaft sein muss. Weitere Informationen finden Sie unter [Übersicht über die Datenbindung](/dotnet/framework/wpf/data/data-binding-overview).  
  
 Wenn diese <xref:System.Windows.PropertyPath> im Zielmodus für einen Einzelschritt Pfad für ein Storyboard-Ziel verwendet wird, <xref:System.Windows.PropertyPath> ist eine Zeichenfolge, die ein *Typname*ist.* PropertyName* qualifizierte Zeichenfolge für Abhängigkeits Eigenschaftsnamen.  
  
 Wenn diese <xref:System.Windows.PropertyPath> für einen komplexen Pfad für ein Storyboard-Ziel verwendet wird, <xref:System.Windows.PropertyPath.Path%2A> ist ein Zeichen folgen Format mit Token, das die Beziehungen der verschiedenen in angegebenen Objekte beschreibt <xref:System.Windows.PropertyPath.PathParameters%2A> .  
  
-   Jedes Element im Array wird in diesem Format durch den Array Index für das in Klammern eingeschlossene Element angegeben. Um z. b. das erste Element im Array anzugeben, ist das Zeichen folgen Token `(0)` .  
  
-   Beziehungen zwischen Elementen ("Steps" im Pfad) werden durch einen Punkt (.) angegeben. Die Eigenschaft vor dem Punkt ist der erste Schritt im Pfad, die-Eigenschaft nach ist der zweite Schritt, usw. (Sie können Schritte über zwei hinaus angeben). Der letzte Schritt in der Kette steht immer für die zu animierende Eigenschaft.  
  
-   Auf Elemente innerhalb von Auflistungs Eigenschaften wird mit einer Indexer-Syntax zugegriffen, wobei der Index in eckigen Klammern ([und]) liegt. Der Indexer ist für das Token, das die Eigenschaft darstellt, Additiv. Das folgende Beispiel zeigt einen zweistufigen Pfad mit der Tokenkombination im ersten Schritt, der das zweite Element in der-Auflistung dieser Eigenschaft angibt: `(0)[1].(1)` . Ein Indexer kann nicht für die letzte Eigenschaft in der Kette verwendet werden. die tatsächliche Auflistungs Position kann nicht animiert werden. Sie müssen eine Eigenschaft für dieses Objekt animieren.  
  
 Die Pfad Zeichenfolge für eine <xref:System.Windows.PropertyPath> wird in der Regel über die Konstruktoren festgelegt: die <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> Signatur für Bindungen oder Storyboard-Ziele mit einem einzelnen Schritt, die <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> Signatur für mehrstufige Storyboard-Ziele.  
  
 **XAML:** Wenn Sie einen <xref:System.Windows.PropertyPath> Eigenschafts Verweis in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] als Attribut Wert beschreiben, wird die von Ihnen angegebene Zeichenfolge zuerst von einem Typkonverter ( <xref:System.Windows.PropertyPathConverter> ) behandelt. Dieser Typkonverter verarbeitet dann die Zeichenfolge und ruft basierend auf der Syntax eine der <xref:System.Windows.PropertyPath> Konstruktorsignaturen auf. Diese Dereferenzierung durch den Typkonverter, der einen Attribut Wert verarbeitet, ist im Allgemeinen die Verwendung <xref:System.Windows.PropertyPath> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] von in, anstatt ein <xref:System.Windows.PropertyPath> -Objekt Element zu deklarieren und dann bestimmte Werte auf Attribute wie <xref:System.Windows.PropertyPath.Path%2A> und anzuwenden <xref:System.Windows.PropertyPath.PathParameters%2A> . Weitere Informationen finden Sie unter [PropertyPath-XAML-Syntax](/dotnet/framework/wpf/advanced/propertypath-xaml-syntax).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Member des <xref:System.Windows.PropertyPath> Typs werden in der Regel nicht in einer direkten [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax festgelegt. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste von Parametern ab, die zu verwenden sind, wenn der Pfad auf indizierte Parameter verweist.</summary>
        <value>Die Parameterliste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften für eine <xref:System.Windows.PropertyPath> werden in der Regel über die-Konstruktoren festgelegt. Für die-Einstellung <xref:System.Windows.PropertyPath.PathParameters%2A> ist der- <xref:System.Windows.PropertyPath.%23ctor%2A> Konstruktor besonders praktisch, da das `pathParameters` Konstruktorargument als festgelegt ist `params` . Dies bedeutet, dass Sie ein Array nicht für die Erstellung erstellen oder ein Array erstellen müssen. Sie geben einfach jeden Member des Arrays als zusätzlichen Parameter an.  
  
 Wenn die letzte Eigenschaft, die das Ziel ist, ein- <xref:System.Windows.Freezable> Typ ist, wird dieser Wert geklont. Weitere Informationen finden Sie unter [Übersicht über Storyboards](/dotnet/framework/wpf/graphics-multimedia/storyboards-overview).  
  
 Die tatsächliche Auswertung der Eigenschaften Kette wird durch die Storyboard-Animations Mechanismen durchgeführt. Auf der <xref:System.Windows.PropertyPath> Ebene wird keine Überprüfung durchgeführt, um sicherzustellen, dass die Schritte des Pfads überhaupt eine Verbindung herstellen. Beispielsweise können Sie einen Eigenschafts Pfad erstellen, <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> der als erster Schritt und <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> als zweiten Schritt enthält. Ein solcher Eigenschafts Pfad würde jedoch fehlschlagen, wenn er tatsächlich als Ziel angewendet wird, da der anzufüllende Pintyp <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> keine <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> Eigenschaft besitzt. Ungültige Eigenschafts Pfade schlagen im Hintergrund fehl. Weitere Informationen finden Sie unter [Übersicht über Storyboards](/dotnet/framework/wpf/graphics-multimedia/storyboards-overview).  
  
 **XAML:** Wenn Sie einen <xref:System.Windows.PropertyPath> Eigenschafts Verweis in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] als Attribut Wert beschreiben, wird die von Ihnen angegebene Zeichenfolge zuerst von einem Typkonverter ( <xref:System.Windows.PropertyPathConverter> ) behandelt. Dieser Typkonverter verarbeitet dann die Zeichenfolge und ruft basierend auf der Syntax eine der <xref:System.Windows.PropertyPath> Konstruktorsignaturen auf. Diese Dereferenzierung durch den Typkonverter, der einen Attribut Wert verarbeitet, ist im Allgemeinen die Verwendung <xref:System.Windows.PropertyPath> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] von in, anstatt ein <xref:System.Windows.PropertyPath> -Objekt Element zu deklarieren und dann bestimmte Werte auf Attribute wie <xref:System.Windows.PropertyPath.Path%2A> und anzuwenden <xref:System.Windows.PropertyPath.PathParameters%2A> . Weitere Informationen finden Sie unter [PropertyPath-XAML-Syntax](/dotnet/framework/wpf/advanced/propertypath-xaml-syntax).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Member des <xref:System.Windows.PropertyPath> Typs werden in der Regel nicht in einer direkten [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax festgelegt. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
