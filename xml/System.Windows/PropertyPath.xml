<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c7833314e8df4ca8c343ace7b8b5275beb4ab42a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55349813" /></Metadata><TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <TypeSignature Language="F#" Value="type PropertyPath = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Implementiert eine Datenstruktur zum Beschreiben einer Eigenschaft als Pfad unterhalb einer anderen Eigenschaft oder unterhalb eines besitzenden Typs. Eigenschaftspfade werden bei der Datenbindung an Objekte verwendet und in Storyboards und Zeitachsen für Animationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse enthält eine Zeichenfolge <xref:System.Windows.PropertyPath.Path%2A>, und die Liste der Abhängigkeitseigenschaften, die die <xref:System.Windows.PropertyPath.PathParameters%2A> in der Zeichenfolge <xref:System.Windows.PropertyPath.Path%2A>.  
  
 <xref:System.Windows.PropertyPath> unterstützt zwei Modi Verhalten:  
  
 **Der Modus der** beschreibt einen Pfad zu einer Eigenschaft, die als Quelle für einen anderen Vorgang verwendet wird. Dieser Modus wird verwendet, durch die <xref:System.Windows.Data.Binding> Klasse, um die Datenbindung zu unterstützen.  
  
 **Zielmodus** beschreibt einen Pfad zu einer Eigenschaft, die als eine Zieleigenschaft festgelegt werden. Dieser Modus wird durch die Animation zur Unterstützung von Storyboards und Zeitachsen Setter verwendet.  
  
 Z. B. `Background.Opacity` ist ein Pfad in zwei Schritten. Dieser Pfad impliziert: Suchen Sie zunächst die `Background` Eigenschaft eines Objekts, das Wertobjekt abgerufen, die die `Background` Eigenschaft auf festgelegt ist, und rufen dann den Wert, der die `Opacity` Eigenschaft für dieses Objekt.  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *propertyPath*  
 Eine Zeichenfolge, die ausgewertet wird, um entweder eine einfache oder komplexe Eigenschaft-Pfad sein. Die Syntax zum Festlegen einer <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ist vielseitig, jedoch komplex und wird beschrieben, in der getrennten Thema [XAML-Syntax "PropertyPath"](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/056aee79-7cdd-434f-8174-dfc856cad343">x:Statische Markuperweiterung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : obj -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath parameter" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">Ein Eigenschaftenpfad, der entweder einen Pfad zu einer [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]-Eigenschaft beschreibt, oder eine einzelne Abhängigkeitseigenschaft.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor verfügt über zwei völlig anderen Verwendungen, je nachdem, ob sie für die ein Eigenschaftenpfad Quelle im Modus für eine Bindung oder für einen Schritt für Schritt Eigenschaftspfad Ziel im Modus für ein Storyboardziel verwendet wird.  
  
 Wenn Sie es <xref:System.Windows.PropertyPath> im Quellmodus für eine Bindung, `parameter` ist eine Zeichenfolge, die einen Eigenschaftennamen darstellt, oder kann eine Zeichenfolge, die der Eigenschaft im Pfad "schrittweisen" beschreibt die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] -Objektmodell das Objekt, das als Quelle verwendet wird für eine Bindung an. Für eine Eigenschaft Bindungspfad ist das Zeichen, das einen "Schritt" identifiziert einen Punkt (.). Indexer-Verweise (einschließlich mehrere Indexer und Typ Differenzierung) werden ebenfalls unterstützt. Weitere Informationen zur Syntax der Zeichenfolge, die als eindeutig ein, die die <xref:System.Windows.Data.Binding> Objekt, finden Sie unter <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Eine Eigenschaft, die als Bindungsquelle verwendet, muss keine Abhängigkeitseigenschaft sein. Wenn die Bindung bidirektionales aktualisiert, muss die Eigenschaft, die auf die verwiesen wird Lese-/ Schreibzugriff. Beachten Sie außerdem, dass das Bindungsziel, eine Abhängigkeitseigenschaft sein muss. Weitere Informationen finden Sie unter [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Wenn Sie es <xref:System.Windows.PropertyPath> im Zielmodus für einen Schritt für Schritt Pfad für ein Storyboardziel `parameter` dient im Allgemeinen als Typ <xref:System.Windows.DependencyProperty>. Sie können auch angeben, eine Zeichenfolge, die <xref:System.Windows.DependencyProperty.Name%2A>. Eines dieser ergeben das gleiche Ergebnis, da sie intern als Zeichenfolge gespeichert ist. Ein bereitgestelltes <xref:System.Windows.DependencyProperty> wird in einer Zeichenfolge durch konvertiert <xref:System.Windows.Markup.DependencyPropertyConverter>. Die <xref:System.Windows.Markup.DependencyPropertyConverter> ein qualifizierter Namensformat für Abhängigkeitseigenschaften unterstützt werden, damit Sie angeben können eine *TypeName*. *PropertyName* qualifizierten darstellt, die <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> Konstruktor im Code. Der Pfad zu der Bezeichner der Abhängigkeitseigenschaft ist ein anderes Konzept als einem komplexen Pfad. Ein komplexer Pfad <xref:System.Windows.PropertyPath> sollten stattdessen erstellt werden, mit der <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> Konstruktor.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberSignature Language="F#" Value="new System.Windows.PropertyPath : string * obj[] -&gt; System.Windows.PropertyPath" Usage="new System.Windows.PropertyPath (path, pathParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">Eine Zeichenfolge, die den <see cref="P:System.Windows.PropertyPath.Path" /> in einem Format mit Token angibt.</param>
        <param name="pathParameters">Ein Array von Objekten, das die <see cref="P:System.Windows.PropertyPath.PathParameters" /> festlegt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.PropertyPath" />-Klasse mit der Tokenzeichenfolge und den Parametern für den angegebenen Pfad.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Signatur wird in der Regel nur für den Ziel-Modus verwendet <xref:System.Windows.PropertyPath> Verwendungen mit komplexen Pfaden.  
  
 Dieser Konstruktor unterstützt `params` für die `pathParameters` Konstruktorargument. Aus diesem Grund können Sie angeben, den Inhalt der `pathParameters` als eine Reihe von durch Trennzeichen getrennte Konstruktorargumente, die Werte des Arrays, anstatt ein Array dimension und befüllen Sie sie mit der `pathParameters` Elemente. Jedes Element, das Sie angeben, muss eine der folgenden Typen sein: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.  
  
 Weitere Informationen zu den Anforderungen der Parameter finden Sie unter <xref:System.Windows.PropertyPath.Path%2A> und <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Windows.PropertyPath.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Zeichenfolge ab, die den Pfad beschreibt, oder legt diese fest.</summary>
        <value>Die Zeichenfolge, die den Pfad beschreibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zeichenfolge, die in dieser Eigenschaft hat drei völlig unterschiedliche Bedeutung, je nachdem, ob eine <xref:System.Windows.PropertyPath> für die ein Eigenschaftenpfad Quelle im Modus für eine Bindung, für einen Schritt für Schritt Eigenschaftspfad Ziel im Modus für ein Storyboardziel oder eine komplexe verwendet wird der Pfad für ein Storyboardziel.  
  
 Wenn Sie es <xref:System.Windows.PropertyPath> im Quellmodus für eine Bindung, <xref:System.Windows.PropertyPath.Path%2A> ist eine Zeichenfolge, die einen Eigenschaftennamen darstellt, oder kann eine Zeichenfolge, die der Eigenschaft im Pfad "schrittweisen" beschreibt die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] -Objektmodell das Objekt, das als Quelle verwendet wird für eine Bindung an. Für eine Eigenschaft Bindungspfad ist das Zeichen, das einen "Schritt" identifiziert einen Punkt (.). Indexer-Verweise (einschließlich mehrere Indexer und Typ Differenzierung) werden ebenfalls unterstützt. Weitere Informationen zur Syntax der Zeichenfolge, die als eindeutig ein, die die <xref:System.Windows.Data.Binding> Objekt, finden Sie unter <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>. Eine Eigenschaft, die als Bindungsquelle verwendet, muss keine Abhängigkeitseigenschaft sein. Wenn die Bindung bidirektionales aktualisiert, muss der Eigenschaftsquelle Lese-/ Schreibzugriff. Beachten Sie außerdem, dass das Bindungsziel, eine Abhängigkeitseigenschaft sein muss. Weitere Informationen finden Sie unter [Übersicht über die Datenbindung](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Wenn Sie es <xref:System.Windows.PropertyPath> im Zielmodus für einen Schritt für Schritt Pfad für ein Storyboardziel <xref:System.Windows.PropertyPath> ist eine Zeichenfolge, die eine *TypeName*. *PropertyName* qualifizierten darstellt.  
  
 Wenn Sie es <xref:System.Windows.PropertyPath> für einen komplexen Pfad für ein Storyboardziel <xref:System.Windows.PropertyPath.Path%2A> ist ein in Token zerlegte Zeichenfolge-Format, das die Beziehungen zwischen die verschiedenen Objekte in angegebenen beschreibt die <xref:System.Windows.PropertyPath.PathParameters%2A>.  
  
-   Jedes Element im Array wird durch den Index des Arrays für das Element in Klammern eingeschlossen, in folgendem Format angegeben. Um das erste Element im Array angegeben wird, ist das Zeichenfolgentoken, das z. B. `(0)`.  
  
-   Beziehungen zwischen Elementen (im Pfad "Schritte") werden durch einen Punkt (.) angegeben. Die Eigenschaft vor dem Punkt ist der erste Schritt im Pfad verwenden, ist die Eigenschaft nach dem der zweite Schritt usw. (Sie können mehr als zwei Schritte geben). Der letzte Schritt in der Kette stellt immer die animierte Eigenschaft dar.  
  
-   Elemente in den Sammlungseigenschaften erfolgt mit einem Indexer-Syntax, mit dem Index in eckige Klammern ([und]). Der Indexer ist additiv, auf das Token, das die Eigenschaft darstellt. Folgendes ist z. B. einen Pfad in zwei Schritten mit der Kombination aus den token im ersten Schritt das zweite Element aus, in der Auflistung der Eigenschaft angibt: `(0)[1].(1)` . Sie können nicht auf die letzte Eigenschaft in der Kette einen Indexer verwenden; Sie können nicht die tatsächliche Sammlung Position animieren, müssen Sie eine Eigenschaft für dieses Objekt animieren.  
  
 Die Zeichenfolge für den Pfad für eine <xref:System.Windows.PropertyPath> ist in der Regel durch die Konstruktoren festgelegt: die <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> -Signatur für Bindungen oder in einem Schritt Storyboardziele, die <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> Signatur für den mehrstufigen Storyboardziele.  
  
 **XAML:** Bei Verwendung einer <xref:System.Windows.PropertyPath> zum Beschreiben der Verweis auf eine Eigenschaft in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], wie Sie ein Attributwert, der die Zeichenfolge, die Sie angeben, durch einen Typkonverter zuerst behandelt wird (<xref:System.Windows.PropertyPathConverter>). Der Typkonverter verarbeitet die Zeichenfolge, und basierend auf seiner Syntax wird aufgerufen, eines der <xref:System.Windows.PropertyPath> Konstruktorsignaturen. Diese Dereferenzierung über der Typkonverter einen Attributwert zu verarbeiten ist in der Regel für die Verwendung von <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], anstatt deklarieren eine <xref:System.Windows.PropertyPath> Objekt Element anzuwenden und dann bestimmte Werte für Attribute wie z. B. <xref:System.Windows.PropertyPath.Path%2A> und <xref:System.Windows.PropertyPath.PathParameters%2A>. Weitere Informationen finden Sie unter [XAML-Syntax "PropertyPath"](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a>XAML-Text-Nutzung  
 Mitglieder der <xref:System.Windows.PropertyPath> Typ sind nicht in der Regel in einer direkten festgelegt [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PathParameters : System.Collections.ObjectModel.Collection&lt;obj&gt;" Usage="System.Windows.PropertyPath.PathParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Liste von Parametern ab, die zu verwenden sind, wenn der Pfad auf indizierte Parameter verweist.</summary>
        <value>Die Parameterliste.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften für eine <xref:System.Windows.PropertyPath> in der Regel durch die Konstruktoren festgelegt werden. Für die Einstellung <xref:System.Windows.PropertyPath.PathParameters%2A>, wird die <xref:System.Windows.PropertyPath.%23ctor%2A> Konstruktor ist sehr praktisch, da die `pathParameters` Konstruktorargument als festgelegt wurde `params`, was bedeutet, dass Sie nicht benötigen, erstellen oder ein Array für die Konstruktion dimension. Sie geben einfach jedes Element des Arrays als zusätzlicher Parameter an.  
  
 Wenn die letzte Eigenschaft, die das Ziel ist eine <xref:System.Windows.Freezable> eingeben, dieser Wert wird geklont werden. Weitere Informationen finden Sie unter [Übersicht über Storyboards](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 Die eigentliche Auswertung der Kette von erfolgt durch die Mechanismen der Storyboard-Animation. Auf der <xref:System.Windows.PropertyPath> Ebene ist, wird keine Überprüfung ausgeführt, um sicherzustellen, dass die Schritte des Pfads zu verbinden. Sie können z. B. einen Eigenschaftenpfad, die erstellen <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> als ersten Schritt und <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> als zweiten Schritt. Aber ein solcher Eigenschaftenpfad würde fehlschlagen, wenn tatsächlich als ein Ziel angewendet, da der Pinseltyp, füllt <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> verfügt nicht über eine <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> Eigenschaft. Ungültige Eigenschaftenpfade werden im Hintergrund fehl. Weitere Informationen finden Sie unter [Übersicht über Storyboards](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).  
  
 **XAML:** Bei Verwendung einer <xref:System.Windows.PropertyPath> zum Beschreiben der Verweis auf eine Eigenschaft in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], wie Sie ein Attributwert, der die Zeichenfolge, die Sie angeben, durch einen Typkonverter zuerst behandelt wird (<xref:System.Windows.PropertyPathConverter>). Der Typkonverter verarbeitet die Zeichenfolge, und basierend auf seiner Syntax wird aufgerufen, eines der <xref:System.Windows.PropertyPath> Konstruktorsignaturen. Diese Dereferenzierung über der Typkonverter einen Attributwert zu verarbeiten ist in der Regel für die Verwendung von <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], anstatt deklarieren eine <xref:System.Windows.PropertyPath> Objekt Element anzuwenden und dann bestimmte Werte für Attribute wie z. B. <xref:System.Windows.PropertyPath.Path%2A> und <xref:System.Windows.PropertyPath.PathParameters%2A>. Weitere Informationen finden Sie unter [XAML-Syntax "PropertyPath"](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a>XAML-Text-Nutzung  
 Mitglieder der <xref:System.Windows.PropertyPath> Typ sind nicht in der Regel in einer direkten festgelegt [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Syntax. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>