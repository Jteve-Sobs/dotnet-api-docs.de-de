<Type Name="DataTemplate" FullName="System.Windows.DataTemplate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9d2ddf4ea7f33aba55842246919d0ef82c017f06" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82487283" /></Metadata><TypeSignature Language="C#" Value="public class DataTemplate : System.Windows.FrameworkTemplate" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplate extends System.Windows.FrameworkTemplate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DataTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplate&#xA;Inherits FrameworkTemplate" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplate : System::Windows::FrameworkTemplate" />
  <TypeSignature Language="F#" Value="type DataTemplate = class&#xA;    inherit FrameworkTemplate" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.FrameworkTemplate</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Beschreibt die visuelle Struktur eines Datenobjekts.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie verwenden eine <xref:System.Windows.DataTemplate>, um die Visualisierung der Datenobjekte anzugeben. <xref:System.Windows.DataTemplate> Objekte sind besonders nützlich, wenn Sie eine <xref:System.Windows.Controls.ItemsControl>, z. b. eine <xref:System.Windows.Controls.ListBox>, an eine gesamte Auflistung binden. Ohne bestimmte Anweisungen wird in einem <xref:System.Windows.Controls.ListBox> die Zeichen folgen Darstellung der Objekte in einer Auflistung angezeigt. In diesem Fall können Sie eine <xref:System.Windows.DataTemplate> verwenden, um die Darstellung der Datenobjekte zu definieren. Der Inhalt Ihrer <xref:System.Windows.DataTemplate> wird zur visuellen Struktur der Datenobjekte.  
  
 Eine ausführliche Erläuterung finden Sie unter [Übersicht über Daten](~/docs/framework/wpf/data/data-templating-overview.md)Vorlagen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Windows.DataTemplate> Inline erstellt wird. Der <xref:System.Windows.DataTemplate> gibt an, dass jedes Datenelement in einem <xref:System.Windows.Controls.StackPanel>als drei <xref:System.Windows.Controls.TextBlock> Elemente angezeigt wird. In diesem Beispiel ist das Datenobjekt eine Klasse mit dem Namen `Task`. Beachten Sie, dass jedes <xref:System.Windows.Controls.TextBlock>-Element in dieser Vorlage an eine Eigenschaft der `Task`-Klasse gebunden ist.  
  
 [!code-xaml[DataTemplatingIntro_snip#Inline](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#inline)]  
  
 Es kommt häufiger vor, dass ein <xref:System.Windows.DataTemplate> im Abschnitt "Resources" definiert wird, sodass es sich um ein wiederverwendbares Objekt handeln kann, wie im folgenden Beispiel gezeigt:  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#AsResource](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#asresource)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 Sie können `myTaskTemplate` nun als Ressource verwenden, wie im folgenden Beispiel veranschaulicht:  
  
 [!code-xaml[DataTemplatingIntro_snip#MyTaskTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#mytasktemplate)]  
  
 Das vollständige Beispiel finden Sie unter [Einführung in das Datenvorlagenbeispiel](https://github.com/Microsoft/WPF-Samples/tree/master/Data%20Binding/DataTemplatingIntro).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.Binding" />
    <altmember cref="T:System.Windows.Controls.DataTemplateSelector" />
    <altmember cref="T:System.Windows.HierarchicalDataTemplate" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=163703">Demo für die Datenbindung</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.DataTemplate" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.DataTemplate" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplate (object dataType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object dataType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dataType As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplate(System::Object ^ dataType);" />
      <MemberSignature Language="F#" Value="new System.Windows.DataTemplate : obj -&gt; System.Windows.DataTemplate" Usage="new System.Windows.DataTemplate dataType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dataType" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataType">Wenn die Vorlage für Objektdaten bestimmt ist, ist dies der Typname des Datenobjekts.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.DataTemplate" />-Klasse mit der angegebenen <see cref="P:System.Windows.DataTemplate.DataType" />-Eigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um auf den Typnamen der Klasse zu verweisen, verwenden Sie die [x:Type-Markup Erweiterung](~/docs/framework/xaml-services/x-type-markup-extension.md). Wenn die Vorlage für [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] Daten bestimmt ist, ist dies die Zeichenfolge, die den Tagnamen der Daten darstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTemplateKey">
      <MemberSignature Language="C#" Value="public object DataTemplateKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataTemplateKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataTemplateKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataTemplateKey As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataTemplateKey { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataTemplateKey : obj" Usage="System.Windows.DataTemplate.DataTemplateKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Standardschlüssel der <see cref="T:System.Windows.DataTemplate" /> ab.</summary>
        <value>Der Standardschlüssel von <see cref="T:System.Windows.DataTemplate" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie die [x:Key-Direktive](~/docs/framework/xaml-services/x-key-directive.md) nicht für eine <xref:System.Windows.DataTemplate> festlegen, die sich in einem <xref:System.Windows.ResourceDictionary>befindet, wird der <xref:System.Windows.DataTemplate.DataTemplateKey%2A> als Schlüssel verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public object DataType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.DataType" />
      <MemberSignature Language="VB.NET" Value="Public Property DataType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataType { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataType : obj with get, set" Usage="System.Windows.DataTemplate.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen des Typs, für den diese <see cref="T:System.Windows.DataTemplate" /> vorgesehen ist.</summary>
        <value>Standardwert: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ähnelt der <xref:System.Windows.Style.TargetType%2A>-Eigenschaft der <xref:System.Windows.Style>-Klasse. Wenn Sie diese Eigenschaft auf den-Datentyp festlegen, ohne einen `x:Key`anzugeben, wird der <xref:System.Windows.DataTemplate> automatisch auf Datenobjekte dieses Typs angewendet. Beachten Sie, dass die `x:Key` implizit festgelegt wird. Wenn Sie diese <xref:System.Windows.DataTemplate> einem `x:Key` Wert zuweisen, überschreiben Sie daher die impliziten `x:Key`, und der <xref:System.Windows.DataTemplate> wird nicht automatisch angewendet.  
  
 Beachten Sie auch Folgendes: Wenn Sie eine <xref:System.Windows.Controls.ContentControl> an eine Auflistung von `Task` Objekten binden, verwendet der <xref:System.Windows.Controls.ContentControl> den <xref:System.Windows.DataTemplate> nicht automatisch. Dies liegt daran, dass die Bindung einer <xref:System.Windows.Controls.ContentControl> mehr Informationen erfordert, um zu unterscheiden, ob Sie eine Bindung an eine gesamte Auflistung oder die einzelnen Objekte vornehmen möchten. Wenn Ihr <xref:System.Windows.Controls.ContentControl> die Auswahl eines <xref:System.Windows.Controls.ItemsControl> Typs nachverfolgt, können Sie die <xref:System.Windows.Data.Binding.Path%2A>-Eigenschaft der <xref:System.Windows.Controls.ContentControl> Bindung auf "`/`" festlegen, um anzugeben, dass Sie am aktuellen Element interessiert sind. Ein Beispiel finden Sie unter Gewusst [wie: Binden an eine Auflistung und Anzeigen von Informationen auf Grundlage der Auswahl](~/docs/framework/wpf/data/how-to-bind-to-a-collection-and-display-information-based-on-selection.md). Andernfalls müssen Sie den <xref:System.Windows.DataTemplate> explizit angeben, indem Sie die <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>-Eigenschaft festlegen.  
  
 Die <xref:System.Windows.DataTemplate.DataType%2A>-Eigenschaft ist besonders nützlich, wenn Sie über eine <xref:System.Windows.Data.CompositeCollection> unterschiedlicher Typen von Datenobjekten verfügen.  
  
 Wenn diese Eigenschaft ein XML-Element als Ziel hat, das sich nicht im Standard Namespace befindet, müssen Sie dem Elementnamen den Namespace oder einen Namespace Kenn Zeichner voranstellen. Für XML, das über LINQ for XML verfügbar gemacht wird, wird der Namespace in geschweiften Klammern angezeigt, der eine Escapesequenz für geschweifte Klammern  
  
```xaml  
<DataTemplate DataType="{}{http://myNamespace}Details">  
```  
  
 Bei XML, das über XPath verfügbar gemacht wird, wird dem Elementnamen ein Namespace Kenn Zeichner vorangestellt, der von einer Instanz von <xref:System.Windows.Data.XmlNamespaceMapping>festgelegt wird:  
  
```xaml  
<DataTemplate DataType="mn:Details">  
```  
  
<a name="xamlAttributeUsage_DataType"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object DataType="typeName"/>  
```  
  
<a name="xamlValues_DataType"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *typeName*  
 Wenn die Vorlage für Objektdaten bestimmt ist, enthält diese Eigenschaft den Typnamen des Datenobjekts (als Zeichenfolge). Um auf den Typnamen der Klasse zu verweisen, verwenden Sie die [x:Type-Markup Erweiterung](~/docs/framework/xaml-services/x-type-markup-extension.md). Wenn die Vorlage für [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] Daten bestimmt ist, enthält diese Eigenschaft den XML-Elementnamen. Ausführliche Informationen zum Angeben eines nicht standardmäßigen Namespace für das XML-Element finden Sie in der Dokumentations Hinweise.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Einführung in das Beispiel für Datenvorlagen</related>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DataTemplate.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.DataTemplate.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.Markup.DependsOn("VisualTree")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1;net-5.0">
          <AttributeName>System.Windows.Markup.DependsOn("Template")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Triggern ab, die Eigenschaftswerte anwenden oder Aktionen anhand einer oder mehrerer Bedingungen ausführen.</summary>
        <value>Eine Auflistung von Triggerobjekten. Standardwert: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn Sie Trigger innerhalb einer Daten Vorlage erstellen, sollten die Setter der Trigger Eigenschaften festlegen, die innerhalb des Gültigkeits Bereichs der Daten Vorlage liegen. Andernfalls ist es möglicherweise besser, Trigger mithilfe eines Stils zu erstellen, der auf den Typ abzielt, der die Daten enthält. Wenn Sie z. b. ein <xref:System.Windows.Controls.ListBox> Steuerelement binden, sind die Container <xref:System.Windows.Controls.ListBoxItem> Objekte. Wenn Sie-Trigger verwenden, um Eigenschaften festzulegen, die sich nicht im Bereich der <xref:System.Windows.DataTemplate>befinden, ist es möglicherweise besser, einen <xref:System.Windows.Controls.ListBoxItem> Stil zu erstellen und Trigger innerhalb dieses Stils zu erstellen. Weitere Informationen finden Sie unter Was gehört zu einem DataTemplate? in der [Übersicht über Daten](~/docs/framework/wpf/data/data-templating-overview.md)Vorlagen.  
  
> [!NOTE]
>  Diese Eigenschaft kann nur in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] über die angezeigte Auflistungs Syntax oder durch Zugriff auf das Auflistungs Objekt und mithilfe der verschiedenen Methoden (z. b. Add) festgelegt werden. Die-Eigenschaft für den Zugriff auf das Auflistungs Objekt selbst ist schreibgeschützt, die Auflistung selbst hat Lese-/Schreibzugriff.  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.Triggers>  
    OneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *Oneormoretriggers*  
 0 (null) oder mehr <xref:System.Windows.TriggerBase>-Objekten.  
  
   
  
## Examples  
 Im folgenden <xref:System.Windows.DataTemplate> wird die Verwendung der <xref:System.Windows.DataTemplate.Triggers%2A>-Eigenschaft veranschaulicht.  
  
 [!code-xaml[DataBindingLab#AuctionItemDataTemplate](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/DataBindingLabApp.xaml#auctionitemdatatemplate)]  
  
 Das komplette Beispiel finden Sie unter [Demo zur Datenbindung](https://go.microsoft.com/fwlink/?LinkID=163703).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.DataTrigger" />
        <altmember cref="T:System.Windows.MultiDataTrigger" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160009">Einführung in das Beispiel für Datenvorlagen</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateTemplatedParent">
      <MemberSignature Language="C#" Value="protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ValidateTemplatedParent(class System.Windows.FrameworkElement templatedParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ValidateTemplatedParent (templatedParent As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ValidateTemplatedParent(System::Windows::FrameworkElement ^ templatedParent);" />
      <MemberSignature Language="F#" Value="override this.ValidateTemplatedParent : System.Windows.FrameworkElement -&gt; unit" Usage="dataTemplate.ValidateTemplatedParent templatedParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="templatedParent" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="templatedParent">Das Element, auf das diese Vorlage angewendet wird.</param>
        <summary>Vergleicht das auf Vorlagen basierende übergeordnete Element mit einer Reihe von Regeln.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die-Methode verwendet die folgenden Regeln:  
  
-   Der `templatedParent` muss ein <xref:System.Windows.FrameworkElement>sein, der nicht NULL ist.  
  
-   Der <xref:System.Windows.DataTemplate> muss auf eine <xref:System.Windows.Controls.ContentPresenter>angewendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
