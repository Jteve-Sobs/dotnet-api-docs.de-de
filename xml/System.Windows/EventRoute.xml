<Type Name="EventRoute" FullName="System.Windows.EventRoute">
  <TypeSignature Language="C#" Value="public sealed class EventRoute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EventRoute extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventRoute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EventRoute" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventRoute sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d260c-101">Stellt den Container für die Route eines Routingereignisses dar.</span><span class="sxs-lookup"><span data-stu-id="d260c-101">Represents the container for the route to be followed by a routed event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d260c-102">Diese Klasse entspricht einem gültigen <xref:System.Windows.RoutedEvent>, und enthält eine geordnete Liste von Paaren aus Ziel und Ereignishandler, die auf der Ereignisroute für dieses Ereignis verweisen.</span><span class="sxs-lookup"><span data-stu-id="d260c-102">This class corresponds to a valid <xref:System.Windows.RoutedEvent>, and contains an ordered list of target object and handler list pairs that refer to the event route for that event.</span></span> <span data-ttu-id="d260c-103"><xref:System.Windows.EventRoute> unterstützt das Hinzufügen von neuen Einträge der Liste, und ermöglicht das für die Handler in der Liste, aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="d260c-103"><xref:System.Windows.EventRoute> supports adding new entries to the list and also allows for the handlers in the list to be invoked.</span></span>  
  
 <span data-ttu-id="d260c-104">Die meisten normalen Vorgänge zum Hinzufügen von Handlern für [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Ereignisse erfordern keine Arbeiten mit dieser Klasse (verwenden Sie z. B. <xref:System.Windows.EventManager> Methoden zum Hinzufügen von Klassenbehandlung oder Abfragen für vorhandene Handler eines Ereignisses).</span><span class="sxs-lookup"><span data-stu-id="d260c-104">Most normal operations for adding handlers for [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] events do not require working with this class (for instance, use <xref:System.Windows.EventManager> methods to add class handling, or query for existing handlers of an event).</span></span> <span data-ttu-id="d260c-105">Diese Klasse ist hauptsächlich für die Verwendung auf, wenn Elemente, bestimmte Informationen zu untergeordneten oder übergeordneten Elementen, die es praktikabel ist aufweisen, Elemente hinzufügen oder entfernen Sie Elemente aus der berechneten Ereignis Standardroute machen.</span><span class="sxs-lookup"><span data-stu-id="d260c-105">This class is mainly for use when elements have particular knowledge about child elements or parent elements that make it practical to either add elements to or remove elements from the default calculated event route.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventRoute (System.Windows.RoutedEvent routedEvent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.#ctor(System.Windows.RoutedEvent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventRoute(System::Windows::RoutedEvent ^ routedEvent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
      </Parameters>
      <Docs>
        <param name="routedEvent"><span data-ttu-id="d260c-106">Der Ereignisbezeichner, der nicht NULL ist und dieser Ereignisroute zugeordnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d260c-106">The non-NULL event identifier to be associated with this event route.</span></span></param>
        <summary><span data-ttu-id="d260c-107">Initialisiert eine Instanz der <see cref="T:System.Windows.EventRoute" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="d260c-107">Initializes an instance of the <see cref="T:System.Windows.EventRoute" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (object target, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(object target, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.Add(System.Object,System.Delegate,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (target As Object, handler As Delegate, handledEventsToo As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Object ^ target, Delegate ^ handler, bool handledEventsToo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="d260c-108">Gibt das Zielobjekt an, für das der Handler der Route hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d260c-108">Specifies the target object of which the handler is to be added to the route.</span></span></param>
        <param name="handler"><span data-ttu-id="d260c-109">Gibt den Handler an, der der Route hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d260c-109">Specifies the handler to be added to the route.</span></span></param>
        <param name="handledEventsToo"><span data-ttu-id="d260c-110">Gibt an, ob der Listener Ereignisse erkennt, die bereits behandelt wurden.</span><span class="sxs-lookup"><span data-stu-id="d260c-110">Indicates whether or not the listener detects events that have already been handled.</span></span></param>
        <summary><span data-ttu-id="d260c-111">Fügt der Route den angegebenen Handler für das angegebene Ziel hinzu.</span><span class="sxs-lookup"><span data-stu-id="d260c-111">Adds the specified handler for the specified target to the route.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d260c-112">Es ist kein Fehler um einen Handler für eine bestimmte Zielinstanz zweimal hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="d260c-112">It is not an error to add a handler for a particular target instance twice.</span></span> <span data-ttu-id="d260c-113">In diesem Fall wird der Handler zweimal aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="d260c-113">In such a case, the handler will be called twice.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchNode">
      <MemberSignature Language="C#" Value="public object PeekBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d260c-114">Gibt das oberste Element im Ereignisroutenstapel zurück, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-114">Returns the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="d260c-115">Das oberste Element im Ereignisroutenstapel, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-115">The top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PeekBranchSource">
      <MemberSignature Language="C#" Value="public object PeekBranchSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PeekBranchSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PeekBranchSource" />
      <MemberSignature Language="VB.NET" Value="Public Function PeekBranchSource () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PeekBranchSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d260c-116">Gibt die Quelle für das oberste Element im Ereignisroutenstapel zurück, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-116">Returns the source for the top-most element on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="d260c-117">Die Quelle für das oberste Element im Ereignisroutenstapel, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-117">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PopBranchNode">
      <MemberSignature Language="C#" Value="public object PopBranchNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object PopBranchNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PopBranchNode" />
      <MemberSignature Language="VB.NET" Value="Public Function PopBranchNode () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ PopBranchNode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d260c-118">Gibt den obersten Knoten im Ereignisroutenstapel zurück, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-118">Returns the top-most node on the event route stack at which two logical trees diverge.</span></span></summary>
        <returns><span data-ttu-id="d260c-119">Der oberste Knoten im Ereignisroutenstapel, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-119">The top-most node on the event route stack at which two logical trees diverge.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PushBranchNode">
      <MemberSignature Language="C#" Value="public void PushBranchNode (object node, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushBranchNode(object node, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventRoute.PushBranchNode(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushBranchNode (node As Object, source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushBranchNode(System::Object ^ node, System::Object ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Object" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node"><span data-ttu-id="d260c-120">Das oberste Element im Ereignisroutenstapel, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-120">The top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <param name="source"><span data-ttu-id="d260c-121">Die Quelle für das oberste Element im Ereignisroutenstapel, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-121">The source for the top-most element on the event route stack at which two logical trees diverge.</span></span></param>
        <summary><span data-ttu-id="d260c-122">Fügt den obersten Knoten dem Ereignisroutenstapel hinzu, in dem zwei logische Strukturen voneinander abweichen.</span><span class="sxs-lookup"><span data-stu-id="d260c-122">Adds the top-most node to the event route stack at which two logical trees diverge.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>