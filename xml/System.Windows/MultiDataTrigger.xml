<Type Name="MultiDataTrigger" FullName="System.Windows.MultiDataTrigger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba6cebb6e7bdb133af0994098d100a833fdef91d" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70602102" /></Metadata><TypeSignature Language="C#" Value="public sealed class MultiDataTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MultiDataTrigger extends System.Windows.TriggerBase implements class System.Windows.Markup.IAddChild" />
  <TypeSignature Language="DocId" Value="T:System.Windows.MultiDataTrigger" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MultiDataTrigger&#xA;Inherits TriggerBase&#xA;Implements IAddChild" />
  <TypeSignature Language="C++ CLI" Value="public ref class MultiDataTrigger sealed : System::Windows::TriggerBase, System::Windows::Markup::IAddChild" />
  <TypeSignature Language="F#" Value="type MultiDataTrigger = class&#xA;    inherit TriggerBase&#xA;    interface IAddChild" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.TriggerBase</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Markup.IAddChild</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Markup.ContentProperty("Setters")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt einen Trigger dar, der Eigenschaftswerte anwendet oder Aktionen ausführt, wenn gebundene Daten einen Satz von Bedingungen erfüllen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.MultiDataTrigger> -Objekt ähnelt einem <xref:System.Windows.MultiTrigger>, mit dem Unterschied <xref:System.Windows.MultiDataTrigger> , dass die Bedingungen eines auf Eigenschafts Werten gebundener Daten anstatt auf einer <xref:System.Windows.UIElement>basieren. In einer <xref:System.Windows.MultiDataTrigger>ist eine Bedingung erfüllt, wenn der-Eigenschafts Wert des Datenelements mit dem <xref:System.Windows.Condition.Value%2A>angegebenen übereinstimmt. Anschließend können Sie mithilfe von Settern oder <xref:System.Windows.TriggerBase.EnterActions%2A> der <xref:System.Windows.TriggerBase.ExitActions%2A> -Eigenschaft und der-Eigenschaft Änderungen anwenden oder Aktionen starten, wenn alle Bedingungen erfüllt sind.  
  
 Die <xref:System.Windows.MultiDataTrigger.Setters%2A> -Eigenschaft <xref:System.Windows.MultiDataTrigger> eines- <xref:System.Windows.Setter> Objekts kann nur aus-Objekten bestehen. Wenn Sie <xref:System.Windows.Setter> einem- <xref:System.Windows.MultiDataTrigger> Objekt ein untergeordnetes Element hinzufügen <xref:System.Windows.SetterBaseCollection> , wird <xref:System.Windows.MultiDataTrigger> dieses implizit dem für das-Objekt hinzugefügt <xref:System.Windows.EventSetter>Objekte werden nicht unterstützt. unter <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> stützt <xref:System.Windows.EventSetter>  nur-Objekte.  
  
 Informationen dazu, wann Trigger verwendet werden sollten und wann andere Techniken verwendet werden sollten, finden Sie unter [Übersicht über Daten](~/docs/framework/wpf/data/data-templating-overview.md)Vorlagen.  
  
   
  
## Examples  
 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Im folgenden Beispiel <xref:System.Windows.Controls.ListBox> wird die-Eigenschaft von an `Places`gebunden, eine <xref:System.Collections.ObjectModel.ObservableCollection%601> von `Place` -Objekten. `Place`-Objekte verfügen `Name` über `State`Eigenschaften und. Die Definition von `Place` und `Places` werden nicht angezeigt.  
  
 Jede <xref:System.Windows.Controls.ListBoxItem> der- <xref:System.Windows.Controls.ListBox> Objekte zeigt `Place` ein-Objekt an. Der <xref:System.Windows.Style> im Beispiel wird auf jeden <xref:System.Windows.Controls.ListBoxItem>angewendet. Die <xref:System.Windows.Condition> Elemente `Place` `Name` `OR` `State` `Portland` des- <xref:System.Windows.Controls.ListBoxItem>  Elements geben an, dass der Hintergrund des entsprechenden festgelegt wird, wenn der und des Datenelements bzw. sind. <xref:System.Windows.MultiDataTrigger> an `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.TriggerBase" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MultiDataTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MultiDataTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.MultiDataTrigger" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Conditions">
      <MemberSignature Language="C#" Value="public System.Windows.ConditionCollection Conditions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ConditionCollection Conditions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Conditions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Conditions As ConditionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ConditionCollection ^ Conditions { System::Windows::ConditionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Conditions : System.Windows.ConditionCollection" Usage="System.Windows.MultiDataTrigger.Conditions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ConditionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Condition" />-Objekten ab. Änderungen an Eigenschaftswerten werden angewendet, wenn alle Bedingungen in der Auflistung erfüllt werden.</summary>
        <value>Eine Auflistung von <see cref="T:System.Windows.Condition" />-Objekten. Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.MultiDataTrigger> -Objekt ähnelt einem <xref:System.Windows.MultiTrigger>, mit dem Unterschied <xref:System.Windows.MultiDataTrigger> , dass die Bedingungen eines auf Eigenschafts Werten gebundener Daten anstatt auf einer <xref:System.Windows.UIElement>basieren. In einer <xref:System.Windows.MultiDataTrigger>ist eine Bedingung erfüllt, wenn der-Eigenschafts Wert des Datenelements mit dem <xref:System.Windows.Condition.Value%2A>angegebenen übereinstimmt. Dieser Wert wird nach Möglichkeit zuerst in den Typ des Werts der Bindung konvertiert. Anschließend werden die beiden Werte mithilfe der `Object.Equals` -Methode verglichen. Wendet die zugeordneten Setter oder Aktionen an, wenn alle Bedingungen erfüllt sind (binärer `AND` Vorgang). <xref:System.Windows.MultiTrigger>  
  
 Bei einem <xref:System.Windows.MultiDataTrigger>muss jede Bedingung in der Auflistung sowohl die-Eigenschaft <xref:System.Windows.Condition.Binding%2A> als <xref:System.Windows.Condition.Value%2A> auch die-Eigenschaft festlegen. Weitere Informationen finden Sie unter <xref:System.Windows.Condition.Binding%2A>.  
  
<a name="xamlPropertyElementUsage_Conditions"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.Conditions>  
    zeroOrMoreConditions  
  </object.Conditions>  
</object>  
```  
  
<a name="xamlValues_Conditions"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *zeroormoreconditions*  
 NULL oder mehr <xref:System.Windows.Condition> -Objekte.  
  
   
  
## Examples  
 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Im folgenden Beispiel <xref:System.Windows.Controls.ListBox> wird die-Eigenschaft von an `Places`gebunden, eine <xref:System.Collections.ObjectModel.ObservableCollection%601> von `Place` -Objekten. `Place`-Objekte verfügen `Name` über `State`Eigenschaften und. Die Definition von `Place` und `Places` werden nicht angezeigt.  
  
 Jede <xref:System.Windows.Controls.ListBoxItem> der- <xref:System.Windows.Controls.ListBox> Objekte zeigt `Place` ein-Objekt an. Der <xref:System.Windows.Style> im Beispiel wird auf jeden <xref:System.Windows.Controls.ListBoxItem>angewendet. Die <xref:System.Windows.Condition> Elemente `Place` `Name` `OR` `State` `Portland` des- <xref:System.Windows.Controls.ListBoxItem>  Elements geben an, dass der Hintergrund des entsprechenden festgelegt wird, wenn der und des Datenelements bzw. sind. <xref:System.Windows.MultiDataTrigger> an `Cyan`.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="Setters">
      <MemberSignature Language="C#" Value="public System.Windows.SetterBaseCollection Setters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.SetterBaseCollection Setters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.MultiDataTrigger.Setters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Setters As SetterBaseCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::SetterBaseCollection ^ Setters { System::Windows::SetterBaseCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Setters : System.Windows.SetterBaseCollection" Usage="System.Windows.MultiDataTrigger.Setters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.SetterBaseCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten ab, die die Eigenschaftswerte beschreiben, die angewendet werden sollen, wenn alle Bedingungen des <see cref="T:System.Windows.MultiDataTrigger" /> erfüllt wurden.</summary>
        <value>Eine Auflistung von <see cref="T:System.Windows.Setter" />-Objekten. Der Standardwert ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.MultiDataTrigger>ermöglicht das Starten von Aktionen mithilfe der- <xref:System.Windows.TriggerBase.EnterActions%2A> Eigenschaft <xref:System.Windows.TriggerBase.ExitActions%2A> oder der-Eigenschaft oder, um Eigenschafts <xref:System.Windows.Setter> Werte mithilfe von-Objekten festzulegen, wenn die gebundenen Daten eine Reihe von Bedingungen erfüllen.  
  
 Wenn sich zwei <xref:System.Windows.Setter> Objekte in derselben oder in unterschiedlichen Setter-Auflistungen befinden, die <xref:System.Windows.Setter> dieselbe Eigenschaft festlegen, wird der zuletzt deklarierte Wert verwendet.  
  
 Wenn Sie <xref:System.Windows.Setter> einem- <xref:System.Windows.MultiDataTrigger> Objekt ein untergeordnetes Element hinzufügen <xref:System.Windows.SetterBaseCollection> , wird <xref:System.Windows.MultiDataTrigger> dieses implizit dem für das-Objekt hinzugefügt <xref:System.Windows.EventSetter>Objekte werden nicht unterstützt. unter <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> stützt <xref:System.Windows.EventSetter>  nur-Objekte.  
  
<a name="xamlPropertyElementUsage_Setters"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
    zeroOrMoreSetters  
</object>  
```  
  
<a name="xamlValues_Setters"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *zeroormoresetters*  
 NULL oder mehr <xref:System.Windows.Setter> -Objekte.  
  
   
  
## Examples  
 <xref:System.Windows.Controls.ItemsControl.ItemsSource%2A> Im folgenden Beispiel <xref:System.Windows.Controls.ListBox> wird die-Eigenschaft von an `Places`gebunden, eine <xref:System.Collections.ObjectModel.ObservableCollection%601> von `Place` -Objekten. `Place`-Objekte verfügen `Name` über `State`Eigenschaften und. Die Definition von `Place` und `Places` werden nicht angezeigt.  
  
 Jede <xref:System.Windows.Controls.ListBoxItem> der- <xref:System.Windows.Controls.ListBox> Objekte zeigt `Place` ein-Objekt an. Der <xref:System.Windows.Style> im Beispiel wird auf jeden <xref:System.Windows.Controls.ListBoxItem>angewendet. Die <xref:System.Windows.Condition> Elemente `Place` `Name` `OR` `State` `Portland` des- <xref:System.Windows.Controls.ListBoxItem>  Elements geben an, dass der Hintergrund des entsprechenden festgelegt wird, wenn der und des Datenelements bzw. sind. <xref:System.Windows.MultiDataTrigger> an `Cyan`.  
  
 Beachten Sie `<MultiDataTrigger.Setters>` , dass implizit ist.  
  
 [!code-xaml[DataTrigger#1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTrigger/CSharp/Window1.xaml#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.MultiDataTrigger.Setters" />
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddChild">
      <MemberSignature Language="C#" Value="void IAddChild.AddChild (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddChild(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub AddChild (value As Object) Implements IAddChild.AddChild" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddChild(System::Object ^ value) = System::Windows::Markup::IAddChild::AddChild;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddChild(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Das hinzuzufügende untergeordnete Objekt.</param>
        <summary>Fügt ein untergeordnetes Objekt hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.MultiDataTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IAddChild.AddText">
      <MemberSignature Language="C#" Value="void IAddChild.AddText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Markup.IAddChild.AddText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.MultiDataTrigger.System#Windows#Markup#IAddChild#AddText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub AddText (text As String) Implements IAddChild.AddText" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Markup.IAddChild.AddText(System::String ^ text) = System::Windows::Markup::IAddChild::AddText;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IAddChild.AddText(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Der dem Objekt hinzuzufügende Text.</param>
        <summary>Fügt dem Objekt den Textinhalt eines Knotens hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung. Er kann nur verwendet werden, wenn die <xref:System.Windows.MultiDataTrigger>-Instanz in eine <xref:System.Windows.Markup.IAddChild>-Schnittstelle umgewandelt wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
