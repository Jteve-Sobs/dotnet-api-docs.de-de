<Type Name="IDataObject" FullName="System.Windows.IDataObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="284408a6101f6c3952c64b44121bdc0224e59ffe" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004023" /></Metadata><TypeSignature Language="C#" Value="public interface IDataObject" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.IDataObject" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataObject" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataObject" />
  <TypeSignature Language="F#" Value="type IDataObject = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Bietet einen formatunabhängigen Mechanismus zum Übertragen von Daten.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.IDataObject> Schnittstelle wird verwendet, durch die <xref:System.Windows.Clipboard> -Klasse für die Daten wie Drag & Drop-Vorgänge.  
  
 Bei der Implementierung durch eine Klasse, die <xref:System.Windows.IDataObject> Methoden können Sie ein einzelnes Datenobjekt Daten in mehreren Formaten bieten.  Daten in mehreren Formaten bieten meist stellen die Daten von einer größeren Vielzahl von Anwendungen als verwendet werden kann, wenn nur ein einziges Datenformat unterstützt wurden.  
  
 Die <xref:System.Windows.DataObject> -Klasse bietet eine grundlegende Implementierung der <xref:System.Windows.IDataObject> Schnittstelle.  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
  </Docs>
  <Members>
    <MemberGroup MemberName="GetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ruft ein Datenobjekt in einem angegebenen Datenformat ab.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die angibt, welches format die Daten abgerufen werden sollen. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für einen Satz vordefinierter Datenformate.</param>
        <summary>Ruft ein Datenobjekt in einem angegebenen Format ab; das Datenformat wird durch eine Zeichenfolge angegeben.</summary>
        <returns>Ein Datenobjekt mit dem Daten im angegebenen Format, oder **null**, wenn die Daten nicht im angegebenen Format verfügbar sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetData : Type -&gt; obj" Usage="iDataObject.GetData format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Ein <see cref="T:System.Type" /> Objekt, das angibt, welches format die Daten abgerufen werden sollen. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für einen Satz vordefinierter Datenformate.</param>
        <summary>Ruft ein Datenobjekt in einem angegebenen Format ab; das Format der Daten gemäß einem <see cref="T:System.Type" /> Objekt.</summary>
        <returns>Ein Datenobjekt mit dem Daten im angegebenen Format, oder **null**, wenn die Daten nicht im angegebenen Format verfügbar sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="public object GetData (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetData(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetData(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetData (format As String, autoConvert As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetData(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetData : string * bool -&gt; obj" Usage="iDataObject.GetData (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die angibt, welches format die Daten abgerufen werden sollen. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für einen Satz vordefinierter Datenformate.</param>
        <param name="autoConvert"><see langword="true" /> um zu versuchen, die Daten automatisch in das angegebene Format zu konvertieren; <see langword="false" /> für keine datenformatkonvertierung.  
  
Wenn dieser Parameter ist <see langword="false" />, die Methode gibt Daten zurück, in dem angegebenen Format, falls verfügbar, oder <see langword="null" /> , wenn die Daten nicht im angegebenen Format verfügbar ist.</param>
        <summary>Ruft ein Datenobjekt in einem angegebenen Format, konvertiert die Daten optional in das angegebene Format ab.</summary>
        <returns>Ein Datenobjekt mit dem Daten im angegebenen Format, oder **null**, wenn die Daten nicht im angegebenen Format verfügbar sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetData%2A>.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataPresent">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Überprüft, ob die Daten in verfügbar ist, oder eine angegebene Format konvertiert werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie **GetDataPresent** zu bestimmen, ob es sich bei ein angegebenen Format in diesem Datenobjekt vor dem Aufruf steht <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Rufen Sie <xref:System.Windows.IDataObject.GetFormats%2A> um eine Liste aller Formate zu erhalten, die in diesem Datenobjekt verfügbar sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die um zu suchende zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für eine Reihe von vordefinierten Datenformaten.</param>
        <summary>Überprüft, ob die Daten in verfügbar ist, oder eine angegebene Format konvertiert werden können. das Datenformat wird durch eine Zeichenfolge angegeben.</summary>
        <returns><see langword="true" /> Wenn die Daten befindet sich in oder in das angegebene Format konvertiert werden können. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Rufen Sie **GetDataPresent** zu bestimmen, ob es sich bei ein angegebenen Format in diesem Datenobjekt vor dem Aufruf steht <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Rufen Sie <xref:System.Windows.IDataObject.GetFormats%2A> um eine Liste aller Formate zu erhalten, die in diesem Datenobjekt verfügbar sind.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (Type format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(class System.Type format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(Type ^ format);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : Type -&gt; bool" Usage="iDataObject.GetDataPresent format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="format">Ein <see cref="T:System.Type" /> , die um zu suchende zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für einen Satz vordefinierter Datenformate.</param>
        <summary>Überprüft, ob die Daten in verfügbar ist, oder eine angegebene Format konvertiert werden können. Das Format der Daten gemäß einem <see cref="T:System.Type" /> Objekt.</summary>
        <returns><see langword="true" /> Wenn die Daten befindet sich in oder in das angegebene Format konvertiert werden können. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Rufen Sie **GetDataPresent** zu bestimmen, ob es sich bei ein angegebenen Format in diesem Datenobjekt vor dem Aufruf steht <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Rufen Sie <xref:System.Windows.IDataObject.GetFormats%2A> um eine Liste aller Formate zu erhalten, die in diesem Datenobjekt verfügbar sind.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <Member MemberName="GetDataPresent">
      <MemberSignature Language="C#" Value="public bool GetDataPresent (string format, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetDataPresent(string format, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetDataPresent(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDataPresent (format As String, autoConvert As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetDataPresent(System::String ^ format, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetDataPresent : string * bool -&gt; bool" Usage="iDataObject.GetDataPresent (format, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die um zu suchende zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für eine Reihe von vordefinierten Datenformaten.</param>
        <param name="autoConvert"><see langword="false" /> Um nur für das angegebene Format zu überprüfen. <see langword="true" /> auch überprüfen, ob in diesem Datenobjekt gespeicherte Daten in das angegebene Format konvertiert werden können.</param>
        <summary>Überprüft, ob die Daten in verfügbar ist, oder eine angegebene Format konvertiert werden können. Ein <see langword="Boolean" /> Flag gibt an, ob überprüfen, ob die Daten in das angegebene Format konvertiert werden können, wenn sie nicht in diesem Format verfügbar ist.</summary>
        <returns><see langword="true" /> Wenn die Daten befindet sich in oder in das angegebene Format konvertiert werden können. andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetDataPresent%2A>.  
  
 Rufen Sie **GetDataPresent** zu bestimmen, ob es sich bei ein angegebenen Format in diesem Datenobjekt vor dem Aufruf steht <xref:System.Windows.IDataObject.GetData%2A>.  
  
 Rufen Sie <xref:System.Windows.IDataObject.GetFormats%2A> um eine Liste aller Formate zu erhalten, die in diesem Datenobjekt verfügbar sind.  
  
 Diese Methode gibt `true` bei:  
  
-   Die *AutoConvert* Parameter `true` und die Daten im angegebenen Format, oder er kann in das angegebene Format konvertiert werden.  
  
-   Die *AutoConvert* Parameter `false` und die Daten im angegebenen Format.  
  
 Diese Methode gibt `false` bei:  
  
-   Die *AutoConvert* Parameter `true` und die Daten ist nicht im angegebenen Format verfügbar und können nicht in das angegebene Format konvertiert werden.  
  
-   Die *AutoConvert* Parameter `false`, und die Daten sind nicht im angegebenen Format verfügbar.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160014">Laden Sie ein Beispiel für abgelegten Dateien</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetFormats">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Liste der Formate, die die Daten in diesem Datenobjekt befindet sich in oder konvertiert werden können.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats();" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : unit -&gt; string[]" Usage="iDataObject.GetFormats " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Liste aller Formate, die die Daten in diesem Datenobjekt befindet sich in oder konvertiert werden können.</summary>
        <returns>Ein Array von Zeichenfolgen, wobei jede Zeichenfolge den Namen eines Formats, der von diesem Datenobjekt unterstützt angeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFormats">
      <MemberSignature Language="C#" Value="public string[] GetFormats (bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetFormats(bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.GetFormats(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetFormats (autoConvert As Boolean) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetFormats(bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member GetFormats : bool -&gt; string[]" Usage="iDataObject.GetFormats autoConvert" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="autoConvert"><see langword="true" /> Um alle Formate abzurufen, in diesem Datenobjekt gespeicherten Daten befindet sich in oder konvertiert werden können; <see langword="false" /> , um nur die Formate abzurufen befindet sich diese Daten, die in diesem Datenobjekt gespeichert sind (ausschließlich der Formate, die die Daten in nicht gespeichert, sondern in automatisch konvertiert werden können).</param>
        <summary>Gibt eine Liste aller Formate, die in die Daten in diesem Datenobjekt gespeichert sind. Ein <see langword="Boolean" /> Flag gibt an, ob auch Formate eingeschlossen werden sollen, die die Daten automatisch konvertiert werden können.</summary>
        <returns>Ein Array von Zeichenfolgen, wobei jede Zeichenfolge den Namen eines Formats, der von diesem Datenobjekt unterstützt angeben.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.GetFormats%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetData">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Speichert die angegebenen Daten in diesem Datenobjekt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : obj -&gt; unit" Usage="iDataObject.SetData data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data">Die Daten, die in diesem Datenobjekt gespeichert.</param>
        <summary>Speichert die angegebenen Daten in diesem Datenobjekt, konvertieren das Datenformat automatisch aus dem Objekttyp der Datenquelle an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die zum Speichern der Daten zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für eine Reihe von vordefinierten Datenformaten.</param>
        <param name="data">Die Daten, die in diesem Datenobjekt gespeichert.</param>
        <summary>Speichert die angegebenen Daten in diesem Datenobjekt, zusammen mit einem oder mehreren angegebenen Datenformaten. Das Datenformat wird durch eine Zeichenfolge angegeben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (Type format, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(class System.Type format, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As Type, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(Type ^ format, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member SetData : Type * obj -&gt; unit" Usage="iDataObject.SetData (format, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.Type" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">Ein <see cref="T:System.Type" /> , der zum Speichern der Daten zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für einen Satz vordefinierter Datenformate.</param>
        <param name="data">Die Daten, die in diesem Datenobjekt gespeichert.</param>
        <summary>Speichert die angegebenen Daten in diesem Datenobjekt, zusammen mit einem oder mehreren angegebenen Datenformaten. Das Format der Daten gemäß einem <see cref="T:System.Type" /> Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetData">
      <MemberSignature Language="C#" Value="public void SetData (string format, object data, bool autoConvert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetData(string format, object data, bool autoConvert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.IDataObject.SetData(System.String,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetData (format As String, data As Object, autoConvert As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetData(System::String ^ format, System::Object ^ data, bool autoConvert);" />
      <MemberSignature Language="F#" Value="abstract member SetData : string * obj * bool -&gt; unit" Usage="iDataObject.SetData (format, data, autoConvert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="data" Type="System.Object" />
        <Parameter Name="autoConvert" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="format">Eine Zeichenfolge, die zum Speichern der Daten zu verwendende format angibt. Finden Sie unter den <see cref="T:System.Windows.DataFormats" /> -Klasse für eine Reihe von vordefinierten Datenformaten.</param>
        <param name="data">Die Daten, die in diesem Datenobjekt gespeichert.</param>
        <param name="autoConvert"><see langword="true" /> um die Daten in ein anderes Format abrufen konvertiert werden können; <see langword="false" /> zu verhindern, dass die Daten in ein anderes Format beim Abrufen der konvertiert wird.</param>
        <summary>Speichert die angegebenen Daten in diesem Datenobjekt, zusammen mit einem oder mehreren angegebenen Datenformaten. Diese Überladung umfasst ein <see langword="Boolean" /> Flag zur Angabe, ob die Daten in ein anderes Format abrufen konvertiert werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Implementierung dieser Methode finden Sie im <xref:System.Windows.DataObject.SetData%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>