<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00cb273a98315ad826f5ad7f057d5e47c4c5428a" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48715200" /></Metadata><TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <TypeSignature Language="F#" Value="type EventSetter = class&#xA;    inherit SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Ereignissetter in einem Format dar. Ereignissetter rufen in Reaktion auf Ereignisse die angegebenen Ereignishandler auf.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ereignissetter rufen die angegebenen Ereignishandler als Reaktion auf Routingereignisse, die auf alle Elemente angewendet wird, die auf verweisen die <xref:System.Windows.Style> und Sie müssen keine Instanzhandler an jedes einzelne Element angefügt. Nur <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> unterstützen <xref:System.Windows.EventSetter> Objekte.  
  
 Sie können nur Ereignissetter für Ereignisse deklarieren, die weitergeleitete Ereignisse sind. Sie können Ereignissetter für Routingereignisse mit einer direkten Routingstrategie deklarieren, Ereignisse bubbling und Tunneling-Ereignisse.  
  
 Instanzen der <xref:System.Windows.EventSetter> -Klasse werden in der Regel über erstellt [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], wie Sie über ein Object-Element innerhalb eines Stils definiert [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Ein <xref:System.Windows.EventSetter> möglicherweise auch vom Code instanziiert werden.  
  
 Ereignissetter können nicht in einem Stil verwendet werden, die in einem Ressourcenverzeichnis des Designs enthalten ist. Dies ist, da ein Ressourcenverzeichnis des Designs zur Laufzeit häufig lose ist [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] Dateien und verfügt über keine Bereich definiert, in dem zugehörigen Code-Behind, die definiert, die Handler vorhanden sein kann.  
  
 Über Ereignissetter angefügte Handlern werden nach jeder Klassenhandler für ein Ereignis, und nach dem keine Instanzhandler aufgerufen. Daher Wenn ein Klassen- oder Instanzhandler ein Ereignis in den Argumenten behandelt kennzeichnet, klicken Sie dann die Handler durch einen Ereignissetter deklariert wird nicht aufgerufen, es sei denn, der Ereignissetter speziell legt diese fest <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`.  
  
 Ereignissetter auch stammen dürfen <xref:System.Windows.Style.BasedOn%2A> Stile. Die Setter-Ereignishandler aus dem Stil, angegeben als <xref:System.Windows.Style.BasedOn%2A> wird aufgerufen, nachdem die Handler für das sofortige Format.  
  
 Beachten Sie, dass nur <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> unterstützt <xref:System.Windows.EventSetter> Objekte. Trigger (<xref:System.Windows.TriggerBase> und abgeleitete Klassen) unterstützen keine <xref:System.Windows.EventSetter>.  
  
   
  
## Examples  
 Im folgende Beispiel wird ein einziger <xref:System.Windows.EventSetter> innerhalb eines Stils auf Seitenebene.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 Das folgende Beispiel zeigt das Beispiel-Ereignishandler:  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventSetter : System.Windows.RoutedEvent * Delegate -&gt; System.Windows.EventSetter" Usage="new System.Windows.EventSetter (routedEvent, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Das bestimmte Routingereignis, auf das der <see cref="T:System.Windows.EventSetter" /> reagiert.</param>
        <param name="handler">Der Handler, der in diesem Setter zugewiesen werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse unter Verwendung des angegebenen Ereignisses und von Handlerparametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Signatur wird in der Regel verwendet, wenn Sie erstellen eine <xref:System.Windows.EventSetter> im Code oder im Code-Behind, zum Erstellen einer <xref:System.Windows.EventSetter> , die ein vorhandenen Stil vor der Verwendung erweitert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Event : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventSetter.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das bestimmte Routingereignis ab, auf das dieser <see cref="T:System.Windows.EventSetter" /> reagiert, oder legt es fest.</summary>
        <value>Der ID-Feld des Routingereignisses.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft festlegen, der einmal das Format mit der <xref:System.Windows.EventSetter> verwendet wird und daher versiegelt ist. Wenn Sie diese Eigenschaft im Code festlegen, und es besteht die Möglichkeit, die der Stil verwendet wird, überprüfen Sie den Wert von der <xref:System.Windows.SetterBase.IsSealed%2A> Eigenschaft für die <xref:System.Windows.EventSetter> Instanz, bevor Sie versuchen, legen Sie <xref:System.Windows.EventSetter.Event%2A>.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.EventSetter.Event%2A> Eigenschaft als Teil einer <xref:System.Windows.EventSetter> in einem Markup-Stil.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde versucht, diese Eigenschaft für einen versiegelten <see cref="T:System.Windows.EventSetter" /> festzulegen.</exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HandledEventsToo : bool with get, set" Usage="System.Windows.EventSetter.HandledEventsToo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob der dem Setter zugewiesene Handler auch dann aufgerufen werden soll, wenn das Ereignis in den zugehörigen Ereignisdaten als behandelt markiert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Handler dennoch aufgerufen werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Festlegen der <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> Merkmale wie ein Ereignishandler aufgerufen werden, müssen immer ausgeführt werden, im Code wird in Übereinstimmung mit dem allgemeinen Prinzip, dass es keine Möglichkeit an <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> Instanzen beim Zuweisen von Ereignishandlern für definiert. direkt mit dem Namen der Ereignisse in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attributsyntax. Obwohl das Festlegen dieses Werts im [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] generiert keine Fehler während der Kompilierung, die resultierende [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] erzeugt eine Laufzeitausnahme aus, wenn der Stil verwendet wird.  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a>XAML-Text-Nutzung  
 Diese Eigenschaft sollte nicht verwendet werden, [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Delegate with get, set" Usage="System.Windows.EventSetter.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Verweis auf einen Handler für ein Routingereignis im Setter ab oder legt diesen fest.</summary>
        <value>Ein Verweis auf den Handler, der durch diesen <see cref="T:System.Windows.EventSetter" /> angefügt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.EventSetter.Handler%2A> Eigenschaft als Teil einer <xref:System.Windows.EventSetter> in einem Markup-Stil.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>