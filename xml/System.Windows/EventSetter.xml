<Type Name="EventSetter" FullName="System.Windows.EventSetter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b9fc2c688fc5f7791a802c2f87991db68845438c" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75179823" /></Metadata><TypeSignature Language="C#" Value="public class EventSetter : System.Windows.SetterBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EventSetter extends System.Windows.SetterBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.EventSetter" />
  <TypeSignature Language="VB.NET" Value="Public Class EventSetter&#xA;Inherits SetterBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class EventSetter : System::Windows::SetterBase" />
  <TypeSignature Language="F#" Value="type EventSetter = class&#xA;    inherit SetterBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.SetterBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Ereignissetter in einem Format dar. Ereignissetter rufen in Reaktion auf Ereignisse die angegebenen Ereignishandler auf.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ereignis Setter rufen die angegebenen Ereignishandler als Antwort auf Routing Ereignisse auf, die für alle Elemente gelten, die auf den <xref:System.Windows.Style> verweisen, anstatt dass Sie Instanzhandler an jedes einzelne Element anfügen müssen. Nur <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> <xref:System.Windows.EventSetter> Objekten unterstützen.  
  
 Sie können nur Ereignis Setter für Ereignisse deklarieren, bei denen es sich um Routing Ereignisse handelt. Sie können Ereignis Setter für Routing Ereignisse mit direkter Routing Strategie, bubblingereignissen oder tunnelingereignissen deklarieren.  
  
 Instanzen der <xref:System.Windows.EventSetter>-Klasse werden in der Regel über [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]erstellt, als Objekt Element innerhalb eines durch [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]definierten Stils. Eine <xref:System.Windows.EventSetter> kann auch aus dem Code instanziiert werden.  
  
 Ereignis Setter können nicht in einem Stil verwendet werden, der in einem Design Ressourcen Wörterbuch enthalten ist. Der Grund hierfür ist, dass ein Design Ressourcen Wörterbuch zur Laufzeit oft [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] Dateien verliert und kein Bereich definiert ist, in dem der dazugehörige Code Behind, der die Handler definiert, vorhanden sein kann.  
  
 Handler, die über Ereignis Setter angefügt werden, werden nach allen Klassen Handlern für ein Ereignis und auch nach beliebigen Instanzhandlern aufgerufen. Wenn ein Klassen Handler oder Instanzhandler ein Ereignis kennzeichnet, das in den Argumenten behandelt wird, wird der von einem Ereignis Setter deklarierte Handler nicht aufgerufen, es sei denn, der Ereignis Setter legt ausdrücklich <xref:System.Windows.EventSetter.HandledEventsToo%2A> `true`fest.  
  
 Ereignis Setter können auch aus <xref:System.Windows.Style.BasedOn%2A> Stilen stammen. Die Ereignis Setter-Handler aus dem als <xref:System.Windows.Style.BasedOn%2A> angegebenen Stil werden nach den Handlern im unmittelbaren Stil aufgerufen.  
  
 Beachten Sie, dass nur <xref:System.Windows.Style.Setters%2A?displayProperty=nameWithType> <xref:System.Windows.EventSetter> Objekte unterstützt. Trigger (<xref:System.Windows.TriggerBase> und abgeleitete Klassen) unterstützen <xref:System.Windows.EventSetter>nicht.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine einzelne <xref:System.Windows.EventSetter> innerhalb eines Stils auf Seitenebene festgelegt.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 Das folgende Beispiel zeigt die Beispiel Ereignishandler:  
  
 [!code-csharp[EventOvwSupport#EventSetterRef](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml.cs#eventsetterref)]
 [!code-vb[EventOvwSupport#EventSetterRef](~/samples/snippets/visualbasic/VS_Snippets_Wpf/EventOvwSupport/visualbasic/page2.xaml.vb#eventsetterref)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
    <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EventSetter (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.EventSetter.#ctor(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EventSetter(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Windows.EventSetter : System.Windows.RoutedEvent * Delegate -&gt; System.Windows.EventSetter" Usage="new System.Windows.EventSetter (routedEvent, handler)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Das bestimmte Routingereignis, auf das der <see cref="T:System.Windows.EventSetter" /> reagiert.</param>
        <param name="handler">Der Handler, der in diesem Setter zugewiesen werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.EventSetter" />-Klasse unter Verwendung des angegebenen Ereignisses und von Handlerparametern.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Signatur wird in der Regel verwendet, wenn Sie eine <xref:System.Windows.EventSetter> im Code erstellen, oder in Code-Behind, um eine <xref:System.Windows.EventSetter> zu erstellen, die einen vorhandenen Stil vor der Verwendung erweitert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Event">
      <MemberSignature Language="C#" Value="public System.Windows.RoutedEvent Event { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.RoutedEvent Event" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Event" />
      <MemberSignature Language="VB.NET" Value="Public Property Event As RoutedEvent" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::RoutedEvent ^ Event { System::Windows::RoutedEvent ^ get(); void set(System::Windows::RoutedEvent ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Event : System.Windows.RoutedEvent with get, set" Usage="System.Windows.EventSetter.Event" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das bestimmte Routingereignis ab, auf das dieser <see cref="T:System.Windows.EventSetter" /> reagiert, oder legt es fest.</summary>
        <value>Der ID-Feld des Routingereignisses.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Eigenschaft nicht festlegen, nachdem der Stil mit dem <xref:System.Windows.EventSetter> verwendet wird und daher versiegelt ist. Wenn Sie diese Eigenschaft im Code festlegen und die Möglichkeit besteht, dass der Stil verwendet wird, überprüfen Sie den Wert der <xref:System.Windows.SetterBase.IsSealed%2A>-Eigenschaft für die <xref:System.Windows.EventSetter>-Instanz, bevor Sie versuchen, <xref:System.Windows.EventSetter.Event%2A>festzulegen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.EventSetter.Event%2A>-Eigenschaft als Teil einer <xref:System.Windows.EventSetter> in einem Markup Stil festgelegt.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Es wurde versucht, diese Eigenschaft für einen versiegelten <see cref="T:System.Windows.EventSetter" /> festzulegen.</exception>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="HandledEventsToo">
      <MemberSignature Language="C#" Value="public bool HandledEventsToo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HandledEventsToo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.HandledEventsToo" />
      <MemberSignature Language="VB.NET" Value="Public Property HandledEventsToo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HandledEventsToo { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HandledEventsToo : bool with get, set" Usage="System.Windows.EventSetter.HandledEventsToo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob der dem Setter zugewiesene Handler auch dann aufgerufen werden soll, wenn das Ereignis in den zugehörigen Ereignisdaten als behandelt markiert ist, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn der Handler dennoch aufgerufen werden soll, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  Das Festlegen der <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> Merkmale der Art und Weise, wie die Handler eines Ereignisses aufgerufen werden, muss immer im Code ausgeführt werden, wobei das allgemeine Prinzip darin besteht, dass es nicht möglich ist, <xref:System.Windows.RoutedEventHandlerInfo.InvokeHandledEventsToo%2A> anzugeben, wenn definierte Ereignishandler für Instanzen direkt benannten Ereignissen in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Syntax zugewiesen werden. Obwohl durch Festlegen dieses Werts in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] keine Kompilierzeitfehler generiert werden, erzeugt die resultierende [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] eine Lauf Zeit Ausnahme, wenn der Stil verwendet wird.  
  
<a name="xamlTextUsage_HandledEventsToo"></a>   
## <a name="xaml-text-usage"></a>Verwendung von XAML-Text  
 Diese Eigenschaft sollte nicht in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]verwendet werden. Siehe Hinweise.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEventArgs.Handled" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public Delegate Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Delegate Handler" />
      <MemberSignature Language="DocId" Value="P:System.Windows.EventSetter.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Property Handler As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Delegate ^ Handler { Delegate ^ get(); void set(Delegate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Handler : Delegate with get, set" Usage="System.Windows.EventSetter.Handler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0;netcore-3.1">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.EventSetterHandlerConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Verweis auf einen Handler für ein Routingereignis im Setter ab oder legt diesen fest.</summary>
        <value>Ein Verweis auf den Handler, der durch diesen <see cref="T:System.Windows.EventSetter" /> angefügt wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Windows.EventSetter.Handler%2A>-Eigenschaft als Teil einer <xref:System.Windows.EventSetter> in einem Markup Stil festgelegt.  
  
 [!code-xaml[EventOvwSupport#XAML2](~/samples/snippets/csharp/VS_Snippets_Wpf/EventOvwSupport/CSharp/page2.xaml#xaml2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.RoutedEvent.HandlerType" />
        <altmember cref="M:System.Windows.UIElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
  </Members>
</Type>
