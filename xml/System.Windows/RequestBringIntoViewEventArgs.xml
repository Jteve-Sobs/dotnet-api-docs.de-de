<Type Name="RequestBringIntoViewEventArgs" FullName="System.Windows.RequestBringIntoViewEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8dedc010a032951ae5455df27586a27907cf9a1f" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70647312" /></Metadata><TypeSignature Language="C#" Value="public class RequestBringIntoViewEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestBringIntoViewEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.RequestBringIntoViewEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestBringIntoViewEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestBringIntoViewEventArgs : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type RequestBringIntoViewEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das Routingereignis <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> -Ereignis wird durch-Elemente ausgelöst, <xref:System.Windows.FrameworkElement.BringIntoView%2A> Wenn Sie von diesem Element aus aufzurufen. Im Allgemeinen wird dieses Routing Ereignis nicht von der Quelle behandelt. Zwischen Klassen, die keine Bild lauffähigen Bereiche oder ähnliche Konzepte implementieren, bei denen Clip Inhalt das Ereignis nicht verarbeiten sollte.  Das Ereignis sollte für die Blase in übergeordnete Elemente zulässig sein, die einen Bild lauffähigen Bereich implementieren oder anderweitig angeben  <xref:System.Windows.UIElement.ClipToBounds%2A> . `false` Solche übergeordneten Elemente stellen in der Regel eine <xref:System.Windows.FrameworkElement.RequestBringIntoView> Klassen Behandlung für das-Ereignis bereit, bei dem die erforderliche Renderinglogik auftritt, wenn ein bestimmtes Element anfordert, dass es innerhalb des Ausschneide Bereichs angezeigt werden soll.  
  
 Inhaltselemente können bewirken, dass das Ereignis von ihren Inhalts Hosts ausgelöst wird (durch <xref:System.Windows.FrameworkContentElement.BringIntoView%2A> aufrufen <xref:System.Windows.FrameworkElement.RequestBringIntoView?displayProperty=nameWithType> und Auslösen vom Inhalts Host). Auf ähnliche Weise können Sie mit der-Hilfsmethode <xref:System.Windows.LogicalTreeHelper.BringIntoView%2A?displayProperty=nameWithType>logische Strukturelemente anfordern.  
  
 Ein <xref:System.Windows.Controls.ListBox> implementiert eine Verwandte, aber andere <xref:System.Windows.Controls.ListBox.ScrollIntoView%2A>Methode.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.ScrollViewer" />
    <altmember cref="T:System.Windows.Controls.Primitives.ScrollBar" />
  </Docs>
  <Members>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.RequestBringIntoViewEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="requestBringIntoViewEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">Der generische Handler, der auf typspezifische Weise aufgerufen werden soll.</param>
        <param name="genericTarget">Das Ziel, für das der Handler aufgerufen werden soll.</param>
        <summary>Ruft Ereignishandler auf typspezifische Weise auf, wodurch sich die Effizienz des Ereignissystems erhöhen kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Implementierung wandelt den generischen Handler als <xref:System.Windows.RequestBringIntoViewEventHandler> um und ruft ihn anschließend auf. Ausführliche Informationen zu diesem Implementierungs Muster und den dafür genannten Gründen finden <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> Sie unter [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.RoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TargetObject { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : System.Windows.DependencyObject" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Objekt ab, das als Reaktion auf das Ereignis sichtbar gemacht werden soll.</summary>
        <value>Das Objekt, das <see cref="M:System.Windows.FrameworkElement.BringIntoView" /> aufgerufen hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Objekt ist in der Regel das gleiche Objekt, <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType>das von zurückgegeben wird.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.RoutedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="TargetRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect TargetRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Rect TargetRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetRect As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Rect TargetRect { System::Windows::Rect get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetRect : System.Windows.Rect" Usage="System.Windows.RequestBringIntoViewEventArgs.TargetRect" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den rechteckigen Bereich im Koordinatenbereich des Objekts ab, der sichtbar gemacht werden soll.</summary>
        <value>Der angeforderte rechteckige Bereich.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn die Signatur von <xref:System.Windows.FrameworkElement.BringIntoView%2A> , die aufgerufen wurde, um das Ereignis aufzurufen, kein Ziel Rechteck angegeben hat, kann <xref:System.Windows.Rect.Empty%2A> diese Eigenschaft der <xref:System.Windows.Rect> Wert der-Struktur sein.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      </Docs>
    </Member>
  </Members>
</Type>
