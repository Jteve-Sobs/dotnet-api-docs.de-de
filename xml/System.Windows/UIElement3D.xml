<Type Name="UIElement3D" FullName="System.Windows.UIElement3D">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dcbd21917569bae2efcf441e572627304ea1ba3a" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51919881" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class UIElement3D : System.Windows.Media.Media3D.Visual3D, System.Windows.IInputElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract UIElement3D extends System.Windows.Media.Media3D.Visual3D implements class System.Windows.IInputElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.UIElement3D" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UIElement3D&#xA;Inherits Visual3D&#xA;Implements IInputElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class UIElement3D abstract : System::Windows::Media::Media3D::Visual3D, System::Windows::IInputElement" />
  <TypeSignature Language="F#" Value="type UIElement3D = class&#xA;    inherit Visual3D&#xA;    interface IInputElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Media3D.Visual3D</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.IInputElement</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <see cref="T:System.Windows.UIElement3D" /> ist eine Basisklasse für Implementierungen auf WPF-Kernebene, die auf WPF-Elementen (Windows Presentation Foundation) und grundlegenden Darstellungsmerkmalen aufbauen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D> ist eine abstrakte Basisklasse, die von der Sie die Klassen zur Darstellung von bestimmten 3D-Elemente ableiten können.  
  
 Ein großer Teil der Eingabe, Fokus- und Ereignisse für 3D-Elemente im Allgemeinen ist definiert der <xref:System.Windows.UIElement3D> Klasse. Dies schließt die Ereignisse für die Tastatur, Maus und nastala chyba vstupu und Eigenschaften der entsprechenden Status. Viele dieser Ereignisse sind Routingereignisse und viele der Eingabe-bezogene Ereignisse haben beide eine bubbling-routing-Version als auch eine Tunneling-Version des Ereignisses. Diese gepaarte Ereignisse können Sie in der Regel von größter für Autoren von Steuerelementen.  
  
 <xref:System.Windows.UIElement3D> enthält auch [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] im Zusammenhang mit der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Ereignismodell, einschließlich der Methoden, die ausgelöst werden können, die angegebenen Routingereignisse, die von einer Elementinstanz als Quelle haben.  
  
 Ein <xref:System.Windows.UIElement3D> umfasst die folgenden Funktionen, die speziell von definiert sind die <xref:System.Windows.UIElement3D> Klasse:  
  
-   Auf Benutzereingaben reagieren können (einschließlich steuern, wohin die Eingabe über die Behandlung des Ereignisses gesendet wird routing oder routing von Befehlen).  
  
-   Auslösen von Routingereignissen, die eine Route mit der logischen Struktur zu durchlaufen.  
  
> [!IMPORTANT]
>  <xref:System.Windows.UIElement3D.Visibility%2A> Status wirkt sich auf alle Eingaben, die durch dieses Element behandeln. Elemente, die nicht sichtbar sind keine Teilnahme am Treffertests und empfangen, selbst wenn der Mauszeiger, über die Grenzen befindet eines, in dem das Element wäre keine Eingabeereignisse, wenn sichtbar waren.  
  
 Im Gegensatz zu den <xref:System.Windows.UIElement> -Klasse, die <xref:System.Windows.UIElement3D> Klasse enthält keine Layout. Aus diesem Grund die <xref:System.Windows.UIElement3D> Klasse enthält keine **Measure** oder **anordnen** Methoden.  
  
 Eine abgeleitete Klasse <xref:System.Windows.UIElement3D> und verwaltet seine eigene Sammlung von <xref:System.Windows.Media.Media3D.Visual3D> Objekte durch das Überschreiben von <xref:System.Windows.Media.Media3D.Visual3D.GetVisual3DChild%2A> und <xref:System.Windows.Media.Media3D.Visual3D.Visual3DChildrenCount%2A> müssen weiterhin neue übergeben <xref:System.Windows.Media.Media3D.Visual3D> Objekte <xref:System.Windows.Media.Media3D.Visual3D.AddVisual3DChild%2A>.  
  
 <xref:System.Windows.UIElement3D> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie für die Ableitung der <xref:System.Windows.UIElement3D> -Klasse zur Erstellung einer `Sphere` Klasse:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Das vollständige Beispiel finden Sie unter [UIElement3D Kugel Beispiel](https://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UIElement3D ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; UIElement3D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.UIElement3D" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.%23ctor%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddHandler">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.AddHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.AddHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Ein Bezeichner für das zu behandelnde Routingereignis.</param>
        <param name="handler">Ein Verweis auf die Handlerimplementierung.</param>
        <summary>Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen. Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird. Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.  
  
 In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.  
  
 <xref:System.Windows.UIElement3D.AddHandler%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddHandler">
      <MemberSignature Language="C#" Value="public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler, bool handledEventsToo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler, bool handledEventsToo);" />
      <MemberSignature Language="F#" Value="member this.AddHandler : System.Windows.RoutedEvent * Delegate * bool -&gt; unit" Usage="uIElement3D.AddHandler (routedEvent, handler, handledEventsToo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
        <Parameter Name="handledEventsToo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Ein Bezeichner für das zu behandelnde Routingereignis.</param>
        <param name="handler">Ein Verweis auf die Handlerimplementierung.</param>
        <param name="handledEventsToo">
          <see langword="true" />, wenn der Handler registriert werden soll, sodass er selbst dann aufgerufen wird, wenn das Routingereignis in den zugehörigen Ereignisdaten als behandelt markiert ist; <see langword="false" />, wenn der Handler mit der Standardbedingung registriert werden soll, dass er nicht aufgerufen wird, wenn das Routingereignis bereits als behandelt markiert ist.  
  
Der Standardwert ist <see langword="false" />.  
  
Legen Sie die Anforderung zum erneuten Behandeln eines Routingereignisses nicht gewohnheitsmäßig fest.</param>
        <summary>Fügt einen Routingereignishandler für ein bestimmtes Routingereignis hinzu, wobei der Handler der Handlerauflistung für das aktuelle Element hinzugefügt wird. Legen Sie <paramref name="handledEventsToo" /> auf <see langword="true" /> fest, damit der bereitgestellte Handler für ein Routingereignis aufgerufen wird, das bereits von einem anderen Element auf der Ereignisroute als behandelt markiert wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Verarbeitung von Low-Level-Eingabeereignisse in eine praktische Möglichkeit ist eine komplexe Aufgabe. Viele Steuerelemente implementieren Verhalten, in denen ein bestimmtes Ereignis als behandelt markiert ist, und durch ein anderes intuitiver Ereignis ersetzt wird. Im Allgemeinen wird ein Steuerelement nur ein Eingabeereignis Plattform als behandelt markieren Wenn einige Zweck dafür vorhanden ist. In bestimmten Szenarien ist möglicherweise die Absichten Entwurf nicht was erfordert, dass Ihre bestimmten Behandlung des Eingabeereignisses. Es ist für diese Szenarien, dass die Registrierung Handler mit `handledEventsToo` als `true` eignet. Aber Sie sollten dies nicht regelmäßig. Handler als Reaktion auf alle Ereignisse aufrufen, auch wenn verarbeitet, wird Ihre eigene Verarbeitungslogik Anwendungsereignis erschweren. Eine Abnahme der Leistung möglicherweise angezeigt werden, wenn die Handlerlogik sehr umfangreich ist. Reservieren Sie die Verwendung von Anhängen von Handlern für bereits behandelten Ereignisse für Situationen, in denen Sie bereits während des Entwicklungsprozesses ermittelt haben, die bestimmte Steuerelemente Ereignisse verarbeiten, die Sie weiterhin mit der Anwendungslogik behandeln möchten.  
  
 Ein weiteres Verfahren zum Vermeiden von Klassenbehandlungsverhalten von bestimmten Ebenenkombinationen Event-Steuerelement ist die Verwendung des Ereignisses die Vorschau Alternative. Z. B. wenn <xref:System.Windows.UIElement3D.MouseLeftButtonDown> als behandelt markiert wird von der Klassenbehandlung, Sie möglicherweise zum Hinzufügen von Handlern für <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> stattdessen.  
  
 Sie können den gleichen Handler für das gleiche Ereignis mehrere Male hinzufügen, ohne eine Ausnahme auszulösen. Der Handler wird jedoch tatsächlich mehrere Male aufgerufen, wenn das Ereignis behandelt wird. Aus diesem Grund sollten Sie, wie dieses Verhalten Nebeneffekte haben kann, die in der Handlerimplementierung berücksichtigt werden sollten.  
  
 In der Regel verwenden Sie diese Methode die Implementierung der "add"-Accessor für die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Event-Zugriffsmuster der eines benutzerdefinierten Routingereignisses.  
  
 <xref:System.Windows.UIElement3D.AddHandler%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddToEventRoute">
      <MemberSignature Language="C#" Value="public void AddToEventRoute (System.Windows.EventRoute route, System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddToEventRoute(class System.Windows.EventRoute route, class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.AddToEventRoute(System.Windows.EventRoute,System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddToEventRoute (route As EventRoute, e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddToEventRoute(System::Windows::EventRoute ^ route, System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.AddToEventRoute : System.Windows.EventRoute * System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.AddToEventRoute (route, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="route" Type="System.Windows.EventRoute" />
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="route">Die Ereignisroute, der Handler hinzugefügt werden.</param>
        <param name="e">Die Ereignisdaten, mit denen die Handler hinzugefügt werden. Diese Methode verwendet die <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft der Ereignisdaten, um die Handler zu erstellen.</param>
        <summary>Fügt der angegebenen <see cref="T:System.Windows.EventRoute" /> Handler für die aktuelle Auflistung von <see cref="T:System.Windows.UIElement3D" />-Ereignishandlern hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode kann verwendet werden, durch den Inhaltshost-Elemente (implementieren <xref:System.Windows.IContentHost> oder solche, die nicht) Handler für untergeordnete Elemente zum Hinzufügen der <xref:System.Windows.EventRoute>.  
  
 <xref:System.Windows.UIElement3D.AddToEventRoute%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDrop">
      <MemberSignature Language="C#" Value="public bool AllowDrop { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowDrop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AllowDrop" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowDrop As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowDrop { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowDrop : bool with get, set" Usage="System.Windows.UIElement3D.AllowDrop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann.</summary>
        <value>
          <see langword="true" />, wenn dieses Element als Ziel eines Drag &amp; Drop-Vorgangs verwendet werden kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Drag & Drop-Vorgänge sind nicht standardmäßig aktiviert und muss durch Festlegen von absichtlich aktiviert sein <xref:System.Windows.UIElement3D.AllowDrop%2A> zu `true`. Über diese Einstellung "Grundlegend" Drag & Drop-Verhalten ist vollständig implementierungsspezifisch und ist nicht definiert, indem <xref:System.Windows.UIElement3D> oder eine beliebige andere Basiselement-Klasse. Einige Steuerelemente, z. B. <xref:System.Windows.Controls.RichTextBox>, verfügen über ein Standardverhalten. Weitere Informationen zu Drag & Drop, finden Sie unter [Drag- and -Drop Overview](~/docs/framework/wpf/advanced/drag-and-drop-overview.md).  
  
 <xref:System.Windows.UIElement3D.AllowDrop%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_AllowDrop"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.AllowDropProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowDropProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AllowDropProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AllowDropProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AllowDropProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AllowDropProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AllowDropProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AllowDropProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AllowDropProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.AllowDrop" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.AllowDropProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCaptured">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCaptured : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element erfasst wird.</summary>
        <value>
          <see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element erfasst wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCaptured" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesCapturedWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesCapturedWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesCapturedWithin : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wird.</summary>
        <value>
          <see langword="true" />, wenn mindestens eine Fingereingabe für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesCapturedWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesCapturedWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesCapturedWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesCapturedWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesCapturedWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesCapturedWithin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesDirectlyOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät über diesem Element gedrückt wurde.</summary>
        <value>
          <see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element registriert wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesDirectlyOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOver">
      <MemberSignature Language="C#" Value="public bool AreAnyTouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AreAnyTouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AreAnyTouchesOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AreAnyTouchesOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.AreAnyTouchesOver : bool" Usage="System.Windows.UIElement3D.AreAnyTouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob mindestens ein Fingereingabegerät auf diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur gedrückt wurde.</summary>
        <value>
          <see langword="true" />, wenn mindestens eine Fingereingabe auf diesem Element oder den untergeordneten Elementen in der visuellen Struktur erfasst wurde, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AreAnyTouchesOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AreAnyTouchesOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AreAnyTouchesOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AreAnyTouchesOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AreAnyTouchesOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AreAnyTouchesOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.AreAnyTouchesOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.AreAnyTouchesOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMouse">
      <MemberSignature Language="C#" Value="public bool CaptureMouse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureMouse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureMouse" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureMouse () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureMouse();" />
      <MemberSignature Language="F#" Value="abstract member CaptureMouse : unit -&gt; bool&#xA;override this.CaptureMouse : unit -&gt; bool" Usage="uIElement3D.CaptureMouse " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureMouse</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Versucht, die Mausaufzeichnung für dieses Element zu erzwingen.</summary>
        <returns>
          <see langword="true" />, wenn die Maus erfolgreich aufgezeichnet wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um die erfasst werden, muss ein Element aktiviert werden. Überprüfen Sie, ob <xref:System.Windows.UIElement3D.IsEnabled%2A> ist `true` vor dem Aufruf <xref:System.Windows.UIElement3D.CaptureMouse%2A>.  
  
 Wenn der Aufruf <xref:System.Windows.UIElement3D.CaptureMouse%2A> gibt `true`, klicken Sie dann <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> auch `true`.  
  
 Wenn der Aufruf <xref:System.Windows.UIElement3D.CaptureMouse%2A> gibt `true`, die <xref:System.Windows.UIElement3D.GotMouseCapture> und <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> Ereignisse ausgelöst werden, mit <xref:System.Windows.RoutedEventArgs.Source%2A?displayProperty=nameWithType> Daten in den Ereignisdaten gemeldet, als das Element, in denen die <xref:System.Windows.UIElement3D.CaptureMouse%2A> Methode wird aufgerufen. Wenn Sie erzwingen, können Sie mit vorhandenen Erfassungen beeinträchtigen, vor allem bei Erfassungen, die im Zusammenhang mit Drag & Drop mit der Maus.  
  
 Rufen Sie zum Löschen von allen Elementen die Erfassung von Mauseingaben <xref:System.Windows.Input.Mouse.Capture%2A?displayProperty=nameWithType> mit der `element` -Parameter als `null`.  
  
 <xref:System.Windows.UIElement3D.CaptureMouse%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="CaptureStylus">
      <MemberSignature Language="C#" Value="public bool CaptureStylus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CaptureStylus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureStylus" />
      <MemberSignature Language="VB.NET" Value="Public Function CaptureStylus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CaptureStylus();" />
      <MemberSignature Language="F#" Value="abstract member CaptureStylus : unit -&gt; bool&#xA;override this.CaptureStylus : unit -&gt; bool" Usage="uIElement3D.CaptureStylus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.CaptureStylus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Versucht, die Tablettstiftaufzeichnung für dieses Element zu erzwingen.</summary>
        <returns>
          <see langword="true" />, wenn der Tablettstift erfolgreich aufgezeichnet wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt die standardmäßige Implementierung, die basierend auf dem zugrunde liegenden Stift-Standardgerät immer `true`. Wenn Sie die Eingabegeräte, die für das Eingabesystem aber die geräteimplementierung bereitstellen erweitern, ist es jedoch möglich, ein System mit einer Implementierung des alternativen Tablettstiftgeräts zu erstellen, die möglicherweise andere Ergebnisse zurückgeben.  
  
 Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Tablettstift außerhalb seiner Grenzen befindet. Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.  
  
 Durch das Aufrufen dieser Methode wird eine zugrunde liegende statische <xref:System.Windows.Input.Stylus> Methode <xref:System.Windows.Input.Stylus.Capture%2A>. Die tatsächlich verwendeten-Verhalten wird durch die Implementierung der aktiven Tablettstift Gerät implementiert.  
  
 Um die erfasst werden, muss ein Element aktiviert werden. Überprüfen Sie, ob <xref:System.Windows.UIElement3D.IsEnabled%2A> ist `true` zurückgegeben wird, vor dem Aufruf <xref:System.Windows.UIElement3D.CaptureStylus%2A>.  
  
 Wenn der Aufruf <xref:System.Windows.UIElement3D.CaptureStylus%2A> gibt `true`, <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> auch `true`.  
  
 <xref:System.Windows.UIElement3D.CaptureStylus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureTouch">
      <MemberSignature Language="C#" Value="public bool CaptureTouch (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CaptureTouch(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.CaptureTouch(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CaptureTouch(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.CaptureTouch : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.CaptureTouch touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">Das zu erfassende Gerät.</param>
        <summary>Versucht, die Fingereingabe für dieses Element zu erzwingen.</summary>
        <returns>
          <see langword="true" />, wenn die angegebene Fingereingabe für dieses Element erfasst wird, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.CaptureTouch%2A> Gibt `false` Wenn die <xref:System.Windows.Input.TouchDevice> aktuell auf ein anderes Element erfasst wird.  
  
 Wenn <xref:System.Windows.UIElement3D.CaptureTouch%2A> gibt `true`, und klicken Sie dann die <xref:System.Windows.UIElement3D.GotTouchCapture> Ereignis wird ausgelöst.  
  
 Um einzelne Fingereingabe aus diesem Element freizugeben, verwenden Sie die <xref:System.Windows.UIElement3D.ReleaseTouchCapture%2A> Methode, und geben Sie das Fingereingabegerät freigegeben. Um alle Workflows aus diesem Element freizugeben, verwenden die <xref:System.Windows.UIElement3D.ReleaseAllTouchCaptures%2A> Methode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="touchDevice" /> ist <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="CommandBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CommandBindingCollection CommandBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.CommandBindingCollection CommandBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.CommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandBindings As CommandBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CommandBindingCollection ^ CommandBindings { System::Windows::Input::CommandBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandBindings : System.Windows.Input.CommandBindingCollection" Usage="System.Windows.UIElement3D.CommandBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CommandBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von <see cref="T:System.Windows.Input.CommandBinding" />-Objekten ab, die diesem Element zugeordnet sind.</summary>
        <value>Die Auflistung aller <see cref="T:System.Windows.Input.CommandBinding" />-Objekte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.Windows.Input.CommandBinding> ermöglicht die Verarbeitung eines bestimmten Befehls für dieses Element und deklariert die Verknüpfung zwischen einem Befehl, seinen Ereignissen und den von diesem Element angefügten Handlern.  
  
 Eine weitere Möglichkeit zum Füllen der <xref:System.Windows.UIElement3D.CommandBindings%2A> Auflistung ist die Verwendung <xref:System.Windows.Input.CommandManager> Methoden programmgesteuert.  
  
 <xref:System.Windows.UIElement3D.CommandBindings%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="xamlPropertyElementUsage_CommandBindings"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.CommandBindings>  
    oneOrMoreCommandBindings  </object.CommandBindings>  
</object>  
```  
  
<a name="xamlValues_CommandBindings"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *oneOrMoreCommandBindings*  
 Eine oder mehrere <xref:System.Windows.Input.CommandBinding> Elemente. Jedem dieser Computer sollte eine <xref:System.Windows.Input.CommandBinding.Command%2A> -Attributsatz auf einen bekannten Befehl, und legen Sie Attribute für die <xref:System.Windows.Input.CommandBinding.CanExecute> und <xref:System.Windows.Input.CommandBinding.Executed> Handlerimplementierungen. Weitere Informationen finden Sie unter <xref:System.Windows.Input.CommandBinding>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="DragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragEnter;" />
      <MemberSignature Language="F#" Value="member this.DragEnter : System.Windows.DragEventHandler " Usage="member this.DragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.DragEnter?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.DragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.DragEnter> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragEnter"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.DragEnterEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragEnter>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="DragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.DragEnter" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragEnterEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragLeave;" />
      <MemberSignature Language="F#" Value="member this.DragLeave : System.Windows.DragEventHandler " Usage="member this.DragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.DragLeave?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.DragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.DragLeave> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragLeave"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.DragLeaveEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragLeave>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="DragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.DragLeave" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragLeaveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler DragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler DragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.DragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ DragOver;" />
      <MemberSignature Language="F#" Value="member this.DragOver : System.Windows.DragEventHandler " Usage="member this.DragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, auch wenn das Ziehen der Elementgrenzen stammen. Wenn für der Ziehvorgang außerhalb des gültigen Bereichs beginnt und bewegt sich dann, dieses Ereignis wird auch ausgelöst, als auch <xref:System.Windows.UIElement3D.DragEnter> und Vorschauereignisse im Zusammenhang.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.DragOver?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.DragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.DragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.DragOver> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_DragOver"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.DragOverEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDragOver>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="DragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.DragOver" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DragOverEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Drop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler Drop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler Drop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.Drop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Drop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ Drop;" />
      <MemberSignature Language="F#" Value="member this.Drop : System.Windows.DragEventHandler " Usage="member this.Drop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.Drop?displayProperty=nameWithType> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.Drop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.Drop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.Drop> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_Drop"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.DropEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewDrop>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="DropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent DropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent DropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.DropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ DropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable DropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.DropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.Drop" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.DropEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public bool Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Function Focus () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Focus();" />
      <MemberSignature Language="F#" Value="abstract member Focus : unit -&gt; bool&#xA;override this.Focus : unit -&gt; bool" Usage="uIElement3D.Focus " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.Focus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Versucht, den logischen Fokus für dieses Element festzulegen.</summary>
        <returns>
          <see langword="true" />, wenn der logische und der Tastaturfokus auf dieses Element festgelegt wurden, <see langword="false" />, wenn nur der logische Fokus festgelegt wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um den Fokus erhalten kann, werden <xref:System.Windows.UIElement3D.Focusable%2A> und <xref:System.Windows.UIElement3D.IsEnabled%2A> müssen `true`.  
  
 Auch wenn ein Element den Fokus erhalten kann und aktiviert ist, Ereignisbehandlung in einer bestimmten Struktur ist, (z.B. für ein zusammengesetztes Steuerelement) mit nicht zugelassen, Fokus auf die Vorschau Fokusereignisse Antworten daher diese Methode würde zurückgeben `false`.  
  
 Wenn der Aufruf <xref:System.Windows.UIElement3D.Focus%2A> gibt `true`, <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> sind auch `true`.  
  
 Wenn die zugehörigen Eigenschaften nicht bereits sind `true`, beim Aufrufen <xref:System.Windows.UIElement3D.Focus%2A>, eine oder mehrere der folgenden Ereignisse werden in der folgenden Reihenfolge ausgelöst: <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>, <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> (Quelle ist die neue Ziel mit Fokus), <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged>, <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged>, <xref:System.Windows.UIElement3D.LostKeyboardFocus>, <xref:System.Windows.UIElement3D.GotKeyboardFocus> (Quelle ist das neue Fokusziel).  
  
 In der Reihenfolge, damit dieser Aufruf erfolgreich ist, muss ein anderes Element in der Anwendung erforderlich, um den Fokus bereits besitzen.  
  
 Fokus wird im Allgemeinen durch zwei getrennte Konzepte gesteuert: Tastaturfokus und logischer Fokus, die nicht immer identisch sind. Diese Methode wird der logische Fokus und wird auch versucht, den Tastaturfokus festlegen. Es gibt keine programmgesteuerte Möglichkeit zum, Festlegen des Tastaturfokus Dies wird durch Eingabe des Benutzers ein. Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.Focus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focusable">
      <MemberSignature Language="C#" Value="public bool Focusable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Focusable" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Focusable" />
      <MemberSignature Language="VB.NET" Value="Public Property Focusable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Focusable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Focusable : bool with get, set" Usage="System.Windows.UIElement3D.Focusable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.Focusable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Element den Fokus erhalten kann.</summary>
        <value>
          <see langword="true" />, wenn das Element den Fokus erhalten kann, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nur das fokussierte Element empfängt Tastatureingaben.  
  
 <xref:System.Windows.UIElement3D.Focusable%2A> ist die [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] Eigenschaftenaccessor für das was in Wirklichkeit eine Abhängigkeitseigenschaft ist. Diese bestimmte Abhängigkeitseigenschaft hat oft einen offensichtlichen "Default"-Wert, der in abgeleitete Elementklassen festgelegt. Dieser Fehler tritt häufig in zwei Arten:  
  
-   Die Abhängigkeitseigenschaft wird von einer bestimmten abgeleiteten Klasse geerbt, jedoch, die abgeleitete Klasse überschreibt der Metadaten der Abhängigkeitseigenschaft und ändert den Standard-Eigenschaftswert.  
  
 <xref:System.Windows.UIElement3D.Focusable%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_Focusable"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.FocusableProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="FocusableChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler FocusableChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler FocusableChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.FocusableChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FocusableChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ FocusableChanged;" />
      <MemberSignature Language="F#" Value="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.FocusableChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Wert der <see cref="P:System.Windows.UIElement3D.Focusable" />-Eigenschaft ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.FocusableChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="FocusableProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusableProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusableProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.FocusableProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusableProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusableProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusableProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.FocusableProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.Focusable" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.FocusableProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="member this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="uIElement3D.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse ein alternatives übergeordnetes [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Element für dieses Element zurück, wenn kein visuelles übergeordnetes Element vorhanden ist.</summary>
        <returns>Ein Objekt, wenn die Implementierung einer abgeleiteten Klasse eine alternative übergeordnete Verbindung melden kann.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gibt die standardmäßige virtuelle Implementierung dieser Methode `null`. <xref:System.Windows.FrameworkElement> bietet eine praktische Implementierung.  
  
 Alternative Übergeordnet sind, verwendet wird, für das Ereignisrouting in Fällen, in dem ein Element eine alternative übergeordnete Struktur erstellt, damit die Ereignisse weitergeleitet werden in einer Weise, die über das Standardmuster, von denen die visuelle Struktur des übergeordneten standard routing abweicht, oder nach unten in der routing-Strategie eine Vorschau anzeigen.  
  
 <xref:System.Windows.UIElement3D.GetUIParentCore%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler GiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler GiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ GiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.GiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag &amp; Drop-Ereignis meldet, das dieses Element betrifft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.GiveFeedback> -Ereignisses kann die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback. Das visuelle Feedback bestärkt, dass es sich bei ein Drag & Drop-Vorgang aktiv ist.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.GiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.GiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.GiveFeedback> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GiveFeedback"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GiveFeedbackEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewGiveFeedback>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="GiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GiveFeedback" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GiveFeedbackEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler GotFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler GotFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ GotFocus;" />
      <MemberSignature Language="F#" Value="member this.GotFocus : System.Windows.RoutedEventHandler " Usage="member this.GotFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element den logischen Fokus erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn Fokus absichtlich durch einen Methodenaufruf erzwungen, aber der vorherige Tastaturfokus, die in einem anderen Bereich vorhanden ist. In diesem Fall bleibt über den Tastaturfokus ist und das Element, in denen eine <xref:System.Windows.UIElement3D.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.  
  
 Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.UIElement3D.IsFocused%2A> Eigenschaft eines Elements in der Route geändert wird `false` zu `true`.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus erhält möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.  
  
 <xref:System.Windows.UIElement3D.GotFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GotFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.RoutedEventHandler>|  
  
-   Es gibt kein entsprechendes Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler GotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ GotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.GotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> ist ein ähnliches Ereignis, das statusänderungen in einer Eigenschaft nachverfolgt, die den Fokuszustand für ein Element verwaltet. die <xref:System.Windows.UIElement3D.GotKeyboardFocus> Ereignis wird ausgelöst, in vielen unter denselben Umständen.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.GotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.GotKeyboardFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GotKeyboardFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotKeyboardFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler GotMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler GotMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ GotMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.GotMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element die Mausauswahl erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet. Die Maus ist in der Regel nur bei Drag & Drop-Vorgängen erfasst und erfassten bleibt, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten Erfassen von Daten in das tatsächliche Element zu bestimmen, das die Mauseingaben.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.GotMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.GotMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.GotMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.GotMouseCapture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GotMouseCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Es ist keine definiertes entsprechende Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GotMouseCapture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotMouseCaptureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler GotStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler GotStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ GotStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.GotStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.GotStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element die Stiftauswahl erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet. Der Tablettstift in der Regel nur während der Drag & Drop-Vorgänge aufgezeichnet wird und behält die Aufzeichnung, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das erfasst wird möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, das erfasst wird.  
  
 Dieses Ereignis wird ein Alias für das angefügte Ereignis für diese Klasse erstellt, damit <xref:System.Windows.UIElement3D.GotStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.GotStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.GotStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.GotStylusCapture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GotStylusCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Es ist keine definiertes entsprechende Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GotStylusCapture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.GotStylusCaptureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; GotTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; GotTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.GotTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event GotTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ GotTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.GotTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.GotTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn eine Fingereingabe für dieses Element erfasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_GotTouchCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.GotTouchCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.EventHandler%601> Der Typ <xref:System.Windows.Input.TouchEventArgs>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.GotTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InputBindings">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputBindingCollection InputBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputBindingCollection InputBindings" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.InputBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputBindings As InputBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputBindingCollection ^ InputBindings { System::Windows::Input::InputBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputBindings : System.Windows.Input.InputBindingCollection" Usage="System.Windows.UIElement3D.InputBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung der mit diesem Element verbundenen Eingabebindungen ab.</summary>
        <value>Die Auflistung der Eingabebindungen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eingabebindungen unterstützen die Bindung der Befehle aus, um Eingabegeräte. Z. B. <xref:System.Windows.Input.MouseBinding> implementiert eingabebindungen auf, die Eigenschaften enthalten, die speziell für Mausgeräte sind.  
  
 Die Auflistung der eingabebindungen umfasst sowohl eingabebindungen, die in den Typ zu beziehen, sowie eingabebindungen, die für die Instanz deklariert werden.  
  
 Eine verwandte Eigenschaft <xref:System.Windows.UIElement3D.CommandBindings%2A>, verwaltet eine Auflistung von befehlsbindungen. Diese unterscheiden sich von eingabebindungen bei, dass sie die nächste Ebene nach unten der befehlsverarbeitung - Aktionen darstellen, die auf bekannten Befehle gebunden sind.  
  
 <xref:System.Windows.UIElement3D.InputBindings%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="xamlPropertyElementUsage_InputBindings"></a>   
## <a name="xaml-property-element-usage"></a>Verwendung von XAML-Eigenschaftenelementen  
  
```  
<object>  
  <object.InputBindings>  
    oneOrMoreInputBindings  </object.InputBindings>  
</object>  
```  
  
<a name="xamlValues_InputBindings"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *oneOrMoreInputBindings*  
 Eine oder mehrere <xref:System.Windows.Input.InputBinding> Elemente (in der Regel die <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding> abgeleiteten Klassen). Jedes davon wird erwartet, damit eine <xref:System.Windows.Input.InputBinding.Command%2A> und <xref:System.Windows.Input.InputBinding.Gesture%2A> -Attribut festgelegt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InvalidateModel">
      <MemberSignature Language="C#" Value="public void InvalidateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InvalidateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.InvalidateModel" />
      <MemberSignature Language="VB.NET" Value="Public Sub InvalidateModel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InvalidateModel();" />
      <MemberSignature Language="F#" Value="member this.InvalidateModel : unit -&gt; unit" Usage="uIElement3D.InvalidateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erklärt das Modell, das das Element darstellt, für ungültig.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Ableiten einer Klasse von der <xref:System.Windows.UIElement3D> -Klasse, können Sie diese Methode zusammen mit den <xref:System.Windows.UIElement3D.OnUpdateModel%2A> Methode, um das Modell des Elements zu aktualisieren.  
  
 Sie müssen nur zum Aufrufen dieser Methode in erweiterten Szenarien. Ein solches Szenario erweitertes ist, wenn die abgeleitete Klasse verfügt über mehrere Eigenschaften, die das Erscheinungsbild und das zugrunde liegende Modell nur einmal aktualisiert werden soll.  
  
 <xref:System.Windows.UIElement3D.InvalidateModel%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie für die Ableitung der <xref:System.Windows.UIElement3D> -Klasse zur Erstellung einer `Sphere` Klasse:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Das vollständige Beispiel finden Sie unter [UIElement3D Kugel Beispiel](https://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public bool IsEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool with get, set" Usage="System.Windows.UIElement3D.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen eines Werts, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] aktiv ist.</summary>
        <value>
          <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beachten Sie, dass diese Eigenschaft, von Klasse-spezifische Implementierungen von beeinflusst wird <xref:System.Windows.UIElement3D.IsEnabledCore%2A> auf bestimmte Elemente, die häufig zur Laufzeit. Aus diesem Grund ist der Standardwert, der hier aufgeführten manchmal nicht wirksam. Es wird versucht, zum Festlegen dieses Werts wird möglicherweise auch von den Rückgabewert von überschrieben <xref:System.Windows.UIElement3D.IsEnabledCore%2A>.  
  
 Elemente, die nicht aktiviert sind keine Teilnahme am Treffertests oder den Fokus und daher nicht Quellen von Eingabeereignissen.  
  
 <xref:System.Windows.UIElement3D.IsEnabled%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsEnabled"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsEnabledProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsEnabledChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsEnabledChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsEnabledChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsEnabledChanged;" />
      <MemberSignature Language="F#" Value="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsEnabledChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsEnabled" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsEnabledChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected virtual bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.UIElement3D.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der in abgeleiteten Klassen zum Rückgabewert von <see cref="P:System.Windows.UIElement3D.IsEnabled" /> wird.</summary>
        <value>
          <see langword="true" />, wenn das Element aktiviert ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsEnabledCore%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die Standardimplementierung dieser Eigenschaft den Wert speichert und auch berechnet, ob das übergeordnete Element dieses Elements aktiviert ist. (Wenn das übergeordnete Element nicht aktiviert ist, das untergeordnete Element kann nicht aktiviert werden in einer praktischen [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].) Wenn Sie diese Implementierung überschreiben möchten, stellen Sie sicher, dass Sie die grundlegende Implementierung, um dieses Verhalten beizubehalten aufrufen.</para>
        </block>
        <altmember cref="E:System.Windows.UIElement3D.IsEnabledChanged" />
        <altmember cref="P:System.Windows.UIElement3D.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="IsEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsEnabled" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsEnabledProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocused">
      <MemberSignature Language="C#" Value="public bool IsFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFocused : bool" Usage="System.Windows.UIElement3D.IsFocused" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob dieses Element den logischen Fokus hat.</summary>
        <value>
          <see langword="true" />, wenn dieses Element den logischen Fokus hat, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der logische Fokus kann von den Tastaturfokus abweichen, wenn eine Anwendung mehrere Bereiche konzentrieren, wie z. B. zwischen dem Inhalt des Menüs und den Rest der Anwendung. In diesem Szenario wird kann über den Tastaturfokus nur auf ein Element der Benutzeroberfläche der Anwendung, bestimmte Elemente in anderen Abteilungen Fokus können jedoch behalten logischen Fokus. Weitere Informationen über den logischen Fokus finden Sie unter [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Sie legen Sie nicht den Fokus durch Festlegen dieser Eigenschaft (es ist schreibgeschützt). Die typische Verwendung für diese Eigenschaft ist für die Verwendung als eine Abhängigkeitseigenschaft für eine <xref:System.Windows.Setter> oder <xref:System.Windows.EventTrigger>. Um den Fokus programmgesteuert festzulegen, rufen <xref:System.Windows.UIElement3D.Focus%2A>. Fokus kann auch festgelegt werden, durch eine Benutzeraktion oder durch Implementierungen von Sicherheitskontrollen, die Maus Erfassungsverhalten möglicherweise enthalten.  
  
 <xref:System.Windows.UIElement3D.IsFocused%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsFocused"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsFocusedProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="IsFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsFocused" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsFocusedProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisible">
      <MemberSignature Language="C#" Value="public bool IsHitTestVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHitTestVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHitTestVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHitTestVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisible : bool with get, set" Usage="System.Windows.UIElement3D.IsHitTestVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob dieses Element möglicherweise als Treffertestergebnis von einem Teil des gerenderten Inhalts zurückgegeben werden kann.</summary>
        <value>
          <see langword="true" />, wenn dieses Element als Treffertestergebnis von mindestens einem Punkt zurückgegeben werden konnte, andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der effektive Wert dieser Eigenschaft wird durch die relativen Positionen der Treffer getestet werden Elemente in der logischen Struktur beeinflusst. Z. B. wenn ein Element ein untergeordnetes Element des Elements, das ist kein Treffertest angezeigt wurde, der effektive Wert der Eigenschaft für das untergeordnete Element bleibt `false`, auch wenn Sie versuchen, dieser Wert lokal festgelegt. Aus diesem Grund ist es wichtig, dass Sie nicht festlegen <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> zu `false` für ein zusammengesetztes Steuerelement es sei denn, Sie möchten eine Eingabe bzw. keine Treffertests auf dieses Steuerelement. Weitere Informationen zu Treffertests finden Sie unter [Treffertests in der visuellen Ebene](~/docs/framework/wpf/graphics-multimedia/hit-testing-in-the-visual-layer.md).  
  
 <xref:System.Windows.UIElement3D.IsHitTestVisible%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsHitTestVisible"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsHitTestVisibleProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsHitTestVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsHitTestVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsHitTestVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsHitTestVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsHitTestVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" />-Abhängigkeitseigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsHitTestVisibleChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="IsHitTestVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHitTestVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHitTestVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHitTestVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHitTestVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsHitTestVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsHitTestVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsHitTestVisible" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsHitTestVisibleProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInputMethodEnabled">
      <MemberSignature Language="C#" Value="public bool IsInputMethodEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInputMethodEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInputMethodEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInputMethodEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInputMethodEnabled : bool" Usage="System.Windows.UIElement3D.IsInputMethodEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ein Eingabemethodensystem wie z. B. ein [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] für die Verarbeitung von Eingaben für dieses Element aktiviert ist.</summary>
        <value>
          <see langword="true" />, wenn eine Eingabemethode aktiv ist, andernfalls <see langword="false" />. Der Standardwert der zugrunde liegenden verknüpften Eigenschaft ist <see langword="true;" />, jedoch wird dieser Wert durch den tatsächlichen Zustand der Eingabemethoden zur Laufzeit beeinflusst.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft gibt den Wert, der durch die angefügte Eigenschaft zurückgegeben wird <xref:System.Windows.Input.InputMethod.IsInputMethodEnabled%2A?displayProperty=nameWithType> für den derzeit aktivierten Eingabemethoden (Keyboard, Spracherkennung, andere Eingabegeräte).  
  
 <xref:System.Windows.UIElement3D.IsInputMethodEnabled%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocused">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocused" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocused As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocused { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocused : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Element über den Tastaturfokus verfügt.</summary>
        <value>
          <see langword="true" />, wenn dieses Element über den Tastaturfokus verfügt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen an den festgelegten Wert dieser Eigenschaft können von Ereignisse in Zusammenhang mit Fokus begleitet werden.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> dienen meist innerhalb von Ereignishandlern für die Klasse für andere Eingabe-bezogene Ereignisse, z. B. um zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder zu Ermittlung, wenn mit der Maus und Tastaturereignisse im Zusammenhang treten.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsKeyboardFocused"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
        <altmember cref="E:System.Windows.UIElement3D.LostFocus" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsKeyboardFocused" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusedProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithin">
      <MemberSignature Language="C#" Value="public bool IsKeyboardFocusWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKeyboardFocusWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsKeyboardFocusWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsKeyboardFocusWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithin : bool" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithin" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsKeyboardFocusWithin</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich der Tastaturfokus innerhalb des Elements oder in seinen untergeordneten Elementen in der visuellen Struktur befindet.</summary>
        <value>
          <see langword="true" />, wenn sich der Tastaturfokus auf dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Änderungen des Werts dieser Eigenschaft in der Regel Auslösen der <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> -Ereignis, es sei denn, eine abgeleitete Klasse außer Kraft gesetzt hat <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> unterdrückt werden, das Ereignis.  
  
 Diese Eigenschaft wird nicht direkt festgelegt, aber Sie können den Fokus auf ein Element festlegen, durch den Aufruf <xref:System.Windows.UIElement3D.Focus%2A>, oder durch die Erstellung einer <xref:System.Windows.UIElement3D.MoveFocus%2A> Anforderung. Beide Methoden rufen möglicherweise Wert dieser Eigenschaft geändert werden.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> und <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> werden in der Regel zum im Ereignishandler für die Klasse anderen Eingabe-bezogene Ereignisse, z. B. um zu bestimmen, ob das Element bereits über den Tastaturfokus verfügt, oder zu Ermittlung, wenn mit der Maus und Tastaturereignisse im Zusammenhang treten.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsKeyboardFocusWithin"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsKeyboardFocusWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsKeyboardFocusWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="IsKeyboardFocusWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsKeyboardFocusWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsKeyboardFocusWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsKeyboardFocusWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsKeyboardFocusWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsKeyboardFocusWithin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptured">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptured : bool" Usage="System.Windows.UIElement3D.IsMouseCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Maus für dieses Element erfasst wird.</summary>
        <value>
          <see langword="true" />, wenn die Maus für dieses Element erfasst wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Status der Mausaufzeichnung bezieht sich auf prozessinternen Drag & Drop-Vorgänge.  
  
 <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseCaptured"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsMouseCapturedProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsMouseCaptured" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCapturedProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsMouseCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsMouseCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob die Mausaufzeichnung in diesem Element oder in untergeordneten Elementen in seiner visuellen Struktur enthalten ist.</summary>
        <value>
          <see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Mausaufzeichnung enthält, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithin%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseCaptureWithin"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
        <altmember cref="M:System.Windows.UIElement3D.CaptureMouse" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithinChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseCaptureWithinProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsMouseDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsMouseDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Position des Mauszeigers den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</summary>
        <value>
          <see langword="true" />, wenn sich der Mauszeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu <xref:System.Windows.UIElement3D.IsMouseOver%2A>, diese Eigenschaft ist nur `true` , wenn der Mauszeiger über dem literal-Element befindet, als auch für einen Treffertest. Wenn der Mauszeiger stattdessen über ein untergeordnetes Element enthalten ist, gibt diese Eigenschaft werden `false`. Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.UIElement3D.IsMouseOver%2A> stattdessen.  
  
 Wenn die Maus von diesem Element erfasst wird, und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft wird weiterhin zurück `true` bis Mausauswahl verloren, und der Zeiger nicht über die Grenzen ist.  
  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseDirectlyOver"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsMouseDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsMouseDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsMouseDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseDirectlyOverProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsMouseOver">
      <MemberSignature Language="C#" Value="public bool IsMouseOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMouseOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsMouseOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMouseOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMouseOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMouseOver : bool" Usage="System.Windows.UIElement3D.IsMouseOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsMouseOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob sich der Mauszeiger über diesem Element (einschließlich der untergeordneten Elemente in der visuellen Struktur) befindet.</summary>
        <value>
          <see langword="true" />, wenn sich der Mauszeiger über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel sind Steuerelemente so zusammengesetzt, dass die verschiedenen Elemente innerhalb des Steuerelements (der visuellen Struktur) werden den Zustand von Mauseingaben für das enthaltende Steuerelement melden. Z. B. eine <xref:System.Windows.Controls.ListBox> Steuerelement Stil meldet <xref:System.Windows.UIElement3D.IsMouseOver%2A> als `true` , wenn der Mauszeiger an einer beliebigen Stelle Geometrie befindet, einschließlich aller <xref:System.Windows.Controls.ListBoxItem>.  
  
 Obwohl ein Analog "IsMouseOverChanged"-Ereignis nicht vorhanden ist, sind mehrere ähnliche Ereignisse auf. Sie können z. B. behandeln <xref:System.Windows.UIElement3D.MouseEnter>, <xref:System.Windows.UIElement3D.MouseMove>, und <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged>.  
  
 Wenn dieses Element die Mausauswahl erhält, wird diese Eigenschaft bleibt `true` bis Mausauswahl verloren, und der Mauszeiger der Grenzen des Elements verlässt.  
  
 Einige Steuerelemente erfasst absichtlich die Maus auf bestimmte Aktionen, die nicht angezeigt werden, auf die Maus direkt betreffen. Dies kann dazu führen <xref:System.Windows.UIElement3D.IsMouseOver%2A> wird `true` , obwohl das anscheinend nicht die Maus bewegt wurde.  
  
 <xref:System.Windows.UIElement3D.IsMouseOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsMouseOver"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsMouseOverProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMouseOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsMouseOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsMouseOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsMouseOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsMouseOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsMouseOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsMouseOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsMouseOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsMouseOverProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptured">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptured { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptured : bool" Usage="System.Windows.UIElement3D.IsStylusCaptured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusCaptured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Tablettstift für dieses Element erfasst wird.</summary>
        <value>
          <see langword="true" />, wenn der Tablettstift für dieses Element erfasst wird, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusCaptured"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsStylusCapturedProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCapturedChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCapturedChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCapturedChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCapturedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCapturedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCapturedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCapturedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCapturedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCapturedProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCapturedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsStylusCaptured" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusCapturedProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithin">
      <MemberSignature Language="C#" Value="public bool IsStylusCaptureWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusCaptureWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusCaptureWithin As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusCaptureWithin { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithin : bool" Usage="System.Windows.UIElement3D.IsStylusCaptureWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der bestimmt, ob die Tablettstifterfassung von diesem Element oder von einem Element innerhalb der Elementgrenzen und dessen visueller Struktur aufgenommen wird.</summary>
        <value>
          <see langword="true" />, wenn dieses Element oder ein darin enthaltenes Element die Tablettstifterfassung aufnimmt, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusCaptureWithin"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.CaptureStylus" />
        <altmember cref="P:System.Windows.UIElement3D.IsStylusCaptured" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusCaptureWithinChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusCaptureWithinChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusCaptureWithinChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist eine [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusCaptureWithinProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusCaptureWithinProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusCaptureWithinProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusCaptureWithinProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusCaptureWithinProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusCaptureWithinProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsStylusCaptureWithin" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusCaptureWithinProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOver">
      <MemberSignature Language="C#" Value="public bool IsStylusDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusDirectlyOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusDirectlyOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOver : bool" Usage="System.Windows.UIElement3D.IsStylusDirectlyOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusDirectlyOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob die Position des Tablettstifts den Treffertestergebnissen entspricht, für die die Elementzusammensetzung berücksichtigt wird.</summary>
        <value>
          <see langword="true" />, wenn sich der Tablettstiftzeiger über demselben Elementergebnis wie ein Treffertest befindet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Im Gegensatz zu <xref:System.Windows.UIElement3D.IsStylusOver%2A>, diese Eigenschaft ist nur `true` , wenn der Tablettstift über dem Element befindet. Wenn der Tablettstift stattdessen über ein untergeordnetes Element oder Elemente, die Teil eines Elements tiefer zusammensetzen (der visuellen Struktur) sind, gibt diese Eigenschaft werden `false`.  
  
 Es sei denn, Sie wissen, wie ein Steuerelement so zusammengesetzt ist (z. B. Sie verwenden diese Eigenschaft in einer benutzerdefinierten Steuerelementvorlage für ein Steuerelement, das Sie definieren), diese Eigenschaft möglicherweise unerwartete Ergebnisse zurückgeben. Verwenden Sie für die meisten Szenarien, in dem Sie keine Steuerelemente erstellt werden, <xref:System.Windows.UIElement3D.IsStylusOver%2A> stattdessen.  
  
 Wenn dieses Element Tablettstifteingaben erfasst und diese Eigenschaft ist `true` zum Zeitpunkt der Erfassung, diese Eigenschaft bleibt `true` bis Stiftauswahl verloren, und er sich befindet sich nicht über die Grenzen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusDirectlyOver"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsStylusDirectlyOverChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsStylusDirectlyOverChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsStylusDirectlyOverChanged;" />
      <MemberSignature Language="F#" Value="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusDirectlyOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusDirectlyOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusDirectlyOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusDirectlyOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusDirectlyOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusDirectlyOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsStylusDirectlyOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusDirectlyOverProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOver">
      <MemberSignature Language="C#" Value="public bool IsStylusOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStylusOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsStylusOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsStylusOver As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsStylusOver { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStylusOver : bool" Usage="System.Windows.UIElement3D.IsStylusOver" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IInputElement.IsStylusOver</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der anzeigt, ob sich der Stiftcursor über diesem Element (einschließlich der untergeordneten visuellen Elemente) befindet.</summary>
        <value>
          <see langword="true" />, wenn sich der Stiftcursor über dem Element oder seinen untergeordneten Elementen befindet, andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dieses Element die Stiftauswahl verfügt, wird diese Eigenschaft zurückzugebenden weiterhin `true` bis Stiftauswahl verloren, und der Zeiger, aus der Begrenzungen ist.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.IsStylusOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsStylusOver"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsStylusOverProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStylusOverProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsStylusOverProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsStylusOverProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsStylusOverProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsStylusOverProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsStylusOverProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsStylusOverProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsStylusOver" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsStylusOverProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.IsVisible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsVisible { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsVisible : bool" Usage="System.Windows.UIElement3D.IsVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob dieses Element auf der [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] sichtbar ist.</summary>
        <value>
          <see langword="true" />, wenn das Element sichtbar ist, andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ermittlung der <xref:System.Windows.UIElement3D.IsVisible%2A> Wert werden viele Faktoren berücksichtigt. Im Gegensatz dazu <xref:System.Windows.UIElement3D.Visibility%2A>, d.h. eine Eigenschaft festgelegt werden kann, nur gibt an, dass programmgesteuert ein Element sichtbar oder unsichtbar machen.  
  
 Änderungen des Werts dieser Eigenschaft werden in der Regel ausgelöst. die <xref:System.Windows.UIElement3D.IsVisibleChanged> Ereignis. Es gibt keinen entsprechenden [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] "auf *" außer Kraft setzen-Methode, die ermöglichen eine abgeleitete Klasse, um dieses Verhalten außer Kraft setzen und das Ereignis behandelt, aber ein Klassenhandler konnte noch angefügt werden, direkt mit <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 Elemente, in denen <xref:System.Windows.UIElement3D.IsVisible%2A> ist `false` keine Eingabeereignisse (oder Befehlen) teilnehmen, werden nicht beeinflussen Sie entweder das Measure oder Anordnungsübergabe des Layouts, sind nicht den Fokus erhalten kann, sind nicht in einer Sequenz Registerkarte und Treffertests nicht gemeldet werden. Im Gegensatz dazu sind Elemente, in denen <xref:System.Windows.UIElement3D.IsEnabled%2A> ist `false` , Ereignisse und Befehle und Treffertests Teil, aber auch nicht den Fokus erhalten kann.  
  
 <xref:System.Windows.UIElement3D.IsVisible%2A> dient nicht als eines Formattriggers verwendet werden. Mithilfe von <xref:System.Windows.UIElement3D.IsVisible%2A> Trigger möglicherweise einen Stil zu unvorhersehbaren Ergebnissen. <xref:System.Windows.UIElement3D.IsVisible%2A> Dient zur Zustand vom niedrigere Eingabe Implementierungen überprüfen.  
  
 <xref:System.Windows.UIElement3D.IsVisible%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_IsVisible"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.IsVisibleProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler IsVisibleChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.IsVisibleChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event IsVisibleChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ IsVisibleChanged;" />
      <MemberSignature Language="F#" Value="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.IsVisibleChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn der Wert der <see cref="P:System.Windows.UIElement3D.IsVisible" />-Eigenschaft für dieses Element geändert wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Member ist ein [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignis, kein Routingereignis.  
  
 <xref:System.Windows.UIElement3D.IsVisibleChanged> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.IsVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.IsVisible" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.IsVisibleProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyDown;" />
      <MemberSignature Language="F#" Value="member this.KeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.KeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.KeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.KeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.KeyDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.KeyDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewKeyDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.KeyDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.KeyDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler KeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler KeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.KeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event KeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ KeyUp;" />
      <MemberSignature Language="F#" Value="member this.KeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.KeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.KeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse, damit <xref:System.Windows.UIElement3D.KeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.KeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.KeyUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.KeyUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewKeyUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.KeyUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.KeyUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler LostFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler LostFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostFocus As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ LostFocus;" />
      <MemberSignature Language="F#" Value="member this.LostFocus : System.Windows.RoutedEventHandler " Usage="member this.LostFocus : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element den logischen Fokus verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der logische Fokus unterscheidet sich vom Tastaturfokus, wenn der Fokus absichtlich durch einen Methodenaufruf verloren wird, der vorherige Tastaturfokus jedoch in einem anderen Gültigkeitsbereich vorhanden ist. In diesem Szenario und Tastatur Fokus bleibt also das Element, in denen eine <xref:System.Windows.UIElement3D.Focus%2A> Methode wird aufgerufen, immer noch ruft logischen Fokus.  
  
 Eine genauere Interpretation dieses Ereignisses ist, dass die It wird ausgelöst, wenn der Wert des der <xref:System.Windows.UIElement3D.IsFocused%2A> Eigenschaft eines Elements in der Route ändert sich von `true` zu `false`.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus erhalten hat.  
  
 <xref:System.Windows.UIElement3D.LostFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.LostFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.RoutedEventHandler>|  
  
-   Es gibt kein entsprechendes Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.LostFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler LostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ LostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.LostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.LostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.LostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.LostKeyboardFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.LostKeyboardFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostKeyboardFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler LostMouseCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler LostMouseCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostMouseCapture As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ LostMouseCapture;" />
      <MemberSignature Language="F#" Value="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " Usage="member this.LostMouseCapture : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element die Mausauswahl verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet. Der Mauszeiger wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das mehr erfasst möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in den Ereignisdaten, um das tatsächliche Element zu bestimmen, die Mausereignisse mehr erfasst.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.LostMouseCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.LostMouseCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.LostMouseCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.LostMouseCapture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.LostMouseCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Es ist keine definiertes entsprechende Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.LostMouseCapture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostMouseCaptureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler LostStylusCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler LostStylusCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostStylusCapture As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ LostStylusCapture;" />
      <MemberSignature Language="F#" Value="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " Usage="member this.LostStylusCapture : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.LostStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element die Stiftauswahl verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn ein Element die Stiftauswahl erhält, empfängt es nastala chyba vstupu, auch wenn der Mauszeiger außerhalb seiner Grenzen befindet. Der Stift wird in der Regel nur bei Drag & Drop-Vorgängen erfasst.  
  
 Da dieses Ereignis ist die bubbling-routing verwendet, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.LostStylusCapture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.LostStylusCapture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.LostStylusCapture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.LostStylusCapture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.LostStylusCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Es ist keine definiertes entsprechende Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.LostStylusCapture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.LostStylusCaptureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCapture">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; LostTouchCapture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; LostTouchCapture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.LostTouchCapture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LostTouchCapture As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ LostTouchCapture;" />
      <MemberSignature Language="F#" Value="member this.LostTouchCapture : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.LostTouchCapture : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn dieses Element keine Fingereingaben mehr erfasst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_LostTouchCapture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.LostTouchCaptureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostTouchCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostTouchCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostTouchCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostTouchCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostTouchCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostTouchCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.LostTouchCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseDown;" />
      <MemberSignature Language="F#" Value="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Die <xref:System.Windows.UIElement3D.MouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement3D.MouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.MouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen. <xref:System.Windows.UIElement3D.MouseLeftButtonDown> und <xref:System.Windows.UIElement3D.MouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht. Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement3D.MouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.MouseRightButtonDown>.  
  
> [!IMPORTANT]
>  Einige Steuerelemente möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche. Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten. Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt. Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst. Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.  
  
 Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.UIElement3D.MouseDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:  
  
-   Fügen Sie Handler für die <xref:System.Windows.UIElement3D.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist. Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.  
  
-   Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.UIElement3D.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.  
  
 <xref:System.Windows.UIElement3D.MouseDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseEnter As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseEnter;" />
      <MemberSignature Language="F#" Value="member this.MouseEnter : System.Windows.Input.MouseEventHandler " Usage="member this.MouseEnter : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger in den Bereich dieses Elements eintritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseEnter> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet. Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.  
  
 Obwohl <xref:System.Windows.UIElement3D.MouseEnter> verfolgt nach, wenn der Mauszeiger die Grenzen eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.UIElement3D.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.MouseEnter> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseEnterEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseEnter" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseEnterEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeave As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseLeave;" />
      <MemberSignature Language="F#" Value="member this.MouseLeave : System.Windows.Input.MouseEventHandler " Usage="member this.MouseLeave : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger den Bereich dieses Elements verlässt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.MouseLeave> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet. Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden.  
  
 Obwohl <xref:System.Windows.UIElement3D.MouseLeave> verfolgt nach, wenn die Maus ein Element, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.UIElement3D.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.MouseLeave> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeave"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseLeaveEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeave" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeaveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.MouseLeftButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang. Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.MouseDoubleClick>.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
> [!IMPORTANT]
>  Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt. Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst. Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.  
  
 Können Sie beheben Sie das Problem, die in den vorherigen wichtigen beschrieben wird und trotzdem erhalten <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:  
  
-   Fügen Sie Handler für die <xref:System.Windows.UIElement3D.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist. Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.  
  
-   Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.UIElement3D.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.MouseLeftButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseLeftButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler MouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler MouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ MouseMove;" />
      <MemberSignature Language="F#" Value="member this.MouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.MouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.MouseMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseMoveEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.MouseRightButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang. Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.MouseDoubleClick>.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 Rechte Schaltfläche Mausereignisse haben systemeigene Behandlung häufig in Anwendungsszenarien. Beispielsweise kann eine rechten Maustaste unten ein Kontextmenü anzuzeigen. Finden Sie unter [Übersicht über ContextMenu](~/docs/framework/wpf/controls/contextmenu-overview.md).  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseRightButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseRightButtonDownEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ MouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) bubbling-Route durch eine Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.MouseRightButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseRightButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseRightButtonUpEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseRightButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler MouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler MouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ MouseUp;" />
      <MemberSignature Language="F#" Value="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.MouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Maustaste über diesem Element losgelassen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Die <xref:System.Windows.UIElement3D.MouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement3D.MouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.MouseRightButtonUp>, eine Version eines der zwei standard Maustasten entsprechen. <xref:System.Windows.UIElement3D.MouseLeftButtonUp> und <xref:System.Windows.UIElement3D.MouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht. Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement3D.MouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.MouseRightButtonUp>.  
  
 <xref:System.Windows.UIElement3D.MouseUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler MouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler MouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ MouseWheel;" />
      <MemberSignature Language="F#" Value="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.MouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.MouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; aus diesem Grund, wenn Sie erhalten die <xref:System.Windows.UIElement3D.MouseWheel> Ereignis von einem Element mit Fokus oder aufgezeichnet, der Mauszeiger möglicherweise nicht über ein anderes Element.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.MouseWheel> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.MouseWheel> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.MouseWheel> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.MouseWheelEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewMouseWheel>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=159992">Behandeln von Ereignissen in 3-d-Beispiel</related>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.MouseWheel" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.MouseWheelEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public virtual bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="abstract member MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool&#xA;override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="uIElement3D.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">Eine Durchlaufanforderung, die eine Eigenschaft enthält, die entweder einen Modus zum Durchlaufen in der vorliegenden Aktivierreihenfolge oder eine Richtung zum visuellen Verschieben angibt.</param>
        <summary>Versucht, den Fokus von diesem Element auf ein anderes Element zu verschieben. Die Richtung, in der der Fokus verschoben wird, wird durch eine Führungsrichtung angegeben, die innerhalb der Organisation des visuellen übergeordneten Elements für dieses Element interpretiert wird.</summary>
        <returns>
          <see langword="true" />, wenn der angeforderte Durchlauf ausgeführt wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellen Sie sicher, dass Sie überprüfen, dass den Rückgabewert dieser Methode. Der Rückgabewert `false` zurückgegeben werden, wenn der Durchlauf ausgeführt wird, in einen Tabstopp, die durch eines Steuerelements Komposition definiert ist, und die durchlaufanforderung hat keine umschließen angefordert.  
  
 <xref:System.Windows.UIElement3D.MoveFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.Focus" />
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected virtual void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit&#xA;override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="uIElement3D.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Die Ereignisdaten für das Tastenkombinationsereignis. In den Ereignisdaten wird gemeldet, welche Taste aufgerufen wurde. Zudem wird angegeben, ob das <see cref="T:System.Windows.Input.AccessKeyManager" />-Objekt, das das Senden dieser Ereignisse steuert, den Aufruf dieser Tastenkombination auch an andere Elemente gesendet hat.</param>
        <summary>Stellt die Klassenbehandlung für eine Situation bereit, in der eine Tastenkombination mit Bedeutung für dieses Element aufgerufen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es ist keine tatsächliche AccessKey-Ereignis in der <xref:System.Windows.UIElement3D> -Klasse, oder an anderer Stelle, die Sie auslösen, oder fügen Sie Handler für können. Stattdessen wird das Ereignis ausgelöst wurde über eine Klasse dedizierter Manager <xref:System.Windows.Input.AccessKeyManager>, welche Prozesse nach dem alle Eingaben, um Zugriffstasten zu suchen, die für die gesamte Eingabe Modell anwendbar sind.  
  
 <xref:System.Windows.UIElement3D.OnAccessKey%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die Standardimplementierung dieser Methode in <see cref="T:System.Windows.UIElement3D" /> legt den Fokus auf dieses Element über Tastatur (durch Aufrufen von <see cref="M:System.Windows.UIElement3D.Focus" />). Implementierungen sollten dieses Verhalten weitergeben, wenn sie den Fokus erhalten kann, sind, da es sich um ein erwartetes Verhalten für Eingabehilfenszenarios handelt. Beachten Sie, dass die grundlegende Implementierung keine Auswirkungen, die mit den übergebenen Ereignisdaten hat und keine weiteren Ereignis löst. Es setzt nur den Fokus.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="abstract member OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer&#xA;override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="uIElement3D.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt klassenspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierungen für die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)]-Infrastruktur zurück.</summary>
        <returns>Die typspezifische <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />-Implementierung.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnCreateAutomationPeer%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Die Implementierung dieser Methode ist in der Regel um den Konstruktor eines bestimmten aufzurufen <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierung, und geben sie als Rückgabewert zurück.  
  
Alle <see cref="T:System.Windows.UIElement3D" /> abgeleitete Klassen sollten diese Methode implementieren, um ihre eigenen spezifischen bieten <see cref="T:System.Windows.Automation.Peers.AutomationPeer" /> Implementierungen der [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Infrastruktur. Weitere Informationen zum Implementieren dieses Musters finden Sie unter <see cref="T:System.Windows.Automation.Peers.AutomationPeer" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnDragEnter%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnDragLeave%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnDragOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.DragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.Drop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnDrop%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.Drop" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnGiveFeedback%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält. Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Ereignis enthalten.</param>
        <summary>Löst das <see cref="E:System.Windows.UIElement3D.GotFocus" />-Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.  
  
 Dies auch mit * methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.UIElement3D.IsFocused%2A> Eigenschaftswert ändert. Die <xref:System.Windows.UIElement3D.OnGotFocus%2A> Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf * Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.  
  
 <xref:System.Windows.UIElement3D.OnGotFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen. Andernfalls die <see cref="E:System.Windows.UIElement3D.GotFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt. Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.UIElement3D.Focusable" /> zu <see langword="false" />.</para>
        </block>
        <altmember cref="P:System.Windows.UIElement3D.Focusable" />
        <altmember cref="E:System.Windows.UIElement3D.GotFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnGotKeyboardFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnGotMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnGotMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnGotMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnGotMouseCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnGotStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnGotStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnGotStylusCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnGotTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnGotTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnGotTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnGotTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnGotTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnGotTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnGotTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnGotTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.GotTouchCapture" />-Routingereignis bereit, das eintritt, wenn eine Berührung für dieses Element erfasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.GotTouchCapture> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnGotTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusedChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsKeyboardFocused%2A> Abhängigkeit Eigenschaft ändert. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass die <xref:System.Windows.UIElement3D.IsKeyboardFocusedChanged> Ereignis nicht um ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsKeyboardFocusedChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsKeyboardFocusWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsKeyboardFocusWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsKeyboardFocusWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsKeyboardFocusWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsKeyboardFocusWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsKeyboardFocusWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsKeyboardFocusWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, kurz bevor das <see cref="E:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged" />-Ereignis von diesem Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsKeyboardFocusWithin%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass die <xref:System.Windows.UIElement3D.IsKeyboardFocusWithinChanged> Ereignis nicht um ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsKeyboardFocusWithinChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseCapturedChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass die <xref:System.Windows.UIElement3D.IsMouseCapturedChanged> Ereignis nicht um ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsMouseCapturedChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnIsMouseCaptureWithinChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <see cref="P:System.Windows.UIElement3D.IsMouseCaptureWithin" /> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <see cref="E:System.Windows.UIElement3D.IsMouseCaptureWithinChanged" /> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsMouseDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsMouseDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsMouseDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsMouseDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsMouseDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsMouseDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsMouseDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsMouseDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsMouseDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass die <xref:System.Windows.UIElement3D.IsMouseDirectlyOverChanged> Ereignis nicht um ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsMouseDirectlyOverChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCapturedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCapturedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCapturedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCapturedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCapturedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCapturedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCapturedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCapturedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusCapturedChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsStylusCapturedChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusCapturedChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusCaptureWithinChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusCaptureWithinChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusCaptureWithinChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusCaptureWithinChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusCaptureWithinChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusCaptureWithinChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusCaptureWithinChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusCaptureWithinChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsStylusCaptureWithin%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsStylusCaptureWithinChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusCaptureWithinChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnIsStylusDirectlyOverChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsStylusDirectlyOverChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsStylusDirectlyOverChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsStylusDirectlyOverChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsStylusDirectlyOverChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsStylusDirectlyOverChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="uIElement3D.OnIsStylusDirectlyOverChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.IsStylusDirectlyOverChanged" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese virtuelle Methode wird aufgerufen, wenn der Wert des der <xref:System.Windows.UIElement3D.IsStylusDirectlyOver%2A> Abhängigkeitseigenschaft geändert wird. Die virtuelle Methode zuerst aufgerufen wird, und kann die Daten nach Bedarf ändern. Die <xref:System.Windows.UIElement3D.IsStylusDirectlyOverChanged> Ereignis mit diesem dieselbe Ereignisdateninstanz ausgelöst. Beachten Sie, dass das Ereignis nicht als ein Routingereignis ist. Aus diesem Grund kann es nicht als markiert im Klassenhandler behandelt.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 <xref:System.Windows.UIElement3D.OnIsStylusDirectlyOverChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird. Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.UIElement3D.OnKeyDown%2A> wird nicht aufgerufen.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnKeyDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tastatureingaben werden von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Tastatureingaben, z. B. Eingabe- und Befehle-Bindungen, benötigen möglicherweise die Tastatureingabe verarbeiten, bevor es als eine allgemeine Tastatureingabe verfügbar gemacht wird. Wenn diese Eingabe Systemfunktionen markieren Sie das Ereignis als behandelt, klicken Sie dann <xref:System.Windows.UIElement3D.OnKeyUp%2A> wird nicht aufgerufen.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnKeyUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.KeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected virtual void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das Ereignisdaten enthält. Diese Ereignisdaten müssen den Bezeichner für das <see cref="E:System.Windows.UIElement3D.LostFocus" />-Ereignis enthalten.</param>
        <summary>Löst das <see cref="E:System.Windows.UIElement3D.LostFocus" />- Routingereignis mithilfe der bereitgestellten Ereignisdaten aus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt auch virtuell, eine Standardimplementierung, die das Ereignis auslöst.  
  
 Dies auch mit * methodenimplementierung dient zum Auslösen des Ereignisses, und diese methodenimplementierung wird intern zum Auslösen des Ereignisses aufgerufen wenn die <xref:System.Windows.UIElement3D.IsFocused%2A> Eigenschaftswert ändert. Diese Implementierung unterscheidet sich von einigen anderen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] auf * Implementierungen, die nur eine bequeme Möglichkeit, Hinzufügen einer Klassenbehandlung für das Ereignis zu bieten.  
  
 <xref:System.Windows.UIElement3D.OnLostFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie wohl durchdacht und ungewöhnliche muss den Fokusereignisse nicht ausgelöst haben, stellen Sie sicher, dass Ihre Implementierung die basisimplementierung aufgerufen. Andernfalls die <see cref="E:System.Windows.UIElement3D.LostFocus" /> Ereignis wird nicht ausgelöst, während typischer Vorgänge, die normalerweise den Fokus auf dieses Element festgelegt. Wenn Sie nicht, dass das Element den Fokus erhalten kann sein beabsichtigen, Sie können verhindern das Element den Fokus erhalten kann durch Festlegen von <see cref="P:System.Windows.UIElement3D.Focusable" /> zu <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnLostKeyboardFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnLostMouseCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostMouseCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostStylusCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostStylusCapture (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostStylusCapture(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostStylusCapture(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostStylusCapture (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostStylusCapture(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnLostStylusCapture : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnLostStylusCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />-Objekt, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnLostStylusCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="OnLostTouchCapture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnLostTouchCapture (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnLostTouchCapture(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnLostTouchCapture(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnLostTouchCapture (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnLostTouchCapture(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnLostTouchCapture : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnLostTouchCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.LostTouchCapture" />-Routingereignis bereit, das auftritt, wenn in diesem Element die Fingereingabenerfassung verloren geht.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.LostTouchCapture> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnLostTouchCapture%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Diese Ereignisdaten melden Details zur Maustaste, die gedrückt wurde, und zum behandelten Zustand.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird. Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement3D.OnMouseDown%2A> wird nicht aufgerufen.  
  
 Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.MouseLeftButtonDown> und <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> empfangen wird.  
  
 Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden. Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen. Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`. Durch Behandlung <xref:System.Windows.UIElement3D.OnMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt. Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.  
  
 Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf * Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnMouseDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie. Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnMouseEnter%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis mit einer direkten routing-Strategie. Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern der typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeave%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes geroutetes <see cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />-Ereignis für dieses Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.MouseLeftButtonDown>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.MouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>.  
  
 Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern. An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab. Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A>. Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeftButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.MouseLeftButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.MouseLeftButtonUp>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.MouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnMouseLeftButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnMouseMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.MouseRightButtonDown> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren. <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.MouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseDown?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>.  
  
 Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern. An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab. Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A>. Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.  
  
 <xref:System.Windows.UIElement3D.OnMouseRightButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.MouseRightButtonUp> Ereignis scheint bubbling-Route übertragen wird aber in ein indirektes Verfahren. <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, das Blasendiagramm weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.MouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnMouseRightButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die Maustaste losgelassen wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird. Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement3D.OnMouseUp%2A> wird nicht aufgerufen.  
  
 Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.MouseLeftButtonUp> und <xref:System.Windows.UIElement3D.MouseRightButtonUp>. Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.MouseUp?displayProperty=nameWithType> empfangen wird.  
  
 Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden. Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen. Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`. Durch Behandlung <xref:System.Windows.UIElement3D.OnMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt. Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.  
  
 Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf * Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnMouseUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnMouseWheel%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragEnter" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragLeave" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDragOver">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDragOver" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDragOver" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewDrop">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit&#xA;override this.OnPreviewDrop : System.Windows.DragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.DragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewDrop" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewDrop" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGiveFeedback">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit&#xA;override this.OnPreviewGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.GiveFeedbackEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewGiveFeedback" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit&#xA;override this.OnPreviewKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit&#xA;override this.OnPreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.KeyboardFocusChangedEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass eine oder mehrere Maustasten gedrückt wurden.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird. Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> wird nicht aufgerufen.  
  
 Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>. Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> empfangen wird.  
  
 Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden. Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen. Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`. Durch Behandlung <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A>, Sie sind wird impliziert, dass die Klassenbehandlung für alle möglichen Aktionen mit gedrückter berücksichtigt. Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.  
  
 Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf * Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die linke Maustaste gedrückt wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>.  
  
 Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern. An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab. Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A>. Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Button> und überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> in der abgeleiteten Klasse ohne Aufrufen der basisimplementierung; dies überschreiben jedoch deaktiviert die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die linke Maustaste losgelassen wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit&#xA;override this.OnPreviewMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die rechte Maustaste gedrückt wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise. <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.MouseRightButtonDown>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>.  
  
 Alternativ können Sie diese Methode überschreiben, um die Ereignisbehandlung für einen bestimmten Maus-Status zu ändern. An, ob Sie wählen, um die basisimplementierung aufrufen, hängt von Ihrem Szenario ab. Deaktiviert die Eingabe Standardbehandlung für dieses Mausereignis für Vorgängerklassen, die erwarten, dass auch aufrufen Basis aufgerufen <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A>. Sie können z. B. Ableiten aus <xref:System.Windows.Controls.Control> und überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> in der abgeleiteten Klasse, ohne dass Base aufgerufen; diese Außerkraftsetzung Bedenken Sie jedoch, den Kontext im Menü Dienste auf das Steuerelement wird von der <xref:System.Windows.Controls.Control> Standardverhalten.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseRightButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseRightButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseRightButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseRightButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseRightButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass die rechte Maustaste losgelassen wurde.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> -Ereignis angezeigt wird, die eine tunnelingroute unterwegs sind aber auf indirekte Weise. <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> ist der zugrunde liegenden Ereignis, Tunnel weitergeleitet, und jedes <xref:System.Windows.UIElement3D> auf das Ereignis Route durchläuft das direkte Routingereignis ausgelöst <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Obwohl Sie markieren können die <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> Ereignis für dieses Element als behandelt, zum behandelte Zustand wird auf andere Elemente auf der Ereignisroute nicht weitergeben. Allerdings möchten Sie das Ereignis als behandelt, um zu verhindern, dass allgemeine instanzhandlern zu markieren (diejenigen, die ihrerseits keine Berechnung angegeben `handledEventsToo`) aufgerufen werden.  
  
 Die Standardimplementierung für allgemeine Maus Ereignisbehandlung in <xref:System.Windows.UIElement3D> Lauscht auf <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> und konvertiert ihn in ein entsprechendes lokales Ereignis. Wenn Sie diese Logik überschreiben möchten, müssen Sie eine abgeleitete Klasse erstellen. Registrieren Sie im statischen Konstruktor der abgeleiteten Klasse, die einen alternativen Klassenhandler für <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType>. Die Handhabung der Maus kann nicht geändert werden <xref:System.Windows.UIElement3D> durch Überschreiben <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A>.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit&#xA;override this.OnPreviewMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseButtonEventArgs" />, das die Ereignisdaten enthält. Die Ereignisdaten melden, dass eine oder mehrere Maustasten losgelassen wurden.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aktionen der Maus werden auch von einem dedizierten Eingabe-Manager verarbeitet. Andere Features für die Programmierung, die Aktionen der Maus, z. B. Eingabe abhängig und Bindungen, Befehl möglicherweise Handler für die Aktion aufrufen, bevor es als eine allgemeine Schaltfläche Mausaktion verfügbar gemacht wird. Wenn Sie diese markieren Eingabedateien der <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis als behandelt, <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> wird nicht aufgerufen.  
  
 Wenn Sie diesen Klassenhandler verwenden, um das Ereignis als behandelt markieren, Sie möglicherweise Auswirkungen auf die folgenden Ereignisse: <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>. Eines dieser Ereignisse kann ausgelöst werden, auf dem empfangenden Element beim <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> empfangen wird.  
  
 Wenn Sie dieses Ereignis in der Klassenbehandlung als behandelt markieren, werden dennoch Unterereignisse ausgelöst. Sie kann jedoch zum behandelten Zustand in den Ereignisdaten übergeben werden. Wenn das Ereignis in der Klassenbehandlung behandelt wird, Instanzhandler für das Unterereignisse werden nicht aufgerufen, wenn Sie explizit verwenden <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` `true` um Handler anzufügen. Klassenhandler werden ebenfalls nicht aufgerufen, wenn diese Klassenhandler registriert wurden, mit der <xref:System.Windows.EventManager.RegisterClassHandler%28System.Type%2CSystem.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur mit `handledEventsToo` `true`. Durch Behandlung <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A>, Sie sind somit den Eindruck erwecken, dass die Klassenbehandlung für alle möglichen Aktionen berücksichtigt. Dieses Verhalten kann unerwünscht sein. Daher vorsichtig, wenn Sie diese virtuelle Methode verwenden, um die Ereignisse als behandelt markieren.  
  
 Jedes der direkten Schaltfläche-spezifische Ereignisse verfügt auch über ein virtuelles auf * Methode. Überlegen Sie, ob überschreiben diese Schaltfläche Klassenhandler besser geeignet sein könnte.  
  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewMouseWheel">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit&#xA;override this.OnPreviewMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.MouseWheelEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnPreviewQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.PreviewQueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnPreviewStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnPreviewStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnPreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnPreviewStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnPreviewTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.PreviewTextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren. Ein weiteres Szenario, das speziell für die Vorschau-Ereignisse ist kennzeichnen behandelt, sodass die entsprechenden bubbling-Klassenhandler nicht aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
        <altmember cref="E:System.Windows.UIElement3D.PreviewTextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe in diesem Element erfasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.PreviewTouchDown> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.PreviewTouchMove> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPreviewTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPreviewTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnPreviewTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPreviewTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPreviewTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnPreviewTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnPreviewTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.PreviewTouchUp> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit&#xA;override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="uIElement3D.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.QueryContinueDragEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryContinueDrag" />
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected internal virtual void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit&#xA;override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="uIElement3D.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.QueryCursorEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnQueryCursor%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.QueryCursor" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonDown (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonDown(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonDown(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonDown (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonDown(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonDown : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusButtonUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusButtonUp (System.Windows.Input.StylusButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusButtonUp(class System.Windows.Input.StylusButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusButtonUp(System.Windows.Input.StylusButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusButtonUp (e As StylusButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusButtonUp(System::Windows::Input::StylusButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit&#xA;override this.OnStylusButtonUp : System.Windows.Input.StylusButtonEventArgs -&gt; unit" Usage="uIElement3D.OnStylusButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusButtonEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusDown (System.Windows.Input.StylusDownEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusDown(class System.Windows.Input.StylusDownEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusDown(System.Windows.Input.StylusDownEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusDown (e As StylusDownEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusDown(System::Windows::Input::StylusDownEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit&#xA;override this.OnStylusDown : System.Windows.Input.StylusDownEventArgs -&gt; unit" Usage="uIElement3D.OnStylusDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusDownEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusDownEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusDown%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusEnter (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusEnter(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusEnter(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusEnter (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusEnter(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusEnter : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis von diesem Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnStylusEnter%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInAirMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInAirMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInAirMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInAirMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInAirMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInAirMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInAirMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInAirMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusInRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusInRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusInRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusInRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusInRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusInRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusInRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusInRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusInRange%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusLeave (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusLeave(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusLeave(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusLeave (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusLeave(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusLeave : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes angefügtes <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis von diesem Element ausgelöst wird. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen. Sie können grundlegende entweder vor oder nach der speziellen Behandlung je nach Ihren Anforderungen aufrufen.  
  
 Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Ereignis als behandelt markiert ist nach wie vor nützlich zum Verhindern von typischen Instanzhandler (diejenigen, die keine angeben `handledEventsToo`) aufgerufen werden.  
  
 <xref:System.Windows.UIElement3D.OnStylusLeave%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusMove (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusMove(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusMove(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusMove (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusMove(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusMove : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusMove%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusOutOfRange">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusOutOfRange (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusOutOfRange(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusOutOfRange(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusOutOfRange (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusOutOfRange(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusOutOfRange : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusOutOfRange e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusSystemGesture">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusSystemGesture (System.Windows.Input.StylusSystemGestureEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusSystemGesture(class System.Windows.Input.StylusSystemGestureEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusSystemGesture(System.Windows.Input.StylusSystemGestureEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusSystemGesture (e As StylusSystemGestureEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusSystemGesture(System::Windows::Input::StylusSystemGestureEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit&#xA;override this.OnStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventArgs -&gt; unit" Usage="uIElement3D.OnStylusSystemGesture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusSystemGestureEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusSystemGestureEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="OnStylusUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStylusUp (System.Windows.Input.StylusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStylusUp(class System.Windows.Input.StylusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnStylusUp(System.Windows.Input.StylusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStylusUp (e As StylusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStylusUp(System::Windows::Input::StylusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit&#xA;override this.OnStylusUp : System.Windows.Input.StylusEventArgs -&gt; unit" Usage="uIElement3D.OnStylusUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.StylusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.StylusEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnStylusUp%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit&#xA;override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="uIElement3D.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Das <see cref="T:System.Windows.Input.TextCompositionEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Wird aufgerufen, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht. Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode besitzt keine Standardimplementierung. Da eine Zwischenklasse in die Vererbung diese Methode implementiert wird kann, empfehlen wir, dass Sie in Ihrer Implementierung die basisimplementierung aufrufen.  
  
 Der Zweck dieser Methode ähnelt der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignismuster auf * Methoden: Diese Methode bietet die Möglichkeit, die von abgeleiteten Klassen das übereinstimmende Ereignis zu behandeln, indem ein Klassenhandler, statt einen Instanzhandler für die herstellen. In diesem Fall wird das übereinstimmende Ereignis ein Routingereignis. Das Implementierungsmuster On * Methoden unterscheidet sich für Routingereignisse, da ein Routingereignis durch ein untergeordnetes Element ausgelöst werden kann, handelt es sich nicht unbedingt das Element, mit das Handler aufgerufen wird. Aus diesem Grund muss die Implementierung die Datenquelleneigenschaften der Ereignisdaten zu untersuchen. Sie sollten nicht versuchen, auf das Ereignis in den meisten Fällen ausgelöst werden.  
  
 Durch diese Methode überschreiben oder durch die Registrierung der Handler mit Klasse <xref:System.Windows.EventManager.RegisterClassHandler%2A>, abgeleitete Klassen von <xref:System.Windows.UIElement3D> können Handlermethoden für private Klasse aufrufen, wenn das Ereignis auf der Ereignisroute empfangen wird. Ein Szenario, in dem Klassenbehandlung geeignet ist, wird zum Bearbeiten von Daten für das Ereignis und das Routingereignis als behandelt markieren.  
  
 <xref:System.Windows.UIElement3D.OnTextInput%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.TextInput" />
      </Docs>
    </Member>
    <Member MemberName="OnTouchDown">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchDown (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchDown(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchDown(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchDown (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchDown(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchDown : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchDown" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements erfasst wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnTouchDown%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchDown%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.TouchDown> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnTouchDown%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchEnter">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchEnter (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchEnter(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchEnter(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchEnter (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchEnter(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchEnter : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchEnter" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von außerhalb der Grenzen dieses Elements nach innen verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnTouchEnter%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchEnter%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.TouchEnter> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnTouchEnter%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchLeave">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchLeave (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchLeave(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchLeave(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchLeave (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchLeave(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchLeave : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchLeave" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe von innerhalb der Grenzen dieses Elements nach außen verschoben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnTouchLeave%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchLeave%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.TouchLeave> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnTouchLeave%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchMove">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchMove (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchMove(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchMove(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchMove (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchMove(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchMove : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchMove" />-Routingereignis bereit, das auftritt, wenn sich eine Fingereingabe innerhalb dieses Elements bewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnTouchMove%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchMove%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.TouchMove> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnTouchMove%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTouchUp">
      <MemberSignature Language="C#" Value="protected internal virtual void OnTouchUp (System.Windows.Input.TouchEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnTouchUp(class System.Windows.Input.TouchEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnTouchUp(System.Windows.Input.TouchEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnTouchUp (e As TouchEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnTouchUp(System::Windows::Input::TouchEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit&#xA;override this.OnTouchUp : System.Windows.Input.TouchEventArgs -&gt; unit" Usage="uIElement3D.OnTouchUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TouchEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.Input.TouchEventArgs" />, das die Ereignisdaten enthält.</param>
        <summary>Stellt Klassenbehandlung für das <see cref="E:System.Windows.UIElement3D.TouchUp" />-Routingereignis bereit, das auftritt, wenn eine Fingereingabe innerhalb dieses Elements freigegeben wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.OnTouchUp%2A> Methode keine Standardimplementierung besitzt. Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchUp%2A> in einer abgeleiteten Klasse zum Behandeln der <xref:System.Windows.UIElement3D.TouchUp> Ereignis. Achten Sie darauf, dass Sie die Basisklasse aufrufen <xref:System.Windows.UIElement3D.OnTouchUp%2A> Methode, damit die Basisklassen das Ereignis empfangen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUpdateModel">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateModel ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateModel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnUpdateModel" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateModel ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateModel();" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateModel : unit -&gt; unit&#xA;override this.OnUpdateModel : unit -&gt; unit" Usage="uIElement3D.OnUpdateModel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Nimmt beim Überschreiben in einer abgeleiteten Klasse an Renderingvorgängen teil.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Beim Ableiten einer Klasse von der <xref:System.Windows.UIElement3D> -Klasse, können Sie diese Methode zusammen mit den <xref:System.Windows.UIElement3D.InvalidateModel%2A> Methode, um das Modell des Elements zu aktualisieren.  
  
 Sie müssen nur zum Aufrufen dieser Methode in erweiterten Szenarien. Ein solches Szenario erweitertes ist, wenn die abgeleitete Klasse verfügt über mehrere Eigenschaften, die das Erscheinungsbild und das zugrunde liegende Modell nur einmal aktualisiert werden soll. Innerhalb der <xref:System.Windows.UIElement3D.OnUpdateModel%2A> Methode, die Sie aktualisieren, könnte die <xref:System.Windows.Media.Media3D.Visual3D.Visual3DModel%2A> Eigenschaft der <xref:System.Windows.Media.Media3D.Visual3D> Klasse.  
  
 Diese Methode keine Standardimplementierung besitzt, der <xref:System.Windows.UIElement3D> Klasse.  
  
 <xref:System.Windows.UIElement3D.OnUpdateModel%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie für die Ableitung der <xref:System.Windows.UIElement3D> -Klasse zur Erstellung einer `Sphere` Klasse:  
  
 [!code-csharp[Shapes#Sphere](~/samples/snippets/csharp/VS_Snippets_Wpf/Shapes/CSharp/Sphere.cs#sphere)]
 [!code-vb[Shapes#Sphere](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Shapes/visualbasic/sphere.vb#sphere)]  
  
 Das vollständige Beispiel finden Sie unter [UIElement3D Kugel Beispiel](https://go.microsoft.com/fwlink/?LinkID=160044).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="uIElement3D.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">Das bisherige übergeordnete Element. Dieses wird u. U. mit dem Wert <see langword="null" /> bereitgestellt, wenn für das <see cref="T:System.Windows.DependencyObject" /> zuvor kein übergeordnetes Element vorhanden war.</param>
        <summary>Wird aufgerufen, wenn das übergeordnete Element dieses <see cref="T:System.Windows.UIElement3D" /> eine Änderung an seinem zugrunde liegenden visuellen übergeordneten Element meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.OnVisualParentChanged%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn Sie diese Methode überschreiben, rufen Sie die basisimplementierung immer. Die Basis-Standardimplementierung führt einige interne Wartung Reverse geerbte Eigenschaft Status. Die basisimplementierung aufgerufen, wird dieser Status ungültig.  
  
Diese Methode überschreibt <see cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />. <see cref="T:System.Windows.FrameworkElement" /> und <see cref="T:System.Windows.Window" /> sowohl auch überschreiben, die <see cref="T:System.Windows.UIElement3D" /> Implementierung <see cref="M:System.Windows.UIElement3D.OnVisualParentChanged(System.Windows.DependencyObject)" />, und <see cref="T:System.Windows.Window" /> versiegelt.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject&#xA;override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="uIElement3D.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">Die Richtung des angeforderten Fokusdurchlaufs.</param>
        <summary>Gibt beim Überschreiben in einer abgeleiteten Klasse das Element zurück, das den Fokus für eine bestimmte Richtung des Fokusdurchlaufs empfängt, ohne dass der Fokus tatsächlich auf das betreffende Element verschoben wird.</summary>
        <returns>Das Element, das den Fokus erhält, wenn <see cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" /> tatsächlich aufgerufen wird.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Standardimplementierung dieser Methode in dieser Klasse ist unvollständig und gibt immer `null`.  
  
 <xref:System.Windows.UIElement3D.PredictFocus%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragEnter As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragEnter;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragEnter : System.Windows.DragEventHandler " Usage="member this.PreviewDragEnter : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Ziel meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewDragEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewDragEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewDragEnter> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragEnter"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewDragEnterEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.DragEnter>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewDragEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragEnter" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragEnterEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragLeave As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragLeave;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragLeave : System.Windows.DragEventHandler " Usage="member this.PreviewDragLeave : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als Drag-Quelle meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewDragLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewDragLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewDragLeave> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragLeave"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewDragLeaveEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.DragLeave>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewDragLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragLeave" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragLeaveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOver">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDragOver;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDragOver" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDragOver" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDragOver As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDragOver;" />
      <MemberSignature Language="F#" Value="member this.PreviewDragOver : System.Windows.DragEventHandler " Usage="member this.PreviewDragOver : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drag-Ereignis mit diesem Element als potenzielles Drop-Ziel meldet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewDragOver> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewDragOver> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDragOver?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewDragOver> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDragOver"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewDragOverEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.DragOver>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewDragOver%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDragOverEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDragOverEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDragOverEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDragOverEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDragOverEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDragOverEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDragOverEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDragOver" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDragOverEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDrop">
      <MemberSignature Language="C#" Value="public event System.Windows.DragEventHandler PreviewDrop;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DragEventHandler PreviewDrop" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewDrop" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewDrop As DragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DragEventHandler ^ PreviewDrop;" />
      <MemberSignature Language="F#" Value="member this.PreviewDrop : System.Windows.DragEventHandler " Usage="member this.PreviewDrop : System.Windows.DragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Eingabesystem ein zugrunde liegendes Drop-Ereignis meldet, das dieses Element als Drop-Ziel aufweist.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewDrop> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewDrop> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewDrop?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewDrop> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewDrop"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewDropEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.DragEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.Drop>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewDrop%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewDropEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewDropEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewDropEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewDropEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewDropEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewDropEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewDropEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewDrop" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewDropEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedback">
      <MemberSignature Language="C#" Value="public event System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.GiveFeedbackEventHandler PreviewGiveFeedback" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGiveFeedback" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGiveFeedback As GiveFeedbackEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::GiveFeedbackEventHandler ^ PreviewGiveFeedback;" />
      <MemberSignature Language="F#" Value="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " Usage="member this.PreviewGiveFeedback : System.Windows.GiveFeedbackEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.GiveFeedbackEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Drag &amp; Drop-Vorgang gestartet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewGiveFeedback> Ereignis können Sie die Quelle eines Ereignisses ziehen Sie die Darstellung des Mauszeigers zu ändern, um dem Benutzer während eines Drag & Drop-Vorgangs ein visuelles Feedback.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewGiveFeedback> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewGiveFeedback> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewGiveFeedback?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewGiveFeedback> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewGiveFeedback"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.GiveFeedbackEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.GiveFeedback>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewGiveFeedback%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGiveFeedbackEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGiveFeedbackEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGiveFeedbackEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGiveFeedbackEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGiveFeedbackEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGiveFeedbackEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewGiveFeedback" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewGiveFeedbackEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewGotKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewGotKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewGotKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewGotKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus besitzt möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, den Fokus besitzt.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewGotKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.GotKeyboardFocus>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewGotKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewGotKeyboardFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyDown As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyDown : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Taste gedrückt wird, während sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition. Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewKeyDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewKeyDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewKeyDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.KeyDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewKeyDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewKeyDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyEventHandler PreviewKeyUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyEventHandler PreviewKeyUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewKeyUp As KeyEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyEventHandler ^ PreviewKeyUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " Usage="member this.PreviewKeyUp : System.Windows.Input.KeyEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewKeyUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Taste losgelassen wird, während sich der Fokus der Tastatur auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Schlüsselverarbeitung interagiert mit anderen Features der Plattform wie z. B. die Befehle "und" Text-Komposition.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewKeyUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewKeyUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewKeyUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.KeyUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewKeyUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewKeyUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewKeyUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.KeyboardFocusChangedEventHandler PreviewLostKeyboardFocus" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewLostKeyboardFocus As KeyboardFocusChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::KeyboardFocusChangedEventHandler ^ PreviewLostKeyboardFocus;" />
      <MemberSignature Language="F#" Value="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " Usage="member this.PreviewLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewLostKeyboardFocus</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardFocusChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Fokus der Tastatur nicht mehr auf diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Da dieses Ereignis wird verwendet, Tunneln, routing, das Element, das Fokus verloren hat möglicherweise ein untergeordnetes Element statt dem Element, an der Ereignishandler tatsächlich angefügt ist. Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisdaten an das tatsächliche Element zu bestimmen, die Fokus verloren hat.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocus> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.LostKeyboardFocus>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewLostKeyboardFocus%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewGotKeyboardFocus" />
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewLostKeyboardFocus" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewLostKeyboardFocusEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewMouseDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewMouseDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Die <xref:System.Windows.UIElement3D.PreviewMouseDown> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>, Drücken einer der beiden standardmäßigen Maustasten entsprechen. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht. Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.MouseDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang. Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseLeftButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseLeftButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseLeftButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseLeftButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseLeftButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseLeftButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseLeftButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseLeftButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseLeftButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseLeftButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseLeftButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseLeftButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseLeftButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseLeftButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseEventHandler PreviewMouseMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseEventHandler PreviewMouseMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseMove As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseEventHandler ^ PreviewMouseMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " Usage="member this.PreviewMouseMove : System.Windows.Input.MouseEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis tritt auf, wenn der Mauszeiger zunächst in der Grenzen des Elements eintritt und auch wenn der Mauszeiger bewegt wird und trotzdem innerhalb der Grenzen des Elements.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseMoveEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.MouseMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonDown As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonDown : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die rechte Maustaste gedrückt wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseDown?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang. Dies schließt möglicherweise Klassenhandler generierte Ereignisse wie z. B. <xref:System.Windows.Controls.Control.PreviewMouseDoubleClick>.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseRightButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseRightButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseRightButtonUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseRightButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseRightButtonUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseRightButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die rechte Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Obwohl dies [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) eine tunnelingroute in einer Elementstruktur folgen scheint es ist tatsächlich eine direkte Routingereignis, das ausgelöst wird, und die Elementstruktur von jedem erneut <xref:System.Windows.UIElement3D>.  
  
 Dieses Ereignis ist eines von mehreren verwandten Ereignissen, die die Schaltflächen Einzelheiten einer zugrunde liegenden Berichten <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis, das ein angefügtes Ereignis handelt, die von jedem Element auf einer Ereignisroute verarbeitet wird.  
  
 Die Ereignisdaten für dieses Ereignis verfügbar macht, die Daten der zugrunde liegenden <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> Ereignis. Wenn das Ereignis als behandelt, auf der Ereignisroute markiert ist, werden die spezifischen Ereignisse für Schaltflächen weiterhin ausgelöst wird. Handler für die bestimmte Ereignisse für Schaltflächen müssen jedoch durch explizites Aufrufen hinzugefügt werden <xref:System.Windows.UIElement3D.AddHandler%2A>, mit der Option zum Behandeln von Ereignissen, die bereits als behandelt markiert werden, um Listener das Ereignis verwendet werden. Wenn Sie kennzeichnen <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> behandelt, Sie sind im Wesentlichen markieren <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> für alle weiteren Listener entlang der Route als behandelt und für alle Ereignisse im Zusammenhang.  
  
 Betrachten Sie dieses Ereignis vom Konzept her (und andere Ereignisse der Schaltflächen auf <xref:System.Windows.UIElement3D>) eine Maus "Service" sein (mit der Definition des Diensts bereitgestellt werden, indem der <xref:System.Windows.Input.Mouse> Klasse). Das Ereignis wird hinzugefügt, die Vorteile ohne überprüfen Sie die Maus Schaltflächenstatus (links nach rechts, nach oben und unten) von den Mausereignissen ursprünglichen in den Ereignisdaten. Für einige erweiterte Szenarien, z. B. das Überprüfen von Zuständen, der nicht standardmäßige Schaltflächen, müssen Sie möglicherweise verwenden die [!INCLUDE[TLA#tla_api#plural](~/includes/tlasharptla-apisharpplural-md.md)] auf die <xref:System.Windows.Input.Mouse> -Klasse anstelle der für <xref:System.Windows.UIElement3D>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseRightButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseRightButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.MouseRightButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseRightButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseRightButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseRightButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseRightButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseRightButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseButtonEventHandler PreviewMouseUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseButtonEventHandler PreviewMouseUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseUp As MouseButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::MouseButtonEventHandler ^ PreviewMouseUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " Usage="member this.PreviewMouseUp : System.Windows.Input.MouseButtonEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn eine Maustaste losgelassen wird, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewMouseUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewMouseUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Die <xref:System.Windows.UIElement3D.PreviewMouseUp> -Ereignisses häufig zusammen mit den beiden <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>, Drücken einer der beiden standardmäßigen Maustasten entsprechen. <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp> sind ebenfalls Routingereignisse, aber sie sind direkte Routingereignisse und die entsprechende Schaltfläche-spezifische-Ereignis wird ausgelöst, wenn die <xref:System.Windows.Input.Mouse.PreviewMouseUp?displayProperty=nameWithType> -Ereignis dieses Element auf der Ereignisroute erreicht. Finden Sie unter "Hinweise" für <xref:System.Windows.UIElement3D.PreviewMouseLeftButtonUp> oder <xref:System.Windows.UIElement3D.PreviewMouseRightButtonUp>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.MouseUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.MouseWheelEventHandler PreviewMouseWheel" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewMouseWheel As MouseWheelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::MouseWheelEventHandler ^ PreviewMouseWheel;" />
      <MemberSignature Language="F#" Value="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " Usage="member this.PreviewMouseWheel : System.Windows.Input.MouseWheelEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewMouseWheel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseWheelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer das Mausrad dreht, während sich der Mauszeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; Wenn Sie dieses Ereignis von einem Element mit Fokus oder erfasste erhalten haben, kann der Mauszeiger aus diesem Grund tatsächlich über ein anderes Element befinden.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewMouseMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewMouseMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseWheel> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewMouseWheelEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.MouseWheel>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewMouseWheel%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewMouseWheel" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewMouseWheelEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler PreviewQueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewQueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ PreviewQueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.PreviewQueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> Ereignis ermöglicht der Ziehquelle, um zu deklarieren, die Drag & Drop-Vorgang abgebrochen werden soll.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.PreviewQueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewQueryContinueDrag"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.QueryContinueDrag>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewQueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewQueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewQueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewQueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewQueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewQueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewQueryContinueDrag" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewQueryContinueDragEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusButtonDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler PreviewStylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ PreviewStylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.PreviewStylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusButtonUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler PreviewStylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler PreviewStylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ PreviewStylusDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.PreviewStylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift den Digitizer berührt, während dieser sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInAirMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusInAirMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInAirMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusInRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInRange> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusInRange>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusInRange" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusInRangeEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Tablettstift bewegt wird, während er sich über dem Element befindet. Der Tablettstift muss während der Erkennung durch den Digitizer bewegt werden, damit dieses Ereignis ausgelöst wird, andernfalls wird stattdessen <see cref="E:System.Windows.UIElement3D.PreviewStylusInAirMove" /> ausgelöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusMoveEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Stift zu weit vom Digitizer entfernt befindet, um erkannt zu werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusOutOfRange>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusOutOfRange" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusOutOfRangeEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler PreviewStylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ PreviewStylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.PreviewStylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusSystemGesture>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusSystemGesture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusSystemGestureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler PreviewStylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler PreviewStylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewStylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ PreviewStylusUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.PreviewStylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewStylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Benutzer den Tablettstift vom Digitizer hebt, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewStylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewStylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.PreviewStylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.PreviewStylusUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewStylusUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.StylusUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewStylusUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewStylusUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler PreviewTextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler PreviewTextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ PreviewTextInput;" />
      <MemberSignature Language="F#" Value="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.PreviewTextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.PreviewTextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.PreviewTextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen. Die Tastatur dient primär der <xref:System.Windows.UIElement3D.PreviewTextInput>; Spracherkennung, handschrifterkennung und andere Eingabegeräte können jedoch auch generieren <xref:System.Windows.UIElement3D.PreviewTextInput>.  
  
 Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren, mehrere wichtige Ereignisse können nur ein Text Ereignisse auslösen.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.PreviewTextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.PreviewTextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.PreviewTextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.PreviewTextInput> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_PreviewTextInput"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewTextInputEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.TextInput>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewKeyDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTextInput" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.PreviewTextInputEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchDown;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt. Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>. Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.  
  
 Die dazu führen, dass die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.  
  
<a name="routedEventInfo_PreviewTouchDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewTouchDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.TouchDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchDown" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchMove;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewTouchMoveEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.TouchMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchMove" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; PreviewTouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.PreviewTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviewTouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ PreviewTouchUp;" />
      <MemberSignature Language="F#" Value="member this.PreviewTouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.PreviewTouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_PreviewTouchUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.PreviewTouchUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.UIElement3D.TouchUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnPreviewTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewTouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewTouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewTouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewTouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewTouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewTouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.PreviewTouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.PreviewTouchUp" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDrag">
      <MemberSignature Language="C#" Value="public event System.Windows.QueryContinueDragEventHandler QueryContinueDrag;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.QueryContinueDragEventHandler QueryContinueDrag" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryContinueDrag" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryContinueDrag As QueryContinueDragEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::QueryContinueDragEventHandler ^ QueryContinueDrag;" />
      <MemberSignature Language="F#" Value="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " Usage="member this.QueryContinueDrag : System.Windows.QueryContinueDragEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.QueryContinueDragEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Status der Tastatur oder der Maustaste während eines Drag &amp; Drop-Vorgangs ändert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.QueryContinueDrag> Ereignis können Sie die Quelle des Ziehvorgangs bestimmen, ob der Drag & Drop-Vorgang abgebrochen werden soll.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.QueryContinueDrag> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.QueryContinueDrag> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.DragDrop.QueryContinueDrag?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.QueryContinueDrag> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_QueryContinueDrag"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.QueryContinueDragEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.QueryContinueDragEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewQueryContinueDrag>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnQueryContinueDrag%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryContinueDragEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryContinueDragEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryContinueDragEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryContinueDragEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryContinueDragEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryContinueDragEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryContinueDragEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.QueryContinueDrag" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.QueryContinueDragEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.QueryCursorEventHandler QueryCursor;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.QueryCursorEventHandler QueryCursor" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCursor As QueryCursorEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Input::QueryCursorEventHandler ^ QueryCursor;" />
      <MemberSignature Language="F#" Value="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " Usage="member this.QueryCursor : System.Windows.Input.QueryCursorEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.QueryCursorEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Anzeige des Cursors angefordert wird. Dieses Ereignis wird immer dann für ein Element ausgelöst, wenn der Mauszeiger an eine neue Position bewegt wird, d  h., das Cursorobjekt muss möglicherweise in Abhängigkeit von seiner neuen Position geändert werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.QueryCursor> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.QueryCursor> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Mouse.QueryCursor?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Der Cursor, die mit diesem Ereignisnamen verwiesen wird, ist nicht unbedingt der Cursor (manchmal als Einfügemarke bezeichnet). Stattdessen wird der Cursor in diesem Kontext das Objekt, das die auf dem Bildschirm grafische Anzeige, die im Zusammenhang mit mehreren möglichen Eingaben relevanten Geräten oder Konzepte in der Windows-Programmierung deklariert. Dieses Objekt wird dargestellt, durch die <xref:System.Windows.Input.Cursor> -Klasse in WPF. Das WPF-Eingabesystem können Sie diesen Cursor zu ändern, wenn sie die Bildschirmposition des Mauszeigers darstellt. Können Sie vordefinierte Werte aus der <xref:System.Windows.Input.Cursors> -Enumeration, oder Sie können einen benutzerdefinierten Cursor als Bilddatei zu deklarieren.  
  
 Überwacht die <xref:System.Windows.UIElement3D.QueryCursor> Ereignis nicht um eine effiziente Methode für die Verwaltung der Cursor ist. Jedes Element definieren Sie stattdessen eine eigene Cursorverhalten mit <xref:System.Windows.FrameworkContentElement.Cursor%2A> und <xref:System.Windows.FrameworkContentElement.ForceCursor%2A>. Sie sollten nur auf verlassen <xref:System.Windows.UIElement3D.QueryCursor> , wenn Sie nicht die Basiselementen für WPF-Frameworkebene, oder in außergewöhnlichen Fällen, in dem Definieren des Cursorverhaltens individuell pro Element nicht Ihren Anforderungen entspricht. Weitere Informationen zum Implementieren von Cursorverhalten als Reaktion auf <xref:System.Windows.UIElement3D.QueryCursor>, finden Sie unter <xref:System.Windows.Input.QueryCursorEventHandler>.  
  
 <xref:System.Windows.UIElement3D.QueryCursor> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_QueryCursor"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.QueryCursorEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
-   Es ist keine definiertes entsprechende Tunneling-Ereignis.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnQueryCursor%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.QueryCursor" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.QueryCursorEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseEvent">
      <MemberSignature Language="C#" Value="public void RaiseEvent (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseEvent(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RaiseEvent(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseEvent (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RaiseEvent(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.RaiseEvent : System.Windows.RoutedEventArgs -&gt; unit" Usage="uIElement3D.RaiseEvent e" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RaiseEvent(System.Windows.RoutedEventArgs)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Ein <see cref="T:System.Windows.RoutedEventArgs" />, das die Ereignisdaten enthält und zudem das auszulösende Ereignis angibt.</param>
        <summary>Löst ein bestimmtes Routingereignis aus. Das auszulösende <see cref="T:System.Windows.RoutedEvent" /> wird innerhalb der <see cref="T:System.Windows.RoutedEventArgs" />-Instanz identifiziert, die bereitgestellt wird (als <see cref="P:System.Windows.RoutedEventArgs.RoutedEvent" />-Eigenschaft für diese Ereignisdaten).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `e` Parameter wird als gemeinsamer Basistyp für alle Routingereignisdaten eingegeben; allerdings sollten Daten für das Ereignis zugewiesen werden, als spezifischste Event-Datentyp, der für das Ereignis ausgelöst wird, verfügbar ist, da <xref:System.Windows.RoutedEventArgs> abgeleitete Klassen enthalten die tatsächliche Daten-Eigenschaften, die vorgesehen sind, für das spezifische Ereignis, wenn es ausgelöst wird.  
  
 <xref:System.Windows.RoutedEventArgs> ist nicht nur die Status-Eigenschaften für das Ereignis. Er gibt außerdem die Routingereignis ausgelöst werden soll. Dieses Ereignis auslösen Muster und die Routingereignisdaten, unterscheiden sich von [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse und Klassen, die in der Regel nur die Eigenschaften enthalten, die dem Ereignis verknüpft sind.  
  
 <xref:System.Windows.UIElement3D.RaiseEvent%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseAllTouchCaptures">
      <MemberSignature Language="C#" Value="public void ReleaseAllTouchCaptures ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseAllTouchCaptures() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseAllTouchCaptures" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseAllTouchCaptures ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseAllTouchCaptures();" />
      <MemberSignature Language="F#" Value="member this.ReleaseAllTouchCaptures : unit -&gt; unit" Usage="uIElement3D.ReleaseAllTouchCaptures " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt alle erfassten Fingereingabegeräte für das Element frei.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseMouseCapture">
      <MemberSignature Language="C#" Value="public void ReleaseMouseCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseMouseCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseMouseCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseMouseCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseMouseCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseMouseCapture : unit -&gt; unit&#xA;override this.ReleaseMouseCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseMouseCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseMouseCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt die Erfassung von Mauseingaben frei, wenn für dieses Element die Erfassung festgelegt war.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen. Prüfen Sie ggf. auf den Wert der <xref:System.Windows.UIElement3D.IsMouseCaptured%2A> , bevor Sie diese Methode aufrufen.  
  
 <xref:System.Windows.UIElement3D.ReleaseMouseCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsMouseCaptured" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseStylusCapture">
      <MemberSignature Language="C#" Value="public void ReleaseStylusCapture ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseStylusCapture() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseStylusCapture" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseStylusCapture ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseStylusCapture();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseStylusCapture : unit -&gt; unit&#xA;override this.ReleaseStylusCapture : unit -&gt; unit" Usage="uIElement3D.ReleaseStylusCapture " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.ReleaseStylusCapture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt das Erfassen der Eingaben von Tablettstiftgeräten frei, wenn für dieses Element die Erfassung festgelegt war.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn dieses Element die Erfassung nicht vorhanden war, hat das Aufrufen dieser Methode keine Auswirkungen. Prüfen Sie ggf. auf den Wert der <xref:System.Windows.UIElement3D.IsStylusCaptured%2A> , bevor Sie diese Methode aufrufen.  
  
 <xref:System.Windows.UIElement3D.ReleaseStylusCapture%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseTouchCapture">
      <MemberSignature Language="C#" Value="public bool ReleaseTouchCapture (System.Windows.Input.TouchDevice touchDevice);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ReleaseTouchCapture(class System.Windows.Input.TouchDevice touchDevice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ReleaseTouchCapture(System.Windows.Input.TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ReleaseTouchCapture(System::Windows::Input::TouchDevice ^ touchDevice);" />
      <MemberSignature Language="F#" Value="member this.ReleaseTouchCapture : System.Windows.Input.TouchDevice -&gt; bool" Usage="uIElement3D.ReleaseTouchCapture touchDevice" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="touchDevice" Type="System.Windows.Input.TouchDevice" />
      </Parameters>
      <Docs>
        <param name="touchDevice">Das freizugebende Gerät.</param>
        <summary>Versucht, das angegebene Fingereingabegerät von diesem Element freizugeben.</summary>
        <returns>
          <see langword="true" />, wenn das Fingereingabegerät freigegeben wurde, andernfalls <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="touchDevice" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveHandler">
      <MemberSignature Language="C#" Value="public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveHandler(class System.Windows.RoutedEvent routedEvent, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveHandler(System::Windows::RoutedEvent ^ routedEvent, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="abstract member RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit&#xA;override this.RemoveHandler : System.Windows.RoutedEvent * Delegate -&gt; unit" Usage="uIElement3D.RemoveHandler (routedEvent, handler)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.IInputElement.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routedEvent" Type="System.Windows.RoutedEvent" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="routedEvent">Der Bezeichner des Routingereignisses, für das der Handler angefügt wurde.</param>
        <param name="handler">Die spezifische Handlerimplementierung, die aus der Ereignishandlerauflistung dieses Elements entfernt werden soll.</param>
        <summary>Entfernt den angegebenen Routingereignishandler aus diesem Element.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das häufigste Szenario für die Verwendung dieser [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] stellt beim Implementieren der [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] "Wrapper"-Ereignis, das eines benutzerdefinierten Routingereignisses, insbesondere beim Implementieren der "entfernen"-Logik für Handler auf zugeordnet ist die [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ebene.  
  
 Das Aufrufen dieser Methode hat keine Auswirkungen, gäbe es keine Handler registriert mit Kriterien, die die Eingabeparameter für den Aufruf der Methode entsprechen.  
  
 Wenn mehr als einen Handler, die die Kriterien, die nur der erste Handler übereinstimmen angefügt ist, den Fall, dass Speicher des ereignishandlers entfernt wird. Dieses Verhalten ist konsistent mit [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Verhalten der `-=` Operator.  
  
 Weder `routedEvent` noch `handler` möglicherweise `null`. Es wird versucht, einen der Werte `null` wird eine Ausnahme ausgelöst.  
  
 Diese Methode ignoriert die `handledEventsToo` Informationen zu den Parametern, die bereitgestellt wird, wenn der Handler wurde hinzugefügt, mit der <xref:System.Windows.UIElement3D.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> Signatur, die Verarbeitung der bereits behandelten Ereignisse ermöglicht. Beide Arten von Handler entfernt wird.  
  
 <xref:System.Windows.UIElement3D.RemoveHandler%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement3D.AddHandler(System.Windows.RoutedEvent,System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeCommandBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeCommandBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeCommandBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeCommandBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeCommandBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeCommandBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeCommandBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeCommandBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement3D.CommandBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</summary>
        <returns>
          <see langword="true" />, wenn der <see cref="P:System.Windows.UIElement3D.CommandBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Als Ergebnis erhalten `true` Wenn <xref:System.Windows.UIElement3D.CommandBindings%2A> lokal festgelegt ist.  
  
 Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement3D.CommandBindings%2A> Eigenschaft hat keine einfachen Standardwert. Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat. Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement3D>.  
  
 Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 <xref:System.Windows.UIElement3D.ShouldSerializeCommandBindings%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeInputBindings">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeInputBindings ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeInputBindings() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.UIElement3D.ShouldSerializeInputBindings" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeInputBindings () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeInputBindings();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeInputBindings : unit -&gt; bool" Usage="uIElement3D.ShouldSerializeInputBindings " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt zurück, ob in Serialisierungsprozessen der Inhalt der <see cref="P:System.Windows.UIElement3D.InputBindings" />-Eigenschaft für Instanzen dieser Klasse serialisiert werden soll.</summary>
        <returns>
          <see langword="true" />, wenn der <see cref="P:System.Windows.UIElement3D.InputBindings" />-Eigenschaftswert serialisiert werden soll, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Als Ergebnis erhalten `true` Wenn <xref:System.Windows.UIElement3D.InputBindings%2A> lokal festgelegt ist.  
  
 Dies `ShouldSerialize` Methode wird bereitgestellt, da die <xref:System.Windows.UIElement3D.InputBindings%2A> Eigenschaft hat keine einfachen Standardwert. Diese Methode gibt an, ob die Eigenschaft von seinem Standardwert geändert hat. Diese Methode wird in der Regel aufgerufen, wenn Sie entweder einen Designer oder entwickeln Ihre eigenen Steuerelement Integrieren einer <xref:System.Windows.UIElement3D>.  
  
 Weitere Informationen finden Sie unter [Definieren von Standardwerten mit der ShouldSerialize-Methode und der Reset-Methode](~/docs/framework/winforms/controls/defining-default-values-with-the-shouldserialize-and-reset-methods.md).  
  
 <xref:System.Windows.UIElement3D.ShouldSerializeInputBindings%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonDown As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonDown;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonDown : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Stifttaste gedrückt wird, während sich der Zeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusButtonDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusButtonDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusButtonDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusButtonDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusButtonDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusButtonDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusButtonDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusButtonDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusButtonEventHandler StylusButtonUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusButtonEventHandler StylusButtonUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusButtonUp As StylusButtonEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusButtonEventHandler ^ StylusButtonUp;" />
      <MemberSignature Language="F#" Value="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " Usage="member this.StylusButtonUp : System.Windows.Input.StylusButtonEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusButtonUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusButtonEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn die Stifttaste losgelassen wird, während sich der Zeiger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusButtonUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusButtonUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusButtonUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusButtonUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusButtonUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusButtonUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusButtonUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement3D.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusButtonUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusButtonUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusDownEventHandler StylusDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusDownEventHandler StylusDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusDown As StylusDownEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusDownEventHandler ^ StylusDown;" />
      <MemberSignature Language="F#" Value="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " Usage="member this.StylusDown : System.Windows.Input.StylusDownEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusDown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDownEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift den Digitizer berührt, während sich der Stift über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusDown> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusDown> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusDown?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusDown> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusDown" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusDownEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusEnter As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusEnter;" />
      <MemberSignature Language="F#" Value="member this.StylusEnter : System.Windows.Input.StylusEventHandler " Usage="member this.StylusEnter : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusEnter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift in den Bereich dieses Elements eintritt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.StylusEnter> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet. Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden. Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.  
  
 Obwohl <xref:System.Windows.UIElement3D.StylusEnter> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis, das weitere eintritt buchstäblich meldet, dass die <xref:System.Windows.UIElement3D.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `false` zu `true` für dieses Element.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusEnter> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusEnter> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusEnter?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusEnter> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusEnterEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusEnter" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusEnterEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInAirMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInAirMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInAirMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInAirMove;" />
      <MemberSignature Language="F#" Value="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInAirMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInAirMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift über ein Element bewegt wird, ohne den Digitizer zu berühren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusInAirMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusInAirMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInAirMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusInAirMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusInAirMoveEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusInAirMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusInAirMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusInAirMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusInAirMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusInRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusInRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusInRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusInRange;" />
      <MemberSignature Language="F#" Value="member this.StylusInRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusInRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusInRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich der Tablettstift nah genug am Digitizer befindet, um erkannt zu werden, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusInRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusInRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusInRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusInRange> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusInRangeEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusInRange>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusInRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusInRange" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusInRangeEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusLeave As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusLeave;" />
      <MemberSignature Language="F#" Value="member this.StylusLeave : System.Windows.Input.StylusEventHandler " Usage="member this.StylusLeave : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusLeave</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift den Bereich des Elements verlässt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.StylusLeave> ist eine [Übersicht über Routingereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md) , direkte Ereignisbehandlung Routingstrategie verwendet. Direkte Routingereignisse werden nicht auf einer Route ausgelöst wird. Stattdessen werden sie in demselben Element behandelt, in denen sie ausgelöst werden. Aktivieren sie jedoch andere Aspekte des Routingereignisverhaltens, z. B. in Stilen-Ereignis ausgelöst.  
  
 Obwohl <xref:System.Windows.UIElement3D.StylusLeave> verfolgt nach, wenn der Stift den Bereich eines Elements, das dieses Ereignis mehr verlässt buchstäblich meldet, dass die <xref:System.Windows.UIElement3D.IsStylusOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusLeave> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusLeave> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusLeave?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusLeave> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusLeaveEvent>|  
|Routing-Strategie|Direkt|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusLeave" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusLeaveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusMove As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusMove;" />
      <MemberSignature Language="F#" Value="member this.StylusMove : System.Windows.Input.StylusEventHandler " Usage="member this.StylusMove : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusMove</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift über das Element bewegt wird. Zum Auslösen dieses Ereignisses muss der Stift auf dem Digitizer bewegt werden. Andernfalls wird <see cref="E:System.Windows.UIElement3D.StylusInAirMove" /> ausgelöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusMove> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusMove> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusMove?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusMove> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusMoveEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusMove" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusMoveEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusOutOfRange;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusOutOfRange" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusOutOfRange As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusOutOfRange;" />
      <MemberSignature Language="F#" Value="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " Usage="member this.StylusOutOfRange : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusOutOfRange</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn der Stift zu weit vom Digitizer entfernt ist, um erkannt zu werden, während er sich über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusOutOfRange> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusOutOfRange> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusOutOfRange?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusOutOfRange> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusOutOfRangeEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusOutOfRange>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusOutOfRange%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusOutOfRange" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusOutOfRangeEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusSystemGestureEventHandler StylusSystemGesture" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusSystemGesture As StylusSystemGestureEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusSystemGestureEventHandler ^ StylusSystemGesture;" />
      <MemberSignature Language="F#" Value="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " Usage="member this.StylusSystemGesture : System.Windows.Input.StylusSystemGestureEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusSystemGesture</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusSystemGestureEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Benutzer eine von mehreren Gesten ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zu Gesten, finden Sie unter <xref:System.Windows.Input.SystemGesture>.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusSystemGesture> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusSystemGesture> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusSystemGesture?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusSystemGesture> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusSystemGestureEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusSystemGesture>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusSystemGesture%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusSystemGesture" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusSystemGestureEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.StylusEventHandler StylusUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.StylusEventHandler StylusUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.StylusUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event StylusUp As StylusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::StylusEventHandler ^ StylusUp;" />
      <MemberSignature Language="F#" Value="member this.StylusUp : System.Windows.Input.StylusEventHandler " Usage="member this.StylusUp : System.Windows.Input.StylusEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.StylusUp</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Benutzer den Stift vom Digitizer hebt, während sich der Stift über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.StylusUp> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.StylusUp> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.Stylus.StylusUp?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 Fingereingabe, Maus und Stifteingabe, die in einer bestimmten Beziehung vorhanden sein. Weitere Informationen finden Sie unter [Eingabe-Touch-Unterstützung in Windows Vista](https://go.microsoft.com/fwlink/?LinkId=160818) und [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 <xref:System.Windows.UIElement3D.StylusUp> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.StylusUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.StylusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewStylusUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnStylusUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.StylusUp" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.StylusUpEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInput">
      <MemberSignature Language="C#" Value="public event System.Windows.Input.TextCompositionEventHandler TextInput;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Input.TextCompositionEventHandler TextInput" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TextInput" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextInput As TextCompositionEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Windows::Input::TextCompositionEventHandler ^ TextInput;" />
      <MemberSignature Language="F#" Value="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " Usage="member this.TextInput : System.Windows.Input.TextCompositionEventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.IInputElement.TextInput</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TextCompositionEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn dieses Element Text geräteunabhängig empfängt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.UIElement3D.TextInput> Ereignis ermöglicht, eine Komponente oder Anwendung, die für die Texteingabe in einem geräteunabhängig überwachen. Die Tastatur dient primär der <xref:System.Windows.UIElement3D.TextInput>, Spracherkennung, handschrifterkennung und andere Eingabegeräte können auch auslösen, aber <xref:System.Windows.UIElement3D.TextInput>.  
  
 Aufgrund von Tastenkombinationen – entweder in die Standard-Tastatur oder über den Eingabemethoden-Editoren, mehrere wichtige Ereignisse können nur eine Eingabe Text-Ereignis auslösen.  
  
 Dieses Ereignis erstellt einen Alias für die <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis für diese Klasse stellt, damit <xref:System.Windows.UIElement3D.TextInput> ist Teil der Klasse Liste der Klassenelemente <xref:System.Windows.UIElement3D> als Basiselement geerbt wird. Ereignishandler, die angefügt sind, die <xref:System.Windows.UIElement3D.TextInput> Ereignis an den zugrunde liegenden angeschlossen sind <xref:System.Windows.Input.TextCompositionManager.TextInput?displayProperty=nameWithType> angefügtes Ereignis und die gleiche Instanz der Ereignisdaten zu empfangen.  
  
 <xref:System.Windows.UIElement3D.TextInput> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="routedEventInfo_TextInput"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TextInputEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.TextCompositionEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTextInput>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTextInput%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextInputEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextInputEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextInputEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TextInputEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextInputEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextInputEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextInputEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TextInputEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TextInput" />-Routingereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert werden. Ein solcher Bezeichner enthält einen kennzeichnenden Namen, den Besitzertyp, den Handlertyp, die Routingstrategie und die Hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis. Sie können diese Bezeichner dazu verwenden, Klassenhandler hinzuzufügen.  
  
 Weitere Informationen zum Registrieren von Routingereignissen finden Sie unter <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>. Weitere Informationen zum Verwenden von Bezeichnern für Routingereignisse, um Klassenhandler hinzuzufügen, finden Sie unter <xref:System.Windows.EventManager.RegisterClassHandler%2A>.  
  
 <xref:System.Windows.UIElement3D.TextInputEvent> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchDown">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchDown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchDown" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchDown" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchDown As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchDown;" />
      <MemberSignature Language="F#" Value="member this.TouchDown : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchDown : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Finger den Bildschirm berührt und sich dieser über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Standardeinstellung die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Ereignisse werden nicht ausgeführt, bis ein Finger den Bildschirm berührt und verschiebt. Einen Finger auf dem Bildschirm zu drücken und gedrückt halten, ohne ihn zu verschieben wird das Drücken und das Verhalten von aufzunehmen eine <xref:System.Windows.Input.Stylus>. Das Drücken und halten Verhalten ist gleichbedeutend mit einer Maus mit der rechten Maustaste.  
  
 Die dazu führen, dass die <xref:System.Windows.UIElement3D.PreviewTouchDown> und <xref:System.Windows.UIElement3D.TouchDown> Festlegen von Ereignissen, die ausgeführt werden, sobald ein Finger den Bildschirm berührt die <xref:System.Windows.Input.Stylus.IsPressAndHoldEnabled%2A?displayProperty=nameWithType> angefügte Eigenschaft zu `false` für dieses Element.  
  
<a name="routedEventInfo_TouchDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TouchDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchDown>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchDown%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
        <altmember cref="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="TouchDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchDown" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnter">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchEnter;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchEnter" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchEnter" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchEnter As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchEnter;" />
      <MemberSignature Language="F#" Value="member this.TouchEnter : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchEnter : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich eine Fingereingabe in die Grenzen dieses Elements hineinbewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses Ereignis wird immer dann ausgelöst, und zwar unabhängig davon, ob das Fingereingabegerät für dieses Element erfasst wird.  
  
<a name="routedEventInfo_TouchEnter"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TouchEnterEvent>|  
|Routing-Strategie|Direkt|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchEnter%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchEnter" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCaptured">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCaptured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCaptured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCaptured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCaptured As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCaptured { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCaptured : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCaptured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Fingereingabegeräte ab, die für dieses Element erfasst werden.</summary>
        <value>Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element erfasst werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesCapturedWithin">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesCapturedWithin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesCapturedWithin As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesCapturedWithin { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesCapturedWithin : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesCapturedWithin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Fingereingabegeräte ab, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</summary>
        <value>Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die für dieses Element oder seine untergeordneten Elemente in der visuellen Struktur erfasst werden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesDirectlyOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesDirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesDirectlyOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesDirectlyOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesDirectlyOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesDirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Fingereingabegeräte ab, die sich über diesem Element befinden.</summary>
        <value>Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element befinden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchesOver">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt; TouchesOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.TouchDevice&gt; TouchesOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.TouchesOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TouchesOver As IEnumerable(Of TouchDevice)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ TouchesOver { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::TouchDevice ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TouchesOver : seq&lt;System.Windows.Input.TouchDevice&gt;" Usage="System.Windows.UIElement3D.TouchesOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.TouchDevice&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft alle Fingereingabegeräte ab, die sich über diesem Element oder seinen untergeordneten Elementen in der visuellen Struktur befinden.</summary>
        <value>Eine Enumeration von <see cref="T:System.Windows.Input.TouchDevice" />-Objekten, die sich über diesem Element oder seinen untergeordneten Elemente in der visuellen Struktur befinden.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeave">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchLeave;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchLeave" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchLeave" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchLeave As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchLeave;" />
      <MemberSignature Language="F#" Value="member this.TouchLeave : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchLeave : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt ein, wenn sich eine Fingereingabe aus den Grenzen dieses Elements herausbewegt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchLeave"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TouchLeaveEvent>|  
|Routing-Strategie|Direkt|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchLeave%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchLeave" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMove">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchMove;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchMove" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchMove" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchMove As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchMove;" />
      <MemberSignature Language="F#" Value="member this.TouchMove : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchMove : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn sich ein Finger auf dem Bildschirm bewegt, während sich der Finger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchMove"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TouchMoveEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchMove>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchMove%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchMove" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUp">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; TouchUp;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Input.TouchEventArgs&gt; TouchUp" />
      <MemberSignature Language="DocId" Value="E:System.Windows.UIElement3D.TouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TouchUp As EventHandler(Of TouchEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Input::TouchEventArgs ^&gt; ^ TouchUp;" />
      <MemberSignature Language="F#" Value="member this.TouchUp : EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " Usage="member this.TouchUp : System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Input.TouchEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn ein Finger vom Bildschirm genommen wird, während sich der Finger über diesem Element befindet.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_TouchUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.TouchUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|Eine <xref:System.EventHandler%601> vom Typ <xref:System.Windows.Input.TouchEventArgs>.|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.UIElement3D.PreviewTouchUp>.  
  
-   Außer Kraft setzen <xref:System.Windows.UIElement3D.OnTouchUp%2A> um eine Klassenbehandlung für dieses Ereignis in abgeleiteten Klassen zu implementieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TouchUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TouchUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TouchUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.TouchUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TouchUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TouchUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TouchUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.UIElement3D.TouchUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identifiziert das <see cref="E:System.Windows.UIElement3D.TouchUp" />-Routingereignis.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visibility">
      <MemberSignature Language="C#" Value="public System.Windows.Visibility Visibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Visibility Visibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.UIElement3D.Visibility" />
      <MemberSignature Language="VB.NET" Value="Public Property Visibility As Visibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Visibility Visibility { System::Windows::Visibility get(); void set(System::Windows::Visibility value); };" />
      <MemberSignature Language="F#" Value="member this.Visibility : System.Windows.Visibility with get, set" Usage="System.Windows.UIElement3D.Visibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Visibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)]-Sichtbarkeit dieses Elements ab oder legt sie fest.</summary>
        <value>Ein Wert aus der Enumeration. Der Standardwert ist <see cref="F:System.Windows.Visibility.Visible" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wirkt sich auf den Wert der <xref:System.Windows.UIElement3D.IsVisible%2A>, der möglicherweise wiederum Auslösen der <xref:System.Windows.UIElement3D.IsVisibleChanged> Ereignis. Allerdings <xref:System.Windows.UIElement3D.IsVisible%2A> andere Faktoren, die beeinflussen, z. B. die sichtbarkeitseinstellungen der übergeordneten Elemente, die es enthalten ist.  
  
 Elemente, in denen <xref:System.Windows.UIElement3D.Visibility%2A> nicht <xref:System.Windows.Visibility.Visible> keine Teilnahme am Eingabeereignisse (oder Befehlen) und werden nicht in Treffertests gemeldet.  
  
 <xref:System.Windows.UIElement3D.Visibility%2A> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
<a name="dependencyPropertyInfo_Visibility"></a>   
## <a name="dependency-property-information"></a>Informationen zur Abhängigkeitseigenschaft  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.UIElement3D.VisibilityProperty>|  
|Legen Sie auf der Metadaten-Eigenschaften `true`|Keiner|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement3D.IsVisible" />
        <altmember cref="T:System.Windows.Visibility" />
      </Docs>
    </Member>
    <Member MemberName="VisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.UIElement3D.VisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.UIElement3D.VisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.UIElement3D.Visibility" />-Abhängigkeitseigenschaft.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.UIElement3D.VisibilityProperty> wird in .NET Framework, Version 3.5 eingeführt.  Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>